
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model aluno
 * 
 */
export type aluno = $Result.DefaultSelection<Prisma.$alunoPayload>
/**
 * Model pessoafisica
 * 
 */
export type pessoafisica = $Result.DefaultSelection<Prisma.$pessoafisicaPayload>
/**
 * Model pessoajuridica
 * 
 */
export type pessoajuridica = $Result.DefaultSelection<Prisma.$pessoajuridicaPayload>
/**
 * Model inscrito
 * 
 */
export type inscrito = $Result.DefaultSelection<Prisma.$inscritoPayload>
/**
 * Model teclado
 * 
 */
export type teclado = $Result.DefaultSelection<Prisma.$tecladoPayload>
/**
 * Model hd
 * 
 */
export type hd = $Result.DefaultSelection<Prisma.$hdPayload>
/**
 * Model fontedealimentacao
 * 
 */
export type fontedealimentacao = $Result.DefaultSelection<Prisma.$fontedealimentacaoPayload>
/**
 * Model gabinete
 * 
 */
export type gabinete = $Result.DefaultSelection<Prisma.$gabinetePayload>
/**
 * Model monitor
 * 
 */
export type monitor = $Result.DefaultSelection<Prisma.$monitorPayload>
/**
 * Model mouse
 * 
 */
export type mouse = $Result.DefaultSelection<Prisma.$mousePayload>
/**
 * Model estabilizador
 * 
 */
export type estabilizador = $Result.DefaultSelection<Prisma.$estabilizadorPayload>
/**
 * Model impressora
 * 
 */
export type impressora = $Result.DefaultSelection<Prisma.$impressoraPayload>
/**
 * Model placamae
 * 
 */
export type placamae = $Result.DefaultSelection<Prisma.$placamaePayload>
/**
 * Model notebook
 * 
 */
export type notebook = $Result.DefaultSelection<Prisma.$notebookPayload>
/**
 * Model processador
 * 
 */
export type processador = $Result.DefaultSelection<Prisma.$processadorPayload>
/**
 * Model descarte
 * 
 */
export type descarte = $Result.DefaultSelection<Prisma.$descartePayload>
/**
 * Model doacao
 * 
 */
export type doacao = $Result.DefaultSelection<Prisma.$doacaoPayload>
/**
 * Model doacaoUsuario
 * 
 */
export type doacaoUsuario = $Result.DefaultSelection<Prisma.$doacaoUsuarioPayload>
/**
 * Model solicitacao
 * 
 */
export type solicitacao = $Result.DefaultSelection<Prisma.$solicitacaoPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Alunos
 * const alunos = await prisma.aluno.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Alunos
   * const alunos = await prisma.aluno.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.aluno`: Exposes CRUD operations for the **aluno** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Alunos
    * const alunos = await prisma.aluno.findMany()
    * ```
    */
  get aluno(): Prisma.alunoDelegate<ExtArgs>;

  /**
   * `prisma.pessoafisica`: Exposes CRUD operations for the **pessoafisica** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Pessoafisicas
    * const pessoafisicas = await prisma.pessoafisica.findMany()
    * ```
    */
  get pessoafisica(): Prisma.pessoafisicaDelegate<ExtArgs>;

  /**
   * `prisma.pessoajuridica`: Exposes CRUD operations for the **pessoajuridica** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Pessoajuridicas
    * const pessoajuridicas = await prisma.pessoajuridica.findMany()
    * ```
    */
  get pessoajuridica(): Prisma.pessoajuridicaDelegate<ExtArgs>;

  /**
   * `prisma.inscrito`: Exposes CRUD operations for the **inscrito** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Inscritos
    * const inscritos = await prisma.inscrito.findMany()
    * ```
    */
  get inscrito(): Prisma.inscritoDelegate<ExtArgs>;

  /**
   * `prisma.teclado`: Exposes CRUD operations for the **teclado** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Teclados
    * const teclados = await prisma.teclado.findMany()
    * ```
    */
  get teclado(): Prisma.tecladoDelegate<ExtArgs>;

  /**
   * `prisma.hd`: Exposes CRUD operations for the **hd** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Hds
    * const hds = await prisma.hd.findMany()
    * ```
    */
  get hd(): Prisma.hdDelegate<ExtArgs>;

  /**
   * `prisma.fontedealimentacao`: Exposes CRUD operations for the **fontedealimentacao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Fontedealimentacaos
    * const fontedealimentacaos = await prisma.fontedealimentacao.findMany()
    * ```
    */
  get fontedealimentacao(): Prisma.fontedealimentacaoDelegate<ExtArgs>;

  /**
   * `prisma.gabinete`: Exposes CRUD operations for the **gabinete** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Gabinetes
    * const gabinetes = await prisma.gabinete.findMany()
    * ```
    */
  get gabinete(): Prisma.gabineteDelegate<ExtArgs>;

  /**
   * `prisma.monitor`: Exposes CRUD operations for the **monitor** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Monitors
    * const monitors = await prisma.monitor.findMany()
    * ```
    */
  get monitor(): Prisma.monitorDelegate<ExtArgs>;

  /**
   * `prisma.mouse`: Exposes CRUD operations for the **mouse** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Mice
    * const mice = await prisma.mouse.findMany()
    * ```
    */
  get mouse(): Prisma.mouseDelegate<ExtArgs>;

  /**
   * `prisma.estabilizador`: Exposes CRUD operations for the **estabilizador** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Estabilizadors
    * const estabilizadors = await prisma.estabilizador.findMany()
    * ```
    */
  get estabilizador(): Prisma.estabilizadorDelegate<ExtArgs>;

  /**
   * `prisma.impressora`: Exposes CRUD operations for the **impressora** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Impressoras
    * const impressoras = await prisma.impressora.findMany()
    * ```
    */
  get impressora(): Prisma.impressoraDelegate<ExtArgs>;

  /**
   * `prisma.placamae`: Exposes CRUD operations for the **placamae** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Placamaes
    * const placamaes = await prisma.placamae.findMany()
    * ```
    */
  get placamae(): Prisma.placamaeDelegate<ExtArgs>;

  /**
   * `prisma.notebook`: Exposes CRUD operations for the **notebook** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Notebooks
    * const notebooks = await prisma.notebook.findMany()
    * ```
    */
  get notebook(): Prisma.notebookDelegate<ExtArgs>;

  /**
   * `prisma.processador`: Exposes CRUD operations for the **processador** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Processadors
    * const processadors = await prisma.processador.findMany()
    * ```
    */
  get processador(): Prisma.processadorDelegate<ExtArgs>;

  /**
   * `prisma.descarte`: Exposes CRUD operations for the **descarte** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Descartes
    * const descartes = await prisma.descarte.findMany()
    * ```
    */
  get descarte(): Prisma.descarteDelegate<ExtArgs>;

  /**
   * `prisma.doacao`: Exposes CRUD operations for the **doacao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Doacaos
    * const doacaos = await prisma.doacao.findMany()
    * ```
    */
  get doacao(): Prisma.doacaoDelegate<ExtArgs>;

  /**
   * `prisma.doacaoUsuario`: Exposes CRUD operations for the **doacaoUsuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DoacaoUsuarios
    * const doacaoUsuarios = await prisma.doacaoUsuario.findMany()
    * ```
    */
  get doacaoUsuario(): Prisma.doacaoUsuarioDelegate<ExtArgs>;

  /**
   * `prisma.solicitacao`: Exposes CRUD operations for the **solicitacao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Solicitacaos
    * const solicitacaos = await prisma.solicitacao.findMany()
    * ```
    */
  get solicitacao(): Prisma.solicitacaoDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.1.0
   * Query Engine version: 11f085a2012c0f4778414c8db2651556ee0ef959
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    aluno: 'aluno',
    pessoafisica: 'pessoafisica',
    pessoajuridica: 'pessoajuridica',
    inscrito: 'inscrito',
    teclado: 'teclado',
    hd: 'hd',
    fontedealimentacao: 'fontedealimentacao',
    gabinete: 'gabinete',
    monitor: 'monitor',
    mouse: 'mouse',
    estabilizador: 'estabilizador',
    impressora: 'impressora',
    placamae: 'placamae',
    notebook: 'notebook',
    processador: 'processador',
    descarte: 'descarte',
    doacao: 'doacao',
    doacaoUsuario: 'doacaoUsuario',
    solicitacao: 'solicitacao'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "aluno" | "pessoafisica" | "pessoajuridica" | "inscrito" | "teclado" | "hd" | "fontedealimentacao" | "gabinete" | "monitor" | "mouse" | "estabilizador" | "impressora" | "placamae" | "notebook" | "processador" | "descarte" | "doacao" | "doacaoUsuario" | "solicitacao"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      aluno: {
        payload: Prisma.$alunoPayload<ExtArgs>
        fields: Prisma.alunoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.alunoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alunoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.alunoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alunoPayload>
          }
          findFirst: {
            args: Prisma.alunoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alunoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.alunoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alunoPayload>
          }
          findMany: {
            args: Prisma.alunoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alunoPayload>[]
          }
          create: {
            args: Prisma.alunoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alunoPayload>
          }
          createMany: {
            args: Prisma.alunoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.alunoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alunoPayload>[]
          }
          delete: {
            args: Prisma.alunoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alunoPayload>
          }
          update: {
            args: Prisma.alunoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alunoPayload>
          }
          deleteMany: {
            args: Prisma.alunoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.alunoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.alunoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alunoPayload>
          }
          aggregate: {
            args: Prisma.AlunoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAluno>
          }
          groupBy: {
            args: Prisma.alunoGroupByArgs<ExtArgs>
            result: $Utils.Optional<AlunoGroupByOutputType>[]
          }
          count: {
            args: Prisma.alunoCountArgs<ExtArgs>
            result: $Utils.Optional<AlunoCountAggregateOutputType> | number
          }
        }
      }
      pessoafisica: {
        payload: Prisma.$pessoafisicaPayload<ExtArgs>
        fields: Prisma.pessoafisicaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.pessoafisicaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pessoafisicaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.pessoafisicaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pessoafisicaPayload>
          }
          findFirst: {
            args: Prisma.pessoafisicaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pessoafisicaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.pessoafisicaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pessoafisicaPayload>
          }
          findMany: {
            args: Prisma.pessoafisicaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pessoafisicaPayload>[]
          }
          create: {
            args: Prisma.pessoafisicaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pessoafisicaPayload>
          }
          createMany: {
            args: Prisma.pessoafisicaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.pessoafisicaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pessoafisicaPayload>[]
          }
          delete: {
            args: Prisma.pessoafisicaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pessoafisicaPayload>
          }
          update: {
            args: Prisma.pessoafisicaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pessoafisicaPayload>
          }
          deleteMany: {
            args: Prisma.pessoafisicaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.pessoafisicaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.pessoafisicaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pessoafisicaPayload>
          }
          aggregate: {
            args: Prisma.PessoafisicaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePessoafisica>
          }
          groupBy: {
            args: Prisma.pessoafisicaGroupByArgs<ExtArgs>
            result: $Utils.Optional<PessoafisicaGroupByOutputType>[]
          }
          count: {
            args: Prisma.pessoafisicaCountArgs<ExtArgs>
            result: $Utils.Optional<PessoafisicaCountAggregateOutputType> | number
          }
        }
      }
      pessoajuridica: {
        payload: Prisma.$pessoajuridicaPayload<ExtArgs>
        fields: Prisma.pessoajuridicaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.pessoajuridicaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pessoajuridicaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.pessoajuridicaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pessoajuridicaPayload>
          }
          findFirst: {
            args: Prisma.pessoajuridicaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pessoajuridicaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.pessoajuridicaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pessoajuridicaPayload>
          }
          findMany: {
            args: Prisma.pessoajuridicaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pessoajuridicaPayload>[]
          }
          create: {
            args: Prisma.pessoajuridicaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pessoajuridicaPayload>
          }
          createMany: {
            args: Prisma.pessoajuridicaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.pessoajuridicaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pessoajuridicaPayload>[]
          }
          delete: {
            args: Prisma.pessoajuridicaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pessoajuridicaPayload>
          }
          update: {
            args: Prisma.pessoajuridicaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pessoajuridicaPayload>
          }
          deleteMany: {
            args: Prisma.pessoajuridicaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.pessoajuridicaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.pessoajuridicaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pessoajuridicaPayload>
          }
          aggregate: {
            args: Prisma.PessoajuridicaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePessoajuridica>
          }
          groupBy: {
            args: Prisma.pessoajuridicaGroupByArgs<ExtArgs>
            result: $Utils.Optional<PessoajuridicaGroupByOutputType>[]
          }
          count: {
            args: Prisma.pessoajuridicaCountArgs<ExtArgs>
            result: $Utils.Optional<PessoajuridicaCountAggregateOutputType> | number
          }
        }
      }
      inscrito: {
        payload: Prisma.$inscritoPayload<ExtArgs>
        fields: Prisma.inscritoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.inscritoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$inscritoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.inscritoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$inscritoPayload>
          }
          findFirst: {
            args: Prisma.inscritoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$inscritoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.inscritoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$inscritoPayload>
          }
          findMany: {
            args: Prisma.inscritoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$inscritoPayload>[]
          }
          create: {
            args: Prisma.inscritoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$inscritoPayload>
          }
          createMany: {
            args: Prisma.inscritoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.inscritoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$inscritoPayload>[]
          }
          delete: {
            args: Prisma.inscritoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$inscritoPayload>
          }
          update: {
            args: Prisma.inscritoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$inscritoPayload>
          }
          deleteMany: {
            args: Prisma.inscritoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.inscritoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.inscritoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$inscritoPayload>
          }
          aggregate: {
            args: Prisma.InscritoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInscrito>
          }
          groupBy: {
            args: Prisma.inscritoGroupByArgs<ExtArgs>
            result: $Utils.Optional<InscritoGroupByOutputType>[]
          }
          count: {
            args: Prisma.inscritoCountArgs<ExtArgs>
            result: $Utils.Optional<InscritoCountAggregateOutputType> | number
          }
        }
      }
      teclado: {
        payload: Prisma.$tecladoPayload<ExtArgs>
        fields: Prisma.tecladoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tecladoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tecladoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tecladoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tecladoPayload>
          }
          findFirst: {
            args: Prisma.tecladoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tecladoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tecladoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tecladoPayload>
          }
          findMany: {
            args: Prisma.tecladoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tecladoPayload>[]
          }
          create: {
            args: Prisma.tecladoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tecladoPayload>
          }
          createMany: {
            args: Prisma.tecladoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.tecladoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tecladoPayload>[]
          }
          delete: {
            args: Prisma.tecladoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tecladoPayload>
          }
          update: {
            args: Prisma.tecladoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tecladoPayload>
          }
          deleteMany: {
            args: Prisma.tecladoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tecladoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tecladoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tecladoPayload>
          }
          aggregate: {
            args: Prisma.TecladoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTeclado>
          }
          groupBy: {
            args: Prisma.tecladoGroupByArgs<ExtArgs>
            result: $Utils.Optional<TecladoGroupByOutputType>[]
          }
          count: {
            args: Prisma.tecladoCountArgs<ExtArgs>
            result: $Utils.Optional<TecladoCountAggregateOutputType> | number
          }
        }
      }
      hd: {
        payload: Prisma.$hdPayload<ExtArgs>
        fields: Prisma.hdFieldRefs
        operations: {
          findUnique: {
            args: Prisma.hdFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$hdPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.hdFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$hdPayload>
          }
          findFirst: {
            args: Prisma.hdFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$hdPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.hdFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$hdPayload>
          }
          findMany: {
            args: Prisma.hdFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$hdPayload>[]
          }
          create: {
            args: Prisma.hdCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$hdPayload>
          }
          createMany: {
            args: Prisma.hdCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.hdCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$hdPayload>[]
          }
          delete: {
            args: Prisma.hdDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$hdPayload>
          }
          update: {
            args: Prisma.hdUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$hdPayload>
          }
          deleteMany: {
            args: Prisma.hdDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.hdUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.hdUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$hdPayload>
          }
          aggregate: {
            args: Prisma.HdAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateHd>
          }
          groupBy: {
            args: Prisma.hdGroupByArgs<ExtArgs>
            result: $Utils.Optional<HdGroupByOutputType>[]
          }
          count: {
            args: Prisma.hdCountArgs<ExtArgs>
            result: $Utils.Optional<HdCountAggregateOutputType> | number
          }
        }
      }
      fontedealimentacao: {
        payload: Prisma.$fontedealimentacaoPayload<ExtArgs>
        fields: Prisma.fontedealimentacaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.fontedealimentacaoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fontedealimentacaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.fontedealimentacaoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fontedealimentacaoPayload>
          }
          findFirst: {
            args: Prisma.fontedealimentacaoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fontedealimentacaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.fontedealimentacaoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fontedealimentacaoPayload>
          }
          findMany: {
            args: Prisma.fontedealimentacaoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fontedealimentacaoPayload>[]
          }
          create: {
            args: Prisma.fontedealimentacaoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fontedealimentacaoPayload>
          }
          createMany: {
            args: Prisma.fontedealimentacaoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.fontedealimentacaoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fontedealimentacaoPayload>[]
          }
          delete: {
            args: Prisma.fontedealimentacaoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fontedealimentacaoPayload>
          }
          update: {
            args: Prisma.fontedealimentacaoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fontedealimentacaoPayload>
          }
          deleteMany: {
            args: Prisma.fontedealimentacaoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.fontedealimentacaoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.fontedealimentacaoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fontedealimentacaoPayload>
          }
          aggregate: {
            args: Prisma.FontedealimentacaoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFontedealimentacao>
          }
          groupBy: {
            args: Prisma.fontedealimentacaoGroupByArgs<ExtArgs>
            result: $Utils.Optional<FontedealimentacaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.fontedealimentacaoCountArgs<ExtArgs>
            result: $Utils.Optional<FontedealimentacaoCountAggregateOutputType> | number
          }
        }
      }
      gabinete: {
        payload: Prisma.$gabinetePayload<ExtArgs>
        fields: Prisma.gabineteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.gabineteFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$gabinetePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.gabineteFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$gabinetePayload>
          }
          findFirst: {
            args: Prisma.gabineteFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$gabinetePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.gabineteFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$gabinetePayload>
          }
          findMany: {
            args: Prisma.gabineteFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$gabinetePayload>[]
          }
          create: {
            args: Prisma.gabineteCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$gabinetePayload>
          }
          createMany: {
            args: Prisma.gabineteCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.gabineteCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$gabinetePayload>[]
          }
          delete: {
            args: Prisma.gabineteDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$gabinetePayload>
          }
          update: {
            args: Prisma.gabineteUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$gabinetePayload>
          }
          deleteMany: {
            args: Prisma.gabineteDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.gabineteUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.gabineteUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$gabinetePayload>
          }
          aggregate: {
            args: Prisma.GabineteAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateGabinete>
          }
          groupBy: {
            args: Prisma.gabineteGroupByArgs<ExtArgs>
            result: $Utils.Optional<GabineteGroupByOutputType>[]
          }
          count: {
            args: Prisma.gabineteCountArgs<ExtArgs>
            result: $Utils.Optional<GabineteCountAggregateOutputType> | number
          }
        }
      }
      monitor: {
        payload: Prisma.$monitorPayload<ExtArgs>
        fields: Prisma.monitorFieldRefs
        operations: {
          findUnique: {
            args: Prisma.monitorFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$monitorPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.monitorFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$monitorPayload>
          }
          findFirst: {
            args: Prisma.monitorFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$monitorPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.monitorFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$monitorPayload>
          }
          findMany: {
            args: Prisma.monitorFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$monitorPayload>[]
          }
          create: {
            args: Prisma.monitorCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$monitorPayload>
          }
          createMany: {
            args: Prisma.monitorCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.monitorCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$monitorPayload>[]
          }
          delete: {
            args: Prisma.monitorDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$monitorPayload>
          }
          update: {
            args: Prisma.monitorUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$monitorPayload>
          }
          deleteMany: {
            args: Prisma.monitorDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.monitorUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.monitorUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$monitorPayload>
          }
          aggregate: {
            args: Prisma.MonitorAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMonitor>
          }
          groupBy: {
            args: Prisma.monitorGroupByArgs<ExtArgs>
            result: $Utils.Optional<MonitorGroupByOutputType>[]
          }
          count: {
            args: Prisma.monitorCountArgs<ExtArgs>
            result: $Utils.Optional<MonitorCountAggregateOutputType> | number
          }
        }
      }
      mouse: {
        payload: Prisma.$mousePayload<ExtArgs>
        fields: Prisma.mouseFieldRefs
        operations: {
          findUnique: {
            args: Prisma.mouseFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mousePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.mouseFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mousePayload>
          }
          findFirst: {
            args: Prisma.mouseFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mousePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.mouseFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mousePayload>
          }
          findMany: {
            args: Prisma.mouseFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mousePayload>[]
          }
          create: {
            args: Prisma.mouseCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mousePayload>
          }
          createMany: {
            args: Prisma.mouseCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.mouseCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mousePayload>[]
          }
          delete: {
            args: Prisma.mouseDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mousePayload>
          }
          update: {
            args: Prisma.mouseUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mousePayload>
          }
          deleteMany: {
            args: Prisma.mouseDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.mouseUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.mouseUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mousePayload>
          }
          aggregate: {
            args: Prisma.MouseAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMouse>
          }
          groupBy: {
            args: Prisma.mouseGroupByArgs<ExtArgs>
            result: $Utils.Optional<MouseGroupByOutputType>[]
          }
          count: {
            args: Prisma.mouseCountArgs<ExtArgs>
            result: $Utils.Optional<MouseCountAggregateOutputType> | number
          }
        }
      }
      estabilizador: {
        payload: Prisma.$estabilizadorPayload<ExtArgs>
        fields: Prisma.estabilizadorFieldRefs
        operations: {
          findUnique: {
            args: Prisma.estabilizadorFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estabilizadorPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.estabilizadorFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estabilizadorPayload>
          }
          findFirst: {
            args: Prisma.estabilizadorFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estabilizadorPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.estabilizadorFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estabilizadorPayload>
          }
          findMany: {
            args: Prisma.estabilizadorFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estabilizadorPayload>[]
          }
          create: {
            args: Prisma.estabilizadorCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estabilizadorPayload>
          }
          createMany: {
            args: Prisma.estabilizadorCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.estabilizadorCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estabilizadorPayload>[]
          }
          delete: {
            args: Prisma.estabilizadorDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estabilizadorPayload>
          }
          update: {
            args: Prisma.estabilizadorUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estabilizadorPayload>
          }
          deleteMany: {
            args: Prisma.estabilizadorDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.estabilizadorUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.estabilizadorUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estabilizadorPayload>
          }
          aggregate: {
            args: Prisma.EstabilizadorAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEstabilizador>
          }
          groupBy: {
            args: Prisma.estabilizadorGroupByArgs<ExtArgs>
            result: $Utils.Optional<EstabilizadorGroupByOutputType>[]
          }
          count: {
            args: Prisma.estabilizadorCountArgs<ExtArgs>
            result: $Utils.Optional<EstabilizadorCountAggregateOutputType> | number
          }
        }
      }
      impressora: {
        payload: Prisma.$impressoraPayload<ExtArgs>
        fields: Prisma.impressoraFieldRefs
        operations: {
          findUnique: {
            args: Prisma.impressoraFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$impressoraPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.impressoraFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$impressoraPayload>
          }
          findFirst: {
            args: Prisma.impressoraFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$impressoraPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.impressoraFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$impressoraPayload>
          }
          findMany: {
            args: Prisma.impressoraFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$impressoraPayload>[]
          }
          create: {
            args: Prisma.impressoraCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$impressoraPayload>
          }
          createMany: {
            args: Prisma.impressoraCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.impressoraCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$impressoraPayload>[]
          }
          delete: {
            args: Prisma.impressoraDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$impressoraPayload>
          }
          update: {
            args: Prisma.impressoraUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$impressoraPayload>
          }
          deleteMany: {
            args: Prisma.impressoraDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.impressoraUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.impressoraUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$impressoraPayload>
          }
          aggregate: {
            args: Prisma.ImpressoraAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateImpressora>
          }
          groupBy: {
            args: Prisma.impressoraGroupByArgs<ExtArgs>
            result: $Utils.Optional<ImpressoraGroupByOutputType>[]
          }
          count: {
            args: Prisma.impressoraCountArgs<ExtArgs>
            result: $Utils.Optional<ImpressoraCountAggregateOutputType> | number
          }
        }
      }
      placamae: {
        payload: Prisma.$placamaePayload<ExtArgs>
        fields: Prisma.placamaeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.placamaeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$placamaePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.placamaeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$placamaePayload>
          }
          findFirst: {
            args: Prisma.placamaeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$placamaePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.placamaeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$placamaePayload>
          }
          findMany: {
            args: Prisma.placamaeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$placamaePayload>[]
          }
          create: {
            args: Prisma.placamaeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$placamaePayload>
          }
          createMany: {
            args: Prisma.placamaeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.placamaeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$placamaePayload>[]
          }
          delete: {
            args: Prisma.placamaeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$placamaePayload>
          }
          update: {
            args: Prisma.placamaeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$placamaePayload>
          }
          deleteMany: {
            args: Prisma.placamaeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.placamaeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.placamaeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$placamaePayload>
          }
          aggregate: {
            args: Prisma.PlacamaeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePlacamae>
          }
          groupBy: {
            args: Prisma.placamaeGroupByArgs<ExtArgs>
            result: $Utils.Optional<PlacamaeGroupByOutputType>[]
          }
          count: {
            args: Prisma.placamaeCountArgs<ExtArgs>
            result: $Utils.Optional<PlacamaeCountAggregateOutputType> | number
          }
        }
      }
      notebook: {
        payload: Prisma.$notebookPayload<ExtArgs>
        fields: Prisma.notebookFieldRefs
        operations: {
          findUnique: {
            args: Prisma.notebookFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notebookPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.notebookFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notebookPayload>
          }
          findFirst: {
            args: Prisma.notebookFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notebookPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.notebookFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notebookPayload>
          }
          findMany: {
            args: Prisma.notebookFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notebookPayload>[]
          }
          create: {
            args: Prisma.notebookCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notebookPayload>
          }
          createMany: {
            args: Prisma.notebookCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.notebookCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notebookPayload>[]
          }
          delete: {
            args: Prisma.notebookDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notebookPayload>
          }
          update: {
            args: Prisma.notebookUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notebookPayload>
          }
          deleteMany: {
            args: Prisma.notebookDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.notebookUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.notebookUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notebookPayload>
          }
          aggregate: {
            args: Prisma.NotebookAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNotebook>
          }
          groupBy: {
            args: Prisma.notebookGroupByArgs<ExtArgs>
            result: $Utils.Optional<NotebookGroupByOutputType>[]
          }
          count: {
            args: Prisma.notebookCountArgs<ExtArgs>
            result: $Utils.Optional<NotebookCountAggregateOutputType> | number
          }
        }
      }
      processador: {
        payload: Prisma.$processadorPayload<ExtArgs>
        fields: Prisma.processadorFieldRefs
        operations: {
          findUnique: {
            args: Prisma.processadorFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$processadorPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.processadorFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$processadorPayload>
          }
          findFirst: {
            args: Prisma.processadorFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$processadorPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.processadorFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$processadorPayload>
          }
          findMany: {
            args: Prisma.processadorFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$processadorPayload>[]
          }
          create: {
            args: Prisma.processadorCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$processadorPayload>
          }
          createMany: {
            args: Prisma.processadorCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.processadorCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$processadorPayload>[]
          }
          delete: {
            args: Prisma.processadorDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$processadorPayload>
          }
          update: {
            args: Prisma.processadorUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$processadorPayload>
          }
          deleteMany: {
            args: Prisma.processadorDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.processadorUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.processadorUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$processadorPayload>
          }
          aggregate: {
            args: Prisma.ProcessadorAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProcessador>
          }
          groupBy: {
            args: Prisma.processadorGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProcessadorGroupByOutputType>[]
          }
          count: {
            args: Prisma.processadorCountArgs<ExtArgs>
            result: $Utils.Optional<ProcessadorCountAggregateOutputType> | number
          }
        }
      }
      descarte: {
        payload: Prisma.$descartePayload<ExtArgs>
        fields: Prisma.descarteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.descarteFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$descartePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.descarteFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$descartePayload>
          }
          findFirst: {
            args: Prisma.descarteFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$descartePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.descarteFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$descartePayload>
          }
          findMany: {
            args: Prisma.descarteFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$descartePayload>[]
          }
          create: {
            args: Prisma.descarteCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$descartePayload>
          }
          createMany: {
            args: Prisma.descarteCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.descarteCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$descartePayload>[]
          }
          delete: {
            args: Prisma.descarteDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$descartePayload>
          }
          update: {
            args: Prisma.descarteUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$descartePayload>
          }
          deleteMany: {
            args: Prisma.descarteDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.descarteUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.descarteUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$descartePayload>
          }
          aggregate: {
            args: Prisma.DescarteAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDescarte>
          }
          groupBy: {
            args: Prisma.descarteGroupByArgs<ExtArgs>
            result: $Utils.Optional<DescarteGroupByOutputType>[]
          }
          count: {
            args: Prisma.descarteCountArgs<ExtArgs>
            result: $Utils.Optional<DescarteCountAggregateOutputType> | number
          }
        }
      }
      doacao: {
        payload: Prisma.$doacaoPayload<ExtArgs>
        fields: Prisma.doacaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.doacaoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$doacaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.doacaoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$doacaoPayload>
          }
          findFirst: {
            args: Prisma.doacaoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$doacaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.doacaoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$doacaoPayload>
          }
          findMany: {
            args: Prisma.doacaoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$doacaoPayload>[]
          }
          create: {
            args: Prisma.doacaoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$doacaoPayload>
          }
          createMany: {
            args: Prisma.doacaoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.doacaoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$doacaoPayload>[]
          }
          delete: {
            args: Prisma.doacaoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$doacaoPayload>
          }
          update: {
            args: Prisma.doacaoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$doacaoPayload>
          }
          deleteMany: {
            args: Prisma.doacaoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.doacaoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.doacaoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$doacaoPayload>
          }
          aggregate: {
            args: Prisma.DoacaoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDoacao>
          }
          groupBy: {
            args: Prisma.doacaoGroupByArgs<ExtArgs>
            result: $Utils.Optional<DoacaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.doacaoCountArgs<ExtArgs>
            result: $Utils.Optional<DoacaoCountAggregateOutputType> | number
          }
        }
      }
      doacaoUsuario: {
        payload: Prisma.$doacaoUsuarioPayload<ExtArgs>
        fields: Prisma.doacaoUsuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.doacaoUsuarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$doacaoUsuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.doacaoUsuarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$doacaoUsuarioPayload>
          }
          findFirst: {
            args: Prisma.doacaoUsuarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$doacaoUsuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.doacaoUsuarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$doacaoUsuarioPayload>
          }
          findMany: {
            args: Prisma.doacaoUsuarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$doacaoUsuarioPayload>[]
          }
          create: {
            args: Prisma.doacaoUsuarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$doacaoUsuarioPayload>
          }
          createMany: {
            args: Prisma.doacaoUsuarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.doacaoUsuarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$doacaoUsuarioPayload>[]
          }
          delete: {
            args: Prisma.doacaoUsuarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$doacaoUsuarioPayload>
          }
          update: {
            args: Prisma.doacaoUsuarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$doacaoUsuarioPayload>
          }
          deleteMany: {
            args: Prisma.doacaoUsuarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.doacaoUsuarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.doacaoUsuarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$doacaoUsuarioPayload>
          }
          aggregate: {
            args: Prisma.DoacaoUsuarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDoacaoUsuario>
          }
          groupBy: {
            args: Prisma.doacaoUsuarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<DoacaoUsuarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.doacaoUsuarioCountArgs<ExtArgs>
            result: $Utils.Optional<DoacaoUsuarioCountAggregateOutputType> | number
          }
        }
      }
      solicitacao: {
        payload: Prisma.$solicitacaoPayload<ExtArgs>
        fields: Prisma.solicitacaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.solicitacaoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$solicitacaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.solicitacaoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$solicitacaoPayload>
          }
          findFirst: {
            args: Prisma.solicitacaoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$solicitacaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.solicitacaoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$solicitacaoPayload>
          }
          findMany: {
            args: Prisma.solicitacaoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$solicitacaoPayload>[]
          }
          create: {
            args: Prisma.solicitacaoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$solicitacaoPayload>
          }
          createMany: {
            args: Prisma.solicitacaoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.solicitacaoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$solicitacaoPayload>[]
          }
          delete: {
            args: Prisma.solicitacaoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$solicitacaoPayload>
          }
          update: {
            args: Prisma.solicitacaoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$solicitacaoPayload>
          }
          deleteMany: {
            args: Prisma.solicitacaoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.solicitacaoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.solicitacaoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$solicitacaoPayload>
          }
          aggregate: {
            args: Prisma.SolicitacaoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSolicitacao>
          }
          groupBy: {
            args: Prisma.solicitacaoGroupByArgs<ExtArgs>
            result: $Utils.Optional<SolicitacaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.solicitacaoCountArgs<ExtArgs>
            result: $Utils.Optional<SolicitacaoCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type AlunoCountOutputType
   */

  export type AlunoCountOutputType = {
    descarte: number
    doacao: number
    doacaoUsuario: number
    solicitacao: number
    modificadorTeclado: number
    usuarioTeclado: number
    hd: number
    modificadorHd: number
    fonteDeAlimentacao: number
    modificadorFonteDeAlimentacao: number
    gabinete: number
    modificadorGabinete: number
    monitor: number
    modificadorMonitor: number
    usuarioMouse: number
    modificadorMouse: number
    usuarioEstabilizador: number
    modificadorEstabilizador: number
    usuarioImpressora: number
    modificadorImpressora: number
    usuarioPlacamae: number
    modificadorPlacamae: number
    usuarioNotebook: number
    modificadorNotebook: number
    usuarioProcessador: number
    modificadorProcessador: number
  }

  export type AlunoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    descarte?: boolean | AlunoCountOutputTypeCountDescarteArgs
    doacao?: boolean | AlunoCountOutputTypeCountDoacaoArgs
    doacaoUsuario?: boolean | AlunoCountOutputTypeCountDoacaoUsuarioArgs
    solicitacao?: boolean | AlunoCountOutputTypeCountSolicitacaoArgs
    modificadorTeclado?: boolean | AlunoCountOutputTypeCountModificadorTecladoArgs
    usuarioTeclado?: boolean | AlunoCountOutputTypeCountUsuarioTecladoArgs
    hd?: boolean | AlunoCountOutputTypeCountHdArgs
    modificadorHd?: boolean | AlunoCountOutputTypeCountModificadorHdArgs
    fonteDeAlimentacao?: boolean | AlunoCountOutputTypeCountFonteDeAlimentacaoArgs
    modificadorFonteDeAlimentacao?: boolean | AlunoCountOutputTypeCountModificadorFonteDeAlimentacaoArgs
    gabinete?: boolean | AlunoCountOutputTypeCountGabineteArgs
    modificadorGabinete?: boolean | AlunoCountOutputTypeCountModificadorGabineteArgs
    monitor?: boolean | AlunoCountOutputTypeCountMonitorArgs
    modificadorMonitor?: boolean | AlunoCountOutputTypeCountModificadorMonitorArgs
    usuarioMouse?: boolean | AlunoCountOutputTypeCountUsuarioMouseArgs
    modificadorMouse?: boolean | AlunoCountOutputTypeCountModificadorMouseArgs
    usuarioEstabilizador?: boolean | AlunoCountOutputTypeCountUsuarioEstabilizadorArgs
    modificadorEstabilizador?: boolean | AlunoCountOutputTypeCountModificadorEstabilizadorArgs
    usuarioImpressora?: boolean | AlunoCountOutputTypeCountUsuarioImpressoraArgs
    modificadorImpressora?: boolean | AlunoCountOutputTypeCountModificadorImpressoraArgs
    usuarioPlacamae?: boolean | AlunoCountOutputTypeCountUsuarioPlacamaeArgs
    modificadorPlacamae?: boolean | AlunoCountOutputTypeCountModificadorPlacamaeArgs
    usuarioNotebook?: boolean | AlunoCountOutputTypeCountUsuarioNotebookArgs
    modificadorNotebook?: boolean | AlunoCountOutputTypeCountModificadorNotebookArgs
    usuarioProcessador?: boolean | AlunoCountOutputTypeCountUsuarioProcessadorArgs
    modificadorProcessador?: boolean | AlunoCountOutputTypeCountModificadorProcessadorArgs
  }

  // Custom InputTypes
  /**
   * AlunoCountOutputType without action
   */
  export type AlunoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlunoCountOutputType
     */
    select?: AlunoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AlunoCountOutputType without action
   */
  export type AlunoCountOutputTypeCountDescarteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: descarteWhereInput
  }

  /**
   * AlunoCountOutputType without action
   */
  export type AlunoCountOutputTypeCountDoacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: doacaoWhereInput
  }

  /**
   * AlunoCountOutputType without action
   */
  export type AlunoCountOutputTypeCountDoacaoUsuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: doacaoUsuarioWhereInput
  }

  /**
   * AlunoCountOutputType without action
   */
  export type AlunoCountOutputTypeCountSolicitacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: solicitacaoWhereInput
  }

  /**
   * AlunoCountOutputType without action
   */
  export type AlunoCountOutputTypeCountModificadorTecladoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tecladoWhereInput
  }

  /**
   * AlunoCountOutputType without action
   */
  export type AlunoCountOutputTypeCountUsuarioTecladoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tecladoWhereInput
  }

  /**
   * AlunoCountOutputType without action
   */
  export type AlunoCountOutputTypeCountHdArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: hdWhereInput
  }

  /**
   * AlunoCountOutputType without action
   */
  export type AlunoCountOutputTypeCountModificadorHdArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: hdWhereInput
  }

  /**
   * AlunoCountOutputType without action
   */
  export type AlunoCountOutputTypeCountFonteDeAlimentacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: fontedealimentacaoWhereInput
  }

  /**
   * AlunoCountOutputType without action
   */
  export type AlunoCountOutputTypeCountModificadorFonteDeAlimentacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: fontedealimentacaoWhereInput
  }

  /**
   * AlunoCountOutputType without action
   */
  export type AlunoCountOutputTypeCountGabineteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: gabineteWhereInput
  }

  /**
   * AlunoCountOutputType without action
   */
  export type AlunoCountOutputTypeCountModificadorGabineteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: gabineteWhereInput
  }

  /**
   * AlunoCountOutputType without action
   */
  export type AlunoCountOutputTypeCountMonitorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: monitorWhereInput
  }

  /**
   * AlunoCountOutputType without action
   */
  export type AlunoCountOutputTypeCountModificadorMonitorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: monitorWhereInput
  }

  /**
   * AlunoCountOutputType without action
   */
  export type AlunoCountOutputTypeCountUsuarioMouseArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: mouseWhereInput
  }

  /**
   * AlunoCountOutputType without action
   */
  export type AlunoCountOutputTypeCountModificadorMouseArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: mouseWhereInput
  }

  /**
   * AlunoCountOutputType without action
   */
  export type AlunoCountOutputTypeCountUsuarioEstabilizadorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: estabilizadorWhereInput
  }

  /**
   * AlunoCountOutputType without action
   */
  export type AlunoCountOutputTypeCountModificadorEstabilizadorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: estabilizadorWhereInput
  }

  /**
   * AlunoCountOutputType without action
   */
  export type AlunoCountOutputTypeCountUsuarioImpressoraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: impressoraWhereInput
  }

  /**
   * AlunoCountOutputType without action
   */
  export type AlunoCountOutputTypeCountModificadorImpressoraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: impressoraWhereInput
  }

  /**
   * AlunoCountOutputType without action
   */
  export type AlunoCountOutputTypeCountUsuarioPlacamaeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: placamaeWhereInput
  }

  /**
   * AlunoCountOutputType without action
   */
  export type AlunoCountOutputTypeCountModificadorPlacamaeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: placamaeWhereInput
  }

  /**
   * AlunoCountOutputType without action
   */
  export type AlunoCountOutputTypeCountUsuarioNotebookArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: notebookWhereInput
  }

  /**
   * AlunoCountOutputType without action
   */
  export type AlunoCountOutputTypeCountModificadorNotebookArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: notebookWhereInput
  }

  /**
   * AlunoCountOutputType without action
   */
  export type AlunoCountOutputTypeCountUsuarioProcessadorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: processadorWhereInput
  }

  /**
   * AlunoCountOutputType without action
   */
  export type AlunoCountOutputTypeCountModificadorProcessadorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: processadorWhereInput
  }


  /**
   * Count Type PessoafisicaCountOutputType
   */

  export type PessoafisicaCountOutputType = {
    doacao: number
    doacaoUsuario: number
    solicitacao: number
  }

  export type PessoafisicaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    doacao?: boolean | PessoafisicaCountOutputTypeCountDoacaoArgs
    doacaoUsuario?: boolean | PessoafisicaCountOutputTypeCountDoacaoUsuarioArgs
    solicitacao?: boolean | PessoafisicaCountOutputTypeCountSolicitacaoArgs
  }

  // Custom InputTypes
  /**
   * PessoafisicaCountOutputType without action
   */
  export type PessoafisicaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PessoafisicaCountOutputType
     */
    select?: PessoafisicaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PessoafisicaCountOutputType without action
   */
  export type PessoafisicaCountOutputTypeCountDoacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: doacaoWhereInput
  }

  /**
   * PessoafisicaCountOutputType without action
   */
  export type PessoafisicaCountOutputTypeCountDoacaoUsuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: doacaoUsuarioWhereInput
  }

  /**
   * PessoafisicaCountOutputType without action
   */
  export type PessoafisicaCountOutputTypeCountSolicitacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: solicitacaoWhereInput
  }


  /**
   * Count Type PessoajuridicaCountOutputType
   */

  export type PessoajuridicaCountOutputType = {
    doacao: number
    doacaoUsuario: number
    solicitacao: number
  }

  export type PessoajuridicaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    doacao?: boolean | PessoajuridicaCountOutputTypeCountDoacaoArgs
    doacaoUsuario?: boolean | PessoajuridicaCountOutputTypeCountDoacaoUsuarioArgs
    solicitacao?: boolean | PessoajuridicaCountOutputTypeCountSolicitacaoArgs
  }

  // Custom InputTypes
  /**
   * PessoajuridicaCountOutputType without action
   */
  export type PessoajuridicaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PessoajuridicaCountOutputType
     */
    select?: PessoajuridicaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PessoajuridicaCountOutputType without action
   */
  export type PessoajuridicaCountOutputTypeCountDoacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: doacaoWhereInput
  }

  /**
   * PessoajuridicaCountOutputType without action
   */
  export type PessoajuridicaCountOutputTypeCountDoacaoUsuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: doacaoUsuarioWhereInput
  }

  /**
   * PessoajuridicaCountOutputType without action
   */
  export type PessoajuridicaCountOutputTypeCountSolicitacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: solicitacaoWhereInput
  }


  /**
   * Count Type DescarteCountOutputType
   */

  export type DescarteCountOutputType = {
    teclados: number
    hds: number
    fontesDeAlimentacao: number
    gabinetes: number
    monitores: number
    mouses: number
    estabilizadores: number
    impressoras: number
    placasmae: number
    notebooks: number
    processadores: number
  }

  export type DescarteCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    teclados?: boolean | DescarteCountOutputTypeCountTecladosArgs
    hds?: boolean | DescarteCountOutputTypeCountHdsArgs
    fontesDeAlimentacao?: boolean | DescarteCountOutputTypeCountFontesDeAlimentacaoArgs
    gabinetes?: boolean | DescarteCountOutputTypeCountGabinetesArgs
    monitores?: boolean | DescarteCountOutputTypeCountMonitoresArgs
    mouses?: boolean | DescarteCountOutputTypeCountMousesArgs
    estabilizadores?: boolean | DescarteCountOutputTypeCountEstabilizadoresArgs
    impressoras?: boolean | DescarteCountOutputTypeCountImpressorasArgs
    placasmae?: boolean | DescarteCountOutputTypeCountPlacasmaeArgs
    notebooks?: boolean | DescarteCountOutputTypeCountNotebooksArgs
    processadores?: boolean | DescarteCountOutputTypeCountProcessadoresArgs
  }

  // Custom InputTypes
  /**
   * DescarteCountOutputType without action
   */
  export type DescarteCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DescarteCountOutputType
     */
    select?: DescarteCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DescarteCountOutputType without action
   */
  export type DescarteCountOutputTypeCountTecladosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tecladoWhereInput
  }

  /**
   * DescarteCountOutputType without action
   */
  export type DescarteCountOutputTypeCountHdsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: hdWhereInput
  }

  /**
   * DescarteCountOutputType without action
   */
  export type DescarteCountOutputTypeCountFontesDeAlimentacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: fontedealimentacaoWhereInput
  }

  /**
   * DescarteCountOutputType without action
   */
  export type DescarteCountOutputTypeCountGabinetesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: gabineteWhereInput
  }

  /**
   * DescarteCountOutputType without action
   */
  export type DescarteCountOutputTypeCountMonitoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: monitorWhereInput
  }

  /**
   * DescarteCountOutputType without action
   */
  export type DescarteCountOutputTypeCountMousesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: mouseWhereInput
  }

  /**
   * DescarteCountOutputType without action
   */
  export type DescarteCountOutputTypeCountEstabilizadoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: estabilizadorWhereInput
  }

  /**
   * DescarteCountOutputType without action
   */
  export type DescarteCountOutputTypeCountImpressorasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: impressoraWhereInput
  }

  /**
   * DescarteCountOutputType without action
   */
  export type DescarteCountOutputTypeCountPlacasmaeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: placamaeWhereInput
  }

  /**
   * DescarteCountOutputType without action
   */
  export type DescarteCountOutputTypeCountNotebooksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: notebookWhereInput
  }

  /**
   * DescarteCountOutputType without action
   */
  export type DescarteCountOutputTypeCountProcessadoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: processadorWhereInput
  }


  /**
   * Count Type DoacaoCountOutputType
   */

  export type DoacaoCountOutputType = {
    teclados: number
    hds: number
    fontesDeAlimentacao: number
    gabinetes: number
    monitores: number
    mouses: number
    estabilizadores: number
    impressoras: number
    placasmae: number
    notebooks: number
    processadores: number
  }

  export type DoacaoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    teclados?: boolean | DoacaoCountOutputTypeCountTecladosArgs
    hds?: boolean | DoacaoCountOutputTypeCountHdsArgs
    fontesDeAlimentacao?: boolean | DoacaoCountOutputTypeCountFontesDeAlimentacaoArgs
    gabinetes?: boolean | DoacaoCountOutputTypeCountGabinetesArgs
    monitores?: boolean | DoacaoCountOutputTypeCountMonitoresArgs
    mouses?: boolean | DoacaoCountOutputTypeCountMousesArgs
    estabilizadores?: boolean | DoacaoCountOutputTypeCountEstabilizadoresArgs
    impressoras?: boolean | DoacaoCountOutputTypeCountImpressorasArgs
    placasmae?: boolean | DoacaoCountOutputTypeCountPlacasmaeArgs
    notebooks?: boolean | DoacaoCountOutputTypeCountNotebooksArgs
    processadores?: boolean | DoacaoCountOutputTypeCountProcessadoresArgs
  }

  // Custom InputTypes
  /**
   * DoacaoCountOutputType without action
   */
  export type DoacaoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DoacaoCountOutputType
     */
    select?: DoacaoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DoacaoCountOutputType without action
   */
  export type DoacaoCountOutputTypeCountTecladosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tecladoWhereInput
  }

  /**
   * DoacaoCountOutputType without action
   */
  export type DoacaoCountOutputTypeCountHdsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: hdWhereInput
  }

  /**
   * DoacaoCountOutputType without action
   */
  export type DoacaoCountOutputTypeCountFontesDeAlimentacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: fontedealimentacaoWhereInput
  }

  /**
   * DoacaoCountOutputType without action
   */
  export type DoacaoCountOutputTypeCountGabinetesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: gabineteWhereInput
  }

  /**
   * DoacaoCountOutputType without action
   */
  export type DoacaoCountOutputTypeCountMonitoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: monitorWhereInput
  }

  /**
   * DoacaoCountOutputType without action
   */
  export type DoacaoCountOutputTypeCountMousesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: mouseWhereInput
  }

  /**
   * DoacaoCountOutputType without action
   */
  export type DoacaoCountOutputTypeCountEstabilizadoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: estabilizadorWhereInput
  }

  /**
   * DoacaoCountOutputType without action
   */
  export type DoacaoCountOutputTypeCountImpressorasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: impressoraWhereInput
  }

  /**
   * DoacaoCountOutputType without action
   */
  export type DoacaoCountOutputTypeCountPlacasmaeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: placamaeWhereInput
  }

  /**
   * DoacaoCountOutputType without action
   */
  export type DoacaoCountOutputTypeCountNotebooksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: notebookWhereInput
  }

  /**
   * DoacaoCountOutputType without action
   */
  export type DoacaoCountOutputTypeCountProcessadoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: processadorWhereInput
  }


  /**
   * Models
   */

  /**
   * Model aluno
   */

  export type AggregateAluno = {
    _count: AlunoCountAggregateOutputType | null
    _avg: AlunoAvgAggregateOutputType | null
    _sum: AlunoSumAggregateOutputType | null
    _min: AlunoMinAggregateOutputType | null
    _max: AlunoMaxAggregateOutputType | null
  }

  export type AlunoAvgAggregateOutputType = {
    id: number | null
  }

  export type AlunoSumAggregateOutputType = {
    id: number | null
  }

  export type AlunoMinAggregateOutputType = {
    id: number | null
    name: string | null
    email: string | null
    password: string | null
    matricula: string | null
    curso: string | null
    dias: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AlunoMaxAggregateOutputType = {
    id: number | null
    name: string | null
    email: string | null
    password: string | null
    matricula: string | null
    curso: string | null
    dias: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AlunoCountAggregateOutputType = {
    id: number
    name: number
    email: number
    password: number
    matricula: number
    curso: number
    dias: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type AlunoAvgAggregateInputType = {
    id?: true
  }

  export type AlunoSumAggregateInputType = {
    id?: true
  }

  export type AlunoMinAggregateInputType = {
    id?: true
    name?: true
    email?: true
    password?: true
    matricula?: true
    curso?: true
    dias?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AlunoMaxAggregateInputType = {
    id?: true
    name?: true
    email?: true
    password?: true
    matricula?: true
    curso?: true
    dias?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AlunoCountAggregateInputType = {
    id?: true
    name?: true
    email?: true
    password?: true
    matricula?: true
    curso?: true
    dias?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type AlunoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which aluno to aggregate.
     */
    where?: alunoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of alunos to fetch.
     */
    orderBy?: alunoOrderByWithRelationInput | alunoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: alunoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` alunos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` alunos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned alunos
    **/
    _count?: true | AlunoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AlunoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AlunoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AlunoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AlunoMaxAggregateInputType
  }

  export type GetAlunoAggregateType<T extends AlunoAggregateArgs> = {
        [P in keyof T & keyof AggregateAluno]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAluno[P]>
      : GetScalarType<T[P], AggregateAluno[P]>
  }




  export type alunoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: alunoWhereInput
    orderBy?: alunoOrderByWithAggregationInput | alunoOrderByWithAggregationInput[]
    by: AlunoScalarFieldEnum[] | AlunoScalarFieldEnum
    having?: alunoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AlunoCountAggregateInputType | true
    _avg?: AlunoAvgAggregateInputType
    _sum?: AlunoSumAggregateInputType
    _min?: AlunoMinAggregateInputType
    _max?: AlunoMaxAggregateInputType
  }

  export type AlunoGroupByOutputType = {
    id: number
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt: Date
    updatedAt: Date
    _count: AlunoCountAggregateOutputType | null
    _avg: AlunoAvgAggregateOutputType | null
    _sum: AlunoSumAggregateOutputType | null
    _min: AlunoMinAggregateOutputType | null
    _max: AlunoMaxAggregateOutputType | null
  }

  type GetAlunoGroupByPayload<T extends alunoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AlunoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AlunoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AlunoGroupByOutputType[P]>
            : GetScalarType<T[P], AlunoGroupByOutputType[P]>
        }
      >
    >


  export type alunoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    password?: boolean
    matricula?: boolean
    curso?: boolean
    dias?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    descarte?: boolean | aluno$descarteArgs<ExtArgs>
    doacao?: boolean | aluno$doacaoArgs<ExtArgs>
    doacaoUsuario?: boolean | aluno$doacaoUsuarioArgs<ExtArgs>
    solicitacao?: boolean | aluno$solicitacaoArgs<ExtArgs>
    modificadorTeclado?: boolean | aluno$modificadorTecladoArgs<ExtArgs>
    usuarioTeclado?: boolean | aluno$usuarioTecladoArgs<ExtArgs>
    hd?: boolean | aluno$hdArgs<ExtArgs>
    modificadorHd?: boolean | aluno$modificadorHdArgs<ExtArgs>
    fonteDeAlimentacao?: boolean | aluno$fonteDeAlimentacaoArgs<ExtArgs>
    modificadorFonteDeAlimentacao?: boolean | aluno$modificadorFonteDeAlimentacaoArgs<ExtArgs>
    gabinete?: boolean | aluno$gabineteArgs<ExtArgs>
    modificadorGabinete?: boolean | aluno$modificadorGabineteArgs<ExtArgs>
    monitor?: boolean | aluno$monitorArgs<ExtArgs>
    modificadorMonitor?: boolean | aluno$modificadorMonitorArgs<ExtArgs>
    usuarioMouse?: boolean | aluno$usuarioMouseArgs<ExtArgs>
    modificadorMouse?: boolean | aluno$modificadorMouseArgs<ExtArgs>
    usuarioEstabilizador?: boolean | aluno$usuarioEstabilizadorArgs<ExtArgs>
    modificadorEstabilizador?: boolean | aluno$modificadorEstabilizadorArgs<ExtArgs>
    usuarioImpressora?: boolean | aluno$usuarioImpressoraArgs<ExtArgs>
    modificadorImpressora?: boolean | aluno$modificadorImpressoraArgs<ExtArgs>
    usuarioPlacamae?: boolean | aluno$usuarioPlacamaeArgs<ExtArgs>
    modificadorPlacamae?: boolean | aluno$modificadorPlacamaeArgs<ExtArgs>
    usuarioNotebook?: boolean | aluno$usuarioNotebookArgs<ExtArgs>
    modificadorNotebook?: boolean | aluno$modificadorNotebookArgs<ExtArgs>
    usuarioProcessador?: boolean | aluno$usuarioProcessadorArgs<ExtArgs>
    modificadorProcessador?: boolean | aluno$modificadorProcessadorArgs<ExtArgs>
    _count?: boolean | AlunoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["aluno"]>

  export type alunoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    password?: boolean
    matricula?: boolean
    curso?: boolean
    dias?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["aluno"]>

  export type alunoSelectScalar = {
    id?: boolean
    name?: boolean
    email?: boolean
    password?: boolean
    matricula?: boolean
    curso?: boolean
    dias?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type alunoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    descarte?: boolean | aluno$descarteArgs<ExtArgs>
    doacao?: boolean | aluno$doacaoArgs<ExtArgs>
    doacaoUsuario?: boolean | aluno$doacaoUsuarioArgs<ExtArgs>
    solicitacao?: boolean | aluno$solicitacaoArgs<ExtArgs>
    modificadorTeclado?: boolean | aluno$modificadorTecladoArgs<ExtArgs>
    usuarioTeclado?: boolean | aluno$usuarioTecladoArgs<ExtArgs>
    hd?: boolean | aluno$hdArgs<ExtArgs>
    modificadorHd?: boolean | aluno$modificadorHdArgs<ExtArgs>
    fonteDeAlimentacao?: boolean | aluno$fonteDeAlimentacaoArgs<ExtArgs>
    modificadorFonteDeAlimentacao?: boolean | aluno$modificadorFonteDeAlimentacaoArgs<ExtArgs>
    gabinete?: boolean | aluno$gabineteArgs<ExtArgs>
    modificadorGabinete?: boolean | aluno$modificadorGabineteArgs<ExtArgs>
    monitor?: boolean | aluno$monitorArgs<ExtArgs>
    modificadorMonitor?: boolean | aluno$modificadorMonitorArgs<ExtArgs>
    usuarioMouse?: boolean | aluno$usuarioMouseArgs<ExtArgs>
    modificadorMouse?: boolean | aluno$modificadorMouseArgs<ExtArgs>
    usuarioEstabilizador?: boolean | aluno$usuarioEstabilizadorArgs<ExtArgs>
    modificadorEstabilizador?: boolean | aluno$modificadorEstabilizadorArgs<ExtArgs>
    usuarioImpressora?: boolean | aluno$usuarioImpressoraArgs<ExtArgs>
    modificadorImpressora?: boolean | aluno$modificadorImpressoraArgs<ExtArgs>
    usuarioPlacamae?: boolean | aluno$usuarioPlacamaeArgs<ExtArgs>
    modificadorPlacamae?: boolean | aluno$modificadorPlacamaeArgs<ExtArgs>
    usuarioNotebook?: boolean | aluno$usuarioNotebookArgs<ExtArgs>
    modificadorNotebook?: boolean | aluno$modificadorNotebookArgs<ExtArgs>
    usuarioProcessador?: boolean | aluno$usuarioProcessadorArgs<ExtArgs>
    modificadorProcessador?: boolean | aluno$modificadorProcessadorArgs<ExtArgs>
    _count?: boolean | AlunoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type alunoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $alunoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "aluno"
    objects: {
      descarte: Prisma.$descartePayload<ExtArgs>[]
      doacao: Prisma.$doacaoPayload<ExtArgs>[]
      doacaoUsuario: Prisma.$doacaoUsuarioPayload<ExtArgs>[]
      solicitacao: Prisma.$solicitacaoPayload<ExtArgs>[]
      modificadorTeclado: Prisma.$tecladoPayload<ExtArgs>[]
      usuarioTeclado: Prisma.$tecladoPayload<ExtArgs>[]
      hd: Prisma.$hdPayload<ExtArgs>[]
      modificadorHd: Prisma.$hdPayload<ExtArgs>[]
      fonteDeAlimentacao: Prisma.$fontedealimentacaoPayload<ExtArgs>[]
      modificadorFonteDeAlimentacao: Prisma.$fontedealimentacaoPayload<ExtArgs>[]
      gabinete: Prisma.$gabinetePayload<ExtArgs>[]
      modificadorGabinete: Prisma.$gabinetePayload<ExtArgs>[]
      monitor: Prisma.$monitorPayload<ExtArgs>[]
      modificadorMonitor: Prisma.$monitorPayload<ExtArgs>[]
      usuarioMouse: Prisma.$mousePayload<ExtArgs>[]
      modificadorMouse: Prisma.$mousePayload<ExtArgs>[]
      usuarioEstabilizador: Prisma.$estabilizadorPayload<ExtArgs>[]
      modificadorEstabilizador: Prisma.$estabilizadorPayload<ExtArgs>[]
      usuarioImpressora: Prisma.$impressoraPayload<ExtArgs>[]
      modificadorImpressora: Prisma.$impressoraPayload<ExtArgs>[]
      usuarioPlacamae: Prisma.$placamaePayload<ExtArgs>[]
      modificadorPlacamae: Prisma.$placamaePayload<ExtArgs>[]
      usuarioNotebook: Prisma.$notebookPayload<ExtArgs>[]
      modificadorNotebook: Prisma.$notebookPayload<ExtArgs>[]
      usuarioProcessador: Prisma.$processadorPayload<ExtArgs>[]
      modificadorProcessador: Prisma.$processadorPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      email: string
      password: string
      matricula: string
      curso: string
      dias: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["aluno"]>
    composites: {}
  }

  type alunoGetPayload<S extends boolean | null | undefined | alunoDefaultArgs> = $Result.GetResult<Prisma.$alunoPayload, S>

  type alunoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<alunoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AlunoCountAggregateInputType | true
    }

  export interface alunoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['aluno'], meta: { name: 'aluno' } }
    /**
     * Find zero or one Aluno that matches the filter.
     * @param {alunoFindUniqueArgs} args - Arguments to find a Aluno
     * @example
     * // Get one Aluno
     * const aluno = await prisma.aluno.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends alunoFindUniqueArgs>(args: SelectSubset<T, alunoFindUniqueArgs<ExtArgs>>): Prisma__alunoClient<$Result.GetResult<Prisma.$alunoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Aluno that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {alunoFindUniqueOrThrowArgs} args - Arguments to find a Aluno
     * @example
     * // Get one Aluno
     * const aluno = await prisma.aluno.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends alunoFindUniqueOrThrowArgs>(args: SelectSubset<T, alunoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__alunoClient<$Result.GetResult<Prisma.$alunoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Aluno that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {alunoFindFirstArgs} args - Arguments to find a Aluno
     * @example
     * // Get one Aluno
     * const aluno = await prisma.aluno.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends alunoFindFirstArgs>(args?: SelectSubset<T, alunoFindFirstArgs<ExtArgs>>): Prisma__alunoClient<$Result.GetResult<Prisma.$alunoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Aluno that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {alunoFindFirstOrThrowArgs} args - Arguments to find a Aluno
     * @example
     * // Get one Aluno
     * const aluno = await prisma.aluno.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends alunoFindFirstOrThrowArgs>(args?: SelectSubset<T, alunoFindFirstOrThrowArgs<ExtArgs>>): Prisma__alunoClient<$Result.GetResult<Prisma.$alunoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Alunos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {alunoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Alunos
     * const alunos = await prisma.aluno.findMany()
     * 
     * // Get first 10 Alunos
     * const alunos = await prisma.aluno.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const alunoWithIdOnly = await prisma.aluno.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends alunoFindManyArgs>(args?: SelectSubset<T, alunoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$alunoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Aluno.
     * @param {alunoCreateArgs} args - Arguments to create a Aluno.
     * @example
     * // Create one Aluno
     * const Aluno = await prisma.aluno.create({
     *   data: {
     *     // ... data to create a Aluno
     *   }
     * })
     * 
     */
    create<T extends alunoCreateArgs>(args: SelectSubset<T, alunoCreateArgs<ExtArgs>>): Prisma__alunoClient<$Result.GetResult<Prisma.$alunoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Alunos.
     * @param {alunoCreateManyArgs} args - Arguments to create many Alunos.
     * @example
     * // Create many Alunos
     * const aluno = await prisma.aluno.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends alunoCreateManyArgs>(args?: SelectSubset<T, alunoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Alunos and returns the data saved in the database.
     * @param {alunoCreateManyAndReturnArgs} args - Arguments to create many Alunos.
     * @example
     * // Create many Alunos
     * const aluno = await prisma.aluno.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Alunos and only return the `id`
     * const alunoWithIdOnly = await prisma.aluno.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends alunoCreateManyAndReturnArgs>(args?: SelectSubset<T, alunoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$alunoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Aluno.
     * @param {alunoDeleteArgs} args - Arguments to delete one Aluno.
     * @example
     * // Delete one Aluno
     * const Aluno = await prisma.aluno.delete({
     *   where: {
     *     // ... filter to delete one Aluno
     *   }
     * })
     * 
     */
    delete<T extends alunoDeleteArgs>(args: SelectSubset<T, alunoDeleteArgs<ExtArgs>>): Prisma__alunoClient<$Result.GetResult<Prisma.$alunoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Aluno.
     * @param {alunoUpdateArgs} args - Arguments to update one Aluno.
     * @example
     * // Update one Aluno
     * const aluno = await prisma.aluno.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends alunoUpdateArgs>(args: SelectSubset<T, alunoUpdateArgs<ExtArgs>>): Prisma__alunoClient<$Result.GetResult<Prisma.$alunoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Alunos.
     * @param {alunoDeleteManyArgs} args - Arguments to filter Alunos to delete.
     * @example
     * // Delete a few Alunos
     * const { count } = await prisma.aluno.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends alunoDeleteManyArgs>(args?: SelectSubset<T, alunoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Alunos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {alunoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Alunos
     * const aluno = await prisma.aluno.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends alunoUpdateManyArgs>(args: SelectSubset<T, alunoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Aluno.
     * @param {alunoUpsertArgs} args - Arguments to update or create a Aluno.
     * @example
     * // Update or create a Aluno
     * const aluno = await prisma.aluno.upsert({
     *   create: {
     *     // ... data to create a Aluno
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Aluno we want to update
     *   }
     * })
     */
    upsert<T extends alunoUpsertArgs>(args: SelectSubset<T, alunoUpsertArgs<ExtArgs>>): Prisma__alunoClient<$Result.GetResult<Prisma.$alunoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Alunos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {alunoCountArgs} args - Arguments to filter Alunos to count.
     * @example
     * // Count the number of Alunos
     * const count = await prisma.aluno.count({
     *   where: {
     *     // ... the filter for the Alunos we want to count
     *   }
     * })
    **/
    count<T extends alunoCountArgs>(
      args?: Subset<T, alunoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AlunoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Aluno.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlunoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AlunoAggregateArgs>(args: Subset<T, AlunoAggregateArgs>): Prisma.PrismaPromise<GetAlunoAggregateType<T>>

    /**
     * Group by Aluno.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {alunoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends alunoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: alunoGroupByArgs['orderBy'] }
        : { orderBy?: alunoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, alunoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAlunoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the aluno model
   */
  readonly fields: alunoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for aluno.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__alunoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    descarte<T extends aluno$descarteArgs<ExtArgs> = {}>(args?: Subset<T, aluno$descarteArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$descartePayload<ExtArgs>, T, "findMany"> | Null>
    doacao<T extends aluno$doacaoArgs<ExtArgs> = {}>(args?: Subset<T, aluno$doacaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$doacaoPayload<ExtArgs>, T, "findMany"> | Null>
    doacaoUsuario<T extends aluno$doacaoUsuarioArgs<ExtArgs> = {}>(args?: Subset<T, aluno$doacaoUsuarioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$doacaoUsuarioPayload<ExtArgs>, T, "findMany"> | Null>
    solicitacao<T extends aluno$solicitacaoArgs<ExtArgs> = {}>(args?: Subset<T, aluno$solicitacaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$solicitacaoPayload<ExtArgs>, T, "findMany"> | Null>
    modificadorTeclado<T extends aluno$modificadorTecladoArgs<ExtArgs> = {}>(args?: Subset<T, aluno$modificadorTecladoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tecladoPayload<ExtArgs>, T, "findMany"> | Null>
    usuarioTeclado<T extends aluno$usuarioTecladoArgs<ExtArgs> = {}>(args?: Subset<T, aluno$usuarioTecladoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tecladoPayload<ExtArgs>, T, "findMany"> | Null>
    hd<T extends aluno$hdArgs<ExtArgs> = {}>(args?: Subset<T, aluno$hdArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$hdPayload<ExtArgs>, T, "findMany"> | Null>
    modificadorHd<T extends aluno$modificadorHdArgs<ExtArgs> = {}>(args?: Subset<T, aluno$modificadorHdArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$hdPayload<ExtArgs>, T, "findMany"> | Null>
    fonteDeAlimentacao<T extends aluno$fonteDeAlimentacaoArgs<ExtArgs> = {}>(args?: Subset<T, aluno$fonteDeAlimentacaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$fontedealimentacaoPayload<ExtArgs>, T, "findMany"> | Null>
    modificadorFonteDeAlimentacao<T extends aluno$modificadorFonteDeAlimentacaoArgs<ExtArgs> = {}>(args?: Subset<T, aluno$modificadorFonteDeAlimentacaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$fontedealimentacaoPayload<ExtArgs>, T, "findMany"> | Null>
    gabinete<T extends aluno$gabineteArgs<ExtArgs> = {}>(args?: Subset<T, aluno$gabineteArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$gabinetePayload<ExtArgs>, T, "findMany"> | Null>
    modificadorGabinete<T extends aluno$modificadorGabineteArgs<ExtArgs> = {}>(args?: Subset<T, aluno$modificadorGabineteArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$gabinetePayload<ExtArgs>, T, "findMany"> | Null>
    monitor<T extends aluno$monitorArgs<ExtArgs> = {}>(args?: Subset<T, aluno$monitorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$monitorPayload<ExtArgs>, T, "findMany"> | Null>
    modificadorMonitor<T extends aluno$modificadorMonitorArgs<ExtArgs> = {}>(args?: Subset<T, aluno$modificadorMonitorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$monitorPayload<ExtArgs>, T, "findMany"> | Null>
    usuarioMouse<T extends aluno$usuarioMouseArgs<ExtArgs> = {}>(args?: Subset<T, aluno$usuarioMouseArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mousePayload<ExtArgs>, T, "findMany"> | Null>
    modificadorMouse<T extends aluno$modificadorMouseArgs<ExtArgs> = {}>(args?: Subset<T, aluno$modificadorMouseArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mousePayload<ExtArgs>, T, "findMany"> | Null>
    usuarioEstabilizador<T extends aluno$usuarioEstabilizadorArgs<ExtArgs> = {}>(args?: Subset<T, aluno$usuarioEstabilizadorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$estabilizadorPayload<ExtArgs>, T, "findMany"> | Null>
    modificadorEstabilizador<T extends aluno$modificadorEstabilizadorArgs<ExtArgs> = {}>(args?: Subset<T, aluno$modificadorEstabilizadorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$estabilizadorPayload<ExtArgs>, T, "findMany"> | Null>
    usuarioImpressora<T extends aluno$usuarioImpressoraArgs<ExtArgs> = {}>(args?: Subset<T, aluno$usuarioImpressoraArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$impressoraPayload<ExtArgs>, T, "findMany"> | Null>
    modificadorImpressora<T extends aluno$modificadorImpressoraArgs<ExtArgs> = {}>(args?: Subset<T, aluno$modificadorImpressoraArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$impressoraPayload<ExtArgs>, T, "findMany"> | Null>
    usuarioPlacamae<T extends aluno$usuarioPlacamaeArgs<ExtArgs> = {}>(args?: Subset<T, aluno$usuarioPlacamaeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$placamaePayload<ExtArgs>, T, "findMany"> | Null>
    modificadorPlacamae<T extends aluno$modificadorPlacamaeArgs<ExtArgs> = {}>(args?: Subset<T, aluno$modificadorPlacamaeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$placamaePayload<ExtArgs>, T, "findMany"> | Null>
    usuarioNotebook<T extends aluno$usuarioNotebookArgs<ExtArgs> = {}>(args?: Subset<T, aluno$usuarioNotebookArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notebookPayload<ExtArgs>, T, "findMany"> | Null>
    modificadorNotebook<T extends aluno$modificadorNotebookArgs<ExtArgs> = {}>(args?: Subset<T, aluno$modificadorNotebookArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notebookPayload<ExtArgs>, T, "findMany"> | Null>
    usuarioProcessador<T extends aluno$usuarioProcessadorArgs<ExtArgs> = {}>(args?: Subset<T, aluno$usuarioProcessadorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$processadorPayload<ExtArgs>, T, "findMany"> | Null>
    modificadorProcessador<T extends aluno$modificadorProcessadorArgs<ExtArgs> = {}>(args?: Subset<T, aluno$modificadorProcessadorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$processadorPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the aluno model
   */ 
  interface alunoFieldRefs {
    readonly id: FieldRef<"aluno", 'Int'>
    readonly name: FieldRef<"aluno", 'String'>
    readonly email: FieldRef<"aluno", 'String'>
    readonly password: FieldRef<"aluno", 'String'>
    readonly matricula: FieldRef<"aluno", 'String'>
    readonly curso: FieldRef<"aluno", 'String'>
    readonly dias: FieldRef<"aluno", 'String'>
    readonly createdAt: FieldRef<"aluno", 'DateTime'>
    readonly updatedAt: FieldRef<"aluno", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * aluno findUnique
   */
  export type alunoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aluno
     */
    select?: alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alunoInclude<ExtArgs> | null
    /**
     * Filter, which aluno to fetch.
     */
    where: alunoWhereUniqueInput
  }

  /**
   * aluno findUniqueOrThrow
   */
  export type alunoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aluno
     */
    select?: alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alunoInclude<ExtArgs> | null
    /**
     * Filter, which aluno to fetch.
     */
    where: alunoWhereUniqueInput
  }

  /**
   * aluno findFirst
   */
  export type alunoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aluno
     */
    select?: alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alunoInclude<ExtArgs> | null
    /**
     * Filter, which aluno to fetch.
     */
    where?: alunoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of alunos to fetch.
     */
    orderBy?: alunoOrderByWithRelationInput | alunoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for alunos.
     */
    cursor?: alunoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` alunos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` alunos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of alunos.
     */
    distinct?: AlunoScalarFieldEnum | AlunoScalarFieldEnum[]
  }

  /**
   * aluno findFirstOrThrow
   */
  export type alunoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aluno
     */
    select?: alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alunoInclude<ExtArgs> | null
    /**
     * Filter, which aluno to fetch.
     */
    where?: alunoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of alunos to fetch.
     */
    orderBy?: alunoOrderByWithRelationInput | alunoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for alunos.
     */
    cursor?: alunoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` alunos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` alunos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of alunos.
     */
    distinct?: AlunoScalarFieldEnum | AlunoScalarFieldEnum[]
  }

  /**
   * aluno findMany
   */
  export type alunoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aluno
     */
    select?: alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alunoInclude<ExtArgs> | null
    /**
     * Filter, which alunos to fetch.
     */
    where?: alunoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of alunos to fetch.
     */
    orderBy?: alunoOrderByWithRelationInput | alunoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing alunos.
     */
    cursor?: alunoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` alunos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` alunos.
     */
    skip?: number
    distinct?: AlunoScalarFieldEnum | AlunoScalarFieldEnum[]
  }

  /**
   * aluno create
   */
  export type alunoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aluno
     */
    select?: alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alunoInclude<ExtArgs> | null
    /**
     * The data needed to create a aluno.
     */
    data: XOR<alunoCreateInput, alunoUncheckedCreateInput>
  }

  /**
   * aluno createMany
   */
  export type alunoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many alunos.
     */
    data: alunoCreateManyInput | alunoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * aluno createManyAndReturn
   */
  export type alunoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aluno
     */
    select?: alunoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many alunos.
     */
    data: alunoCreateManyInput | alunoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * aluno update
   */
  export type alunoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aluno
     */
    select?: alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alunoInclude<ExtArgs> | null
    /**
     * The data needed to update a aluno.
     */
    data: XOR<alunoUpdateInput, alunoUncheckedUpdateInput>
    /**
     * Choose, which aluno to update.
     */
    where: alunoWhereUniqueInput
  }

  /**
   * aluno updateMany
   */
  export type alunoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update alunos.
     */
    data: XOR<alunoUpdateManyMutationInput, alunoUncheckedUpdateManyInput>
    /**
     * Filter which alunos to update
     */
    where?: alunoWhereInput
  }

  /**
   * aluno upsert
   */
  export type alunoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aluno
     */
    select?: alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alunoInclude<ExtArgs> | null
    /**
     * The filter to search for the aluno to update in case it exists.
     */
    where: alunoWhereUniqueInput
    /**
     * In case the aluno found by the `where` argument doesn't exist, create a new aluno with this data.
     */
    create: XOR<alunoCreateInput, alunoUncheckedCreateInput>
    /**
     * In case the aluno was found with the provided `where` argument, update it with this data.
     */
    update: XOR<alunoUpdateInput, alunoUncheckedUpdateInput>
  }

  /**
   * aluno delete
   */
  export type alunoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aluno
     */
    select?: alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alunoInclude<ExtArgs> | null
    /**
     * Filter which aluno to delete.
     */
    where: alunoWhereUniqueInput
  }

  /**
   * aluno deleteMany
   */
  export type alunoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which alunos to delete
     */
    where?: alunoWhereInput
  }

  /**
   * aluno.descarte
   */
  export type aluno$descarteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the descarte
     */
    select?: descarteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: descarteInclude<ExtArgs> | null
    where?: descarteWhereInput
    orderBy?: descarteOrderByWithRelationInput | descarteOrderByWithRelationInput[]
    cursor?: descarteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DescarteScalarFieldEnum | DescarteScalarFieldEnum[]
  }

  /**
   * aluno.doacao
   */
  export type aluno$doacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the doacao
     */
    select?: doacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: doacaoInclude<ExtArgs> | null
    where?: doacaoWhereInput
    orderBy?: doacaoOrderByWithRelationInput | doacaoOrderByWithRelationInput[]
    cursor?: doacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DoacaoScalarFieldEnum | DoacaoScalarFieldEnum[]
  }

  /**
   * aluno.doacaoUsuario
   */
  export type aluno$doacaoUsuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the doacaoUsuario
     */
    select?: doacaoUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: doacaoUsuarioInclude<ExtArgs> | null
    where?: doacaoUsuarioWhereInput
    orderBy?: doacaoUsuarioOrderByWithRelationInput | doacaoUsuarioOrderByWithRelationInput[]
    cursor?: doacaoUsuarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DoacaoUsuarioScalarFieldEnum | DoacaoUsuarioScalarFieldEnum[]
  }

  /**
   * aluno.solicitacao
   */
  export type aluno$solicitacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the solicitacao
     */
    select?: solicitacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: solicitacaoInclude<ExtArgs> | null
    where?: solicitacaoWhereInput
    orderBy?: solicitacaoOrderByWithRelationInput | solicitacaoOrderByWithRelationInput[]
    cursor?: solicitacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SolicitacaoScalarFieldEnum | SolicitacaoScalarFieldEnum[]
  }

  /**
   * aluno.modificadorTeclado
   */
  export type aluno$modificadorTecladoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the teclado
     */
    select?: tecladoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tecladoInclude<ExtArgs> | null
    where?: tecladoWhereInput
    orderBy?: tecladoOrderByWithRelationInput | tecladoOrderByWithRelationInput[]
    cursor?: tecladoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TecladoScalarFieldEnum | TecladoScalarFieldEnum[]
  }

  /**
   * aluno.usuarioTeclado
   */
  export type aluno$usuarioTecladoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the teclado
     */
    select?: tecladoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tecladoInclude<ExtArgs> | null
    where?: tecladoWhereInput
    orderBy?: tecladoOrderByWithRelationInput | tecladoOrderByWithRelationInput[]
    cursor?: tecladoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TecladoScalarFieldEnum | TecladoScalarFieldEnum[]
  }

  /**
   * aluno.hd
   */
  export type aluno$hdArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hd
     */
    select?: hdSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: hdInclude<ExtArgs> | null
    where?: hdWhereInput
    orderBy?: hdOrderByWithRelationInput | hdOrderByWithRelationInput[]
    cursor?: hdWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HdScalarFieldEnum | HdScalarFieldEnum[]
  }

  /**
   * aluno.modificadorHd
   */
  export type aluno$modificadorHdArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hd
     */
    select?: hdSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: hdInclude<ExtArgs> | null
    where?: hdWhereInput
    orderBy?: hdOrderByWithRelationInput | hdOrderByWithRelationInput[]
    cursor?: hdWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HdScalarFieldEnum | HdScalarFieldEnum[]
  }

  /**
   * aluno.fonteDeAlimentacao
   */
  export type aluno$fonteDeAlimentacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fontedealimentacao
     */
    select?: fontedealimentacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fontedealimentacaoInclude<ExtArgs> | null
    where?: fontedealimentacaoWhereInput
    orderBy?: fontedealimentacaoOrderByWithRelationInput | fontedealimentacaoOrderByWithRelationInput[]
    cursor?: fontedealimentacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FontedealimentacaoScalarFieldEnum | FontedealimentacaoScalarFieldEnum[]
  }

  /**
   * aluno.modificadorFonteDeAlimentacao
   */
  export type aluno$modificadorFonteDeAlimentacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fontedealimentacao
     */
    select?: fontedealimentacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fontedealimentacaoInclude<ExtArgs> | null
    where?: fontedealimentacaoWhereInput
    orderBy?: fontedealimentacaoOrderByWithRelationInput | fontedealimentacaoOrderByWithRelationInput[]
    cursor?: fontedealimentacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FontedealimentacaoScalarFieldEnum | FontedealimentacaoScalarFieldEnum[]
  }

  /**
   * aluno.gabinete
   */
  export type aluno$gabineteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the gabinete
     */
    select?: gabineteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: gabineteInclude<ExtArgs> | null
    where?: gabineteWhereInput
    orderBy?: gabineteOrderByWithRelationInput | gabineteOrderByWithRelationInput[]
    cursor?: gabineteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: GabineteScalarFieldEnum | GabineteScalarFieldEnum[]
  }

  /**
   * aluno.modificadorGabinete
   */
  export type aluno$modificadorGabineteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the gabinete
     */
    select?: gabineteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: gabineteInclude<ExtArgs> | null
    where?: gabineteWhereInput
    orderBy?: gabineteOrderByWithRelationInput | gabineteOrderByWithRelationInput[]
    cursor?: gabineteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: GabineteScalarFieldEnum | GabineteScalarFieldEnum[]
  }

  /**
   * aluno.monitor
   */
  export type aluno$monitorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the monitor
     */
    select?: monitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: monitorInclude<ExtArgs> | null
    where?: monitorWhereInput
    orderBy?: monitorOrderByWithRelationInput | monitorOrderByWithRelationInput[]
    cursor?: monitorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MonitorScalarFieldEnum | MonitorScalarFieldEnum[]
  }

  /**
   * aluno.modificadorMonitor
   */
  export type aluno$modificadorMonitorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the monitor
     */
    select?: monitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: monitorInclude<ExtArgs> | null
    where?: monitorWhereInput
    orderBy?: monitorOrderByWithRelationInput | monitorOrderByWithRelationInput[]
    cursor?: monitorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MonitorScalarFieldEnum | MonitorScalarFieldEnum[]
  }

  /**
   * aluno.usuarioMouse
   */
  export type aluno$usuarioMouseArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mouse
     */
    select?: mouseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mouseInclude<ExtArgs> | null
    where?: mouseWhereInput
    orderBy?: mouseOrderByWithRelationInput | mouseOrderByWithRelationInput[]
    cursor?: mouseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MouseScalarFieldEnum | MouseScalarFieldEnum[]
  }

  /**
   * aluno.modificadorMouse
   */
  export type aluno$modificadorMouseArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mouse
     */
    select?: mouseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mouseInclude<ExtArgs> | null
    where?: mouseWhereInput
    orderBy?: mouseOrderByWithRelationInput | mouseOrderByWithRelationInput[]
    cursor?: mouseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MouseScalarFieldEnum | MouseScalarFieldEnum[]
  }

  /**
   * aluno.usuarioEstabilizador
   */
  export type aluno$usuarioEstabilizadorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estabilizador
     */
    select?: estabilizadorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estabilizadorInclude<ExtArgs> | null
    where?: estabilizadorWhereInput
    orderBy?: estabilizadorOrderByWithRelationInput | estabilizadorOrderByWithRelationInput[]
    cursor?: estabilizadorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EstabilizadorScalarFieldEnum | EstabilizadorScalarFieldEnum[]
  }

  /**
   * aluno.modificadorEstabilizador
   */
  export type aluno$modificadorEstabilizadorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estabilizador
     */
    select?: estabilizadorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estabilizadorInclude<ExtArgs> | null
    where?: estabilizadorWhereInput
    orderBy?: estabilizadorOrderByWithRelationInput | estabilizadorOrderByWithRelationInput[]
    cursor?: estabilizadorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EstabilizadorScalarFieldEnum | EstabilizadorScalarFieldEnum[]
  }

  /**
   * aluno.usuarioImpressora
   */
  export type aluno$usuarioImpressoraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the impressora
     */
    select?: impressoraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: impressoraInclude<ExtArgs> | null
    where?: impressoraWhereInput
    orderBy?: impressoraOrderByWithRelationInput | impressoraOrderByWithRelationInput[]
    cursor?: impressoraWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ImpressoraScalarFieldEnum | ImpressoraScalarFieldEnum[]
  }

  /**
   * aluno.modificadorImpressora
   */
  export type aluno$modificadorImpressoraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the impressora
     */
    select?: impressoraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: impressoraInclude<ExtArgs> | null
    where?: impressoraWhereInput
    orderBy?: impressoraOrderByWithRelationInput | impressoraOrderByWithRelationInput[]
    cursor?: impressoraWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ImpressoraScalarFieldEnum | ImpressoraScalarFieldEnum[]
  }

  /**
   * aluno.usuarioPlacamae
   */
  export type aluno$usuarioPlacamaeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the placamae
     */
    select?: placamaeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: placamaeInclude<ExtArgs> | null
    where?: placamaeWhereInput
    orderBy?: placamaeOrderByWithRelationInput | placamaeOrderByWithRelationInput[]
    cursor?: placamaeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PlacamaeScalarFieldEnum | PlacamaeScalarFieldEnum[]
  }

  /**
   * aluno.modificadorPlacamae
   */
  export type aluno$modificadorPlacamaeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the placamae
     */
    select?: placamaeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: placamaeInclude<ExtArgs> | null
    where?: placamaeWhereInput
    orderBy?: placamaeOrderByWithRelationInput | placamaeOrderByWithRelationInput[]
    cursor?: placamaeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PlacamaeScalarFieldEnum | PlacamaeScalarFieldEnum[]
  }

  /**
   * aluno.usuarioNotebook
   */
  export type aluno$usuarioNotebookArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notebook
     */
    select?: notebookSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notebookInclude<ExtArgs> | null
    where?: notebookWhereInput
    orderBy?: notebookOrderByWithRelationInput | notebookOrderByWithRelationInput[]
    cursor?: notebookWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotebookScalarFieldEnum | NotebookScalarFieldEnum[]
  }

  /**
   * aluno.modificadorNotebook
   */
  export type aluno$modificadorNotebookArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notebook
     */
    select?: notebookSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notebookInclude<ExtArgs> | null
    where?: notebookWhereInput
    orderBy?: notebookOrderByWithRelationInput | notebookOrderByWithRelationInput[]
    cursor?: notebookWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotebookScalarFieldEnum | NotebookScalarFieldEnum[]
  }

  /**
   * aluno.usuarioProcessador
   */
  export type aluno$usuarioProcessadorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the processador
     */
    select?: processadorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: processadorInclude<ExtArgs> | null
    where?: processadorWhereInput
    orderBy?: processadorOrderByWithRelationInput | processadorOrderByWithRelationInput[]
    cursor?: processadorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProcessadorScalarFieldEnum | ProcessadorScalarFieldEnum[]
  }

  /**
   * aluno.modificadorProcessador
   */
  export type aluno$modificadorProcessadorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the processador
     */
    select?: processadorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: processadorInclude<ExtArgs> | null
    where?: processadorWhereInput
    orderBy?: processadorOrderByWithRelationInput | processadorOrderByWithRelationInput[]
    cursor?: processadorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProcessadorScalarFieldEnum | ProcessadorScalarFieldEnum[]
  }

  /**
   * aluno without action
   */
  export type alunoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aluno
     */
    select?: alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alunoInclude<ExtArgs> | null
  }


  /**
   * Model pessoafisica
   */

  export type AggregatePessoafisica = {
    _count: PessoafisicaCountAggregateOutputType | null
    _avg: PessoafisicaAvgAggregateOutputType | null
    _sum: PessoafisicaSumAggregateOutputType | null
    _min: PessoafisicaMinAggregateOutputType | null
    _max: PessoafisicaMaxAggregateOutputType | null
  }

  export type PessoafisicaAvgAggregateOutputType = {
    id: number | null
  }

  export type PessoafisicaSumAggregateOutputType = {
    id: number | null
  }

  export type PessoafisicaMinAggregateOutputType = {
    id: number | null
    name: string | null
    email: string | null
    password: string | null
    cpf: string | null
    comprovanteDeBaixaRenda: string | null
    telefone: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PessoafisicaMaxAggregateOutputType = {
    id: number | null
    name: string | null
    email: string | null
    password: string | null
    cpf: string | null
    comprovanteDeBaixaRenda: string | null
    telefone: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PessoafisicaCountAggregateOutputType = {
    id: number
    name: number
    email: number
    password: number
    cpf: number
    comprovanteDeBaixaRenda: number
    telefone: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type PessoafisicaAvgAggregateInputType = {
    id?: true
  }

  export type PessoafisicaSumAggregateInputType = {
    id?: true
  }

  export type PessoafisicaMinAggregateInputType = {
    id?: true
    name?: true
    email?: true
    password?: true
    cpf?: true
    comprovanteDeBaixaRenda?: true
    telefone?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PessoafisicaMaxAggregateInputType = {
    id?: true
    name?: true
    email?: true
    password?: true
    cpf?: true
    comprovanteDeBaixaRenda?: true
    telefone?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PessoafisicaCountAggregateInputType = {
    id?: true
    name?: true
    email?: true
    password?: true
    cpf?: true
    comprovanteDeBaixaRenda?: true
    telefone?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type PessoafisicaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which pessoafisica to aggregate.
     */
    where?: pessoafisicaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pessoafisicas to fetch.
     */
    orderBy?: pessoafisicaOrderByWithRelationInput | pessoafisicaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: pessoafisicaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pessoafisicas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pessoafisicas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned pessoafisicas
    **/
    _count?: true | PessoafisicaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PessoafisicaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PessoafisicaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PessoafisicaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PessoafisicaMaxAggregateInputType
  }

  export type GetPessoafisicaAggregateType<T extends PessoafisicaAggregateArgs> = {
        [P in keyof T & keyof AggregatePessoafisica]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePessoafisica[P]>
      : GetScalarType<T[P], AggregatePessoafisica[P]>
  }




  export type pessoafisicaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: pessoafisicaWhereInput
    orderBy?: pessoafisicaOrderByWithAggregationInput | pessoafisicaOrderByWithAggregationInput[]
    by: PessoafisicaScalarFieldEnum[] | PessoafisicaScalarFieldEnum
    having?: pessoafisicaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PessoafisicaCountAggregateInputType | true
    _avg?: PessoafisicaAvgAggregateInputType
    _sum?: PessoafisicaSumAggregateInputType
    _min?: PessoafisicaMinAggregateInputType
    _max?: PessoafisicaMaxAggregateInputType
  }

  export type PessoafisicaGroupByOutputType = {
    id: number
    name: string
    email: string
    password: string
    cpf: string
    comprovanteDeBaixaRenda: string
    telefone: string
    createdAt: Date
    updatedAt: Date
    _count: PessoafisicaCountAggregateOutputType | null
    _avg: PessoafisicaAvgAggregateOutputType | null
    _sum: PessoafisicaSumAggregateOutputType | null
    _min: PessoafisicaMinAggregateOutputType | null
    _max: PessoafisicaMaxAggregateOutputType | null
  }

  type GetPessoafisicaGroupByPayload<T extends pessoafisicaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PessoafisicaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PessoafisicaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PessoafisicaGroupByOutputType[P]>
            : GetScalarType<T[P], PessoafisicaGroupByOutputType[P]>
        }
      >
    >


  export type pessoafisicaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    password?: boolean
    cpf?: boolean
    comprovanteDeBaixaRenda?: boolean
    telefone?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    doacao?: boolean | pessoafisica$doacaoArgs<ExtArgs>
    doacaoUsuario?: boolean | pessoafisica$doacaoUsuarioArgs<ExtArgs>
    solicitacao?: boolean | pessoafisica$solicitacaoArgs<ExtArgs>
    _count?: boolean | PessoafisicaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pessoafisica"]>

  export type pessoafisicaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    password?: boolean
    cpf?: boolean
    comprovanteDeBaixaRenda?: boolean
    telefone?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["pessoafisica"]>

  export type pessoafisicaSelectScalar = {
    id?: boolean
    name?: boolean
    email?: boolean
    password?: boolean
    cpf?: boolean
    comprovanteDeBaixaRenda?: boolean
    telefone?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type pessoafisicaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    doacao?: boolean | pessoafisica$doacaoArgs<ExtArgs>
    doacaoUsuario?: boolean | pessoafisica$doacaoUsuarioArgs<ExtArgs>
    solicitacao?: boolean | pessoafisica$solicitacaoArgs<ExtArgs>
    _count?: boolean | PessoafisicaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type pessoafisicaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $pessoafisicaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "pessoafisica"
    objects: {
      doacao: Prisma.$doacaoPayload<ExtArgs>[]
      doacaoUsuario: Prisma.$doacaoUsuarioPayload<ExtArgs>[]
      solicitacao: Prisma.$solicitacaoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      email: string
      password: string
      cpf: string
      comprovanteDeBaixaRenda: string
      telefone: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["pessoafisica"]>
    composites: {}
  }

  type pessoafisicaGetPayload<S extends boolean | null | undefined | pessoafisicaDefaultArgs> = $Result.GetResult<Prisma.$pessoafisicaPayload, S>

  type pessoafisicaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<pessoafisicaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PessoafisicaCountAggregateInputType | true
    }

  export interface pessoafisicaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['pessoafisica'], meta: { name: 'pessoafisica' } }
    /**
     * Find zero or one Pessoafisica that matches the filter.
     * @param {pessoafisicaFindUniqueArgs} args - Arguments to find a Pessoafisica
     * @example
     * // Get one Pessoafisica
     * const pessoafisica = await prisma.pessoafisica.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends pessoafisicaFindUniqueArgs>(args: SelectSubset<T, pessoafisicaFindUniqueArgs<ExtArgs>>): Prisma__pessoafisicaClient<$Result.GetResult<Prisma.$pessoafisicaPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Pessoafisica that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {pessoafisicaFindUniqueOrThrowArgs} args - Arguments to find a Pessoafisica
     * @example
     * // Get one Pessoafisica
     * const pessoafisica = await prisma.pessoafisica.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends pessoafisicaFindUniqueOrThrowArgs>(args: SelectSubset<T, pessoafisicaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__pessoafisicaClient<$Result.GetResult<Prisma.$pessoafisicaPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Pessoafisica that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pessoafisicaFindFirstArgs} args - Arguments to find a Pessoafisica
     * @example
     * // Get one Pessoafisica
     * const pessoafisica = await prisma.pessoafisica.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends pessoafisicaFindFirstArgs>(args?: SelectSubset<T, pessoafisicaFindFirstArgs<ExtArgs>>): Prisma__pessoafisicaClient<$Result.GetResult<Prisma.$pessoafisicaPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Pessoafisica that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pessoafisicaFindFirstOrThrowArgs} args - Arguments to find a Pessoafisica
     * @example
     * // Get one Pessoafisica
     * const pessoafisica = await prisma.pessoafisica.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends pessoafisicaFindFirstOrThrowArgs>(args?: SelectSubset<T, pessoafisicaFindFirstOrThrowArgs<ExtArgs>>): Prisma__pessoafisicaClient<$Result.GetResult<Prisma.$pessoafisicaPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Pessoafisicas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pessoafisicaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Pessoafisicas
     * const pessoafisicas = await prisma.pessoafisica.findMany()
     * 
     * // Get first 10 Pessoafisicas
     * const pessoafisicas = await prisma.pessoafisica.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const pessoafisicaWithIdOnly = await prisma.pessoafisica.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends pessoafisicaFindManyArgs>(args?: SelectSubset<T, pessoafisicaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pessoafisicaPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Pessoafisica.
     * @param {pessoafisicaCreateArgs} args - Arguments to create a Pessoafisica.
     * @example
     * // Create one Pessoafisica
     * const Pessoafisica = await prisma.pessoafisica.create({
     *   data: {
     *     // ... data to create a Pessoafisica
     *   }
     * })
     * 
     */
    create<T extends pessoafisicaCreateArgs>(args: SelectSubset<T, pessoafisicaCreateArgs<ExtArgs>>): Prisma__pessoafisicaClient<$Result.GetResult<Prisma.$pessoafisicaPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Pessoafisicas.
     * @param {pessoafisicaCreateManyArgs} args - Arguments to create many Pessoafisicas.
     * @example
     * // Create many Pessoafisicas
     * const pessoafisica = await prisma.pessoafisica.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends pessoafisicaCreateManyArgs>(args?: SelectSubset<T, pessoafisicaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Pessoafisicas and returns the data saved in the database.
     * @param {pessoafisicaCreateManyAndReturnArgs} args - Arguments to create many Pessoafisicas.
     * @example
     * // Create many Pessoafisicas
     * const pessoafisica = await prisma.pessoafisica.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Pessoafisicas and only return the `id`
     * const pessoafisicaWithIdOnly = await prisma.pessoafisica.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends pessoafisicaCreateManyAndReturnArgs>(args?: SelectSubset<T, pessoafisicaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pessoafisicaPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Pessoafisica.
     * @param {pessoafisicaDeleteArgs} args - Arguments to delete one Pessoafisica.
     * @example
     * // Delete one Pessoafisica
     * const Pessoafisica = await prisma.pessoafisica.delete({
     *   where: {
     *     // ... filter to delete one Pessoafisica
     *   }
     * })
     * 
     */
    delete<T extends pessoafisicaDeleteArgs>(args: SelectSubset<T, pessoafisicaDeleteArgs<ExtArgs>>): Prisma__pessoafisicaClient<$Result.GetResult<Prisma.$pessoafisicaPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Pessoafisica.
     * @param {pessoafisicaUpdateArgs} args - Arguments to update one Pessoafisica.
     * @example
     * // Update one Pessoafisica
     * const pessoafisica = await prisma.pessoafisica.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends pessoafisicaUpdateArgs>(args: SelectSubset<T, pessoafisicaUpdateArgs<ExtArgs>>): Prisma__pessoafisicaClient<$Result.GetResult<Prisma.$pessoafisicaPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Pessoafisicas.
     * @param {pessoafisicaDeleteManyArgs} args - Arguments to filter Pessoafisicas to delete.
     * @example
     * // Delete a few Pessoafisicas
     * const { count } = await prisma.pessoafisica.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends pessoafisicaDeleteManyArgs>(args?: SelectSubset<T, pessoafisicaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pessoafisicas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pessoafisicaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Pessoafisicas
     * const pessoafisica = await prisma.pessoafisica.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends pessoafisicaUpdateManyArgs>(args: SelectSubset<T, pessoafisicaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Pessoafisica.
     * @param {pessoafisicaUpsertArgs} args - Arguments to update or create a Pessoafisica.
     * @example
     * // Update or create a Pessoafisica
     * const pessoafisica = await prisma.pessoafisica.upsert({
     *   create: {
     *     // ... data to create a Pessoafisica
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Pessoafisica we want to update
     *   }
     * })
     */
    upsert<T extends pessoafisicaUpsertArgs>(args: SelectSubset<T, pessoafisicaUpsertArgs<ExtArgs>>): Prisma__pessoafisicaClient<$Result.GetResult<Prisma.$pessoafisicaPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Pessoafisicas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pessoafisicaCountArgs} args - Arguments to filter Pessoafisicas to count.
     * @example
     * // Count the number of Pessoafisicas
     * const count = await prisma.pessoafisica.count({
     *   where: {
     *     // ... the filter for the Pessoafisicas we want to count
     *   }
     * })
    **/
    count<T extends pessoafisicaCountArgs>(
      args?: Subset<T, pessoafisicaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PessoafisicaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Pessoafisica.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PessoafisicaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PessoafisicaAggregateArgs>(args: Subset<T, PessoafisicaAggregateArgs>): Prisma.PrismaPromise<GetPessoafisicaAggregateType<T>>

    /**
     * Group by Pessoafisica.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pessoafisicaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends pessoafisicaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: pessoafisicaGroupByArgs['orderBy'] }
        : { orderBy?: pessoafisicaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, pessoafisicaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPessoafisicaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the pessoafisica model
   */
  readonly fields: pessoafisicaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for pessoafisica.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__pessoafisicaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    doacao<T extends pessoafisica$doacaoArgs<ExtArgs> = {}>(args?: Subset<T, pessoafisica$doacaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$doacaoPayload<ExtArgs>, T, "findMany"> | Null>
    doacaoUsuario<T extends pessoafisica$doacaoUsuarioArgs<ExtArgs> = {}>(args?: Subset<T, pessoafisica$doacaoUsuarioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$doacaoUsuarioPayload<ExtArgs>, T, "findMany"> | Null>
    solicitacao<T extends pessoafisica$solicitacaoArgs<ExtArgs> = {}>(args?: Subset<T, pessoafisica$solicitacaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$solicitacaoPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the pessoafisica model
   */ 
  interface pessoafisicaFieldRefs {
    readonly id: FieldRef<"pessoafisica", 'Int'>
    readonly name: FieldRef<"pessoafisica", 'String'>
    readonly email: FieldRef<"pessoafisica", 'String'>
    readonly password: FieldRef<"pessoafisica", 'String'>
    readonly cpf: FieldRef<"pessoafisica", 'String'>
    readonly comprovanteDeBaixaRenda: FieldRef<"pessoafisica", 'String'>
    readonly telefone: FieldRef<"pessoafisica", 'String'>
    readonly createdAt: FieldRef<"pessoafisica", 'DateTime'>
    readonly updatedAt: FieldRef<"pessoafisica", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * pessoafisica findUnique
   */
  export type pessoafisicaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pessoafisica
     */
    select?: pessoafisicaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pessoafisicaInclude<ExtArgs> | null
    /**
     * Filter, which pessoafisica to fetch.
     */
    where: pessoafisicaWhereUniqueInput
  }

  /**
   * pessoafisica findUniqueOrThrow
   */
  export type pessoafisicaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pessoafisica
     */
    select?: pessoafisicaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pessoafisicaInclude<ExtArgs> | null
    /**
     * Filter, which pessoafisica to fetch.
     */
    where: pessoafisicaWhereUniqueInput
  }

  /**
   * pessoafisica findFirst
   */
  export type pessoafisicaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pessoafisica
     */
    select?: pessoafisicaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pessoafisicaInclude<ExtArgs> | null
    /**
     * Filter, which pessoafisica to fetch.
     */
    where?: pessoafisicaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pessoafisicas to fetch.
     */
    orderBy?: pessoafisicaOrderByWithRelationInput | pessoafisicaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for pessoafisicas.
     */
    cursor?: pessoafisicaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pessoafisicas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pessoafisicas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of pessoafisicas.
     */
    distinct?: PessoafisicaScalarFieldEnum | PessoafisicaScalarFieldEnum[]
  }

  /**
   * pessoafisica findFirstOrThrow
   */
  export type pessoafisicaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pessoafisica
     */
    select?: pessoafisicaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pessoafisicaInclude<ExtArgs> | null
    /**
     * Filter, which pessoafisica to fetch.
     */
    where?: pessoafisicaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pessoafisicas to fetch.
     */
    orderBy?: pessoafisicaOrderByWithRelationInput | pessoafisicaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for pessoafisicas.
     */
    cursor?: pessoafisicaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pessoafisicas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pessoafisicas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of pessoafisicas.
     */
    distinct?: PessoafisicaScalarFieldEnum | PessoafisicaScalarFieldEnum[]
  }

  /**
   * pessoafisica findMany
   */
  export type pessoafisicaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pessoafisica
     */
    select?: pessoafisicaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pessoafisicaInclude<ExtArgs> | null
    /**
     * Filter, which pessoafisicas to fetch.
     */
    where?: pessoafisicaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pessoafisicas to fetch.
     */
    orderBy?: pessoafisicaOrderByWithRelationInput | pessoafisicaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing pessoafisicas.
     */
    cursor?: pessoafisicaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pessoafisicas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pessoafisicas.
     */
    skip?: number
    distinct?: PessoafisicaScalarFieldEnum | PessoafisicaScalarFieldEnum[]
  }

  /**
   * pessoafisica create
   */
  export type pessoafisicaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pessoafisica
     */
    select?: pessoafisicaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pessoafisicaInclude<ExtArgs> | null
    /**
     * The data needed to create a pessoafisica.
     */
    data: XOR<pessoafisicaCreateInput, pessoafisicaUncheckedCreateInput>
  }

  /**
   * pessoafisica createMany
   */
  export type pessoafisicaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many pessoafisicas.
     */
    data: pessoafisicaCreateManyInput | pessoafisicaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * pessoafisica createManyAndReturn
   */
  export type pessoafisicaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pessoafisica
     */
    select?: pessoafisicaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many pessoafisicas.
     */
    data: pessoafisicaCreateManyInput | pessoafisicaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * pessoafisica update
   */
  export type pessoafisicaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pessoafisica
     */
    select?: pessoafisicaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pessoafisicaInclude<ExtArgs> | null
    /**
     * The data needed to update a pessoafisica.
     */
    data: XOR<pessoafisicaUpdateInput, pessoafisicaUncheckedUpdateInput>
    /**
     * Choose, which pessoafisica to update.
     */
    where: pessoafisicaWhereUniqueInput
  }

  /**
   * pessoafisica updateMany
   */
  export type pessoafisicaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update pessoafisicas.
     */
    data: XOR<pessoafisicaUpdateManyMutationInput, pessoafisicaUncheckedUpdateManyInput>
    /**
     * Filter which pessoafisicas to update
     */
    where?: pessoafisicaWhereInput
  }

  /**
   * pessoafisica upsert
   */
  export type pessoafisicaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pessoafisica
     */
    select?: pessoafisicaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pessoafisicaInclude<ExtArgs> | null
    /**
     * The filter to search for the pessoafisica to update in case it exists.
     */
    where: pessoafisicaWhereUniqueInput
    /**
     * In case the pessoafisica found by the `where` argument doesn't exist, create a new pessoafisica with this data.
     */
    create: XOR<pessoafisicaCreateInput, pessoafisicaUncheckedCreateInput>
    /**
     * In case the pessoafisica was found with the provided `where` argument, update it with this data.
     */
    update: XOR<pessoafisicaUpdateInput, pessoafisicaUncheckedUpdateInput>
  }

  /**
   * pessoafisica delete
   */
  export type pessoafisicaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pessoafisica
     */
    select?: pessoafisicaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pessoafisicaInclude<ExtArgs> | null
    /**
     * Filter which pessoafisica to delete.
     */
    where: pessoafisicaWhereUniqueInput
  }

  /**
   * pessoafisica deleteMany
   */
  export type pessoafisicaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which pessoafisicas to delete
     */
    where?: pessoafisicaWhereInput
  }

  /**
   * pessoafisica.doacao
   */
  export type pessoafisica$doacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the doacao
     */
    select?: doacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: doacaoInclude<ExtArgs> | null
    where?: doacaoWhereInput
    orderBy?: doacaoOrderByWithRelationInput | doacaoOrderByWithRelationInput[]
    cursor?: doacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DoacaoScalarFieldEnum | DoacaoScalarFieldEnum[]
  }

  /**
   * pessoafisica.doacaoUsuario
   */
  export type pessoafisica$doacaoUsuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the doacaoUsuario
     */
    select?: doacaoUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: doacaoUsuarioInclude<ExtArgs> | null
    where?: doacaoUsuarioWhereInput
    orderBy?: doacaoUsuarioOrderByWithRelationInput | doacaoUsuarioOrderByWithRelationInput[]
    cursor?: doacaoUsuarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DoacaoUsuarioScalarFieldEnum | DoacaoUsuarioScalarFieldEnum[]
  }

  /**
   * pessoafisica.solicitacao
   */
  export type pessoafisica$solicitacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the solicitacao
     */
    select?: solicitacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: solicitacaoInclude<ExtArgs> | null
    where?: solicitacaoWhereInput
    orderBy?: solicitacaoOrderByWithRelationInput | solicitacaoOrderByWithRelationInput[]
    cursor?: solicitacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SolicitacaoScalarFieldEnum | SolicitacaoScalarFieldEnum[]
  }

  /**
   * pessoafisica without action
   */
  export type pessoafisicaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pessoafisica
     */
    select?: pessoafisicaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pessoafisicaInclude<ExtArgs> | null
  }


  /**
   * Model pessoajuridica
   */

  export type AggregatePessoajuridica = {
    _count: PessoajuridicaCountAggregateOutputType | null
    _avg: PessoajuridicaAvgAggregateOutputType | null
    _sum: PessoajuridicaSumAggregateOutputType | null
    _min: PessoajuridicaMinAggregateOutputType | null
    _max: PessoajuridicaMaxAggregateOutputType | null
  }

  export type PessoajuridicaAvgAggregateOutputType = {
    id: number | null
  }

  export type PessoajuridicaSumAggregateOutputType = {
    id: number | null
  }

  export type PessoajuridicaMinAggregateOutputType = {
    id: number | null
    name: string | null
    email: string | null
    password: string | null
    cnpj: string | null
    comprovanteDeProjeto: string | null
    endereco: string | null
    telefone: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PessoajuridicaMaxAggregateOutputType = {
    id: number | null
    name: string | null
    email: string | null
    password: string | null
    cnpj: string | null
    comprovanteDeProjeto: string | null
    endereco: string | null
    telefone: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PessoajuridicaCountAggregateOutputType = {
    id: number
    name: number
    email: number
    password: number
    cnpj: number
    comprovanteDeProjeto: number
    endereco: number
    telefone: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type PessoajuridicaAvgAggregateInputType = {
    id?: true
  }

  export type PessoajuridicaSumAggregateInputType = {
    id?: true
  }

  export type PessoajuridicaMinAggregateInputType = {
    id?: true
    name?: true
    email?: true
    password?: true
    cnpj?: true
    comprovanteDeProjeto?: true
    endereco?: true
    telefone?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PessoajuridicaMaxAggregateInputType = {
    id?: true
    name?: true
    email?: true
    password?: true
    cnpj?: true
    comprovanteDeProjeto?: true
    endereco?: true
    telefone?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PessoajuridicaCountAggregateInputType = {
    id?: true
    name?: true
    email?: true
    password?: true
    cnpj?: true
    comprovanteDeProjeto?: true
    endereco?: true
    telefone?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type PessoajuridicaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which pessoajuridica to aggregate.
     */
    where?: pessoajuridicaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pessoajuridicas to fetch.
     */
    orderBy?: pessoajuridicaOrderByWithRelationInput | pessoajuridicaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: pessoajuridicaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pessoajuridicas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pessoajuridicas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned pessoajuridicas
    **/
    _count?: true | PessoajuridicaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PessoajuridicaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PessoajuridicaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PessoajuridicaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PessoajuridicaMaxAggregateInputType
  }

  export type GetPessoajuridicaAggregateType<T extends PessoajuridicaAggregateArgs> = {
        [P in keyof T & keyof AggregatePessoajuridica]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePessoajuridica[P]>
      : GetScalarType<T[P], AggregatePessoajuridica[P]>
  }




  export type pessoajuridicaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: pessoajuridicaWhereInput
    orderBy?: pessoajuridicaOrderByWithAggregationInput | pessoajuridicaOrderByWithAggregationInput[]
    by: PessoajuridicaScalarFieldEnum[] | PessoajuridicaScalarFieldEnum
    having?: pessoajuridicaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PessoajuridicaCountAggregateInputType | true
    _avg?: PessoajuridicaAvgAggregateInputType
    _sum?: PessoajuridicaSumAggregateInputType
    _min?: PessoajuridicaMinAggregateInputType
    _max?: PessoajuridicaMaxAggregateInputType
  }

  export type PessoajuridicaGroupByOutputType = {
    id: number
    name: string
    email: string
    password: string
    cnpj: string
    comprovanteDeProjeto: string
    endereco: string
    telefone: string
    createdAt: Date
    updatedAt: Date
    _count: PessoajuridicaCountAggregateOutputType | null
    _avg: PessoajuridicaAvgAggregateOutputType | null
    _sum: PessoajuridicaSumAggregateOutputType | null
    _min: PessoajuridicaMinAggregateOutputType | null
    _max: PessoajuridicaMaxAggregateOutputType | null
  }

  type GetPessoajuridicaGroupByPayload<T extends pessoajuridicaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PessoajuridicaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PessoajuridicaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PessoajuridicaGroupByOutputType[P]>
            : GetScalarType<T[P], PessoajuridicaGroupByOutputType[P]>
        }
      >
    >


  export type pessoajuridicaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    password?: boolean
    cnpj?: boolean
    comprovanteDeProjeto?: boolean
    endereco?: boolean
    telefone?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    doacao?: boolean | pessoajuridica$doacaoArgs<ExtArgs>
    doacaoUsuario?: boolean | pessoajuridica$doacaoUsuarioArgs<ExtArgs>
    solicitacao?: boolean | pessoajuridica$solicitacaoArgs<ExtArgs>
    _count?: boolean | PessoajuridicaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pessoajuridica"]>

  export type pessoajuridicaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    password?: boolean
    cnpj?: boolean
    comprovanteDeProjeto?: boolean
    endereco?: boolean
    telefone?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["pessoajuridica"]>

  export type pessoajuridicaSelectScalar = {
    id?: boolean
    name?: boolean
    email?: boolean
    password?: boolean
    cnpj?: boolean
    comprovanteDeProjeto?: boolean
    endereco?: boolean
    telefone?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type pessoajuridicaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    doacao?: boolean | pessoajuridica$doacaoArgs<ExtArgs>
    doacaoUsuario?: boolean | pessoajuridica$doacaoUsuarioArgs<ExtArgs>
    solicitacao?: boolean | pessoajuridica$solicitacaoArgs<ExtArgs>
    _count?: boolean | PessoajuridicaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type pessoajuridicaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $pessoajuridicaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "pessoajuridica"
    objects: {
      doacao: Prisma.$doacaoPayload<ExtArgs>[]
      doacaoUsuario: Prisma.$doacaoUsuarioPayload<ExtArgs>[]
      solicitacao: Prisma.$solicitacaoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      email: string
      password: string
      cnpj: string
      comprovanteDeProjeto: string
      endereco: string
      telefone: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["pessoajuridica"]>
    composites: {}
  }

  type pessoajuridicaGetPayload<S extends boolean | null | undefined | pessoajuridicaDefaultArgs> = $Result.GetResult<Prisma.$pessoajuridicaPayload, S>

  type pessoajuridicaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<pessoajuridicaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PessoajuridicaCountAggregateInputType | true
    }

  export interface pessoajuridicaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['pessoajuridica'], meta: { name: 'pessoajuridica' } }
    /**
     * Find zero or one Pessoajuridica that matches the filter.
     * @param {pessoajuridicaFindUniqueArgs} args - Arguments to find a Pessoajuridica
     * @example
     * // Get one Pessoajuridica
     * const pessoajuridica = await prisma.pessoajuridica.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends pessoajuridicaFindUniqueArgs>(args: SelectSubset<T, pessoajuridicaFindUniqueArgs<ExtArgs>>): Prisma__pessoajuridicaClient<$Result.GetResult<Prisma.$pessoajuridicaPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Pessoajuridica that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {pessoajuridicaFindUniqueOrThrowArgs} args - Arguments to find a Pessoajuridica
     * @example
     * // Get one Pessoajuridica
     * const pessoajuridica = await prisma.pessoajuridica.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends pessoajuridicaFindUniqueOrThrowArgs>(args: SelectSubset<T, pessoajuridicaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__pessoajuridicaClient<$Result.GetResult<Prisma.$pessoajuridicaPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Pessoajuridica that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pessoajuridicaFindFirstArgs} args - Arguments to find a Pessoajuridica
     * @example
     * // Get one Pessoajuridica
     * const pessoajuridica = await prisma.pessoajuridica.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends pessoajuridicaFindFirstArgs>(args?: SelectSubset<T, pessoajuridicaFindFirstArgs<ExtArgs>>): Prisma__pessoajuridicaClient<$Result.GetResult<Prisma.$pessoajuridicaPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Pessoajuridica that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pessoajuridicaFindFirstOrThrowArgs} args - Arguments to find a Pessoajuridica
     * @example
     * // Get one Pessoajuridica
     * const pessoajuridica = await prisma.pessoajuridica.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends pessoajuridicaFindFirstOrThrowArgs>(args?: SelectSubset<T, pessoajuridicaFindFirstOrThrowArgs<ExtArgs>>): Prisma__pessoajuridicaClient<$Result.GetResult<Prisma.$pessoajuridicaPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Pessoajuridicas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pessoajuridicaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Pessoajuridicas
     * const pessoajuridicas = await prisma.pessoajuridica.findMany()
     * 
     * // Get first 10 Pessoajuridicas
     * const pessoajuridicas = await prisma.pessoajuridica.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const pessoajuridicaWithIdOnly = await prisma.pessoajuridica.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends pessoajuridicaFindManyArgs>(args?: SelectSubset<T, pessoajuridicaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pessoajuridicaPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Pessoajuridica.
     * @param {pessoajuridicaCreateArgs} args - Arguments to create a Pessoajuridica.
     * @example
     * // Create one Pessoajuridica
     * const Pessoajuridica = await prisma.pessoajuridica.create({
     *   data: {
     *     // ... data to create a Pessoajuridica
     *   }
     * })
     * 
     */
    create<T extends pessoajuridicaCreateArgs>(args: SelectSubset<T, pessoajuridicaCreateArgs<ExtArgs>>): Prisma__pessoajuridicaClient<$Result.GetResult<Prisma.$pessoajuridicaPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Pessoajuridicas.
     * @param {pessoajuridicaCreateManyArgs} args - Arguments to create many Pessoajuridicas.
     * @example
     * // Create many Pessoajuridicas
     * const pessoajuridica = await prisma.pessoajuridica.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends pessoajuridicaCreateManyArgs>(args?: SelectSubset<T, pessoajuridicaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Pessoajuridicas and returns the data saved in the database.
     * @param {pessoajuridicaCreateManyAndReturnArgs} args - Arguments to create many Pessoajuridicas.
     * @example
     * // Create many Pessoajuridicas
     * const pessoajuridica = await prisma.pessoajuridica.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Pessoajuridicas and only return the `id`
     * const pessoajuridicaWithIdOnly = await prisma.pessoajuridica.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends pessoajuridicaCreateManyAndReturnArgs>(args?: SelectSubset<T, pessoajuridicaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pessoajuridicaPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Pessoajuridica.
     * @param {pessoajuridicaDeleteArgs} args - Arguments to delete one Pessoajuridica.
     * @example
     * // Delete one Pessoajuridica
     * const Pessoajuridica = await prisma.pessoajuridica.delete({
     *   where: {
     *     // ... filter to delete one Pessoajuridica
     *   }
     * })
     * 
     */
    delete<T extends pessoajuridicaDeleteArgs>(args: SelectSubset<T, pessoajuridicaDeleteArgs<ExtArgs>>): Prisma__pessoajuridicaClient<$Result.GetResult<Prisma.$pessoajuridicaPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Pessoajuridica.
     * @param {pessoajuridicaUpdateArgs} args - Arguments to update one Pessoajuridica.
     * @example
     * // Update one Pessoajuridica
     * const pessoajuridica = await prisma.pessoajuridica.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends pessoajuridicaUpdateArgs>(args: SelectSubset<T, pessoajuridicaUpdateArgs<ExtArgs>>): Prisma__pessoajuridicaClient<$Result.GetResult<Prisma.$pessoajuridicaPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Pessoajuridicas.
     * @param {pessoajuridicaDeleteManyArgs} args - Arguments to filter Pessoajuridicas to delete.
     * @example
     * // Delete a few Pessoajuridicas
     * const { count } = await prisma.pessoajuridica.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends pessoajuridicaDeleteManyArgs>(args?: SelectSubset<T, pessoajuridicaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pessoajuridicas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pessoajuridicaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Pessoajuridicas
     * const pessoajuridica = await prisma.pessoajuridica.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends pessoajuridicaUpdateManyArgs>(args: SelectSubset<T, pessoajuridicaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Pessoajuridica.
     * @param {pessoajuridicaUpsertArgs} args - Arguments to update or create a Pessoajuridica.
     * @example
     * // Update or create a Pessoajuridica
     * const pessoajuridica = await prisma.pessoajuridica.upsert({
     *   create: {
     *     // ... data to create a Pessoajuridica
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Pessoajuridica we want to update
     *   }
     * })
     */
    upsert<T extends pessoajuridicaUpsertArgs>(args: SelectSubset<T, pessoajuridicaUpsertArgs<ExtArgs>>): Prisma__pessoajuridicaClient<$Result.GetResult<Prisma.$pessoajuridicaPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Pessoajuridicas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pessoajuridicaCountArgs} args - Arguments to filter Pessoajuridicas to count.
     * @example
     * // Count the number of Pessoajuridicas
     * const count = await prisma.pessoajuridica.count({
     *   where: {
     *     // ... the filter for the Pessoajuridicas we want to count
     *   }
     * })
    **/
    count<T extends pessoajuridicaCountArgs>(
      args?: Subset<T, pessoajuridicaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PessoajuridicaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Pessoajuridica.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PessoajuridicaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PessoajuridicaAggregateArgs>(args: Subset<T, PessoajuridicaAggregateArgs>): Prisma.PrismaPromise<GetPessoajuridicaAggregateType<T>>

    /**
     * Group by Pessoajuridica.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pessoajuridicaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends pessoajuridicaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: pessoajuridicaGroupByArgs['orderBy'] }
        : { orderBy?: pessoajuridicaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, pessoajuridicaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPessoajuridicaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the pessoajuridica model
   */
  readonly fields: pessoajuridicaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for pessoajuridica.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__pessoajuridicaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    doacao<T extends pessoajuridica$doacaoArgs<ExtArgs> = {}>(args?: Subset<T, pessoajuridica$doacaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$doacaoPayload<ExtArgs>, T, "findMany"> | Null>
    doacaoUsuario<T extends pessoajuridica$doacaoUsuarioArgs<ExtArgs> = {}>(args?: Subset<T, pessoajuridica$doacaoUsuarioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$doacaoUsuarioPayload<ExtArgs>, T, "findMany"> | Null>
    solicitacao<T extends pessoajuridica$solicitacaoArgs<ExtArgs> = {}>(args?: Subset<T, pessoajuridica$solicitacaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$solicitacaoPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the pessoajuridica model
   */ 
  interface pessoajuridicaFieldRefs {
    readonly id: FieldRef<"pessoajuridica", 'Int'>
    readonly name: FieldRef<"pessoajuridica", 'String'>
    readonly email: FieldRef<"pessoajuridica", 'String'>
    readonly password: FieldRef<"pessoajuridica", 'String'>
    readonly cnpj: FieldRef<"pessoajuridica", 'String'>
    readonly comprovanteDeProjeto: FieldRef<"pessoajuridica", 'String'>
    readonly endereco: FieldRef<"pessoajuridica", 'String'>
    readonly telefone: FieldRef<"pessoajuridica", 'String'>
    readonly createdAt: FieldRef<"pessoajuridica", 'DateTime'>
    readonly updatedAt: FieldRef<"pessoajuridica", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * pessoajuridica findUnique
   */
  export type pessoajuridicaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pessoajuridica
     */
    select?: pessoajuridicaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pessoajuridicaInclude<ExtArgs> | null
    /**
     * Filter, which pessoajuridica to fetch.
     */
    where: pessoajuridicaWhereUniqueInput
  }

  /**
   * pessoajuridica findUniqueOrThrow
   */
  export type pessoajuridicaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pessoajuridica
     */
    select?: pessoajuridicaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pessoajuridicaInclude<ExtArgs> | null
    /**
     * Filter, which pessoajuridica to fetch.
     */
    where: pessoajuridicaWhereUniqueInput
  }

  /**
   * pessoajuridica findFirst
   */
  export type pessoajuridicaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pessoajuridica
     */
    select?: pessoajuridicaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pessoajuridicaInclude<ExtArgs> | null
    /**
     * Filter, which pessoajuridica to fetch.
     */
    where?: pessoajuridicaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pessoajuridicas to fetch.
     */
    orderBy?: pessoajuridicaOrderByWithRelationInput | pessoajuridicaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for pessoajuridicas.
     */
    cursor?: pessoajuridicaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pessoajuridicas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pessoajuridicas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of pessoajuridicas.
     */
    distinct?: PessoajuridicaScalarFieldEnum | PessoajuridicaScalarFieldEnum[]
  }

  /**
   * pessoajuridica findFirstOrThrow
   */
  export type pessoajuridicaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pessoajuridica
     */
    select?: pessoajuridicaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pessoajuridicaInclude<ExtArgs> | null
    /**
     * Filter, which pessoajuridica to fetch.
     */
    where?: pessoajuridicaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pessoajuridicas to fetch.
     */
    orderBy?: pessoajuridicaOrderByWithRelationInput | pessoajuridicaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for pessoajuridicas.
     */
    cursor?: pessoajuridicaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pessoajuridicas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pessoajuridicas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of pessoajuridicas.
     */
    distinct?: PessoajuridicaScalarFieldEnum | PessoajuridicaScalarFieldEnum[]
  }

  /**
   * pessoajuridica findMany
   */
  export type pessoajuridicaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pessoajuridica
     */
    select?: pessoajuridicaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pessoajuridicaInclude<ExtArgs> | null
    /**
     * Filter, which pessoajuridicas to fetch.
     */
    where?: pessoajuridicaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pessoajuridicas to fetch.
     */
    orderBy?: pessoajuridicaOrderByWithRelationInput | pessoajuridicaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing pessoajuridicas.
     */
    cursor?: pessoajuridicaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pessoajuridicas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pessoajuridicas.
     */
    skip?: number
    distinct?: PessoajuridicaScalarFieldEnum | PessoajuridicaScalarFieldEnum[]
  }

  /**
   * pessoajuridica create
   */
  export type pessoajuridicaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pessoajuridica
     */
    select?: pessoajuridicaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pessoajuridicaInclude<ExtArgs> | null
    /**
     * The data needed to create a pessoajuridica.
     */
    data: XOR<pessoajuridicaCreateInput, pessoajuridicaUncheckedCreateInput>
  }

  /**
   * pessoajuridica createMany
   */
  export type pessoajuridicaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many pessoajuridicas.
     */
    data: pessoajuridicaCreateManyInput | pessoajuridicaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * pessoajuridica createManyAndReturn
   */
  export type pessoajuridicaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pessoajuridica
     */
    select?: pessoajuridicaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many pessoajuridicas.
     */
    data: pessoajuridicaCreateManyInput | pessoajuridicaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * pessoajuridica update
   */
  export type pessoajuridicaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pessoajuridica
     */
    select?: pessoajuridicaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pessoajuridicaInclude<ExtArgs> | null
    /**
     * The data needed to update a pessoajuridica.
     */
    data: XOR<pessoajuridicaUpdateInput, pessoajuridicaUncheckedUpdateInput>
    /**
     * Choose, which pessoajuridica to update.
     */
    where: pessoajuridicaWhereUniqueInput
  }

  /**
   * pessoajuridica updateMany
   */
  export type pessoajuridicaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update pessoajuridicas.
     */
    data: XOR<pessoajuridicaUpdateManyMutationInput, pessoajuridicaUncheckedUpdateManyInput>
    /**
     * Filter which pessoajuridicas to update
     */
    where?: pessoajuridicaWhereInput
  }

  /**
   * pessoajuridica upsert
   */
  export type pessoajuridicaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pessoajuridica
     */
    select?: pessoajuridicaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pessoajuridicaInclude<ExtArgs> | null
    /**
     * The filter to search for the pessoajuridica to update in case it exists.
     */
    where: pessoajuridicaWhereUniqueInput
    /**
     * In case the pessoajuridica found by the `where` argument doesn't exist, create a new pessoajuridica with this data.
     */
    create: XOR<pessoajuridicaCreateInput, pessoajuridicaUncheckedCreateInput>
    /**
     * In case the pessoajuridica was found with the provided `where` argument, update it with this data.
     */
    update: XOR<pessoajuridicaUpdateInput, pessoajuridicaUncheckedUpdateInput>
  }

  /**
   * pessoajuridica delete
   */
  export type pessoajuridicaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pessoajuridica
     */
    select?: pessoajuridicaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pessoajuridicaInclude<ExtArgs> | null
    /**
     * Filter which pessoajuridica to delete.
     */
    where: pessoajuridicaWhereUniqueInput
  }

  /**
   * pessoajuridica deleteMany
   */
  export type pessoajuridicaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which pessoajuridicas to delete
     */
    where?: pessoajuridicaWhereInput
  }

  /**
   * pessoajuridica.doacao
   */
  export type pessoajuridica$doacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the doacao
     */
    select?: doacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: doacaoInclude<ExtArgs> | null
    where?: doacaoWhereInput
    orderBy?: doacaoOrderByWithRelationInput | doacaoOrderByWithRelationInput[]
    cursor?: doacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DoacaoScalarFieldEnum | DoacaoScalarFieldEnum[]
  }

  /**
   * pessoajuridica.doacaoUsuario
   */
  export type pessoajuridica$doacaoUsuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the doacaoUsuario
     */
    select?: doacaoUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: doacaoUsuarioInclude<ExtArgs> | null
    where?: doacaoUsuarioWhereInput
    orderBy?: doacaoUsuarioOrderByWithRelationInput | doacaoUsuarioOrderByWithRelationInput[]
    cursor?: doacaoUsuarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DoacaoUsuarioScalarFieldEnum | DoacaoUsuarioScalarFieldEnum[]
  }

  /**
   * pessoajuridica.solicitacao
   */
  export type pessoajuridica$solicitacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the solicitacao
     */
    select?: solicitacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: solicitacaoInclude<ExtArgs> | null
    where?: solicitacaoWhereInput
    orderBy?: solicitacaoOrderByWithRelationInput | solicitacaoOrderByWithRelationInput[]
    cursor?: solicitacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SolicitacaoScalarFieldEnum | SolicitacaoScalarFieldEnum[]
  }

  /**
   * pessoajuridica without action
   */
  export type pessoajuridicaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pessoajuridica
     */
    select?: pessoajuridicaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pessoajuridicaInclude<ExtArgs> | null
  }


  /**
   * Model inscrito
   */

  export type AggregateInscrito = {
    _count: InscritoCountAggregateOutputType | null
    _avg: InscritoAvgAggregateOutputType | null
    _sum: InscritoSumAggregateOutputType | null
    _min: InscritoMinAggregateOutputType | null
    _max: InscritoMaxAggregateOutputType | null
  }

  export type InscritoAvgAggregateOutputType = {
    id: number | null
  }

  export type InscritoSumAggregateOutputType = {
    id: number | null
  }

  export type InscritoMinAggregateOutputType = {
    id: number | null
    name: string | null
    email: string | null
    dias: string | null
    matricula: string | null
    curso: string | null
    periodo: string | null
    bolsista: boolean | null
  }

  export type InscritoMaxAggregateOutputType = {
    id: number | null
    name: string | null
    email: string | null
    dias: string | null
    matricula: string | null
    curso: string | null
    periodo: string | null
    bolsista: boolean | null
  }

  export type InscritoCountAggregateOutputType = {
    id: number
    name: number
    email: number
    dias: number
    matricula: number
    curso: number
    periodo: number
    bolsista: number
    _all: number
  }


  export type InscritoAvgAggregateInputType = {
    id?: true
  }

  export type InscritoSumAggregateInputType = {
    id?: true
  }

  export type InscritoMinAggregateInputType = {
    id?: true
    name?: true
    email?: true
    dias?: true
    matricula?: true
    curso?: true
    periodo?: true
    bolsista?: true
  }

  export type InscritoMaxAggregateInputType = {
    id?: true
    name?: true
    email?: true
    dias?: true
    matricula?: true
    curso?: true
    periodo?: true
    bolsista?: true
  }

  export type InscritoCountAggregateInputType = {
    id?: true
    name?: true
    email?: true
    dias?: true
    matricula?: true
    curso?: true
    periodo?: true
    bolsista?: true
    _all?: true
  }

  export type InscritoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which inscrito to aggregate.
     */
    where?: inscritoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of inscritos to fetch.
     */
    orderBy?: inscritoOrderByWithRelationInput | inscritoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: inscritoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` inscritos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` inscritos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned inscritos
    **/
    _count?: true | InscritoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: InscritoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: InscritoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InscritoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InscritoMaxAggregateInputType
  }

  export type GetInscritoAggregateType<T extends InscritoAggregateArgs> = {
        [P in keyof T & keyof AggregateInscrito]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInscrito[P]>
      : GetScalarType<T[P], AggregateInscrito[P]>
  }




  export type inscritoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: inscritoWhereInput
    orderBy?: inscritoOrderByWithAggregationInput | inscritoOrderByWithAggregationInput[]
    by: InscritoScalarFieldEnum[] | InscritoScalarFieldEnum
    having?: inscritoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InscritoCountAggregateInputType | true
    _avg?: InscritoAvgAggregateInputType
    _sum?: InscritoSumAggregateInputType
    _min?: InscritoMinAggregateInputType
    _max?: InscritoMaxAggregateInputType
  }

  export type InscritoGroupByOutputType = {
    id: number
    name: string
    email: string
    dias: string
    matricula: string
    curso: string
    periodo: string
    bolsista: boolean
    _count: InscritoCountAggregateOutputType | null
    _avg: InscritoAvgAggregateOutputType | null
    _sum: InscritoSumAggregateOutputType | null
    _min: InscritoMinAggregateOutputType | null
    _max: InscritoMaxAggregateOutputType | null
  }

  type GetInscritoGroupByPayload<T extends inscritoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<InscritoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InscritoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InscritoGroupByOutputType[P]>
            : GetScalarType<T[P], InscritoGroupByOutputType[P]>
        }
      >
    >


  export type inscritoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    dias?: boolean
    matricula?: boolean
    curso?: boolean
    periodo?: boolean
    bolsista?: boolean
  }, ExtArgs["result"]["inscrito"]>

  export type inscritoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    dias?: boolean
    matricula?: boolean
    curso?: boolean
    periodo?: boolean
    bolsista?: boolean
  }, ExtArgs["result"]["inscrito"]>

  export type inscritoSelectScalar = {
    id?: boolean
    name?: boolean
    email?: boolean
    dias?: boolean
    matricula?: boolean
    curso?: boolean
    periodo?: boolean
    bolsista?: boolean
  }


  export type $inscritoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "inscrito"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      email: string
      dias: string
      matricula: string
      curso: string
      periodo: string
      bolsista: boolean
    }, ExtArgs["result"]["inscrito"]>
    composites: {}
  }

  type inscritoGetPayload<S extends boolean | null | undefined | inscritoDefaultArgs> = $Result.GetResult<Prisma.$inscritoPayload, S>

  type inscritoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<inscritoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: InscritoCountAggregateInputType | true
    }

  export interface inscritoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['inscrito'], meta: { name: 'inscrito' } }
    /**
     * Find zero or one Inscrito that matches the filter.
     * @param {inscritoFindUniqueArgs} args - Arguments to find a Inscrito
     * @example
     * // Get one Inscrito
     * const inscrito = await prisma.inscrito.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends inscritoFindUniqueArgs>(args: SelectSubset<T, inscritoFindUniqueArgs<ExtArgs>>): Prisma__inscritoClient<$Result.GetResult<Prisma.$inscritoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Inscrito that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {inscritoFindUniqueOrThrowArgs} args - Arguments to find a Inscrito
     * @example
     * // Get one Inscrito
     * const inscrito = await prisma.inscrito.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends inscritoFindUniqueOrThrowArgs>(args: SelectSubset<T, inscritoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__inscritoClient<$Result.GetResult<Prisma.$inscritoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Inscrito that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {inscritoFindFirstArgs} args - Arguments to find a Inscrito
     * @example
     * // Get one Inscrito
     * const inscrito = await prisma.inscrito.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends inscritoFindFirstArgs>(args?: SelectSubset<T, inscritoFindFirstArgs<ExtArgs>>): Prisma__inscritoClient<$Result.GetResult<Prisma.$inscritoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Inscrito that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {inscritoFindFirstOrThrowArgs} args - Arguments to find a Inscrito
     * @example
     * // Get one Inscrito
     * const inscrito = await prisma.inscrito.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends inscritoFindFirstOrThrowArgs>(args?: SelectSubset<T, inscritoFindFirstOrThrowArgs<ExtArgs>>): Prisma__inscritoClient<$Result.GetResult<Prisma.$inscritoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Inscritos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {inscritoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Inscritos
     * const inscritos = await prisma.inscrito.findMany()
     * 
     * // Get first 10 Inscritos
     * const inscritos = await prisma.inscrito.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const inscritoWithIdOnly = await prisma.inscrito.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends inscritoFindManyArgs>(args?: SelectSubset<T, inscritoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$inscritoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Inscrito.
     * @param {inscritoCreateArgs} args - Arguments to create a Inscrito.
     * @example
     * // Create one Inscrito
     * const Inscrito = await prisma.inscrito.create({
     *   data: {
     *     // ... data to create a Inscrito
     *   }
     * })
     * 
     */
    create<T extends inscritoCreateArgs>(args: SelectSubset<T, inscritoCreateArgs<ExtArgs>>): Prisma__inscritoClient<$Result.GetResult<Prisma.$inscritoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Inscritos.
     * @param {inscritoCreateManyArgs} args - Arguments to create many Inscritos.
     * @example
     * // Create many Inscritos
     * const inscrito = await prisma.inscrito.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends inscritoCreateManyArgs>(args?: SelectSubset<T, inscritoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Inscritos and returns the data saved in the database.
     * @param {inscritoCreateManyAndReturnArgs} args - Arguments to create many Inscritos.
     * @example
     * // Create many Inscritos
     * const inscrito = await prisma.inscrito.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Inscritos and only return the `id`
     * const inscritoWithIdOnly = await prisma.inscrito.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends inscritoCreateManyAndReturnArgs>(args?: SelectSubset<T, inscritoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$inscritoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Inscrito.
     * @param {inscritoDeleteArgs} args - Arguments to delete one Inscrito.
     * @example
     * // Delete one Inscrito
     * const Inscrito = await prisma.inscrito.delete({
     *   where: {
     *     // ... filter to delete one Inscrito
     *   }
     * })
     * 
     */
    delete<T extends inscritoDeleteArgs>(args: SelectSubset<T, inscritoDeleteArgs<ExtArgs>>): Prisma__inscritoClient<$Result.GetResult<Prisma.$inscritoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Inscrito.
     * @param {inscritoUpdateArgs} args - Arguments to update one Inscrito.
     * @example
     * // Update one Inscrito
     * const inscrito = await prisma.inscrito.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends inscritoUpdateArgs>(args: SelectSubset<T, inscritoUpdateArgs<ExtArgs>>): Prisma__inscritoClient<$Result.GetResult<Prisma.$inscritoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Inscritos.
     * @param {inscritoDeleteManyArgs} args - Arguments to filter Inscritos to delete.
     * @example
     * // Delete a few Inscritos
     * const { count } = await prisma.inscrito.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends inscritoDeleteManyArgs>(args?: SelectSubset<T, inscritoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Inscritos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {inscritoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Inscritos
     * const inscrito = await prisma.inscrito.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends inscritoUpdateManyArgs>(args: SelectSubset<T, inscritoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Inscrito.
     * @param {inscritoUpsertArgs} args - Arguments to update or create a Inscrito.
     * @example
     * // Update or create a Inscrito
     * const inscrito = await prisma.inscrito.upsert({
     *   create: {
     *     // ... data to create a Inscrito
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Inscrito we want to update
     *   }
     * })
     */
    upsert<T extends inscritoUpsertArgs>(args: SelectSubset<T, inscritoUpsertArgs<ExtArgs>>): Prisma__inscritoClient<$Result.GetResult<Prisma.$inscritoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Inscritos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {inscritoCountArgs} args - Arguments to filter Inscritos to count.
     * @example
     * // Count the number of Inscritos
     * const count = await prisma.inscrito.count({
     *   where: {
     *     // ... the filter for the Inscritos we want to count
     *   }
     * })
    **/
    count<T extends inscritoCountArgs>(
      args?: Subset<T, inscritoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InscritoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Inscrito.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InscritoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InscritoAggregateArgs>(args: Subset<T, InscritoAggregateArgs>): Prisma.PrismaPromise<GetInscritoAggregateType<T>>

    /**
     * Group by Inscrito.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {inscritoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends inscritoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: inscritoGroupByArgs['orderBy'] }
        : { orderBy?: inscritoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, inscritoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInscritoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the inscrito model
   */
  readonly fields: inscritoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for inscrito.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__inscritoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the inscrito model
   */ 
  interface inscritoFieldRefs {
    readonly id: FieldRef<"inscrito", 'Int'>
    readonly name: FieldRef<"inscrito", 'String'>
    readonly email: FieldRef<"inscrito", 'String'>
    readonly dias: FieldRef<"inscrito", 'String'>
    readonly matricula: FieldRef<"inscrito", 'String'>
    readonly curso: FieldRef<"inscrito", 'String'>
    readonly periodo: FieldRef<"inscrito", 'String'>
    readonly bolsista: FieldRef<"inscrito", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * inscrito findUnique
   */
  export type inscritoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the inscrito
     */
    select?: inscritoSelect<ExtArgs> | null
    /**
     * Filter, which inscrito to fetch.
     */
    where: inscritoWhereUniqueInput
  }

  /**
   * inscrito findUniqueOrThrow
   */
  export type inscritoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the inscrito
     */
    select?: inscritoSelect<ExtArgs> | null
    /**
     * Filter, which inscrito to fetch.
     */
    where: inscritoWhereUniqueInput
  }

  /**
   * inscrito findFirst
   */
  export type inscritoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the inscrito
     */
    select?: inscritoSelect<ExtArgs> | null
    /**
     * Filter, which inscrito to fetch.
     */
    where?: inscritoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of inscritos to fetch.
     */
    orderBy?: inscritoOrderByWithRelationInput | inscritoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for inscritos.
     */
    cursor?: inscritoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` inscritos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` inscritos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of inscritos.
     */
    distinct?: InscritoScalarFieldEnum | InscritoScalarFieldEnum[]
  }

  /**
   * inscrito findFirstOrThrow
   */
  export type inscritoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the inscrito
     */
    select?: inscritoSelect<ExtArgs> | null
    /**
     * Filter, which inscrito to fetch.
     */
    where?: inscritoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of inscritos to fetch.
     */
    orderBy?: inscritoOrderByWithRelationInput | inscritoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for inscritos.
     */
    cursor?: inscritoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` inscritos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` inscritos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of inscritos.
     */
    distinct?: InscritoScalarFieldEnum | InscritoScalarFieldEnum[]
  }

  /**
   * inscrito findMany
   */
  export type inscritoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the inscrito
     */
    select?: inscritoSelect<ExtArgs> | null
    /**
     * Filter, which inscritos to fetch.
     */
    where?: inscritoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of inscritos to fetch.
     */
    orderBy?: inscritoOrderByWithRelationInput | inscritoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing inscritos.
     */
    cursor?: inscritoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` inscritos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` inscritos.
     */
    skip?: number
    distinct?: InscritoScalarFieldEnum | InscritoScalarFieldEnum[]
  }

  /**
   * inscrito create
   */
  export type inscritoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the inscrito
     */
    select?: inscritoSelect<ExtArgs> | null
    /**
     * The data needed to create a inscrito.
     */
    data: XOR<inscritoCreateInput, inscritoUncheckedCreateInput>
  }

  /**
   * inscrito createMany
   */
  export type inscritoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many inscritos.
     */
    data: inscritoCreateManyInput | inscritoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * inscrito createManyAndReturn
   */
  export type inscritoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the inscrito
     */
    select?: inscritoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many inscritos.
     */
    data: inscritoCreateManyInput | inscritoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * inscrito update
   */
  export type inscritoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the inscrito
     */
    select?: inscritoSelect<ExtArgs> | null
    /**
     * The data needed to update a inscrito.
     */
    data: XOR<inscritoUpdateInput, inscritoUncheckedUpdateInput>
    /**
     * Choose, which inscrito to update.
     */
    where: inscritoWhereUniqueInput
  }

  /**
   * inscrito updateMany
   */
  export type inscritoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update inscritos.
     */
    data: XOR<inscritoUpdateManyMutationInput, inscritoUncheckedUpdateManyInput>
    /**
     * Filter which inscritos to update
     */
    where?: inscritoWhereInput
  }

  /**
   * inscrito upsert
   */
  export type inscritoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the inscrito
     */
    select?: inscritoSelect<ExtArgs> | null
    /**
     * The filter to search for the inscrito to update in case it exists.
     */
    where: inscritoWhereUniqueInput
    /**
     * In case the inscrito found by the `where` argument doesn't exist, create a new inscrito with this data.
     */
    create: XOR<inscritoCreateInput, inscritoUncheckedCreateInput>
    /**
     * In case the inscrito was found with the provided `where` argument, update it with this data.
     */
    update: XOR<inscritoUpdateInput, inscritoUncheckedUpdateInput>
  }

  /**
   * inscrito delete
   */
  export type inscritoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the inscrito
     */
    select?: inscritoSelect<ExtArgs> | null
    /**
     * Filter which inscrito to delete.
     */
    where: inscritoWhereUniqueInput
  }

  /**
   * inscrito deleteMany
   */
  export type inscritoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which inscritos to delete
     */
    where?: inscritoWhereInput
  }

  /**
   * inscrito without action
   */
  export type inscritoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the inscrito
     */
    select?: inscritoSelect<ExtArgs> | null
  }


  /**
   * Model teclado
   */

  export type AggregateTeclado = {
    _count: TecladoCountAggregateOutputType | null
    _avg: TecladoAvgAggregateOutputType | null
    _sum: TecladoSumAggregateOutputType | null
    _min: TecladoMinAggregateOutputType | null
    _max: TecladoMaxAggregateOutputType | null
  }

  export type TecladoAvgAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
  }

  export type TecladoSumAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
  }

  export type TecladoMinAggregateOutputType = {
    id: number | null
    codigoDereferencia: string | null
    descricao: string | null
    status: string | null
    dataDeChegada: Date | null
    dataDeSaida: Date | null
    marca: string | null
    modelo: string | null
    createdAt: Date | null
    updatedAt: Date | null
    nome: string | null
    imagem: string | null
    situacao: string | null
    tipoDeConexao: string | null
    usuarioId: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
  }

  export type TecladoMaxAggregateOutputType = {
    id: number | null
    codigoDereferencia: string | null
    descricao: string | null
    status: string | null
    dataDeChegada: Date | null
    dataDeSaida: Date | null
    marca: string | null
    modelo: string | null
    createdAt: Date | null
    updatedAt: Date | null
    nome: string | null
    imagem: string | null
    situacao: string | null
    tipoDeConexao: string | null
    usuarioId: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
  }

  export type TecladoCountAggregateOutputType = {
    id: number
    codigoDereferencia: number
    descricao: number
    status: number
    dataDeChegada: number
    dataDeSaida: number
    marca: number
    modelo: number
    createdAt: number
    updatedAt: number
    nome: number
    imagem: number
    situacao: number
    tipoDeConexao: number
    usuarioId: number
    modificadorid: number
    descarteId: number
    doacaoId: number
    _all: number
  }


  export type TecladoAvgAggregateInputType = {
    id?: true
    usuarioId?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
  }

  export type TecladoSumAggregateInputType = {
    id?: true
    usuarioId?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
  }

  export type TecladoMinAggregateInputType = {
    id?: true
    codigoDereferencia?: true
    descricao?: true
    status?: true
    dataDeChegada?: true
    dataDeSaida?: true
    marca?: true
    modelo?: true
    createdAt?: true
    updatedAt?: true
    nome?: true
    imagem?: true
    situacao?: true
    tipoDeConexao?: true
    usuarioId?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
  }

  export type TecladoMaxAggregateInputType = {
    id?: true
    codigoDereferencia?: true
    descricao?: true
    status?: true
    dataDeChegada?: true
    dataDeSaida?: true
    marca?: true
    modelo?: true
    createdAt?: true
    updatedAt?: true
    nome?: true
    imagem?: true
    situacao?: true
    tipoDeConexao?: true
    usuarioId?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
  }

  export type TecladoCountAggregateInputType = {
    id?: true
    codigoDereferencia?: true
    descricao?: true
    status?: true
    dataDeChegada?: true
    dataDeSaida?: true
    marca?: true
    modelo?: true
    createdAt?: true
    updatedAt?: true
    nome?: true
    imagem?: true
    situacao?: true
    tipoDeConexao?: true
    usuarioId?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
    _all?: true
  }

  export type TecladoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which teclado to aggregate.
     */
    where?: tecladoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of teclados to fetch.
     */
    orderBy?: tecladoOrderByWithRelationInput | tecladoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tecladoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` teclados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` teclados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned teclados
    **/
    _count?: true | TecladoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TecladoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TecladoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TecladoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TecladoMaxAggregateInputType
  }

  export type GetTecladoAggregateType<T extends TecladoAggregateArgs> = {
        [P in keyof T & keyof AggregateTeclado]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTeclado[P]>
      : GetScalarType<T[P], AggregateTeclado[P]>
  }




  export type tecladoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tecladoWhereInput
    orderBy?: tecladoOrderByWithAggregationInput | tecladoOrderByWithAggregationInput[]
    by: TecladoScalarFieldEnum[] | TecladoScalarFieldEnum
    having?: tecladoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TecladoCountAggregateInputType | true
    _avg?: TecladoAvgAggregateInputType
    _sum?: TecladoSumAggregateInputType
    _min?: TecladoMinAggregateInputType
    _max?: TecladoMaxAggregateInputType
  }

  export type TecladoGroupByOutputType = {
    id: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date
    dataDeSaida: Date | null
    marca: string
    modelo: string
    createdAt: Date
    updatedAt: Date
    nome: string
    imagem: string
    situacao: string
    tipoDeConexao: string
    usuarioId: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
    _count: TecladoCountAggregateOutputType | null
    _avg: TecladoAvgAggregateOutputType | null
    _sum: TecladoSumAggregateOutputType | null
    _min: TecladoMinAggregateOutputType | null
    _max: TecladoMaxAggregateOutputType | null
  }

  type GetTecladoGroupByPayload<T extends tecladoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TecladoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TecladoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TecladoGroupByOutputType[P]>
            : GetScalarType<T[P], TecladoGroupByOutputType[P]>
        }
      >
    >


  export type tecladoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    codigoDereferencia?: boolean
    descricao?: boolean
    status?: boolean
    dataDeChegada?: boolean
    dataDeSaida?: boolean
    marca?: boolean
    modelo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    nome?: boolean
    imagem?: boolean
    situacao?: boolean
    tipoDeConexao?: boolean
    usuarioId?: boolean
    modificadorid?: boolean
    descarteId?: boolean
    doacaoId?: boolean
    descarte?: boolean | teclado$descarteArgs<ExtArgs>
    doacao?: boolean | teclado$doacaoArgs<ExtArgs>
    usuario?: boolean | teclado$usuarioArgs<ExtArgs>
    modificador?: boolean | teclado$modificadorArgs<ExtArgs>
  }, ExtArgs["result"]["teclado"]>

  export type tecladoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    codigoDereferencia?: boolean
    descricao?: boolean
    status?: boolean
    dataDeChegada?: boolean
    dataDeSaida?: boolean
    marca?: boolean
    modelo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    nome?: boolean
    imagem?: boolean
    situacao?: boolean
    tipoDeConexao?: boolean
    usuarioId?: boolean
    modificadorid?: boolean
    descarteId?: boolean
    doacaoId?: boolean
    descarte?: boolean | teclado$descarteArgs<ExtArgs>
    doacao?: boolean | teclado$doacaoArgs<ExtArgs>
    usuario?: boolean | teclado$usuarioArgs<ExtArgs>
    modificador?: boolean | teclado$modificadorArgs<ExtArgs>
  }, ExtArgs["result"]["teclado"]>

  export type tecladoSelectScalar = {
    id?: boolean
    codigoDereferencia?: boolean
    descricao?: boolean
    status?: boolean
    dataDeChegada?: boolean
    dataDeSaida?: boolean
    marca?: boolean
    modelo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    nome?: boolean
    imagem?: boolean
    situacao?: boolean
    tipoDeConexao?: boolean
    usuarioId?: boolean
    modificadorid?: boolean
    descarteId?: boolean
    doacaoId?: boolean
  }

  export type tecladoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    descarte?: boolean | teclado$descarteArgs<ExtArgs>
    doacao?: boolean | teclado$doacaoArgs<ExtArgs>
    usuario?: boolean | teclado$usuarioArgs<ExtArgs>
    modificador?: boolean | teclado$modificadorArgs<ExtArgs>
  }
  export type tecladoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    descarte?: boolean | teclado$descarteArgs<ExtArgs>
    doacao?: boolean | teclado$doacaoArgs<ExtArgs>
    usuario?: boolean | teclado$usuarioArgs<ExtArgs>
    modificador?: boolean | teclado$modificadorArgs<ExtArgs>
  }

  export type $tecladoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "teclado"
    objects: {
      descarte: Prisma.$descartePayload<ExtArgs> | null
      doacao: Prisma.$doacaoPayload<ExtArgs> | null
      usuario: Prisma.$alunoPayload<ExtArgs> | null
      modificador: Prisma.$alunoPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      codigoDereferencia: string
      descricao: string
      status: string
      dataDeChegada: Date
      dataDeSaida: Date | null
      marca: string
      modelo: string
      createdAt: Date
      updatedAt: Date
      nome: string
      imagem: string
      situacao: string
      tipoDeConexao: string
      usuarioId: number | null
      modificadorid: number | null
      descarteId: number | null
      doacaoId: number | null
    }, ExtArgs["result"]["teclado"]>
    composites: {}
  }

  type tecladoGetPayload<S extends boolean | null | undefined | tecladoDefaultArgs> = $Result.GetResult<Prisma.$tecladoPayload, S>

  type tecladoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tecladoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TecladoCountAggregateInputType | true
    }

  export interface tecladoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['teclado'], meta: { name: 'teclado' } }
    /**
     * Find zero or one Teclado that matches the filter.
     * @param {tecladoFindUniqueArgs} args - Arguments to find a Teclado
     * @example
     * // Get one Teclado
     * const teclado = await prisma.teclado.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tecladoFindUniqueArgs>(args: SelectSubset<T, tecladoFindUniqueArgs<ExtArgs>>): Prisma__tecladoClient<$Result.GetResult<Prisma.$tecladoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Teclado that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tecladoFindUniqueOrThrowArgs} args - Arguments to find a Teclado
     * @example
     * // Get one Teclado
     * const teclado = await prisma.teclado.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tecladoFindUniqueOrThrowArgs>(args: SelectSubset<T, tecladoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tecladoClient<$Result.GetResult<Prisma.$tecladoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Teclado that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tecladoFindFirstArgs} args - Arguments to find a Teclado
     * @example
     * // Get one Teclado
     * const teclado = await prisma.teclado.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tecladoFindFirstArgs>(args?: SelectSubset<T, tecladoFindFirstArgs<ExtArgs>>): Prisma__tecladoClient<$Result.GetResult<Prisma.$tecladoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Teclado that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tecladoFindFirstOrThrowArgs} args - Arguments to find a Teclado
     * @example
     * // Get one Teclado
     * const teclado = await prisma.teclado.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tecladoFindFirstOrThrowArgs>(args?: SelectSubset<T, tecladoFindFirstOrThrowArgs<ExtArgs>>): Prisma__tecladoClient<$Result.GetResult<Prisma.$tecladoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Teclados that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tecladoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Teclados
     * const teclados = await prisma.teclado.findMany()
     * 
     * // Get first 10 Teclados
     * const teclados = await prisma.teclado.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tecladoWithIdOnly = await prisma.teclado.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends tecladoFindManyArgs>(args?: SelectSubset<T, tecladoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tecladoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Teclado.
     * @param {tecladoCreateArgs} args - Arguments to create a Teclado.
     * @example
     * // Create one Teclado
     * const Teclado = await prisma.teclado.create({
     *   data: {
     *     // ... data to create a Teclado
     *   }
     * })
     * 
     */
    create<T extends tecladoCreateArgs>(args: SelectSubset<T, tecladoCreateArgs<ExtArgs>>): Prisma__tecladoClient<$Result.GetResult<Prisma.$tecladoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Teclados.
     * @param {tecladoCreateManyArgs} args - Arguments to create many Teclados.
     * @example
     * // Create many Teclados
     * const teclado = await prisma.teclado.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tecladoCreateManyArgs>(args?: SelectSubset<T, tecladoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Teclados and returns the data saved in the database.
     * @param {tecladoCreateManyAndReturnArgs} args - Arguments to create many Teclados.
     * @example
     * // Create many Teclados
     * const teclado = await prisma.teclado.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Teclados and only return the `id`
     * const tecladoWithIdOnly = await prisma.teclado.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends tecladoCreateManyAndReturnArgs>(args?: SelectSubset<T, tecladoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tecladoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Teclado.
     * @param {tecladoDeleteArgs} args - Arguments to delete one Teclado.
     * @example
     * // Delete one Teclado
     * const Teclado = await prisma.teclado.delete({
     *   where: {
     *     // ... filter to delete one Teclado
     *   }
     * })
     * 
     */
    delete<T extends tecladoDeleteArgs>(args: SelectSubset<T, tecladoDeleteArgs<ExtArgs>>): Prisma__tecladoClient<$Result.GetResult<Prisma.$tecladoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Teclado.
     * @param {tecladoUpdateArgs} args - Arguments to update one Teclado.
     * @example
     * // Update one Teclado
     * const teclado = await prisma.teclado.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tecladoUpdateArgs>(args: SelectSubset<T, tecladoUpdateArgs<ExtArgs>>): Prisma__tecladoClient<$Result.GetResult<Prisma.$tecladoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Teclados.
     * @param {tecladoDeleteManyArgs} args - Arguments to filter Teclados to delete.
     * @example
     * // Delete a few Teclados
     * const { count } = await prisma.teclado.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tecladoDeleteManyArgs>(args?: SelectSubset<T, tecladoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Teclados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tecladoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Teclados
     * const teclado = await prisma.teclado.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tecladoUpdateManyArgs>(args: SelectSubset<T, tecladoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Teclado.
     * @param {tecladoUpsertArgs} args - Arguments to update or create a Teclado.
     * @example
     * // Update or create a Teclado
     * const teclado = await prisma.teclado.upsert({
     *   create: {
     *     // ... data to create a Teclado
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Teclado we want to update
     *   }
     * })
     */
    upsert<T extends tecladoUpsertArgs>(args: SelectSubset<T, tecladoUpsertArgs<ExtArgs>>): Prisma__tecladoClient<$Result.GetResult<Prisma.$tecladoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Teclados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tecladoCountArgs} args - Arguments to filter Teclados to count.
     * @example
     * // Count the number of Teclados
     * const count = await prisma.teclado.count({
     *   where: {
     *     // ... the filter for the Teclados we want to count
     *   }
     * })
    **/
    count<T extends tecladoCountArgs>(
      args?: Subset<T, tecladoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TecladoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Teclado.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TecladoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TecladoAggregateArgs>(args: Subset<T, TecladoAggregateArgs>): Prisma.PrismaPromise<GetTecladoAggregateType<T>>

    /**
     * Group by Teclado.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tecladoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tecladoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tecladoGroupByArgs['orderBy'] }
        : { orderBy?: tecladoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tecladoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTecladoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the teclado model
   */
  readonly fields: tecladoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for teclado.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tecladoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    descarte<T extends teclado$descarteArgs<ExtArgs> = {}>(args?: Subset<T, teclado$descarteArgs<ExtArgs>>): Prisma__descarteClient<$Result.GetResult<Prisma.$descartePayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    doacao<T extends teclado$doacaoArgs<ExtArgs> = {}>(args?: Subset<T, teclado$doacaoArgs<ExtArgs>>): Prisma__doacaoClient<$Result.GetResult<Prisma.$doacaoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    usuario<T extends teclado$usuarioArgs<ExtArgs> = {}>(args?: Subset<T, teclado$usuarioArgs<ExtArgs>>): Prisma__alunoClient<$Result.GetResult<Prisma.$alunoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    modificador<T extends teclado$modificadorArgs<ExtArgs> = {}>(args?: Subset<T, teclado$modificadorArgs<ExtArgs>>): Prisma__alunoClient<$Result.GetResult<Prisma.$alunoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the teclado model
   */ 
  interface tecladoFieldRefs {
    readonly id: FieldRef<"teclado", 'Int'>
    readonly codigoDereferencia: FieldRef<"teclado", 'String'>
    readonly descricao: FieldRef<"teclado", 'String'>
    readonly status: FieldRef<"teclado", 'String'>
    readonly dataDeChegada: FieldRef<"teclado", 'DateTime'>
    readonly dataDeSaida: FieldRef<"teclado", 'DateTime'>
    readonly marca: FieldRef<"teclado", 'String'>
    readonly modelo: FieldRef<"teclado", 'String'>
    readonly createdAt: FieldRef<"teclado", 'DateTime'>
    readonly updatedAt: FieldRef<"teclado", 'DateTime'>
    readonly nome: FieldRef<"teclado", 'String'>
    readonly imagem: FieldRef<"teclado", 'String'>
    readonly situacao: FieldRef<"teclado", 'String'>
    readonly tipoDeConexao: FieldRef<"teclado", 'String'>
    readonly usuarioId: FieldRef<"teclado", 'Int'>
    readonly modificadorid: FieldRef<"teclado", 'Int'>
    readonly descarteId: FieldRef<"teclado", 'Int'>
    readonly doacaoId: FieldRef<"teclado", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * teclado findUnique
   */
  export type tecladoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the teclado
     */
    select?: tecladoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tecladoInclude<ExtArgs> | null
    /**
     * Filter, which teclado to fetch.
     */
    where: tecladoWhereUniqueInput
  }

  /**
   * teclado findUniqueOrThrow
   */
  export type tecladoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the teclado
     */
    select?: tecladoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tecladoInclude<ExtArgs> | null
    /**
     * Filter, which teclado to fetch.
     */
    where: tecladoWhereUniqueInput
  }

  /**
   * teclado findFirst
   */
  export type tecladoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the teclado
     */
    select?: tecladoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tecladoInclude<ExtArgs> | null
    /**
     * Filter, which teclado to fetch.
     */
    where?: tecladoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of teclados to fetch.
     */
    orderBy?: tecladoOrderByWithRelationInput | tecladoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for teclados.
     */
    cursor?: tecladoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` teclados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` teclados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of teclados.
     */
    distinct?: TecladoScalarFieldEnum | TecladoScalarFieldEnum[]
  }

  /**
   * teclado findFirstOrThrow
   */
  export type tecladoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the teclado
     */
    select?: tecladoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tecladoInclude<ExtArgs> | null
    /**
     * Filter, which teclado to fetch.
     */
    where?: tecladoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of teclados to fetch.
     */
    orderBy?: tecladoOrderByWithRelationInput | tecladoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for teclados.
     */
    cursor?: tecladoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` teclados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` teclados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of teclados.
     */
    distinct?: TecladoScalarFieldEnum | TecladoScalarFieldEnum[]
  }

  /**
   * teclado findMany
   */
  export type tecladoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the teclado
     */
    select?: tecladoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tecladoInclude<ExtArgs> | null
    /**
     * Filter, which teclados to fetch.
     */
    where?: tecladoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of teclados to fetch.
     */
    orderBy?: tecladoOrderByWithRelationInput | tecladoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing teclados.
     */
    cursor?: tecladoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` teclados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` teclados.
     */
    skip?: number
    distinct?: TecladoScalarFieldEnum | TecladoScalarFieldEnum[]
  }

  /**
   * teclado create
   */
  export type tecladoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the teclado
     */
    select?: tecladoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tecladoInclude<ExtArgs> | null
    /**
     * The data needed to create a teclado.
     */
    data: XOR<tecladoCreateInput, tecladoUncheckedCreateInput>
  }

  /**
   * teclado createMany
   */
  export type tecladoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many teclados.
     */
    data: tecladoCreateManyInput | tecladoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * teclado createManyAndReturn
   */
  export type tecladoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the teclado
     */
    select?: tecladoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many teclados.
     */
    data: tecladoCreateManyInput | tecladoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tecladoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * teclado update
   */
  export type tecladoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the teclado
     */
    select?: tecladoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tecladoInclude<ExtArgs> | null
    /**
     * The data needed to update a teclado.
     */
    data: XOR<tecladoUpdateInput, tecladoUncheckedUpdateInput>
    /**
     * Choose, which teclado to update.
     */
    where: tecladoWhereUniqueInput
  }

  /**
   * teclado updateMany
   */
  export type tecladoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update teclados.
     */
    data: XOR<tecladoUpdateManyMutationInput, tecladoUncheckedUpdateManyInput>
    /**
     * Filter which teclados to update
     */
    where?: tecladoWhereInput
  }

  /**
   * teclado upsert
   */
  export type tecladoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the teclado
     */
    select?: tecladoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tecladoInclude<ExtArgs> | null
    /**
     * The filter to search for the teclado to update in case it exists.
     */
    where: tecladoWhereUniqueInput
    /**
     * In case the teclado found by the `where` argument doesn't exist, create a new teclado with this data.
     */
    create: XOR<tecladoCreateInput, tecladoUncheckedCreateInput>
    /**
     * In case the teclado was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tecladoUpdateInput, tecladoUncheckedUpdateInput>
  }

  /**
   * teclado delete
   */
  export type tecladoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the teclado
     */
    select?: tecladoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tecladoInclude<ExtArgs> | null
    /**
     * Filter which teclado to delete.
     */
    where: tecladoWhereUniqueInput
  }

  /**
   * teclado deleteMany
   */
  export type tecladoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which teclados to delete
     */
    where?: tecladoWhereInput
  }

  /**
   * teclado.descarte
   */
  export type teclado$descarteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the descarte
     */
    select?: descarteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: descarteInclude<ExtArgs> | null
    where?: descarteWhereInput
  }

  /**
   * teclado.doacao
   */
  export type teclado$doacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the doacao
     */
    select?: doacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: doacaoInclude<ExtArgs> | null
    where?: doacaoWhereInput
  }

  /**
   * teclado.usuario
   */
  export type teclado$usuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aluno
     */
    select?: alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alunoInclude<ExtArgs> | null
    where?: alunoWhereInput
  }

  /**
   * teclado.modificador
   */
  export type teclado$modificadorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aluno
     */
    select?: alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alunoInclude<ExtArgs> | null
    where?: alunoWhereInput
  }

  /**
   * teclado without action
   */
  export type tecladoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the teclado
     */
    select?: tecladoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tecladoInclude<ExtArgs> | null
  }


  /**
   * Model hd
   */

  export type AggregateHd = {
    _count: HdCountAggregateOutputType | null
    _avg: HdAvgAggregateOutputType | null
    _sum: HdSumAggregateOutputType | null
    _min: HdMinAggregateOutputType | null
    _max: HdMaxAggregateOutputType | null
  }

  export type HdAvgAggregateOutputType = {
    id: number | null
    capacidade: number | null
    usuarioId: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
  }

  export type HdSumAggregateOutputType = {
    id: number | null
    capacidade: number | null
    usuarioId: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
  }

  export type HdMinAggregateOutputType = {
    id: number | null
    codigoDereferencia: string | null
    descricao: string | null
    status: string | null
    dataDeChegada: Date | null
    dataDeSaida: Date | null
    marca: string | null
    modelo: string | null
    createdAt: Date | null
    updatedAt: Date | null
    nome: string | null
    imagem: string | null
    situacao: string | null
    tipoDeCapacidade: string | null
    capacidade: number | null
    usuarioId: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
  }

  export type HdMaxAggregateOutputType = {
    id: number | null
    codigoDereferencia: string | null
    descricao: string | null
    status: string | null
    dataDeChegada: Date | null
    dataDeSaida: Date | null
    marca: string | null
    modelo: string | null
    createdAt: Date | null
    updatedAt: Date | null
    nome: string | null
    imagem: string | null
    situacao: string | null
    tipoDeCapacidade: string | null
    capacidade: number | null
    usuarioId: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
  }

  export type HdCountAggregateOutputType = {
    id: number
    codigoDereferencia: number
    descricao: number
    status: number
    dataDeChegada: number
    dataDeSaida: number
    marca: number
    modelo: number
    createdAt: number
    updatedAt: number
    nome: number
    imagem: number
    situacao: number
    tipoDeCapacidade: number
    capacidade: number
    usuarioId: number
    modificadorid: number
    descarteId: number
    doacaoId: number
    _all: number
  }


  export type HdAvgAggregateInputType = {
    id?: true
    capacidade?: true
    usuarioId?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
  }

  export type HdSumAggregateInputType = {
    id?: true
    capacidade?: true
    usuarioId?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
  }

  export type HdMinAggregateInputType = {
    id?: true
    codigoDereferencia?: true
    descricao?: true
    status?: true
    dataDeChegada?: true
    dataDeSaida?: true
    marca?: true
    modelo?: true
    createdAt?: true
    updatedAt?: true
    nome?: true
    imagem?: true
    situacao?: true
    tipoDeCapacidade?: true
    capacidade?: true
    usuarioId?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
  }

  export type HdMaxAggregateInputType = {
    id?: true
    codigoDereferencia?: true
    descricao?: true
    status?: true
    dataDeChegada?: true
    dataDeSaida?: true
    marca?: true
    modelo?: true
    createdAt?: true
    updatedAt?: true
    nome?: true
    imagem?: true
    situacao?: true
    tipoDeCapacidade?: true
    capacidade?: true
    usuarioId?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
  }

  export type HdCountAggregateInputType = {
    id?: true
    codigoDereferencia?: true
    descricao?: true
    status?: true
    dataDeChegada?: true
    dataDeSaida?: true
    marca?: true
    modelo?: true
    createdAt?: true
    updatedAt?: true
    nome?: true
    imagem?: true
    situacao?: true
    tipoDeCapacidade?: true
    capacidade?: true
    usuarioId?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
    _all?: true
  }

  export type HdAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which hd to aggregate.
     */
    where?: hdWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of hds to fetch.
     */
    orderBy?: hdOrderByWithRelationInput | hdOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: hdWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` hds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` hds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned hds
    **/
    _count?: true | HdCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: HdAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: HdSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: HdMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: HdMaxAggregateInputType
  }

  export type GetHdAggregateType<T extends HdAggregateArgs> = {
        [P in keyof T & keyof AggregateHd]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateHd[P]>
      : GetScalarType<T[P], AggregateHd[P]>
  }




  export type hdGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: hdWhereInput
    orderBy?: hdOrderByWithAggregationInput | hdOrderByWithAggregationInput[]
    by: HdScalarFieldEnum[] | HdScalarFieldEnum
    having?: hdScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: HdCountAggregateInputType | true
    _avg?: HdAvgAggregateInputType
    _sum?: HdSumAggregateInputType
    _min?: HdMinAggregateInputType
    _max?: HdMaxAggregateInputType
  }

  export type HdGroupByOutputType = {
    id: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date
    dataDeSaida: Date | null
    marca: string
    modelo: string
    createdAt: Date
    updatedAt: Date
    nome: string
    imagem: string
    situacao: string
    tipoDeCapacidade: string
    capacidade: number
    usuarioId: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
    _count: HdCountAggregateOutputType | null
    _avg: HdAvgAggregateOutputType | null
    _sum: HdSumAggregateOutputType | null
    _min: HdMinAggregateOutputType | null
    _max: HdMaxAggregateOutputType | null
  }

  type GetHdGroupByPayload<T extends hdGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<HdGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof HdGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], HdGroupByOutputType[P]>
            : GetScalarType<T[P], HdGroupByOutputType[P]>
        }
      >
    >


  export type hdSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    codigoDereferencia?: boolean
    descricao?: boolean
    status?: boolean
    dataDeChegada?: boolean
    dataDeSaida?: boolean
    marca?: boolean
    modelo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    nome?: boolean
    imagem?: boolean
    situacao?: boolean
    tipoDeCapacidade?: boolean
    capacidade?: boolean
    usuarioId?: boolean
    modificadorid?: boolean
    descarteId?: boolean
    doacaoId?: boolean
    doacao?: boolean | hd$doacaoArgs<ExtArgs>
    descarte?: boolean | hd$descarteArgs<ExtArgs>
    aluno?: boolean | hd$alunoArgs<ExtArgs>
    modificador?: boolean | hd$modificadorArgs<ExtArgs>
  }, ExtArgs["result"]["hd"]>

  export type hdSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    codigoDereferencia?: boolean
    descricao?: boolean
    status?: boolean
    dataDeChegada?: boolean
    dataDeSaida?: boolean
    marca?: boolean
    modelo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    nome?: boolean
    imagem?: boolean
    situacao?: boolean
    tipoDeCapacidade?: boolean
    capacidade?: boolean
    usuarioId?: boolean
    modificadorid?: boolean
    descarteId?: boolean
    doacaoId?: boolean
    doacao?: boolean | hd$doacaoArgs<ExtArgs>
    descarte?: boolean | hd$descarteArgs<ExtArgs>
    aluno?: boolean | hd$alunoArgs<ExtArgs>
    modificador?: boolean | hd$modificadorArgs<ExtArgs>
  }, ExtArgs["result"]["hd"]>

  export type hdSelectScalar = {
    id?: boolean
    codigoDereferencia?: boolean
    descricao?: boolean
    status?: boolean
    dataDeChegada?: boolean
    dataDeSaida?: boolean
    marca?: boolean
    modelo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    nome?: boolean
    imagem?: boolean
    situacao?: boolean
    tipoDeCapacidade?: boolean
    capacidade?: boolean
    usuarioId?: boolean
    modificadorid?: boolean
    descarteId?: boolean
    doacaoId?: boolean
  }

  export type hdInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    doacao?: boolean | hd$doacaoArgs<ExtArgs>
    descarte?: boolean | hd$descarteArgs<ExtArgs>
    aluno?: boolean | hd$alunoArgs<ExtArgs>
    modificador?: boolean | hd$modificadorArgs<ExtArgs>
  }
  export type hdIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    doacao?: boolean | hd$doacaoArgs<ExtArgs>
    descarte?: boolean | hd$descarteArgs<ExtArgs>
    aluno?: boolean | hd$alunoArgs<ExtArgs>
    modificador?: boolean | hd$modificadorArgs<ExtArgs>
  }

  export type $hdPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "hd"
    objects: {
      doacao: Prisma.$doacaoPayload<ExtArgs> | null
      descarte: Prisma.$descartePayload<ExtArgs> | null
      aluno: Prisma.$alunoPayload<ExtArgs> | null
      modificador: Prisma.$alunoPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      codigoDereferencia: string
      descricao: string
      status: string
      dataDeChegada: Date
      dataDeSaida: Date | null
      marca: string
      modelo: string
      createdAt: Date
      updatedAt: Date
      nome: string
      imagem: string
      situacao: string
      tipoDeCapacidade: string
      capacidade: number
      usuarioId: number | null
      modificadorid: number | null
      descarteId: number | null
      doacaoId: number | null
    }, ExtArgs["result"]["hd"]>
    composites: {}
  }

  type hdGetPayload<S extends boolean | null | undefined | hdDefaultArgs> = $Result.GetResult<Prisma.$hdPayload, S>

  type hdCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<hdFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: HdCountAggregateInputType | true
    }

  export interface hdDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['hd'], meta: { name: 'hd' } }
    /**
     * Find zero or one Hd that matches the filter.
     * @param {hdFindUniqueArgs} args - Arguments to find a Hd
     * @example
     * // Get one Hd
     * const hd = await prisma.hd.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends hdFindUniqueArgs>(args: SelectSubset<T, hdFindUniqueArgs<ExtArgs>>): Prisma__hdClient<$Result.GetResult<Prisma.$hdPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Hd that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {hdFindUniqueOrThrowArgs} args - Arguments to find a Hd
     * @example
     * // Get one Hd
     * const hd = await prisma.hd.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends hdFindUniqueOrThrowArgs>(args: SelectSubset<T, hdFindUniqueOrThrowArgs<ExtArgs>>): Prisma__hdClient<$Result.GetResult<Prisma.$hdPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Hd that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {hdFindFirstArgs} args - Arguments to find a Hd
     * @example
     * // Get one Hd
     * const hd = await prisma.hd.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends hdFindFirstArgs>(args?: SelectSubset<T, hdFindFirstArgs<ExtArgs>>): Prisma__hdClient<$Result.GetResult<Prisma.$hdPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Hd that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {hdFindFirstOrThrowArgs} args - Arguments to find a Hd
     * @example
     * // Get one Hd
     * const hd = await prisma.hd.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends hdFindFirstOrThrowArgs>(args?: SelectSubset<T, hdFindFirstOrThrowArgs<ExtArgs>>): Prisma__hdClient<$Result.GetResult<Prisma.$hdPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Hds that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {hdFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Hds
     * const hds = await prisma.hd.findMany()
     * 
     * // Get first 10 Hds
     * const hds = await prisma.hd.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const hdWithIdOnly = await prisma.hd.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends hdFindManyArgs>(args?: SelectSubset<T, hdFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$hdPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Hd.
     * @param {hdCreateArgs} args - Arguments to create a Hd.
     * @example
     * // Create one Hd
     * const Hd = await prisma.hd.create({
     *   data: {
     *     // ... data to create a Hd
     *   }
     * })
     * 
     */
    create<T extends hdCreateArgs>(args: SelectSubset<T, hdCreateArgs<ExtArgs>>): Prisma__hdClient<$Result.GetResult<Prisma.$hdPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Hds.
     * @param {hdCreateManyArgs} args - Arguments to create many Hds.
     * @example
     * // Create many Hds
     * const hd = await prisma.hd.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends hdCreateManyArgs>(args?: SelectSubset<T, hdCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Hds and returns the data saved in the database.
     * @param {hdCreateManyAndReturnArgs} args - Arguments to create many Hds.
     * @example
     * // Create many Hds
     * const hd = await prisma.hd.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Hds and only return the `id`
     * const hdWithIdOnly = await prisma.hd.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends hdCreateManyAndReturnArgs>(args?: SelectSubset<T, hdCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$hdPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Hd.
     * @param {hdDeleteArgs} args - Arguments to delete one Hd.
     * @example
     * // Delete one Hd
     * const Hd = await prisma.hd.delete({
     *   where: {
     *     // ... filter to delete one Hd
     *   }
     * })
     * 
     */
    delete<T extends hdDeleteArgs>(args: SelectSubset<T, hdDeleteArgs<ExtArgs>>): Prisma__hdClient<$Result.GetResult<Prisma.$hdPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Hd.
     * @param {hdUpdateArgs} args - Arguments to update one Hd.
     * @example
     * // Update one Hd
     * const hd = await prisma.hd.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends hdUpdateArgs>(args: SelectSubset<T, hdUpdateArgs<ExtArgs>>): Prisma__hdClient<$Result.GetResult<Prisma.$hdPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Hds.
     * @param {hdDeleteManyArgs} args - Arguments to filter Hds to delete.
     * @example
     * // Delete a few Hds
     * const { count } = await prisma.hd.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends hdDeleteManyArgs>(args?: SelectSubset<T, hdDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Hds.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {hdUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Hds
     * const hd = await prisma.hd.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends hdUpdateManyArgs>(args: SelectSubset<T, hdUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Hd.
     * @param {hdUpsertArgs} args - Arguments to update or create a Hd.
     * @example
     * // Update or create a Hd
     * const hd = await prisma.hd.upsert({
     *   create: {
     *     // ... data to create a Hd
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Hd we want to update
     *   }
     * })
     */
    upsert<T extends hdUpsertArgs>(args: SelectSubset<T, hdUpsertArgs<ExtArgs>>): Prisma__hdClient<$Result.GetResult<Prisma.$hdPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Hds.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {hdCountArgs} args - Arguments to filter Hds to count.
     * @example
     * // Count the number of Hds
     * const count = await prisma.hd.count({
     *   where: {
     *     // ... the filter for the Hds we want to count
     *   }
     * })
    **/
    count<T extends hdCountArgs>(
      args?: Subset<T, hdCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], HdCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Hd.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HdAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends HdAggregateArgs>(args: Subset<T, HdAggregateArgs>): Prisma.PrismaPromise<GetHdAggregateType<T>>

    /**
     * Group by Hd.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {hdGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends hdGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: hdGroupByArgs['orderBy'] }
        : { orderBy?: hdGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, hdGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHdGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the hd model
   */
  readonly fields: hdFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for hd.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__hdClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    doacao<T extends hd$doacaoArgs<ExtArgs> = {}>(args?: Subset<T, hd$doacaoArgs<ExtArgs>>): Prisma__doacaoClient<$Result.GetResult<Prisma.$doacaoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    descarte<T extends hd$descarteArgs<ExtArgs> = {}>(args?: Subset<T, hd$descarteArgs<ExtArgs>>): Prisma__descarteClient<$Result.GetResult<Prisma.$descartePayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    aluno<T extends hd$alunoArgs<ExtArgs> = {}>(args?: Subset<T, hd$alunoArgs<ExtArgs>>): Prisma__alunoClient<$Result.GetResult<Prisma.$alunoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    modificador<T extends hd$modificadorArgs<ExtArgs> = {}>(args?: Subset<T, hd$modificadorArgs<ExtArgs>>): Prisma__alunoClient<$Result.GetResult<Prisma.$alunoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the hd model
   */ 
  interface hdFieldRefs {
    readonly id: FieldRef<"hd", 'Int'>
    readonly codigoDereferencia: FieldRef<"hd", 'String'>
    readonly descricao: FieldRef<"hd", 'String'>
    readonly status: FieldRef<"hd", 'String'>
    readonly dataDeChegada: FieldRef<"hd", 'DateTime'>
    readonly dataDeSaida: FieldRef<"hd", 'DateTime'>
    readonly marca: FieldRef<"hd", 'String'>
    readonly modelo: FieldRef<"hd", 'String'>
    readonly createdAt: FieldRef<"hd", 'DateTime'>
    readonly updatedAt: FieldRef<"hd", 'DateTime'>
    readonly nome: FieldRef<"hd", 'String'>
    readonly imagem: FieldRef<"hd", 'String'>
    readonly situacao: FieldRef<"hd", 'String'>
    readonly tipoDeCapacidade: FieldRef<"hd", 'String'>
    readonly capacidade: FieldRef<"hd", 'Int'>
    readonly usuarioId: FieldRef<"hd", 'Int'>
    readonly modificadorid: FieldRef<"hd", 'Int'>
    readonly descarteId: FieldRef<"hd", 'Int'>
    readonly doacaoId: FieldRef<"hd", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * hd findUnique
   */
  export type hdFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hd
     */
    select?: hdSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: hdInclude<ExtArgs> | null
    /**
     * Filter, which hd to fetch.
     */
    where: hdWhereUniqueInput
  }

  /**
   * hd findUniqueOrThrow
   */
  export type hdFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hd
     */
    select?: hdSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: hdInclude<ExtArgs> | null
    /**
     * Filter, which hd to fetch.
     */
    where: hdWhereUniqueInput
  }

  /**
   * hd findFirst
   */
  export type hdFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hd
     */
    select?: hdSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: hdInclude<ExtArgs> | null
    /**
     * Filter, which hd to fetch.
     */
    where?: hdWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of hds to fetch.
     */
    orderBy?: hdOrderByWithRelationInput | hdOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for hds.
     */
    cursor?: hdWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` hds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` hds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of hds.
     */
    distinct?: HdScalarFieldEnum | HdScalarFieldEnum[]
  }

  /**
   * hd findFirstOrThrow
   */
  export type hdFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hd
     */
    select?: hdSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: hdInclude<ExtArgs> | null
    /**
     * Filter, which hd to fetch.
     */
    where?: hdWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of hds to fetch.
     */
    orderBy?: hdOrderByWithRelationInput | hdOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for hds.
     */
    cursor?: hdWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` hds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` hds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of hds.
     */
    distinct?: HdScalarFieldEnum | HdScalarFieldEnum[]
  }

  /**
   * hd findMany
   */
  export type hdFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hd
     */
    select?: hdSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: hdInclude<ExtArgs> | null
    /**
     * Filter, which hds to fetch.
     */
    where?: hdWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of hds to fetch.
     */
    orderBy?: hdOrderByWithRelationInput | hdOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing hds.
     */
    cursor?: hdWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` hds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` hds.
     */
    skip?: number
    distinct?: HdScalarFieldEnum | HdScalarFieldEnum[]
  }

  /**
   * hd create
   */
  export type hdCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hd
     */
    select?: hdSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: hdInclude<ExtArgs> | null
    /**
     * The data needed to create a hd.
     */
    data: XOR<hdCreateInput, hdUncheckedCreateInput>
  }

  /**
   * hd createMany
   */
  export type hdCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many hds.
     */
    data: hdCreateManyInput | hdCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * hd createManyAndReturn
   */
  export type hdCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hd
     */
    select?: hdSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many hds.
     */
    data: hdCreateManyInput | hdCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: hdIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * hd update
   */
  export type hdUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hd
     */
    select?: hdSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: hdInclude<ExtArgs> | null
    /**
     * The data needed to update a hd.
     */
    data: XOR<hdUpdateInput, hdUncheckedUpdateInput>
    /**
     * Choose, which hd to update.
     */
    where: hdWhereUniqueInput
  }

  /**
   * hd updateMany
   */
  export type hdUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update hds.
     */
    data: XOR<hdUpdateManyMutationInput, hdUncheckedUpdateManyInput>
    /**
     * Filter which hds to update
     */
    where?: hdWhereInput
  }

  /**
   * hd upsert
   */
  export type hdUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hd
     */
    select?: hdSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: hdInclude<ExtArgs> | null
    /**
     * The filter to search for the hd to update in case it exists.
     */
    where: hdWhereUniqueInput
    /**
     * In case the hd found by the `where` argument doesn't exist, create a new hd with this data.
     */
    create: XOR<hdCreateInput, hdUncheckedCreateInput>
    /**
     * In case the hd was found with the provided `where` argument, update it with this data.
     */
    update: XOR<hdUpdateInput, hdUncheckedUpdateInput>
  }

  /**
   * hd delete
   */
  export type hdDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hd
     */
    select?: hdSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: hdInclude<ExtArgs> | null
    /**
     * Filter which hd to delete.
     */
    where: hdWhereUniqueInput
  }

  /**
   * hd deleteMany
   */
  export type hdDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which hds to delete
     */
    where?: hdWhereInput
  }

  /**
   * hd.doacao
   */
  export type hd$doacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the doacao
     */
    select?: doacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: doacaoInclude<ExtArgs> | null
    where?: doacaoWhereInput
  }

  /**
   * hd.descarte
   */
  export type hd$descarteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the descarte
     */
    select?: descarteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: descarteInclude<ExtArgs> | null
    where?: descarteWhereInput
  }

  /**
   * hd.aluno
   */
  export type hd$alunoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aluno
     */
    select?: alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alunoInclude<ExtArgs> | null
    where?: alunoWhereInput
  }

  /**
   * hd.modificador
   */
  export type hd$modificadorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aluno
     */
    select?: alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alunoInclude<ExtArgs> | null
    where?: alunoWhereInput
  }

  /**
   * hd without action
   */
  export type hdDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hd
     */
    select?: hdSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: hdInclude<ExtArgs> | null
  }


  /**
   * Model fontedealimentacao
   */

  export type AggregateFontedealimentacao = {
    _count: FontedealimentacaoCountAggregateOutputType | null
    _avg: FontedealimentacaoAvgAggregateOutputType | null
    _sum: FontedealimentacaoSumAggregateOutputType | null
    _min: FontedealimentacaoMinAggregateOutputType | null
    _max: FontedealimentacaoMaxAggregateOutputType | null
  }

  export type FontedealimentacaoAvgAggregateOutputType = {
    id: number | null
    potencia: number | null
    alunoid: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
  }

  export type FontedealimentacaoSumAggregateOutputType = {
    id: number | null
    potencia: number | null
    alunoid: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
  }

  export type FontedealimentacaoMinAggregateOutputType = {
    id: number | null
    codigoDereferencia: string | null
    descricao: string | null
    status: string | null
    dataDeChegada: Date | null
    dataDeSaida: Date | null
    marca: string | null
    modelo: string | null
    nome: string | null
    imagem: string | null
    situacao: string | null
    potencia: number | null
    updatedAt: Date | null
    alunoid: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
  }

  export type FontedealimentacaoMaxAggregateOutputType = {
    id: number | null
    codigoDereferencia: string | null
    descricao: string | null
    status: string | null
    dataDeChegada: Date | null
    dataDeSaida: Date | null
    marca: string | null
    modelo: string | null
    nome: string | null
    imagem: string | null
    situacao: string | null
    potencia: number | null
    updatedAt: Date | null
    alunoid: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
  }

  export type FontedealimentacaoCountAggregateOutputType = {
    id: number
    codigoDereferencia: number
    descricao: number
    status: number
    dataDeChegada: number
    dataDeSaida: number
    marca: number
    modelo: number
    nome: number
    imagem: number
    situacao: number
    potencia: number
    updatedAt: number
    alunoid: number
    modificadorid: number
    descarteId: number
    doacaoId: number
    _all: number
  }


  export type FontedealimentacaoAvgAggregateInputType = {
    id?: true
    potencia?: true
    alunoid?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
  }

  export type FontedealimentacaoSumAggregateInputType = {
    id?: true
    potencia?: true
    alunoid?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
  }

  export type FontedealimentacaoMinAggregateInputType = {
    id?: true
    codigoDereferencia?: true
    descricao?: true
    status?: true
    dataDeChegada?: true
    dataDeSaida?: true
    marca?: true
    modelo?: true
    nome?: true
    imagem?: true
    situacao?: true
    potencia?: true
    updatedAt?: true
    alunoid?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
  }

  export type FontedealimentacaoMaxAggregateInputType = {
    id?: true
    codigoDereferencia?: true
    descricao?: true
    status?: true
    dataDeChegada?: true
    dataDeSaida?: true
    marca?: true
    modelo?: true
    nome?: true
    imagem?: true
    situacao?: true
    potencia?: true
    updatedAt?: true
    alunoid?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
  }

  export type FontedealimentacaoCountAggregateInputType = {
    id?: true
    codigoDereferencia?: true
    descricao?: true
    status?: true
    dataDeChegada?: true
    dataDeSaida?: true
    marca?: true
    modelo?: true
    nome?: true
    imagem?: true
    situacao?: true
    potencia?: true
    updatedAt?: true
    alunoid?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
    _all?: true
  }

  export type FontedealimentacaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which fontedealimentacao to aggregate.
     */
    where?: fontedealimentacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of fontedealimentacaos to fetch.
     */
    orderBy?: fontedealimentacaoOrderByWithRelationInput | fontedealimentacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: fontedealimentacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` fontedealimentacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` fontedealimentacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned fontedealimentacaos
    **/
    _count?: true | FontedealimentacaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FontedealimentacaoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FontedealimentacaoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FontedealimentacaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FontedealimentacaoMaxAggregateInputType
  }

  export type GetFontedealimentacaoAggregateType<T extends FontedealimentacaoAggregateArgs> = {
        [P in keyof T & keyof AggregateFontedealimentacao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFontedealimentacao[P]>
      : GetScalarType<T[P], AggregateFontedealimentacao[P]>
  }




  export type fontedealimentacaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: fontedealimentacaoWhereInput
    orderBy?: fontedealimentacaoOrderByWithAggregationInput | fontedealimentacaoOrderByWithAggregationInput[]
    by: FontedealimentacaoScalarFieldEnum[] | FontedealimentacaoScalarFieldEnum
    having?: fontedealimentacaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FontedealimentacaoCountAggregateInputType | true
    _avg?: FontedealimentacaoAvgAggregateInputType
    _sum?: FontedealimentacaoSumAggregateInputType
    _min?: FontedealimentacaoMinAggregateInputType
    _max?: FontedealimentacaoMaxAggregateInputType
  }

  export type FontedealimentacaoGroupByOutputType = {
    id: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date
    dataDeSaida: Date | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    potencia: number
    updatedAt: Date
    alunoid: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
    _count: FontedealimentacaoCountAggregateOutputType | null
    _avg: FontedealimentacaoAvgAggregateOutputType | null
    _sum: FontedealimentacaoSumAggregateOutputType | null
    _min: FontedealimentacaoMinAggregateOutputType | null
    _max: FontedealimentacaoMaxAggregateOutputType | null
  }

  type GetFontedealimentacaoGroupByPayload<T extends fontedealimentacaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FontedealimentacaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FontedealimentacaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FontedealimentacaoGroupByOutputType[P]>
            : GetScalarType<T[P], FontedealimentacaoGroupByOutputType[P]>
        }
      >
    >


  export type fontedealimentacaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    codigoDereferencia?: boolean
    descricao?: boolean
    status?: boolean
    dataDeChegada?: boolean
    dataDeSaida?: boolean
    marca?: boolean
    modelo?: boolean
    nome?: boolean
    imagem?: boolean
    situacao?: boolean
    potencia?: boolean
    updatedAt?: boolean
    alunoid?: boolean
    modificadorid?: boolean
    descarteId?: boolean
    doacaoId?: boolean
    doacao?: boolean | fontedealimentacao$doacaoArgs<ExtArgs>
    descarte?: boolean | fontedealimentacao$descarteArgs<ExtArgs>
    usuario?: boolean | fontedealimentacao$usuarioArgs<ExtArgs>
    modificador?: boolean | fontedealimentacao$modificadorArgs<ExtArgs>
  }, ExtArgs["result"]["fontedealimentacao"]>

  export type fontedealimentacaoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    codigoDereferencia?: boolean
    descricao?: boolean
    status?: boolean
    dataDeChegada?: boolean
    dataDeSaida?: boolean
    marca?: boolean
    modelo?: boolean
    nome?: boolean
    imagem?: boolean
    situacao?: boolean
    potencia?: boolean
    updatedAt?: boolean
    alunoid?: boolean
    modificadorid?: boolean
    descarteId?: boolean
    doacaoId?: boolean
    doacao?: boolean | fontedealimentacao$doacaoArgs<ExtArgs>
    descarte?: boolean | fontedealimentacao$descarteArgs<ExtArgs>
    usuario?: boolean | fontedealimentacao$usuarioArgs<ExtArgs>
    modificador?: boolean | fontedealimentacao$modificadorArgs<ExtArgs>
  }, ExtArgs["result"]["fontedealimentacao"]>

  export type fontedealimentacaoSelectScalar = {
    id?: boolean
    codigoDereferencia?: boolean
    descricao?: boolean
    status?: boolean
    dataDeChegada?: boolean
    dataDeSaida?: boolean
    marca?: boolean
    modelo?: boolean
    nome?: boolean
    imagem?: boolean
    situacao?: boolean
    potencia?: boolean
    updatedAt?: boolean
    alunoid?: boolean
    modificadorid?: boolean
    descarteId?: boolean
    doacaoId?: boolean
  }

  export type fontedealimentacaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    doacao?: boolean | fontedealimentacao$doacaoArgs<ExtArgs>
    descarte?: boolean | fontedealimentacao$descarteArgs<ExtArgs>
    usuario?: boolean | fontedealimentacao$usuarioArgs<ExtArgs>
    modificador?: boolean | fontedealimentacao$modificadorArgs<ExtArgs>
  }
  export type fontedealimentacaoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    doacao?: boolean | fontedealimentacao$doacaoArgs<ExtArgs>
    descarte?: boolean | fontedealimentacao$descarteArgs<ExtArgs>
    usuario?: boolean | fontedealimentacao$usuarioArgs<ExtArgs>
    modificador?: boolean | fontedealimentacao$modificadorArgs<ExtArgs>
  }

  export type $fontedealimentacaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "fontedealimentacao"
    objects: {
      doacao: Prisma.$doacaoPayload<ExtArgs> | null
      descarte: Prisma.$descartePayload<ExtArgs> | null
      usuario: Prisma.$alunoPayload<ExtArgs> | null
      modificador: Prisma.$alunoPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      codigoDereferencia: string
      descricao: string
      status: string
      dataDeChegada: Date
      dataDeSaida: Date | null
      marca: string
      modelo: string
      nome: string
      imagem: string
      situacao: string
      potencia: number
      updatedAt: Date
      alunoid: number | null
      modificadorid: number | null
      descarteId: number | null
      doacaoId: number | null
    }, ExtArgs["result"]["fontedealimentacao"]>
    composites: {}
  }

  type fontedealimentacaoGetPayload<S extends boolean | null | undefined | fontedealimentacaoDefaultArgs> = $Result.GetResult<Prisma.$fontedealimentacaoPayload, S>

  type fontedealimentacaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<fontedealimentacaoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: FontedealimentacaoCountAggregateInputType | true
    }

  export interface fontedealimentacaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['fontedealimentacao'], meta: { name: 'fontedealimentacao' } }
    /**
     * Find zero or one Fontedealimentacao that matches the filter.
     * @param {fontedealimentacaoFindUniqueArgs} args - Arguments to find a Fontedealimentacao
     * @example
     * // Get one Fontedealimentacao
     * const fontedealimentacao = await prisma.fontedealimentacao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends fontedealimentacaoFindUniqueArgs>(args: SelectSubset<T, fontedealimentacaoFindUniqueArgs<ExtArgs>>): Prisma__fontedealimentacaoClient<$Result.GetResult<Prisma.$fontedealimentacaoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Fontedealimentacao that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {fontedealimentacaoFindUniqueOrThrowArgs} args - Arguments to find a Fontedealimentacao
     * @example
     * // Get one Fontedealimentacao
     * const fontedealimentacao = await prisma.fontedealimentacao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends fontedealimentacaoFindUniqueOrThrowArgs>(args: SelectSubset<T, fontedealimentacaoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__fontedealimentacaoClient<$Result.GetResult<Prisma.$fontedealimentacaoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Fontedealimentacao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {fontedealimentacaoFindFirstArgs} args - Arguments to find a Fontedealimentacao
     * @example
     * // Get one Fontedealimentacao
     * const fontedealimentacao = await prisma.fontedealimentacao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends fontedealimentacaoFindFirstArgs>(args?: SelectSubset<T, fontedealimentacaoFindFirstArgs<ExtArgs>>): Prisma__fontedealimentacaoClient<$Result.GetResult<Prisma.$fontedealimentacaoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Fontedealimentacao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {fontedealimentacaoFindFirstOrThrowArgs} args - Arguments to find a Fontedealimentacao
     * @example
     * // Get one Fontedealimentacao
     * const fontedealimentacao = await prisma.fontedealimentacao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends fontedealimentacaoFindFirstOrThrowArgs>(args?: SelectSubset<T, fontedealimentacaoFindFirstOrThrowArgs<ExtArgs>>): Prisma__fontedealimentacaoClient<$Result.GetResult<Prisma.$fontedealimentacaoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Fontedealimentacaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {fontedealimentacaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Fontedealimentacaos
     * const fontedealimentacaos = await prisma.fontedealimentacao.findMany()
     * 
     * // Get first 10 Fontedealimentacaos
     * const fontedealimentacaos = await prisma.fontedealimentacao.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const fontedealimentacaoWithIdOnly = await prisma.fontedealimentacao.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends fontedealimentacaoFindManyArgs>(args?: SelectSubset<T, fontedealimentacaoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$fontedealimentacaoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Fontedealimentacao.
     * @param {fontedealimentacaoCreateArgs} args - Arguments to create a Fontedealimentacao.
     * @example
     * // Create one Fontedealimentacao
     * const Fontedealimentacao = await prisma.fontedealimentacao.create({
     *   data: {
     *     // ... data to create a Fontedealimentacao
     *   }
     * })
     * 
     */
    create<T extends fontedealimentacaoCreateArgs>(args: SelectSubset<T, fontedealimentacaoCreateArgs<ExtArgs>>): Prisma__fontedealimentacaoClient<$Result.GetResult<Prisma.$fontedealimentacaoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Fontedealimentacaos.
     * @param {fontedealimentacaoCreateManyArgs} args - Arguments to create many Fontedealimentacaos.
     * @example
     * // Create many Fontedealimentacaos
     * const fontedealimentacao = await prisma.fontedealimentacao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends fontedealimentacaoCreateManyArgs>(args?: SelectSubset<T, fontedealimentacaoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Fontedealimentacaos and returns the data saved in the database.
     * @param {fontedealimentacaoCreateManyAndReturnArgs} args - Arguments to create many Fontedealimentacaos.
     * @example
     * // Create many Fontedealimentacaos
     * const fontedealimentacao = await prisma.fontedealimentacao.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Fontedealimentacaos and only return the `id`
     * const fontedealimentacaoWithIdOnly = await prisma.fontedealimentacao.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends fontedealimentacaoCreateManyAndReturnArgs>(args?: SelectSubset<T, fontedealimentacaoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$fontedealimentacaoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Fontedealimentacao.
     * @param {fontedealimentacaoDeleteArgs} args - Arguments to delete one Fontedealimentacao.
     * @example
     * // Delete one Fontedealimentacao
     * const Fontedealimentacao = await prisma.fontedealimentacao.delete({
     *   where: {
     *     // ... filter to delete one Fontedealimentacao
     *   }
     * })
     * 
     */
    delete<T extends fontedealimentacaoDeleteArgs>(args: SelectSubset<T, fontedealimentacaoDeleteArgs<ExtArgs>>): Prisma__fontedealimentacaoClient<$Result.GetResult<Prisma.$fontedealimentacaoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Fontedealimentacao.
     * @param {fontedealimentacaoUpdateArgs} args - Arguments to update one Fontedealimentacao.
     * @example
     * // Update one Fontedealimentacao
     * const fontedealimentacao = await prisma.fontedealimentacao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends fontedealimentacaoUpdateArgs>(args: SelectSubset<T, fontedealimentacaoUpdateArgs<ExtArgs>>): Prisma__fontedealimentacaoClient<$Result.GetResult<Prisma.$fontedealimentacaoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Fontedealimentacaos.
     * @param {fontedealimentacaoDeleteManyArgs} args - Arguments to filter Fontedealimentacaos to delete.
     * @example
     * // Delete a few Fontedealimentacaos
     * const { count } = await prisma.fontedealimentacao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends fontedealimentacaoDeleteManyArgs>(args?: SelectSubset<T, fontedealimentacaoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Fontedealimentacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {fontedealimentacaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Fontedealimentacaos
     * const fontedealimentacao = await prisma.fontedealimentacao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends fontedealimentacaoUpdateManyArgs>(args: SelectSubset<T, fontedealimentacaoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Fontedealimentacao.
     * @param {fontedealimentacaoUpsertArgs} args - Arguments to update or create a Fontedealimentacao.
     * @example
     * // Update or create a Fontedealimentacao
     * const fontedealimentacao = await prisma.fontedealimentacao.upsert({
     *   create: {
     *     // ... data to create a Fontedealimentacao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Fontedealimentacao we want to update
     *   }
     * })
     */
    upsert<T extends fontedealimentacaoUpsertArgs>(args: SelectSubset<T, fontedealimentacaoUpsertArgs<ExtArgs>>): Prisma__fontedealimentacaoClient<$Result.GetResult<Prisma.$fontedealimentacaoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Fontedealimentacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {fontedealimentacaoCountArgs} args - Arguments to filter Fontedealimentacaos to count.
     * @example
     * // Count the number of Fontedealimentacaos
     * const count = await prisma.fontedealimentacao.count({
     *   where: {
     *     // ... the filter for the Fontedealimentacaos we want to count
     *   }
     * })
    **/
    count<T extends fontedealimentacaoCountArgs>(
      args?: Subset<T, fontedealimentacaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FontedealimentacaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Fontedealimentacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FontedealimentacaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FontedealimentacaoAggregateArgs>(args: Subset<T, FontedealimentacaoAggregateArgs>): Prisma.PrismaPromise<GetFontedealimentacaoAggregateType<T>>

    /**
     * Group by Fontedealimentacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {fontedealimentacaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends fontedealimentacaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: fontedealimentacaoGroupByArgs['orderBy'] }
        : { orderBy?: fontedealimentacaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, fontedealimentacaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFontedealimentacaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the fontedealimentacao model
   */
  readonly fields: fontedealimentacaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for fontedealimentacao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__fontedealimentacaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    doacao<T extends fontedealimentacao$doacaoArgs<ExtArgs> = {}>(args?: Subset<T, fontedealimentacao$doacaoArgs<ExtArgs>>): Prisma__doacaoClient<$Result.GetResult<Prisma.$doacaoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    descarte<T extends fontedealimentacao$descarteArgs<ExtArgs> = {}>(args?: Subset<T, fontedealimentacao$descarteArgs<ExtArgs>>): Prisma__descarteClient<$Result.GetResult<Prisma.$descartePayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    usuario<T extends fontedealimentacao$usuarioArgs<ExtArgs> = {}>(args?: Subset<T, fontedealimentacao$usuarioArgs<ExtArgs>>): Prisma__alunoClient<$Result.GetResult<Prisma.$alunoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    modificador<T extends fontedealimentacao$modificadorArgs<ExtArgs> = {}>(args?: Subset<T, fontedealimentacao$modificadorArgs<ExtArgs>>): Prisma__alunoClient<$Result.GetResult<Prisma.$alunoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the fontedealimentacao model
   */ 
  interface fontedealimentacaoFieldRefs {
    readonly id: FieldRef<"fontedealimentacao", 'Int'>
    readonly codigoDereferencia: FieldRef<"fontedealimentacao", 'String'>
    readonly descricao: FieldRef<"fontedealimentacao", 'String'>
    readonly status: FieldRef<"fontedealimentacao", 'String'>
    readonly dataDeChegada: FieldRef<"fontedealimentacao", 'DateTime'>
    readonly dataDeSaida: FieldRef<"fontedealimentacao", 'DateTime'>
    readonly marca: FieldRef<"fontedealimentacao", 'String'>
    readonly modelo: FieldRef<"fontedealimentacao", 'String'>
    readonly nome: FieldRef<"fontedealimentacao", 'String'>
    readonly imagem: FieldRef<"fontedealimentacao", 'String'>
    readonly situacao: FieldRef<"fontedealimentacao", 'String'>
    readonly potencia: FieldRef<"fontedealimentacao", 'Int'>
    readonly updatedAt: FieldRef<"fontedealimentacao", 'DateTime'>
    readonly alunoid: FieldRef<"fontedealimentacao", 'Int'>
    readonly modificadorid: FieldRef<"fontedealimentacao", 'Int'>
    readonly descarteId: FieldRef<"fontedealimentacao", 'Int'>
    readonly doacaoId: FieldRef<"fontedealimentacao", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * fontedealimentacao findUnique
   */
  export type fontedealimentacaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fontedealimentacao
     */
    select?: fontedealimentacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fontedealimentacaoInclude<ExtArgs> | null
    /**
     * Filter, which fontedealimentacao to fetch.
     */
    where: fontedealimentacaoWhereUniqueInput
  }

  /**
   * fontedealimentacao findUniqueOrThrow
   */
  export type fontedealimentacaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fontedealimentacao
     */
    select?: fontedealimentacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fontedealimentacaoInclude<ExtArgs> | null
    /**
     * Filter, which fontedealimentacao to fetch.
     */
    where: fontedealimentacaoWhereUniqueInput
  }

  /**
   * fontedealimentacao findFirst
   */
  export type fontedealimentacaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fontedealimentacao
     */
    select?: fontedealimentacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fontedealimentacaoInclude<ExtArgs> | null
    /**
     * Filter, which fontedealimentacao to fetch.
     */
    where?: fontedealimentacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of fontedealimentacaos to fetch.
     */
    orderBy?: fontedealimentacaoOrderByWithRelationInput | fontedealimentacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for fontedealimentacaos.
     */
    cursor?: fontedealimentacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` fontedealimentacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` fontedealimentacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of fontedealimentacaos.
     */
    distinct?: FontedealimentacaoScalarFieldEnum | FontedealimentacaoScalarFieldEnum[]
  }

  /**
   * fontedealimentacao findFirstOrThrow
   */
  export type fontedealimentacaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fontedealimentacao
     */
    select?: fontedealimentacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fontedealimentacaoInclude<ExtArgs> | null
    /**
     * Filter, which fontedealimentacao to fetch.
     */
    where?: fontedealimentacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of fontedealimentacaos to fetch.
     */
    orderBy?: fontedealimentacaoOrderByWithRelationInput | fontedealimentacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for fontedealimentacaos.
     */
    cursor?: fontedealimentacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` fontedealimentacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` fontedealimentacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of fontedealimentacaos.
     */
    distinct?: FontedealimentacaoScalarFieldEnum | FontedealimentacaoScalarFieldEnum[]
  }

  /**
   * fontedealimentacao findMany
   */
  export type fontedealimentacaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fontedealimentacao
     */
    select?: fontedealimentacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fontedealimentacaoInclude<ExtArgs> | null
    /**
     * Filter, which fontedealimentacaos to fetch.
     */
    where?: fontedealimentacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of fontedealimentacaos to fetch.
     */
    orderBy?: fontedealimentacaoOrderByWithRelationInput | fontedealimentacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing fontedealimentacaos.
     */
    cursor?: fontedealimentacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` fontedealimentacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` fontedealimentacaos.
     */
    skip?: number
    distinct?: FontedealimentacaoScalarFieldEnum | FontedealimentacaoScalarFieldEnum[]
  }

  /**
   * fontedealimentacao create
   */
  export type fontedealimentacaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fontedealimentacao
     */
    select?: fontedealimentacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fontedealimentacaoInclude<ExtArgs> | null
    /**
     * The data needed to create a fontedealimentacao.
     */
    data: XOR<fontedealimentacaoCreateInput, fontedealimentacaoUncheckedCreateInput>
  }

  /**
   * fontedealimentacao createMany
   */
  export type fontedealimentacaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many fontedealimentacaos.
     */
    data: fontedealimentacaoCreateManyInput | fontedealimentacaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * fontedealimentacao createManyAndReturn
   */
  export type fontedealimentacaoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fontedealimentacao
     */
    select?: fontedealimentacaoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many fontedealimentacaos.
     */
    data: fontedealimentacaoCreateManyInput | fontedealimentacaoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fontedealimentacaoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * fontedealimentacao update
   */
  export type fontedealimentacaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fontedealimentacao
     */
    select?: fontedealimentacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fontedealimentacaoInclude<ExtArgs> | null
    /**
     * The data needed to update a fontedealimentacao.
     */
    data: XOR<fontedealimentacaoUpdateInput, fontedealimentacaoUncheckedUpdateInput>
    /**
     * Choose, which fontedealimentacao to update.
     */
    where: fontedealimentacaoWhereUniqueInput
  }

  /**
   * fontedealimentacao updateMany
   */
  export type fontedealimentacaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update fontedealimentacaos.
     */
    data: XOR<fontedealimentacaoUpdateManyMutationInput, fontedealimentacaoUncheckedUpdateManyInput>
    /**
     * Filter which fontedealimentacaos to update
     */
    where?: fontedealimentacaoWhereInput
  }

  /**
   * fontedealimentacao upsert
   */
  export type fontedealimentacaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fontedealimentacao
     */
    select?: fontedealimentacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fontedealimentacaoInclude<ExtArgs> | null
    /**
     * The filter to search for the fontedealimentacao to update in case it exists.
     */
    where: fontedealimentacaoWhereUniqueInput
    /**
     * In case the fontedealimentacao found by the `where` argument doesn't exist, create a new fontedealimentacao with this data.
     */
    create: XOR<fontedealimentacaoCreateInput, fontedealimentacaoUncheckedCreateInput>
    /**
     * In case the fontedealimentacao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<fontedealimentacaoUpdateInput, fontedealimentacaoUncheckedUpdateInput>
  }

  /**
   * fontedealimentacao delete
   */
  export type fontedealimentacaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fontedealimentacao
     */
    select?: fontedealimentacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fontedealimentacaoInclude<ExtArgs> | null
    /**
     * Filter which fontedealimentacao to delete.
     */
    where: fontedealimentacaoWhereUniqueInput
  }

  /**
   * fontedealimentacao deleteMany
   */
  export type fontedealimentacaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which fontedealimentacaos to delete
     */
    where?: fontedealimentacaoWhereInput
  }

  /**
   * fontedealimentacao.doacao
   */
  export type fontedealimentacao$doacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the doacao
     */
    select?: doacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: doacaoInclude<ExtArgs> | null
    where?: doacaoWhereInput
  }

  /**
   * fontedealimentacao.descarte
   */
  export type fontedealimentacao$descarteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the descarte
     */
    select?: descarteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: descarteInclude<ExtArgs> | null
    where?: descarteWhereInput
  }

  /**
   * fontedealimentacao.usuario
   */
  export type fontedealimentacao$usuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aluno
     */
    select?: alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alunoInclude<ExtArgs> | null
    where?: alunoWhereInput
  }

  /**
   * fontedealimentacao.modificador
   */
  export type fontedealimentacao$modificadorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aluno
     */
    select?: alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alunoInclude<ExtArgs> | null
    where?: alunoWhereInput
  }

  /**
   * fontedealimentacao without action
   */
  export type fontedealimentacaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fontedealimentacao
     */
    select?: fontedealimentacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fontedealimentacaoInclude<ExtArgs> | null
  }


  /**
   * Model gabinete
   */

  export type AggregateGabinete = {
    _count: GabineteCountAggregateOutputType | null
    _avg: GabineteAvgAggregateOutputType | null
    _sum: GabineteSumAggregateOutputType | null
    _min: GabineteMinAggregateOutputType | null
    _max: GabineteMaxAggregateOutputType | null
  }

  export type GabineteAvgAggregateOutputType = {
    id: number | null
    alunoid: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
  }

  export type GabineteSumAggregateOutputType = {
    id: number | null
    alunoid: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
  }

  export type GabineteMinAggregateOutputType = {
    id: number | null
    codigoDereferencia: string | null
    descricao: string | null
    status: string | null
    dataDeChegada: Date | null
    dataDeSaida: Date | null
    marca: string | null
    modelo: string | null
    nome: string | null
    imagem: string | null
    situacao: string | null
    updatedAt: Date | null
    alunoid: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
  }

  export type GabineteMaxAggregateOutputType = {
    id: number | null
    codigoDereferencia: string | null
    descricao: string | null
    status: string | null
    dataDeChegada: Date | null
    dataDeSaida: Date | null
    marca: string | null
    modelo: string | null
    nome: string | null
    imagem: string | null
    situacao: string | null
    updatedAt: Date | null
    alunoid: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
  }

  export type GabineteCountAggregateOutputType = {
    id: number
    codigoDereferencia: number
    descricao: number
    status: number
    dataDeChegada: number
    dataDeSaida: number
    marca: number
    modelo: number
    nome: number
    imagem: number
    situacao: number
    updatedAt: number
    alunoid: number
    modificadorid: number
    descarteId: number
    doacaoId: number
    _all: number
  }


  export type GabineteAvgAggregateInputType = {
    id?: true
    alunoid?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
  }

  export type GabineteSumAggregateInputType = {
    id?: true
    alunoid?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
  }

  export type GabineteMinAggregateInputType = {
    id?: true
    codigoDereferencia?: true
    descricao?: true
    status?: true
    dataDeChegada?: true
    dataDeSaida?: true
    marca?: true
    modelo?: true
    nome?: true
    imagem?: true
    situacao?: true
    updatedAt?: true
    alunoid?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
  }

  export type GabineteMaxAggregateInputType = {
    id?: true
    codigoDereferencia?: true
    descricao?: true
    status?: true
    dataDeChegada?: true
    dataDeSaida?: true
    marca?: true
    modelo?: true
    nome?: true
    imagem?: true
    situacao?: true
    updatedAt?: true
    alunoid?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
  }

  export type GabineteCountAggregateInputType = {
    id?: true
    codigoDereferencia?: true
    descricao?: true
    status?: true
    dataDeChegada?: true
    dataDeSaida?: true
    marca?: true
    modelo?: true
    nome?: true
    imagem?: true
    situacao?: true
    updatedAt?: true
    alunoid?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
    _all?: true
  }

  export type GabineteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which gabinete to aggregate.
     */
    where?: gabineteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gabinetes to fetch.
     */
    orderBy?: gabineteOrderByWithRelationInput | gabineteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: gabineteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gabinetes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gabinetes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned gabinetes
    **/
    _count?: true | GabineteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: GabineteAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: GabineteSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: GabineteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: GabineteMaxAggregateInputType
  }

  export type GetGabineteAggregateType<T extends GabineteAggregateArgs> = {
        [P in keyof T & keyof AggregateGabinete]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGabinete[P]>
      : GetScalarType<T[P], AggregateGabinete[P]>
  }




  export type gabineteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: gabineteWhereInput
    orderBy?: gabineteOrderByWithAggregationInput | gabineteOrderByWithAggregationInput[]
    by: GabineteScalarFieldEnum[] | GabineteScalarFieldEnum
    having?: gabineteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: GabineteCountAggregateInputType | true
    _avg?: GabineteAvgAggregateInputType
    _sum?: GabineteSumAggregateInputType
    _min?: GabineteMinAggregateInputType
    _max?: GabineteMaxAggregateInputType
  }

  export type GabineteGroupByOutputType = {
    id: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date
    dataDeSaida: Date | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt: Date
    alunoid: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
    _count: GabineteCountAggregateOutputType | null
    _avg: GabineteAvgAggregateOutputType | null
    _sum: GabineteSumAggregateOutputType | null
    _min: GabineteMinAggregateOutputType | null
    _max: GabineteMaxAggregateOutputType | null
  }

  type GetGabineteGroupByPayload<T extends gabineteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<GabineteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof GabineteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], GabineteGroupByOutputType[P]>
            : GetScalarType<T[P], GabineteGroupByOutputType[P]>
        }
      >
    >


  export type gabineteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    codigoDereferencia?: boolean
    descricao?: boolean
    status?: boolean
    dataDeChegada?: boolean
    dataDeSaida?: boolean
    marca?: boolean
    modelo?: boolean
    nome?: boolean
    imagem?: boolean
    situacao?: boolean
    updatedAt?: boolean
    alunoid?: boolean
    modificadorid?: boolean
    descarteId?: boolean
    doacaoId?: boolean
    doacao?: boolean | gabinete$doacaoArgs<ExtArgs>
    descarte?: boolean | gabinete$descarteArgs<ExtArgs>
    usuario?: boolean | gabinete$usuarioArgs<ExtArgs>
    modificador?: boolean | gabinete$modificadorArgs<ExtArgs>
  }, ExtArgs["result"]["gabinete"]>

  export type gabineteSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    codigoDereferencia?: boolean
    descricao?: boolean
    status?: boolean
    dataDeChegada?: boolean
    dataDeSaida?: boolean
    marca?: boolean
    modelo?: boolean
    nome?: boolean
    imagem?: boolean
    situacao?: boolean
    updatedAt?: boolean
    alunoid?: boolean
    modificadorid?: boolean
    descarteId?: boolean
    doacaoId?: boolean
    doacao?: boolean | gabinete$doacaoArgs<ExtArgs>
    descarte?: boolean | gabinete$descarteArgs<ExtArgs>
    usuario?: boolean | gabinete$usuarioArgs<ExtArgs>
    modificador?: boolean | gabinete$modificadorArgs<ExtArgs>
  }, ExtArgs["result"]["gabinete"]>

  export type gabineteSelectScalar = {
    id?: boolean
    codigoDereferencia?: boolean
    descricao?: boolean
    status?: boolean
    dataDeChegada?: boolean
    dataDeSaida?: boolean
    marca?: boolean
    modelo?: boolean
    nome?: boolean
    imagem?: boolean
    situacao?: boolean
    updatedAt?: boolean
    alunoid?: boolean
    modificadorid?: boolean
    descarteId?: boolean
    doacaoId?: boolean
  }

  export type gabineteInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    doacao?: boolean | gabinete$doacaoArgs<ExtArgs>
    descarte?: boolean | gabinete$descarteArgs<ExtArgs>
    usuario?: boolean | gabinete$usuarioArgs<ExtArgs>
    modificador?: boolean | gabinete$modificadorArgs<ExtArgs>
  }
  export type gabineteIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    doacao?: boolean | gabinete$doacaoArgs<ExtArgs>
    descarte?: boolean | gabinete$descarteArgs<ExtArgs>
    usuario?: boolean | gabinete$usuarioArgs<ExtArgs>
    modificador?: boolean | gabinete$modificadorArgs<ExtArgs>
  }

  export type $gabinetePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "gabinete"
    objects: {
      doacao: Prisma.$doacaoPayload<ExtArgs> | null
      descarte: Prisma.$descartePayload<ExtArgs> | null
      usuario: Prisma.$alunoPayload<ExtArgs> | null
      modificador: Prisma.$alunoPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      codigoDereferencia: string
      descricao: string
      status: string
      dataDeChegada: Date
      dataDeSaida: Date | null
      marca: string
      modelo: string
      nome: string
      imagem: string
      situacao: string
      updatedAt: Date
      alunoid: number | null
      modificadorid: number | null
      descarteId: number | null
      doacaoId: number | null
    }, ExtArgs["result"]["gabinete"]>
    composites: {}
  }

  type gabineteGetPayload<S extends boolean | null | undefined | gabineteDefaultArgs> = $Result.GetResult<Prisma.$gabinetePayload, S>

  type gabineteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<gabineteFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: GabineteCountAggregateInputType | true
    }

  export interface gabineteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['gabinete'], meta: { name: 'gabinete' } }
    /**
     * Find zero or one Gabinete that matches the filter.
     * @param {gabineteFindUniqueArgs} args - Arguments to find a Gabinete
     * @example
     * // Get one Gabinete
     * const gabinete = await prisma.gabinete.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends gabineteFindUniqueArgs>(args: SelectSubset<T, gabineteFindUniqueArgs<ExtArgs>>): Prisma__gabineteClient<$Result.GetResult<Prisma.$gabinetePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Gabinete that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {gabineteFindUniqueOrThrowArgs} args - Arguments to find a Gabinete
     * @example
     * // Get one Gabinete
     * const gabinete = await prisma.gabinete.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends gabineteFindUniqueOrThrowArgs>(args: SelectSubset<T, gabineteFindUniqueOrThrowArgs<ExtArgs>>): Prisma__gabineteClient<$Result.GetResult<Prisma.$gabinetePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Gabinete that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gabineteFindFirstArgs} args - Arguments to find a Gabinete
     * @example
     * // Get one Gabinete
     * const gabinete = await prisma.gabinete.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends gabineteFindFirstArgs>(args?: SelectSubset<T, gabineteFindFirstArgs<ExtArgs>>): Prisma__gabineteClient<$Result.GetResult<Prisma.$gabinetePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Gabinete that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gabineteFindFirstOrThrowArgs} args - Arguments to find a Gabinete
     * @example
     * // Get one Gabinete
     * const gabinete = await prisma.gabinete.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends gabineteFindFirstOrThrowArgs>(args?: SelectSubset<T, gabineteFindFirstOrThrowArgs<ExtArgs>>): Prisma__gabineteClient<$Result.GetResult<Prisma.$gabinetePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Gabinetes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gabineteFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Gabinetes
     * const gabinetes = await prisma.gabinete.findMany()
     * 
     * // Get first 10 Gabinetes
     * const gabinetes = await prisma.gabinete.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const gabineteWithIdOnly = await prisma.gabinete.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends gabineteFindManyArgs>(args?: SelectSubset<T, gabineteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$gabinetePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Gabinete.
     * @param {gabineteCreateArgs} args - Arguments to create a Gabinete.
     * @example
     * // Create one Gabinete
     * const Gabinete = await prisma.gabinete.create({
     *   data: {
     *     // ... data to create a Gabinete
     *   }
     * })
     * 
     */
    create<T extends gabineteCreateArgs>(args: SelectSubset<T, gabineteCreateArgs<ExtArgs>>): Prisma__gabineteClient<$Result.GetResult<Prisma.$gabinetePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Gabinetes.
     * @param {gabineteCreateManyArgs} args - Arguments to create many Gabinetes.
     * @example
     * // Create many Gabinetes
     * const gabinete = await prisma.gabinete.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends gabineteCreateManyArgs>(args?: SelectSubset<T, gabineteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Gabinetes and returns the data saved in the database.
     * @param {gabineteCreateManyAndReturnArgs} args - Arguments to create many Gabinetes.
     * @example
     * // Create many Gabinetes
     * const gabinete = await prisma.gabinete.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Gabinetes and only return the `id`
     * const gabineteWithIdOnly = await prisma.gabinete.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends gabineteCreateManyAndReturnArgs>(args?: SelectSubset<T, gabineteCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$gabinetePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Gabinete.
     * @param {gabineteDeleteArgs} args - Arguments to delete one Gabinete.
     * @example
     * // Delete one Gabinete
     * const Gabinete = await prisma.gabinete.delete({
     *   where: {
     *     // ... filter to delete one Gabinete
     *   }
     * })
     * 
     */
    delete<T extends gabineteDeleteArgs>(args: SelectSubset<T, gabineteDeleteArgs<ExtArgs>>): Prisma__gabineteClient<$Result.GetResult<Prisma.$gabinetePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Gabinete.
     * @param {gabineteUpdateArgs} args - Arguments to update one Gabinete.
     * @example
     * // Update one Gabinete
     * const gabinete = await prisma.gabinete.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends gabineteUpdateArgs>(args: SelectSubset<T, gabineteUpdateArgs<ExtArgs>>): Prisma__gabineteClient<$Result.GetResult<Prisma.$gabinetePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Gabinetes.
     * @param {gabineteDeleteManyArgs} args - Arguments to filter Gabinetes to delete.
     * @example
     * // Delete a few Gabinetes
     * const { count } = await prisma.gabinete.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends gabineteDeleteManyArgs>(args?: SelectSubset<T, gabineteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Gabinetes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gabineteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Gabinetes
     * const gabinete = await prisma.gabinete.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends gabineteUpdateManyArgs>(args: SelectSubset<T, gabineteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Gabinete.
     * @param {gabineteUpsertArgs} args - Arguments to update or create a Gabinete.
     * @example
     * // Update or create a Gabinete
     * const gabinete = await prisma.gabinete.upsert({
     *   create: {
     *     // ... data to create a Gabinete
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Gabinete we want to update
     *   }
     * })
     */
    upsert<T extends gabineteUpsertArgs>(args: SelectSubset<T, gabineteUpsertArgs<ExtArgs>>): Prisma__gabineteClient<$Result.GetResult<Prisma.$gabinetePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Gabinetes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gabineteCountArgs} args - Arguments to filter Gabinetes to count.
     * @example
     * // Count the number of Gabinetes
     * const count = await prisma.gabinete.count({
     *   where: {
     *     // ... the filter for the Gabinetes we want to count
     *   }
     * })
    **/
    count<T extends gabineteCountArgs>(
      args?: Subset<T, gabineteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], GabineteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Gabinete.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GabineteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends GabineteAggregateArgs>(args: Subset<T, GabineteAggregateArgs>): Prisma.PrismaPromise<GetGabineteAggregateType<T>>

    /**
     * Group by Gabinete.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gabineteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends gabineteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: gabineteGroupByArgs['orderBy'] }
        : { orderBy?: gabineteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, gabineteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGabineteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the gabinete model
   */
  readonly fields: gabineteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for gabinete.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__gabineteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    doacao<T extends gabinete$doacaoArgs<ExtArgs> = {}>(args?: Subset<T, gabinete$doacaoArgs<ExtArgs>>): Prisma__doacaoClient<$Result.GetResult<Prisma.$doacaoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    descarte<T extends gabinete$descarteArgs<ExtArgs> = {}>(args?: Subset<T, gabinete$descarteArgs<ExtArgs>>): Prisma__descarteClient<$Result.GetResult<Prisma.$descartePayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    usuario<T extends gabinete$usuarioArgs<ExtArgs> = {}>(args?: Subset<T, gabinete$usuarioArgs<ExtArgs>>): Prisma__alunoClient<$Result.GetResult<Prisma.$alunoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    modificador<T extends gabinete$modificadorArgs<ExtArgs> = {}>(args?: Subset<T, gabinete$modificadorArgs<ExtArgs>>): Prisma__alunoClient<$Result.GetResult<Prisma.$alunoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the gabinete model
   */ 
  interface gabineteFieldRefs {
    readonly id: FieldRef<"gabinete", 'Int'>
    readonly codigoDereferencia: FieldRef<"gabinete", 'String'>
    readonly descricao: FieldRef<"gabinete", 'String'>
    readonly status: FieldRef<"gabinete", 'String'>
    readonly dataDeChegada: FieldRef<"gabinete", 'DateTime'>
    readonly dataDeSaida: FieldRef<"gabinete", 'DateTime'>
    readonly marca: FieldRef<"gabinete", 'String'>
    readonly modelo: FieldRef<"gabinete", 'String'>
    readonly nome: FieldRef<"gabinete", 'String'>
    readonly imagem: FieldRef<"gabinete", 'String'>
    readonly situacao: FieldRef<"gabinete", 'String'>
    readonly updatedAt: FieldRef<"gabinete", 'DateTime'>
    readonly alunoid: FieldRef<"gabinete", 'Int'>
    readonly modificadorid: FieldRef<"gabinete", 'Int'>
    readonly descarteId: FieldRef<"gabinete", 'Int'>
    readonly doacaoId: FieldRef<"gabinete", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * gabinete findUnique
   */
  export type gabineteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the gabinete
     */
    select?: gabineteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: gabineteInclude<ExtArgs> | null
    /**
     * Filter, which gabinete to fetch.
     */
    where: gabineteWhereUniqueInput
  }

  /**
   * gabinete findUniqueOrThrow
   */
  export type gabineteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the gabinete
     */
    select?: gabineteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: gabineteInclude<ExtArgs> | null
    /**
     * Filter, which gabinete to fetch.
     */
    where: gabineteWhereUniqueInput
  }

  /**
   * gabinete findFirst
   */
  export type gabineteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the gabinete
     */
    select?: gabineteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: gabineteInclude<ExtArgs> | null
    /**
     * Filter, which gabinete to fetch.
     */
    where?: gabineteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gabinetes to fetch.
     */
    orderBy?: gabineteOrderByWithRelationInput | gabineteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for gabinetes.
     */
    cursor?: gabineteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gabinetes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gabinetes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of gabinetes.
     */
    distinct?: GabineteScalarFieldEnum | GabineteScalarFieldEnum[]
  }

  /**
   * gabinete findFirstOrThrow
   */
  export type gabineteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the gabinete
     */
    select?: gabineteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: gabineteInclude<ExtArgs> | null
    /**
     * Filter, which gabinete to fetch.
     */
    where?: gabineteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gabinetes to fetch.
     */
    orderBy?: gabineteOrderByWithRelationInput | gabineteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for gabinetes.
     */
    cursor?: gabineteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gabinetes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gabinetes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of gabinetes.
     */
    distinct?: GabineteScalarFieldEnum | GabineteScalarFieldEnum[]
  }

  /**
   * gabinete findMany
   */
  export type gabineteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the gabinete
     */
    select?: gabineteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: gabineteInclude<ExtArgs> | null
    /**
     * Filter, which gabinetes to fetch.
     */
    where?: gabineteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gabinetes to fetch.
     */
    orderBy?: gabineteOrderByWithRelationInput | gabineteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing gabinetes.
     */
    cursor?: gabineteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gabinetes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gabinetes.
     */
    skip?: number
    distinct?: GabineteScalarFieldEnum | GabineteScalarFieldEnum[]
  }

  /**
   * gabinete create
   */
  export type gabineteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the gabinete
     */
    select?: gabineteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: gabineteInclude<ExtArgs> | null
    /**
     * The data needed to create a gabinete.
     */
    data: XOR<gabineteCreateInput, gabineteUncheckedCreateInput>
  }

  /**
   * gabinete createMany
   */
  export type gabineteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many gabinetes.
     */
    data: gabineteCreateManyInput | gabineteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * gabinete createManyAndReturn
   */
  export type gabineteCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the gabinete
     */
    select?: gabineteSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many gabinetes.
     */
    data: gabineteCreateManyInput | gabineteCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: gabineteIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * gabinete update
   */
  export type gabineteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the gabinete
     */
    select?: gabineteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: gabineteInclude<ExtArgs> | null
    /**
     * The data needed to update a gabinete.
     */
    data: XOR<gabineteUpdateInput, gabineteUncheckedUpdateInput>
    /**
     * Choose, which gabinete to update.
     */
    where: gabineteWhereUniqueInput
  }

  /**
   * gabinete updateMany
   */
  export type gabineteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update gabinetes.
     */
    data: XOR<gabineteUpdateManyMutationInput, gabineteUncheckedUpdateManyInput>
    /**
     * Filter which gabinetes to update
     */
    where?: gabineteWhereInput
  }

  /**
   * gabinete upsert
   */
  export type gabineteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the gabinete
     */
    select?: gabineteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: gabineteInclude<ExtArgs> | null
    /**
     * The filter to search for the gabinete to update in case it exists.
     */
    where: gabineteWhereUniqueInput
    /**
     * In case the gabinete found by the `where` argument doesn't exist, create a new gabinete with this data.
     */
    create: XOR<gabineteCreateInput, gabineteUncheckedCreateInput>
    /**
     * In case the gabinete was found with the provided `where` argument, update it with this data.
     */
    update: XOR<gabineteUpdateInput, gabineteUncheckedUpdateInput>
  }

  /**
   * gabinete delete
   */
  export type gabineteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the gabinete
     */
    select?: gabineteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: gabineteInclude<ExtArgs> | null
    /**
     * Filter which gabinete to delete.
     */
    where: gabineteWhereUniqueInput
  }

  /**
   * gabinete deleteMany
   */
  export type gabineteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which gabinetes to delete
     */
    where?: gabineteWhereInput
  }

  /**
   * gabinete.doacao
   */
  export type gabinete$doacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the doacao
     */
    select?: doacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: doacaoInclude<ExtArgs> | null
    where?: doacaoWhereInput
  }

  /**
   * gabinete.descarte
   */
  export type gabinete$descarteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the descarte
     */
    select?: descarteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: descarteInclude<ExtArgs> | null
    where?: descarteWhereInput
  }

  /**
   * gabinete.usuario
   */
  export type gabinete$usuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aluno
     */
    select?: alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alunoInclude<ExtArgs> | null
    where?: alunoWhereInput
  }

  /**
   * gabinete.modificador
   */
  export type gabinete$modificadorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aluno
     */
    select?: alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alunoInclude<ExtArgs> | null
    where?: alunoWhereInput
  }

  /**
   * gabinete without action
   */
  export type gabineteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the gabinete
     */
    select?: gabineteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: gabineteInclude<ExtArgs> | null
  }


  /**
   * Model monitor
   */

  export type AggregateMonitor = {
    _count: MonitorCountAggregateOutputType | null
    _avg: MonitorAvgAggregateOutputType | null
    _sum: MonitorSumAggregateOutputType | null
    _min: MonitorMinAggregateOutputType | null
    _max: MonitorMaxAggregateOutputType | null
  }

  export type MonitorAvgAggregateOutputType = {
    id: number | null
    polegadas: number | null
    alunoid: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
  }

  export type MonitorSumAggregateOutputType = {
    id: number | null
    polegadas: number | null
    alunoid: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
  }

  export type MonitorMinAggregateOutputType = {
    id: number | null
    codigoDereferencia: string | null
    descricao: string | null
    status: string | null
    dataDeChegada: Date | null
    dataDeSaida: Date | null
    marca: string | null
    modelo: string | null
    nome: string | null
    imagem: string | null
    situacao: string | null
    polegadas: number | null
    updatedAt: Date | null
    alunoid: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
  }

  export type MonitorMaxAggregateOutputType = {
    id: number | null
    codigoDereferencia: string | null
    descricao: string | null
    status: string | null
    dataDeChegada: Date | null
    dataDeSaida: Date | null
    marca: string | null
    modelo: string | null
    nome: string | null
    imagem: string | null
    situacao: string | null
    polegadas: number | null
    updatedAt: Date | null
    alunoid: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
  }

  export type MonitorCountAggregateOutputType = {
    id: number
    codigoDereferencia: number
    descricao: number
    status: number
    dataDeChegada: number
    dataDeSaida: number
    marca: number
    modelo: number
    nome: number
    imagem: number
    situacao: number
    polegadas: number
    updatedAt: number
    alunoid: number
    modificadorid: number
    descarteId: number
    doacaoId: number
    _all: number
  }


  export type MonitorAvgAggregateInputType = {
    id?: true
    polegadas?: true
    alunoid?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
  }

  export type MonitorSumAggregateInputType = {
    id?: true
    polegadas?: true
    alunoid?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
  }

  export type MonitorMinAggregateInputType = {
    id?: true
    codigoDereferencia?: true
    descricao?: true
    status?: true
    dataDeChegada?: true
    dataDeSaida?: true
    marca?: true
    modelo?: true
    nome?: true
    imagem?: true
    situacao?: true
    polegadas?: true
    updatedAt?: true
    alunoid?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
  }

  export type MonitorMaxAggregateInputType = {
    id?: true
    codigoDereferencia?: true
    descricao?: true
    status?: true
    dataDeChegada?: true
    dataDeSaida?: true
    marca?: true
    modelo?: true
    nome?: true
    imagem?: true
    situacao?: true
    polegadas?: true
    updatedAt?: true
    alunoid?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
  }

  export type MonitorCountAggregateInputType = {
    id?: true
    codigoDereferencia?: true
    descricao?: true
    status?: true
    dataDeChegada?: true
    dataDeSaida?: true
    marca?: true
    modelo?: true
    nome?: true
    imagem?: true
    situacao?: true
    polegadas?: true
    updatedAt?: true
    alunoid?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
    _all?: true
  }

  export type MonitorAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which monitor to aggregate.
     */
    where?: monitorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of monitors to fetch.
     */
    orderBy?: monitorOrderByWithRelationInput | monitorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: monitorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` monitors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` monitors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned monitors
    **/
    _count?: true | MonitorCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MonitorAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MonitorSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MonitorMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MonitorMaxAggregateInputType
  }

  export type GetMonitorAggregateType<T extends MonitorAggregateArgs> = {
        [P in keyof T & keyof AggregateMonitor]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMonitor[P]>
      : GetScalarType<T[P], AggregateMonitor[P]>
  }




  export type monitorGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: monitorWhereInput
    orderBy?: monitorOrderByWithAggregationInput | monitorOrderByWithAggregationInput[]
    by: MonitorScalarFieldEnum[] | MonitorScalarFieldEnum
    having?: monitorScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MonitorCountAggregateInputType | true
    _avg?: MonitorAvgAggregateInputType
    _sum?: MonitorSumAggregateInputType
    _min?: MonitorMinAggregateInputType
    _max?: MonitorMaxAggregateInputType
  }

  export type MonitorGroupByOutputType = {
    id: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date
    dataDeSaida: Date | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    polegadas: number
    updatedAt: Date
    alunoid: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
    _count: MonitorCountAggregateOutputType | null
    _avg: MonitorAvgAggregateOutputType | null
    _sum: MonitorSumAggregateOutputType | null
    _min: MonitorMinAggregateOutputType | null
    _max: MonitorMaxAggregateOutputType | null
  }

  type GetMonitorGroupByPayload<T extends monitorGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MonitorGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MonitorGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MonitorGroupByOutputType[P]>
            : GetScalarType<T[P], MonitorGroupByOutputType[P]>
        }
      >
    >


  export type monitorSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    codigoDereferencia?: boolean
    descricao?: boolean
    status?: boolean
    dataDeChegada?: boolean
    dataDeSaida?: boolean
    marca?: boolean
    modelo?: boolean
    nome?: boolean
    imagem?: boolean
    situacao?: boolean
    polegadas?: boolean
    updatedAt?: boolean
    alunoid?: boolean
    modificadorid?: boolean
    descarteId?: boolean
    doacaoId?: boolean
    doacao?: boolean | monitor$doacaoArgs<ExtArgs>
    descarte?: boolean | monitor$descarteArgs<ExtArgs>
    usuario?: boolean | monitor$usuarioArgs<ExtArgs>
    modificador?: boolean | monitor$modificadorArgs<ExtArgs>
  }, ExtArgs["result"]["monitor"]>

  export type monitorSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    codigoDereferencia?: boolean
    descricao?: boolean
    status?: boolean
    dataDeChegada?: boolean
    dataDeSaida?: boolean
    marca?: boolean
    modelo?: boolean
    nome?: boolean
    imagem?: boolean
    situacao?: boolean
    polegadas?: boolean
    updatedAt?: boolean
    alunoid?: boolean
    modificadorid?: boolean
    descarteId?: boolean
    doacaoId?: boolean
    doacao?: boolean | monitor$doacaoArgs<ExtArgs>
    descarte?: boolean | monitor$descarteArgs<ExtArgs>
    usuario?: boolean | monitor$usuarioArgs<ExtArgs>
    modificador?: boolean | monitor$modificadorArgs<ExtArgs>
  }, ExtArgs["result"]["monitor"]>

  export type monitorSelectScalar = {
    id?: boolean
    codigoDereferencia?: boolean
    descricao?: boolean
    status?: boolean
    dataDeChegada?: boolean
    dataDeSaida?: boolean
    marca?: boolean
    modelo?: boolean
    nome?: boolean
    imagem?: boolean
    situacao?: boolean
    polegadas?: boolean
    updatedAt?: boolean
    alunoid?: boolean
    modificadorid?: boolean
    descarteId?: boolean
    doacaoId?: boolean
  }

  export type monitorInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    doacao?: boolean | monitor$doacaoArgs<ExtArgs>
    descarte?: boolean | monitor$descarteArgs<ExtArgs>
    usuario?: boolean | monitor$usuarioArgs<ExtArgs>
    modificador?: boolean | monitor$modificadorArgs<ExtArgs>
  }
  export type monitorIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    doacao?: boolean | monitor$doacaoArgs<ExtArgs>
    descarte?: boolean | monitor$descarteArgs<ExtArgs>
    usuario?: boolean | monitor$usuarioArgs<ExtArgs>
    modificador?: boolean | monitor$modificadorArgs<ExtArgs>
  }

  export type $monitorPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "monitor"
    objects: {
      doacao: Prisma.$doacaoPayload<ExtArgs> | null
      descarte: Prisma.$descartePayload<ExtArgs> | null
      usuario: Prisma.$alunoPayload<ExtArgs> | null
      modificador: Prisma.$alunoPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      codigoDereferencia: string
      descricao: string
      status: string
      dataDeChegada: Date
      dataDeSaida: Date | null
      marca: string
      modelo: string
      nome: string
      imagem: string
      situacao: string
      polegadas: number
      updatedAt: Date
      alunoid: number | null
      modificadorid: number | null
      descarteId: number | null
      doacaoId: number | null
    }, ExtArgs["result"]["monitor"]>
    composites: {}
  }

  type monitorGetPayload<S extends boolean | null | undefined | monitorDefaultArgs> = $Result.GetResult<Prisma.$monitorPayload, S>

  type monitorCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<monitorFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: MonitorCountAggregateInputType | true
    }

  export interface monitorDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['monitor'], meta: { name: 'monitor' } }
    /**
     * Find zero or one Monitor that matches the filter.
     * @param {monitorFindUniqueArgs} args - Arguments to find a Monitor
     * @example
     * // Get one Monitor
     * const monitor = await prisma.monitor.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends monitorFindUniqueArgs>(args: SelectSubset<T, monitorFindUniqueArgs<ExtArgs>>): Prisma__monitorClient<$Result.GetResult<Prisma.$monitorPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Monitor that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {monitorFindUniqueOrThrowArgs} args - Arguments to find a Monitor
     * @example
     * // Get one Monitor
     * const monitor = await prisma.monitor.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends monitorFindUniqueOrThrowArgs>(args: SelectSubset<T, monitorFindUniqueOrThrowArgs<ExtArgs>>): Prisma__monitorClient<$Result.GetResult<Prisma.$monitorPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Monitor that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {monitorFindFirstArgs} args - Arguments to find a Monitor
     * @example
     * // Get one Monitor
     * const monitor = await prisma.monitor.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends monitorFindFirstArgs>(args?: SelectSubset<T, monitorFindFirstArgs<ExtArgs>>): Prisma__monitorClient<$Result.GetResult<Prisma.$monitorPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Monitor that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {monitorFindFirstOrThrowArgs} args - Arguments to find a Monitor
     * @example
     * // Get one Monitor
     * const monitor = await prisma.monitor.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends monitorFindFirstOrThrowArgs>(args?: SelectSubset<T, monitorFindFirstOrThrowArgs<ExtArgs>>): Prisma__monitorClient<$Result.GetResult<Prisma.$monitorPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Monitors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {monitorFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Monitors
     * const monitors = await prisma.monitor.findMany()
     * 
     * // Get first 10 Monitors
     * const monitors = await prisma.monitor.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const monitorWithIdOnly = await prisma.monitor.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends monitorFindManyArgs>(args?: SelectSubset<T, monitorFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$monitorPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Monitor.
     * @param {monitorCreateArgs} args - Arguments to create a Monitor.
     * @example
     * // Create one Monitor
     * const Monitor = await prisma.monitor.create({
     *   data: {
     *     // ... data to create a Monitor
     *   }
     * })
     * 
     */
    create<T extends monitorCreateArgs>(args: SelectSubset<T, monitorCreateArgs<ExtArgs>>): Prisma__monitorClient<$Result.GetResult<Prisma.$monitorPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Monitors.
     * @param {monitorCreateManyArgs} args - Arguments to create many Monitors.
     * @example
     * // Create many Monitors
     * const monitor = await prisma.monitor.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends monitorCreateManyArgs>(args?: SelectSubset<T, monitorCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Monitors and returns the data saved in the database.
     * @param {monitorCreateManyAndReturnArgs} args - Arguments to create many Monitors.
     * @example
     * // Create many Monitors
     * const monitor = await prisma.monitor.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Monitors and only return the `id`
     * const monitorWithIdOnly = await prisma.monitor.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends monitorCreateManyAndReturnArgs>(args?: SelectSubset<T, monitorCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$monitorPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Monitor.
     * @param {monitorDeleteArgs} args - Arguments to delete one Monitor.
     * @example
     * // Delete one Monitor
     * const Monitor = await prisma.monitor.delete({
     *   where: {
     *     // ... filter to delete one Monitor
     *   }
     * })
     * 
     */
    delete<T extends monitorDeleteArgs>(args: SelectSubset<T, monitorDeleteArgs<ExtArgs>>): Prisma__monitorClient<$Result.GetResult<Prisma.$monitorPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Monitor.
     * @param {monitorUpdateArgs} args - Arguments to update one Monitor.
     * @example
     * // Update one Monitor
     * const monitor = await prisma.monitor.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends monitorUpdateArgs>(args: SelectSubset<T, monitorUpdateArgs<ExtArgs>>): Prisma__monitorClient<$Result.GetResult<Prisma.$monitorPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Monitors.
     * @param {monitorDeleteManyArgs} args - Arguments to filter Monitors to delete.
     * @example
     * // Delete a few Monitors
     * const { count } = await prisma.monitor.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends monitorDeleteManyArgs>(args?: SelectSubset<T, monitorDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Monitors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {monitorUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Monitors
     * const monitor = await prisma.monitor.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends monitorUpdateManyArgs>(args: SelectSubset<T, monitorUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Monitor.
     * @param {monitorUpsertArgs} args - Arguments to update or create a Monitor.
     * @example
     * // Update or create a Monitor
     * const monitor = await prisma.monitor.upsert({
     *   create: {
     *     // ... data to create a Monitor
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Monitor we want to update
     *   }
     * })
     */
    upsert<T extends monitorUpsertArgs>(args: SelectSubset<T, monitorUpsertArgs<ExtArgs>>): Prisma__monitorClient<$Result.GetResult<Prisma.$monitorPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Monitors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {monitorCountArgs} args - Arguments to filter Monitors to count.
     * @example
     * // Count the number of Monitors
     * const count = await prisma.monitor.count({
     *   where: {
     *     // ... the filter for the Monitors we want to count
     *   }
     * })
    **/
    count<T extends monitorCountArgs>(
      args?: Subset<T, monitorCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MonitorCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Monitor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MonitorAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MonitorAggregateArgs>(args: Subset<T, MonitorAggregateArgs>): Prisma.PrismaPromise<GetMonitorAggregateType<T>>

    /**
     * Group by Monitor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {monitorGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends monitorGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: monitorGroupByArgs['orderBy'] }
        : { orderBy?: monitorGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, monitorGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMonitorGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the monitor model
   */
  readonly fields: monitorFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for monitor.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__monitorClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    doacao<T extends monitor$doacaoArgs<ExtArgs> = {}>(args?: Subset<T, monitor$doacaoArgs<ExtArgs>>): Prisma__doacaoClient<$Result.GetResult<Prisma.$doacaoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    descarte<T extends monitor$descarteArgs<ExtArgs> = {}>(args?: Subset<T, monitor$descarteArgs<ExtArgs>>): Prisma__descarteClient<$Result.GetResult<Prisma.$descartePayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    usuario<T extends monitor$usuarioArgs<ExtArgs> = {}>(args?: Subset<T, monitor$usuarioArgs<ExtArgs>>): Prisma__alunoClient<$Result.GetResult<Prisma.$alunoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    modificador<T extends monitor$modificadorArgs<ExtArgs> = {}>(args?: Subset<T, monitor$modificadorArgs<ExtArgs>>): Prisma__alunoClient<$Result.GetResult<Prisma.$alunoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the monitor model
   */ 
  interface monitorFieldRefs {
    readonly id: FieldRef<"monitor", 'Int'>
    readonly codigoDereferencia: FieldRef<"monitor", 'String'>
    readonly descricao: FieldRef<"monitor", 'String'>
    readonly status: FieldRef<"monitor", 'String'>
    readonly dataDeChegada: FieldRef<"monitor", 'DateTime'>
    readonly dataDeSaida: FieldRef<"monitor", 'DateTime'>
    readonly marca: FieldRef<"monitor", 'String'>
    readonly modelo: FieldRef<"monitor", 'String'>
    readonly nome: FieldRef<"monitor", 'String'>
    readonly imagem: FieldRef<"monitor", 'String'>
    readonly situacao: FieldRef<"monitor", 'String'>
    readonly polegadas: FieldRef<"monitor", 'Int'>
    readonly updatedAt: FieldRef<"monitor", 'DateTime'>
    readonly alunoid: FieldRef<"monitor", 'Int'>
    readonly modificadorid: FieldRef<"monitor", 'Int'>
    readonly descarteId: FieldRef<"monitor", 'Int'>
    readonly doacaoId: FieldRef<"monitor", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * monitor findUnique
   */
  export type monitorFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the monitor
     */
    select?: monitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: monitorInclude<ExtArgs> | null
    /**
     * Filter, which monitor to fetch.
     */
    where: monitorWhereUniqueInput
  }

  /**
   * monitor findUniqueOrThrow
   */
  export type monitorFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the monitor
     */
    select?: monitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: monitorInclude<ExtArgs> | null
    /**
     * Filter, which monitor to fetch.
     */
    where: monitorWhereUniqueInput
  }

  /**
   * monitor findFirst
   */
  export type monitorFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the monitor
     */
    select?: monitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: monitorInclude<ExtArgs> | null
    /**
     * Filter, which monitor to fetch.
     */
    where?: monitorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of monitors to fetch.
     */
    orderBy?: monitorOrderByWithRelationInput | monitorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for monitors.
     */
    cursor?: monitorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` monitors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` monitors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of monitors.
     */
    distinct?: MonitorScalarFieldEnum | MonitorScalarFieldEnum[]
  }

  /**
   * monitor findFirstOrThrow
   */
  export type monitorFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the monitor
     */
    select?: monitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: monitorInclude<ExtArgs> | null
    /**
     * Filter, which monitor to fetch.
     */
    where?: monitorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of monitors to fetch.
     */
    orderBy?: monitorOrderByWithRelationInput | monitorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for monitors.
     */
    cursor?: monitorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` monitors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` monitors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of monitors.
     */
    distinct?: MonitorScalarFieldEnum | MonitorScalarFieldEnum[]
  }

  /**
   * monitor findMany
   */
  export type monitorFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the monitor
     */
    select?: monitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: monitorInclude<ExtArgs> | null
    /**
     * Filter, which monitors to fetch.
     */
    where?: monitorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of monitors to fetch.
     */
    orderBy?: monitorOrderByWithRelationInput | monitorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing monitors.
     */
    cursor?: monitorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` monitors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` monitors.
     */
    skip?: number
    distinct?: MonitorScalarFieldEnum | MonitorScalarFieldEnum[]
  }

  /**
   * monitor create
   */
  export type monitorCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the monitor
     */
    select?: monitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: monitorInclude<ExtArgs> | null
    /**
     * The data needed to create a monitor.
     */
    data: XOR<monitorCreateInput, monitorUncheckedCreateInput>
  }

  /**
   * monitor createMany
   */
  export type monitorCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many monitors.
     */
    data: monitorCreateManyInput | monitorCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * monitor createManyAndReturn
   */
  export type monitorCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the monitor
     */
    select?: monitorSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many monitors.
     */
    data: monitorCreateManyInput | monitorCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: monitorIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * monitor update
   */
  export type monitorUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the monitor
     */
    select?: monitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: monitorInclude<ExtArgs> | null
    /**
     * The data needed to update a monitor.
     */
    data: XOR<monitorUpdateInput, monitorUncheckedUpdateInput>
    /**
     * Choose, which monitor to update.
     */
    where: monitorWhereUniqueInput
  }

  /**
   * monitor updateMany
   */
  export type monitorUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update monitors.
     */
    data: XOR<monitorUpdateManyMutationInput, monitorUncheckedUpdateManyInput>
    /**
     * Filter which monitors to update
     */
    where?: monitorWhereInput
  }

  /**
   * monitor upsert
   */
  export type monitorUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the monitor
     */
    select?: monitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: monitorInclude<ExtArgs> | null
    /**
     * The filter to search for the monitor to update in case it exists.
     */
    where: monitorWhereUniqueInput
    /**
     * In case the monitor found by the `where` argument doesn't exist, create a new monitor with this data.
     */
    create: XOR<monitorCreateInput, monitorUncheckedCreateInput>
    /**
     * In case the monitor was found with the provided `where` argument, update it with this data.
     */
    update: XOR<monitorUpdateInput, monitorUncheckedUpdateInput>
  }

  /**
   * monitor delete
   */
  export type monitorDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the monitor
     */
    select?: monitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: monitorInclude<ExtArgs> | null
    /**
     * Filter which monitor to delete.
     */
    where: monitorWhereUniqueInput
  }

  /**
   * monitor deleteMany
   */
  export type monitorDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which monitors to delete
     */
    where?: monitorWhereInput
  }

  /**
   * monitor.doacao
   */
  export type monitor$doacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the doacao
     */
    select?: doacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: doacaoInclude<ExtArgs> | null
    where?: doacaoWhereInput
  }

  /**
   * monitor.descarte
   */
  export type monitor$descarteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the descarte
     */
    select?: descarteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: descarteInclude<ExtArgs> | null
    where?: descarteWhereInput
  }

  /**
   * monitor.usuario
   */
  export type monitor$usuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aluno
     */
    select?: alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alunoInclude<ExtArgs> | null
    where?: alunoWhereInput
  }

  /**
   * monitor.modificador
   */
  export type monitor$modificadorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aluno
     */
    select?: alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alunoInclude<ExtArgs> | null
    where?: alunoWhereInput
  }

  /**
   * monitor without action
   */
  export type monitorDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the monitor
     */
    select?: monitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: monitorInclude<ExtArgs> | null
  }


  /**
   * Model mouse
   */

  export type AggregateMouse = {
    _count: MouseCountAggregateOutputType | null
    _avg: MouseAvgAggregateOutputType | null
    _sum: MouseSumAggregateOutputType | null
    _min: MouseMinAggregateOutputType | null
    _max: MouseMaxAggregateOutputType | null
  }

  export type MouseAvgAggregateOutputType = {
    id: number | null
    alunoid: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
  }

  export type MouseSumAggregateOutputType = {
    id: number | null
    alunoid: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
  }

  export type MouseMinAggregateOutputType = {
    id: number | null
    codigoDereferencia: string | null
    descricao: string | null
    status: string | null
    dataDeChegada: Date | null
    dataDeSaida: Date | null
    marca: string | null
    modelo: string | null
    nome: string | null
    imagem: string | null
    situacao: string | null
    tipoDeConexao: string | null
    updatedAt: Date | null
    alunoid: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
  }

  export type MouseMaxAggregateOutputType = {
    id: number | null
    codigoDereferencia: string | null
    descricao: string | null
    status: string | null
    dataDeChegada: Date | null
    dataDeSaida: Date | null
    marca: string | null
    modelo: string | null
    nome: string | null
    imagem: string | null
    situacao: string | null
    tipoDeConexao: string | null
    updatedAt: Date | null
    alunoid: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
  }

  export type MouseCountAggregateOutputType = {
    id: number
    codigoDereferencia: number
    descricao: number
    status: number
    dataDeChegada: number
    dataDeSaida: number
    marca: number
    modelo: number
    nome: number
    imagem: number
    situacao: number
    tipoDeConexao: number
    updatedAt: number
    alunoid: number
    modificadorid: number
    descarteId: number
    doacaoId: number
    _all: number
  }


  export type MouseAvgAggregateInputType = {
    id?: true
    alunoid?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
  }

  export type MouseSumAggregateInputType = {
    id?: true
    alunoid?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
  }

  export type MouseMinAggregateInputType = {
    id?: true
    codigoDereferencia?: true
    descricao?: true
    status?: true
    dataDeChegada?: true
    dataDeSaida?: true
    marca?: true
    modelo?: true
    nome?: true
    imagem?: true
    situacao?: true
    tipoDeConexao?: true
    updatedAt?: true
    alunoid?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
  }

  export type MouseMaxAggregateInputType = {
    id?: true
    codigoDereferencia?: true
    descricao?: true
    status?: true
    dataDeChegada?: true
    dataDeSaida?: true
    marca?: true
    modelo?: true
    nome?: true
    imagem?: true
    situacao?: true
    tipoDeConexao?: true
    updatedAt?: true
    alunoid?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
  }

  export type MouseCountAggregateInputType = {
    id?: true
    codigoDereferencia?: true
    descricao?: true
    status?: true
    dataDeChegada?: true
    dataDeSaida?: true
    marca?: true
    modelo?: true
    nome?: true
    imagem?: true
    situacao?: true
    tipoDeConexao?: true
    updatedAt?: true
    alunoid?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
    _all?: true
  }

  export type MouseAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which mouse to aggregate.
     */
    where?: mouseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mice to fetch.
     */
    orderBy?: mouseOrderByWithRelationInput | mouseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: mouseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mice from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mice.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned mice
    **/
    _count?: true | MouseCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MouseAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MouseSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MouseMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MouseMaxAggregateInputType
  }

  export type GetMouseAggregateType<T extends MouseAggregateArgs> = {
        [P in keyof T & keyof AggregateMouse]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMouse[P]>
      : GetScalarType<T[P], AggregateMouse[P]>
  }




  export type mouseGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: mouseWhereInput
    orderBy?: mouseOrderByWithAggregationInput | mouseOrderByWithAggregationInput[]
    by: MouseScalarFieldEnum[] | MouseScalarFieldEnum
    having?: mouseScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MouseCountAggregateInputType | true
    _avg?: MouseAvgAggregateInputType
    _sum?: MouseSumAggregateInputType
    _min?: MouseMinAggregateInputType
    _max?: MouseMaxAggregateInputType
  }

  export type MouseGroupByOutputType = {
    id: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date
    dataDeSaida: Date | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    tipoDeConexao: string
    updatedAt: Date
    alunoid: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
    _count: MouseCountAggregateOutputType | null
    _avg: MouseAvgAggregateOutputType | null
    _sum: MouseSumAggregateOutputType | null
    _min: MouseMinAggregateOutputType | null
    _max: MouseMaxAggregateOutputType | null
  }

  type GetMouseGroupByPayload<T extends mouseGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MouseGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MouseGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MouseGroupByOutputType[P]>
            : GetScalarType<T[P], MouseGroupByOutputType[P]>
        }
      >
    >


  export type mouseSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    codigoDereferencia?: boolean
    descricao?: boolean
    status?: boolean
    dataDeChegada?: boolean
    dataDeSaida?: boolean
    marca?: boolean
    modelo?: boolean
    nome?: boolean
    imagem?: boolean
    situacao?: boolean
    tipoDeConexao?: boolean
    updatedAt?: boolean
    alunoid?: boolean
    modificadorid?: boolean
    descarteId?: boolean
    doacaoId?: boolean
    doacao?: boolean | mouse$doacaoArgs<ExtArgs>
    descarte?: boolean | mouse$descarteArgs<ExtArgs>
    usuario?: boolean | mouse$usuarioArgs<ExtArgs>
    modificador?: boolean | mouse$modificadorArgs<ExtArgs>
  }, ExtArgs["result"]["mouse"]>

  export type mouseSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    codigoDereferencia?: boolean
    descricao?: boolean
    status?: boolean
    dataDeChegada?: boolean
    dataDeSaida?: boolean
    marca?: boolean
    modelo?: boolean
    nome?: boolean
    imagem?: boolean
    situacao?: boolean
    tipoDeConexao?: boolean
    updatedAt?: boolean
    alunoid?: boolean
    modificadorid?: boolean
    descarteId?: boolean
    doacaoId?: boolean
    doacao?: boolean | mouse$doacaoArgs<ExtArgs>
    descarte?: boolean | mouse$descarteArgs<ExtArgs>
    usuario?: boolean | mouse$usuarioArgs<ExtArgs>
    modificador?: boolean | mouse$modificadorArgs<ExtArgs>
  }, ExtArgs["result"]["mouse"]>

  export type mouseSelectScalar = {
    id?: boolean
    codigoDereferencia?: boolean
    descricao?: boolean
    status?: boolean
    dataDeChegada?: boolean
    dataDeSaida?: boolean
    marca?: boolean
    modelo?: boolean
    nome?: boolean
    imagem?: boolean
    situacao?: boolean
    tipoDeConexao?: boolean
    updatedAt?: boolean
    alunoid?: boolean
    modificadorid?: boolean
    descarteId?: boolean
    doacaoId?: boolean
  }

  export type mouseInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    doacao?: boolean | mouse$doacaoArgs<ExtArgs>
    descarte?: boolean | mouse$descarteArgs<ExtArgs>
    usuario?: boolean | mouse$usuarioArgs<ExtArgs>
    modificador?: boolean | mouse$modificadorArgs<ExtArgs>
  }
  export type mouseIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    doacao?: boolean | mouse$doacaoArgs<ExtArgs>
    descarte?: boolean | mouse$descarteArgs<ExtArgs>
    usuario?: boolean | mouse$usuarioArgs<ExtArgs>
    modificador?: boolean | mouse$modificadorArgs<ExtArgs>
  }

  export type $mousePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "mouse"
    objects: {
      doacao: Prisma.$doacaoPayload<ExtArgs> | null
      descarte: Prisma.$descartePayload<ExtArgs> | null
      usuario: Prisma.$alunoPayload<ExtArgs> | null
      modificador: Prisma.$alunoPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      codigoDereferencia: string
      descricao: string
      status: string
      dataDeChegada: Date
      dataDeSaida: Date | null
      marca: string
      modelo: string
      nome: string
      imagem: string
      situacao: string
      tipoDeConexao: string
      updatedAt: Date
      alunoid: number | null
      modificadorid: number | null
      descarteId: number | null
      doacaoId: number | null
    }, ExtArgs["result"]["mouse"]>
    composites: {}
  }

  type mouseGetPayload<S extends boolean | null | undefined | mouseDefaultArgs> = $Result.GetResult<Prisma.$mousePayload, S>

  type mouseCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<mouseFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: MouseCountAggregateInputType | true
    }

  export interface mouseDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['mouse'], meta: { name: 'mouse' } }
    /**
     * Find zero or one Mouse that matches the filter.
     * @param {mouseFindUniqueArgs} args - Arguments to find a Mouse
     * @example
     * // Get one Mouse
     * const mouse = await prisma.mouse.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends mouseFindUniqueArgs>(args: SelectSubset<T, mouseFindUniqueArgs<ExtArgs>>): Prisma__mouseClient<$Result.GetResult<Prisma.$mousePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Mouse that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {mouseFindUniqueOrThrowArgs} args - Arguments to find a Mouse
     * @example
     * // Get one Mouse
     * const mouse = await prisma.mouse.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends mouseFindUniqueOrThrowArgs>(args: SelectSubset<T, mouseFindUniqueOrThrowArgs<ExtArgs>>): Prisma__mouseClient<$Result.GetResult<Prisma.$mousePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Mouse that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mouseFindFirstArgs} args - Arguments to find a Mouse
     * @example
     * // Get one Mouse
     * const mouse = await prisma.mouse.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends mouseFindFirstArgs>(args?: SelectSubset<T, mouseFindFirstArgs<ExtArgs>>): Prisma__mouseClient<$Result.GetResult<Prisma.$mousePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Mouse that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mouseFindFirstOrThrowArgs} args - Arguments to find a Mouse
     * @example
     * // Get one Mouse
     * const mouse = await prisma.mouse.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends mouseFindFirstOrThrowArgs>(args?: SelectSubset<T, mouseFindFirstOrThrowArgs<ExtArgs>>): Prisma__mouseClient<$Result.GetResult<Prisma.$mousePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Mice that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mouseFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Mice
     * const mice = await prisma.mouse.findMany()
     * 
     * // Get first 10 Mice
     * const mice = await prisma.mouse.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const mouseWithIdOnly = await prisma.mouse.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends mouseFindManyArgs>(args?: SelectSubset<T, mouseFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mousePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Mouse.
     * @param {mouseCreateArgs} args - Arguments to create a Mouse.
     * @example
     * // Create one Mouse
     * const Mouse = await prisma.mouse.create({
     *   data: {
     *     // ... data to create a Mouse
     *   }
     * })
     * 
     */
    create<T extends mouseCreateArgs>(args: SelectSubset<T, mouseCreateArgs<ExtArgs>>): Prisma__mouseClient<$Result.GetResult<Prisma.$mousePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Mice.
     * @param {mouseCreateManyArgs} args - Arguments to create many Mice.
     * @example
     * // Create many Mice
     * const mouse = await prisma.mouse.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends mouseCreateManyArgs>(args?: SelectSubset<T, mouseCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Mice and returns the data saved in the database.
     * @param {mouseCreateManyAndReturnArgs} args - Arguments to create many Mice.
     * @example
     * // Create many Mice
     * const mouse = await prisma.mouse.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Mice and only return the `id`
     * const mouseWithIdOnly = await prisma.mouse.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends mouseCreateManyAndReturnArgs>(args?: SelectSubset<T, mouseCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mousePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Mouse.
     * @param {mouseDeleteArgs} args - Arguments to delete one Mouse.
     * @example
     * // Delete one Mouse
     * const Mouse = await prisma.mouse.delete({
     *   where: {
     *     // ... filter to delete one Mouse
     *   }
     * })
     * 
     */
    delete<T extends mouseDeleteArgs>(args: SelectSubset<T, mouseDeleteArgs<ExtArgs>>): Prisma__mouseClient<$Result.GetResult<Prisma.$mousePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Mouse.
     * @param {mouseUpdateArgs} args - Arguments to update one Mouse.
     * @example
     * // Update one Mouse
     * const mouse = await prisma.mouse.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends mouseUpdateArgs>(args: SelectSubset<T, mouseUpdateArgs<ExtArgs>>): Prisma__mouseClient<$Result.GetResult<Prisma.$mousePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Mice.
     * @param {mouseDeleteManyArgs} args - Arguments to filter Mice to delete.
     * @example
     * // Delete a few Mice
     * const { count } = await prisma.mouse.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends mouseDeleteManyArgs>(args?: SelectSubset<T, mouseDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Mice.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mouseUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Mice
     * const mouse = await prisma.mouse.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends mouseUpdateManyArgs>(args: SelectSubset<T, mouseUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Mouse.
     * @param {mouseUpsertArgs} args - Arguments to update or create a Mouse.
     * @example
     * // Update or create a Mouse
     * const mouse = await prisma.mouse.upsert({
     *   create: {
     *     // ... data to create a Mouse
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Mouse we want to update
     *   }
     * })
     */
    upsert<T extends mouseUpsertArgs>(args: SelectSubset<T, mouseUpsertArgs<ExtArgs>>): Prisma__mouseClient<$Result.GetResult<Prisma.$mousePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Mice.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mouseCountArgs} args - Arguments to filter Mice to count.
     * @example
     * // Count the number of Mice
     * const count = await prisma.mouse.count({
     *   where: {
     *     // ... the filter for the Mice we want to count
     *   }
     * })
    **/
    count<T extends mouseCountArgs>(
      args?: Subset<T, mouseCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MouseCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Mouse.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MouseAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MouseAggregateArgs>(args: Subset<T, MouseAggregateArgs>): Prisma.PrismaPromise<GetMouseAggregateType<T>>

    /**
     * Group by Mouse.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mouseGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends mouseGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: mouseGroupByArgs['orderBy'] }
        : { orderBy?: mouseGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, mouseGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMouseGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the mouse model
   */
  readonly fields: mouseFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for mouse.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__mouseClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    doacao<T extends mouse$doacaoArgs<ExtArgs> = {}>(args?: Subset<T, mouse$doacaoArgs<ExtArgs>>): Prisma__doacaoClient<$Result.GetResult<Prisma.$doacaoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    descarte<T extends mouse$descarteArgs<ExtArgs> = {}>(args?: Subset<T, mouse$descarteArgs<ExtArgs>>): Prisma__descarteClient<$Result.GetResult<Prisma.$descartePayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    usuario<T extends mouse$usuarioArgs<ExtArgs> = {}>(args?: Subset<T, mouse$usuarioArgs<ExtArgs>>): Prisma__alunoClient<$Result.GetResult<Prisma.$alunoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    modificador<T extends mouse$modificadorArgs<ExtArgs> = {}>(args?: Subset<T, mouse$modificadorArgs<ExtArgs>>): Prisma__alunoClient<$Result.GetResult<Prisma.$alunoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the mouse model
   */ 
  interface mouseFieldRefs {
    readonly id: FieldRef<"mouse", 'Int'>
    readonly codigoDereferencia: FieldRef<"mouse", 'String'>
    readonly descricao: FieldRef<"mouse", 'String'>
    readonly status: FieldRef<"mouse", 'String'>
    readonly dataDeChegada: FieldRef<"mouse", 'DateTime'>
    readonly dataDeSaida: FieldRef<"mouse", 'DateTime'>
    readonly marca: FieldRef<"mouse", 'String'>
    readonly modelo: FieldRef<"mouse", 'String'>
    readonly nome: FieldRef<"mouse", 'String'>
    readonly imagem: FieldRef<"mouse", 'String'>
    readonly situacao: FieldRef<"mouse", 'String'>
    readonly tipoDeConexao: FieldRef<"mouse", 'String'>
    readonly updatedAt: FieldRef<"mouse", 'DateTime'>
    readonly alunoid: FieldRef<"mouse", 'Int'>
    readonly modificadorid: FieldRef<"mouse", 'Int'>
    readonly descarteId: FieldRef<"mouse", 'Int'>
    readonly doacaoId: FieldRef<"mouse", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * mouse findUnique
   */
  export type mouseFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mouse
     */
    select?: mouseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mouseInclude<ExtArgs> | null
    /**
     * Filter, which mouse to fetch.
     */
    where: mouseWhereUniqueInput
  }

  /**
   * mouse findUniqueOrThrow
   */
  export type mouseFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mouse
     */
    select?: mouseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mouseInclude<ExtArgs> | null
    /**
     * Filter, which mouse to fetch.
     */
    where: mouseWhereUniqueInput
  }

  /**
   * mouse findFirst
   */
  export type mouseFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mouse
     */
    select?: mouseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mouseInclude<ExtArgs> | null
    /**
     * Filter, which mouse to fetch.
     */
    where?: mouseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mice to fetch.
     */
    orderBy?: mouseOrderByWithRelationInput | mouseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for mice.
     */
    cursor?: mouseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mice from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mice.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of mice.
     */
    distinct?: MouseScalarFieldEnum | MouseScalarFieldEnum[]
  }

  /**
   * mouse findFirstOrThrow
   */
  export type mouseFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mouse
     */
    select?: mouseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mouseInclude<ExtArgs> | null
    /**
     * Filter, which mouse to fetch.
     */
    where?: mouseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mice to fetch.
     */
    orderBy?: mouseOrderByWithRelationInput | mouseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for mice.
     */
    cursor?: mouseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mice from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mice.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of mice.
     */
    distinct?: MouseScalarFieldEnum | MouseScalarFieldEnum[]
  }

  /**
   * mouse findMany
   */
  export type mouseFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mouse
     */
    select?: mouseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mouseInclude<ExtArgs> | null
    /**
     * Filter, which mice to fetch.
     */
    where?: mouseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mice to fetch.
     */
    orderBy?: mouseOrderByWithRelationInput | mouseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing mice.
     */
    cursor?: mouseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mice from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mice.
     */
    skip?: number
    distinct?: MouseScalarFieldEnum | MouseScalarFieldEnum[]
  }

  /**
   * mouse create
   */
  export type mouseCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mouse
     */
    select?: mouseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mouseInclude<ExtArgs> | null
    /**
     * The data needed to create a mouse.
     */
    data: XOR<mouseCreateInput, mouseUncheckedCreateInput>
  }

  /**
   * mouse createMany
   */
  export type mouseCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many mice.
     */
    data: mouseCreateManyInput | mouseCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * mouse createManyAndReturn
   */
  export type mouseCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mouse
     */
    select?: mouseSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many mice.
     */
    data: mouseCreateManyInput | mouseCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mouseIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * mouse update
   */
  export type mouseUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mouse
     */
    select?: mouseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mouseInclude<ExtArgs> | null
    /**
     * The data needed to update a mouse.
     */
    data: XOR<mouseUpdateInput, mouseUncheckedUpdateInput>
    /**
     * Choose, which mouse to update.
     */
    where: mouseWhereUniqueInput
  }

  /**
   * mouse updateMany
   */
  export type mouseUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update mice.
     */
    data: XOR<mouseUpdateManyMutationInput, mouseUncheckedUpdateManyInput>
    /**
     * Filter which mice to update
     */
    where?: mouseWhereInput
  }

  /**
   * mouse upsert
   */
  export type mouseUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mouse
     */
    select?: mouseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mouseInclude<ExtArgs> | null
    /**
     * The filter to search for the mouse to update in case it exists.
     */
    where: mouseWhereUniqueInput
    /**
     * In case the mouse found by the `where` argument doesn't exist, create a new mouse with this data.
     */
    create: XOR<mouseCreateInput, mouseUncheckedCreateInput>
    /**
     * In case the mouse was found with the provided `where` argument, update it with this data.
     */
    update: XOR<mouseUpdateInput, mouseUncheckedUpdateInput>
  }

  /**
   * mouse delete
   */
  export type mouseDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mouse
     */
    select?: mouseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mouseInclude<ExtArgs> | null
    /**
     * Filter which mouse to delete.
     */
    where: mouseWhereUniqueInput
  }

  /**
   * mouse deleteMany
   */
  export type mouseDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which mice to delete
     */
    where?: mouseWhereInput
  }

  /**
   * mouse.doacao
   */
  export type mouse$doacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the doacao
     */
    select?: doacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: doacaoInclude<ExtArgs> | null
    where?: doacaoWhereInput
  }

  /**
   * mouse.descarte
   */
  export type mouse$descarteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the descarte
     */
    select?: descarteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: descarteInclude<ExtArgs> | null
    where?: descarteWhereInput
  }

  /**
   * mouse.usuario
   */
  export type mouse$usuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aluno
     */
    select?: alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alunoInclude<ExtArgs> | null
    where?: alunoWhereInput
  }

  /**
   * mouse.modificador
   */
  export type mouse$modificadorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aluno
     */
    select?: alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alunoInclude<ExtArgs> | null
    where?: alunoWhereInput
  }

  /**
   * mouse without action
   */
  export type mouseDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mouse
     */
    select?: mouseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mouseInclude<ExtArgs> | null
  }


  /**
   * Model estabilizador
   */

  export type AggregateEstabilizador = {
    _count: EstabilizadorCountAggregateOutputType | null
    _avg: EstabilizadorAvgAggregateOutputType | null
    _sum: EstabilizadorSumAggregateOutputType | null
    _min: EstabilizadorMinAggregateOutputType | null
    _max: EstabilizadorMaxAggregateOutputType | null
  }

  export type EstabilizadorAvgAggregateOutputType = {
    id: number | null
    potencia: number | null
    alunoid: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
  }

  export type EstabilizadorSumAggregateOutputType = {
    id: number | null
    potencia: number | null
    alunoid: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
  }

  export type EstabilizadorMinAggregateOutputType = {
    id: number | null
    codigoDereferencia: string | null
    descricao: string | null
    status: string | null
    dataDeChegada: Date | null
    dataDeSaida: Date | null
    marca: string | null
    modelo: string | null
    nome: string | null
    imagem: string | null
    situacao: string | null
    potencia: number | null
    updatedAt: Date | null
    alunoid: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
  }

  export type EstabilizadorMaxAggregateOutputType = {
    id: number | null
    codigoDereferencia: string | null
    descricao: string | null
    status: string | null
    dataDeChegada: Date | null
    dataDeSaida: Date | null
    marca: string | null
    modelo: string | null
    nome: string | null
    imagem: string | null
    situacao: string | null
    potencia: number | null
    updatedAt: Date | null
    alunoid: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
  }

  export type EstabilizadorCountAggregateOutputType = {
    id: number
    codigoDereferencia: number
    descricao: number
    status: number
    dataDeChegada: number
    dataDeSaida: number
    marca: number
    modelo: number
    nome: number
    imagem: number
    situacao: number
    potencia: number
    updatedAt: number
    alunoid: number
    modificadorid: number
    descarteId: number
    doacaoId: number
    _all: number
  }


  export type EstabilizadorAvgAggregateInputType = {
    id?: true
    potencia?: true
    alunoid?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
  }

  export type EstabilizadorSumAggregateInputType = {
    id?: true
    potencia?: true
    alunoid?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
  }

  export type EstabilizadorMinAggregateInputType = {
    id?: true
    codigoDereferencia?: true
    descricao?: true
    status?: true
    dataDeChegada?: true
    dataDeSaida?: true
    marca?: true
    modelo?: true
    nome?: true
    imagem?: true
    situacao?: true
    potencia?: true
    updatedAt?: true
    alunoid?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
  }

  export type EstabilizadorMaxAggregateInputType = {
    id?: true
    codigoDereferencia?: true
    descricao?: true
    status?: true
    dataDeChegada?: true
    dataDeSaida?: true
    marca?: true
    modelo?: true
    nome?: true
    imagem?: true
    situacao?: true
    potencia?: true
    updatedAt?: true
    alunoid?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
  }

  export type EstabilizadorCountAggregateInputType = {
    id?: true
    codigoDereferencia?: true
    descricao?: true
    status?: true
    dataDeChegada?: true
    dataDeSaida?: true
    marca?: true
    modelo?: true
    nome?: true
    imagem?: true
    situacao?: true
    potencia?: true
    updatedAt?: true
    alunoid?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
    _all?: true
  }

  export type EstabilizadorAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which estabilizador to aggregate.
     */
    where?: estabilizadorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of estabilizadors to fetch.
     */
    orderBy?: estabilizadorOrderByWithRelationInput | estabilizadorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: estabilizadorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` estabilizadors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` estabilizadors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned estabilizadors
    **/
    _count?: true | EstabilizadorCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EstabilizadorAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EstabilizadorSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EstabilizadorMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EstabilizadorMaxAggregateInputType
  }

  export type GetEstabilizadorAggregateType<T extends EstabilizadorAggregateArgs> = {
        [P in keyof T & keyof AggregateEstabilizador]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEstabilizador[P]>
      : GetScalarType<T[P], AggregateEstabilizador[P]>
  }




  export type estabilizadorGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: estabilizadorWhereInput
    orderBy?: estabilizadorOrderByWithAggregationInput | estabilizadorOrderByWithAggregationInput[]
    by: EstabilizadorScalarFieldEnum[] | EstabilizadorScalarFieldEnum
    having?: estabilizadorScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EstabilizadorCountAggregateInputType | true
    _avg?: EstabilizadorAvgAggregateInputType
    _sum?: EstabilizadorSumAggregateInputType
    _min?: EstabilizadorMinAggregateInputType
    _max?: EstabilizadorMaxAggregateInputType
  }

  export type EstabilizadorGroupByOutputType = {
    id: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date
    dataDeSaida: Date | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    potencia: number
    updatedAt: Date
    alunoid: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
    _count: EstabilizadorCountAggregateOutputType | null
    _avg: EstabilizadorAvgAggregateOutputType | null
    _sum: EstabilizadorSumAggregateOutputType | null
    _min: EstabilizadorMinAggregateOutputType | null
    _max: EstabilizadorMaxAggregateOutputType | null
  }

  type GetEstabilizadorGroupByPayload<T extends estabilizadorGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EstabilizadorGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EstabilizadorGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EstabilizadorGroupByOutputType[P]>
            : GetScalarType<T[P], EstabilizadorGroupByOutputType[P]>
        }
      >
    >


  export type estabilizadorSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    codigoDereferencia?: boolean
    descricao?: boolean
    status?: boolean
    dataDeChegada?: boolean
    dataDeSaida?: boolean
    marca?: boolean
    modelo?: boolean
    nome?: boolean
    imagem?: boolean
    situacao?: boolean
    potencia?: boolean
    updatedAt?: boolean
    alunoid?: boolean
    modificadorid?: boolean
    descarteId?: boolean
    doacaoId?: boolean
    doacao?: boolean | estabilizador$doacaoArgs<ExtArgs>
    descarte?: boolean | estabilizador$descarteArgs<ExtArgs>
    usuario?: boolean | estabilizador$usuarioArgs<ExtArgs>
    modificador?: boolean | estabilizador$modificadorArgs<ExtArgs>
  }, ExtArgs["result"]["estabilizador"]>

  export type estabilizadorSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    codigoDereferencia?: boolean
    descricao?: boolean
    status?: boolean
    dataDeChegada?: boolean
    dataDeSaida?: boolean
    marca?: boolean
    modelo?: boolean
    nome?: boolean
    imagem?: boolean
    situacao?: boolean
    potencia?: boolean
    updatedAt?: boolean
    alunoid?: boolean
    modificadorid?: boolean
    descarteId?: boolean
    doacaoId?: boolean
    doacao?: boolean | estabilizador$doacaoArgs<ExtArgs>
    descarte?: boolean | estabilizador$descarteArgs<ExtArgs>
    usuario?: boolean | estabilizador$usuarioArgs<ExtArgs>
    modificador?: boolean | estabilizador$modificadorArgs<ExtArgs>
  }, ExtArgs["result"]["estabilizador"]>

  export type estabilizadorSelectScalar = {
    id?: boolean
    codigoDereferencia?: boolean
    descricao?: boolean
    status?: boolean
    dataDeChegada?: boolean
    dataDeSaida?: boolean
    marca?: boolean
    modelo?: boolean
    nome?: boolean
    imagem?: boolean
    situacao?: boolean
    potencia?: boolean
    updatedAt?: boolean
    alunoid?: boolean
    modificadorid?: boolean
    descarteId?: boolean
    doacaoId?: boolean
  }

  export type estabilizadorInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    doacao?: boolean | estabilizador$doacaoArgs<ExtArgs>
    descarte?: boolean | estabilizador$descarteArgs<ExtArgs>
    usuario?: boolean | estabilizador$usuarioArgs<ExtArgs>
    modificador?: boolean | estabilizador$modificadorArgs<ExtArgs>
  }
  export type estabilizadorIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    doacao?: boolean | estabilizador$doacaoArgs<ExtArgs>
    descarte?: boolean | estabilizador$descarteArgs<ExtArgs>
    usuario?: boolean | estabilizador$usuarioArgs<ExtArgs>
    modificador?: boolean | estabilizador$modificadorArgs<ExtArgs>
  }

  export type $estabilizadorPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "estabilizador"
    objects: {
      doacao: Prisma.$doacaoPayload<ExtArgs> | null
      descarte: Prisma.$descartePayload<ExtArgs> | null
      usuario: Prisma.$alunoPayload<ExtArgs> | null
      modificador: Prisma.$alunoPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      codigoDereferencia: string
      descricao: string
      status: string
      dataDeChegada: Date
      dataDeSaida: Date | null
      marca: string
      modelo: string
      nome: string
      imagem: string
      situacao: string
      potencia: number
      updatedAt: Date
      alunoid: number | null
      modificadorid: number | null
      descarteId: number | null
      doacaoId: number | null
    }, ExtArgs["result"]["estabilizador"]>
    composites: {}
  }

  type estabilizadorGetPayload<S extends boolean | null | undefined | estabilizadorDefaultArgs> = $Result.GetResult<Prisma.$estabilizadorPayload, S>

  type estabilizadorCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<estabilizadorFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: EstabilizadorCountAggregateInputType | true
    }

  export interface estabilizadorDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['estabilizador'], meta: { name: 'estabilizador' } }
    /**
     * Find zero or one Estabilizador that matches the filter.
     * @param {estabilizadorFindUniqueArgs} args - Arguments to find a Estabilizador
     * @example
     * // Get one Estabilizador
     * const estabilizador = await prisma.estabilizador.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends estabilizadorFindUniqueArgs>(args: SelectSubset<T, estabilizadorFindUniqueArgs<ExtArgs>>): Prisma__estabilizadorClient<$Result.GetResult<Prisma.$estabilizadorPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Estabilizador that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {estabilizadorFindUniqueOrThrowArgs} args - Arguments to find a Estabilizador
     * @example
     * // Get one Estabilizador
     * const estabilizador = await prisma.estabilizador.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends estabilizadorFindUniqueOrThrowArgs>(args: SelectSubset<T, estabilizadorFindUniqueOrThrowArgs<ExtArgs>>): Prisma__estabilizadorClient<$Result.GetResult<Prisma.$estabilizadorPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Estabilizador that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estabilizadorFindFirstArgs} args - Arguments to find a Estabilizador
     * @example
     * // Get one Estabilizador
     * const estabilizador = await prisma.estabilizador.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends estabilizadorFindFirstArgs>(args?: SelectSubset<T, estabilizadorFindFirstArgs<ExtArgs>>): Prisma__estabilizadorClient<$Result.GetResult<Prisma.$estabilizadorPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Estabilizador that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estabilizadorFindFirstOrThrowArgs} args - Arguments to find a Estabilizador
     * @example
     * // Get one Estabilizador
     * const estabilizador = await prisma.estabilizador.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends estabilizadorFindFirstOrThrowArgs>(args?: SelectSubset<T, estabilizadorFindFirstOrThrowArgs<ExtArgs>>): Prisma__estabilizadorClient<$Result.GetResult<Prisma.$estabilizadorPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Estabilizadors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estabilizadorFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Estabilizadors
     * const estabilizadors = await prisma.estabilizador.findMany()
     * 
     * // Get first 10 Estabilizadors
     * const estabilizadors = await prisma.estabilizador.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const estabilizadorWithIdOnly = await prisma.estabilizador.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends estabilizadorFindManyArgs>(args?: SelectSubset<T, estabilizadorFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$estabilizadorPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Estabilizador.
     * @param {estabilizadorCreateArgs} args - Arguments to create a Estabilizador.
     * @example
     * // Create one Estabilizador
     * const Estabilizador = await prisma.estabilizador.create({
     *   data: {
     *     // ... data to create a Estabilizador
     *   }
     * })
     * 
     */
    create<T extends estabilizadorCreateArgs>(args: SelectSubset<T, estabilizadorCreateArgs<ExtArgs>>): Prisma__estabilizadorClient<$Result.GetResult<Prisma.$estabilizadorPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Estabilizadors.
     * @param {estabilizadorCreateManyArgs} args - Arguments to create many Estabilizadors.
     * @example
     * // Create many Estabilizadors
     * const estabilizador = await prisma.estabilizador.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends estabilizadorCreateManyArgs>(args?: SelectSubset<T, estabilizadorCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Estabilizadors and returns the data saved in the database.
     * @param {estabilizadorCreateManyAndReturnArgs} args - Arguments to create many Estabilizadors.
     * @example
     * // Create many Estabilizadors
     * const estabilizador = await prisma.estabilizador.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Estabilizadors and only return the `id`
     * const estabilizadorWithIdOnly = await prisma.estabilizador.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends estabilizadorCreateManyAndReturnArgs>(args?: SelectSubset<T, estabilizadorCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$estabilizadorPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Estabilizador.
     * @param {estabilizadorDeleteArgs} args - Arguments to delete one Estabilizador.
     * @example
     * // Delete one Estabilizador
     * const Estabilizador = await prisma.estabilizador.delete({
     *   where: {
     *     // ... filter to delete one Estabilizador
     *   }
     * })
     * 
     */
    delete<T extends estabilizadorDeleteArgs>(args: SelectSubset<T, estabilizadorDeleteArgs<ExtArgs>>): Prisma__estabilizadorClient<$Result.GetResult<Prisma.$estabilizadorPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Estabilizador.
     * @param {estabilizadorUpdateArgs} args - Arguments to update one Estabilizador.
     * @example
     * // Update one Estabilizador
     * const estabilizador = await prisma.estabilizador.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends estabilizadorUpdateArgs>(args: SelectSubset<T, estabilizadorUpdateArgs<ExtArgs>>): Prisma__estabilizadorClient<$Result.GetResult<Prisma.$estabilizadorPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Estabilizadors.
     * @param {estabilizadorDeleteManyArgs} args - Arguments to filter Estabilizadors to delete.
     * @example
     * // Delete a few Estabilizadors
     * const { count } = await prisma.estabilizador.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends estabilizadorDeleteManyArgs>(args?: SelectSubset<T, estabilizadorDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Estabilizadors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estabilizadorUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Estabilizadors
     * const estabilizador = await prisma.estabilizador.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends estabilizadorUpdateManyArgs>(args: SelectSubset<T, estabilizadorUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Estabilizador.
     * @param {estabilizadorUpsertArgs} args - Arguments to update or create a Estabilizador.
     * @example
     * // Update or create a Estabilizador
     * const estabilizador = await prisma.estabilizador.upsert({
     *   create: {
     *     // ... data to create a Estabilizador
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Estabilizador we want to update
     *   }
     * })
     */
    upsert<T extends estabilizadorUpsertArgs>(args: SelectSubset<T, estabilizadorUpsertArgs<ExtArgs>>): Prisma__estabilizadorClient<$Result.GetResult<Prisma.$estabilizadorPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Estabilizadors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estabilizadorCountArgs} args - Arguments to filter Estabilizadors to count.
     * @example
     * // Count the number of Estabilizadors
     * const count = await prisma.estabilizador.count({
     *   where: {
     *     // ... the filter for the Estabilizadors we want to count
     *   }
     * })
    **/
    count<T extends estabilizadorCountArgs>(
      args?: Subset<T, estabilizadorCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EstabilizadorCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Estabilizador.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstabilizadorAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EstabilizadorAggregateArgs>(args: Subset<T, EstabilizadorAggregateArgs>): Prisma.PrismaPromise<GetEstabilizadorAggregateType<T>>

    /**
     * Group by Estabilizador.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estabilizadorGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends estabilizadorGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: estabilizadorGroupByArgs['orderBy'] }
        : { orderBy?: estabilizadorGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, estabilizadorGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEstabilizadorGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the estabilizador model
   */
  readonly fields: estabilizadorFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for estabilizador.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__estabilizadorClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    doacao<T extends estabilizador$doacaoArgs<ExtArgs> = {}>(args?: Subset<T, estabilizador$doacaoArgs<ExtArgs>>): Prisma__doacaoClient<$Result.GetResult<Prisma.$doacaoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    descarte<T extends estabilizador$descarteArgs<ExtArgs> = {}>(args?: Subset<T, estabilizador$descarteArgs<ExtArgs>>): Prisma__descarteClient<$Result.GetResult<Prisma.$descartePayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    usuario<T extends estabilizador$usuarioArgs<ExtArgs> = {}>(args?: Subset<T, estabilizador$usuarioArgs<ExtArgs>>): Prisma__alunoClient<$Result.GetResult<Prisma.$alunoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    modificador<T extends estabilizador$modificadorArgs<ExtArgs> = {}>(args?: Subset<T, estabilizador$modificadorArgs<ExtArgs>>): Prisma__alunoClient<$Result.GetResult<Prisma.$alunoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the estabilizador model
   */ 
  interface estabilizadorFieldRefs {
    readonly id: FieldRef<"estabilizador", 'Int'>
    readonly codigoDereferencia: FieldRef<"estabilizador", 'String'>
    readonly descricao: FieldRef<"estabilizador", 'String'>
    readonly status: FieldRef<"estabilizador", 'String'>
    readonly dataDeChegada: FieldRef<"estabilizador", 'DateTime'>
    readonly dataDeSaida: FieldRef<"estabilizador", 'DateTime'>
    readonly marca: FieldRef<"estabilizador", 'String'>
    readonly modelo: FieldRef<"estabilizador", 'String'>
    readonly nome: FieldRef<"estabilizador", 'String'>
    readonly imagem: FieldRef<"estabilizador", 'String'>
    readonly situacao: FieldRef<"estabilizador", 'String'>
    readonly potencia: FieldRef<"estabilizador", 'Int'>
    readonly updatedAt: FieldRef<"estabilizador", 'DateTime'>
    readonly alunoid: FieldRef<"estabilizador", 'Int'>
    readonly modificadorid: FieldRef<"estabilizador", 'Int'>
    readonly descarteId: FieldRef<"estabilizador", 'Int'>
    readonly doacaoId: FieldRef<"estabilizador", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * estabilizador findUnique
   */
  export type estabilizadorFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estabilizador
     */
    select?: estabilizadorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estabilizadorInclude<ExtArgs> | null
    /**
     * Filter, which estabilizador to fetch.
     */
    where: estabilizadorWhereUniqueInput
  }

  /**
   * estabilizador findUniqueOrThrow
   */
  export type estabilizadorFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estabilizador
     */
    select?: estabilizadorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estabilizadorInclude<ExtArgs> | null
    /**
     * Filter, which estabilizador to fetch.
     */
    where: estabilizadorWhereUniqueInput
  }

  /**
   * estabilizador findFirst
   */
  export type estabilizadorFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estabilizador
     */
    select?: estabilizadorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estabilizadorInclude<ExtArgs> | null
    /**
     * Filter, which estabilizador to fetch.
     */
    where?: estabilizadorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of estabilizadors to fetch.
     */
    orderBy?: estabilizadorOrderByWithRelationInput | estabilizadorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for estabilizadors.
     */
    cursor?: estabilizadorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` estabilizadors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` estabilizadors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of estabilizadors.
     */
    distinct?: EstabilizadorScalarFieldEnum | EstabilizadorScalarFieldEnum[]
  }

  /**
   * estabilizador findFirstOrThrow
   */
  export type estabilizadorFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estabilizador
     */
    select?: estabilizadorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estabilizadorInclude<ExtArgs> | null
    /**
     * Filter, which estabilizador to fetch.
     */
    where?: estabilizadorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of estabilizadors to fetch.
     */
    orderBy?: estabilizadorOrderByWithRelationInput | estabilizadorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for estabilizadors.
     */
    cursor?: estabilizadorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` estabilizadors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` estabilizadors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of estabilizadors.
     */
    distinct?: EstabilizadorScalarFieldEnum | EstabilizadorScalarFieldEnum[]
  }

  /**
   * estabilizador findMany
   */
  export type estabilizadorFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estabilizador
     */
    select?: estabilizadorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estabilizadorInclude<ExtArgs> | null
    /**
     * Filter, which estabilizadors to fetch.
     */
    where?: estabilizadorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of estabilizadors to fetch.
     */
    orderBy?: estabilizadorOrderByWithRelationInput | estabilizadorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing estabilizadors.
     */
    cursor?: estabilizadorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` estabilizadors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` estabilizadors.
     */
    skip?: number
    distinct?: EstabilizadorScalarFieldEnum | EstabilizadorScalarFieldEnum[]
  }

  /**
   * estabilizador create
   */
  export type estabilizadorCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estabilizador
     */
    select?: estabilizadorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estabilizadorInclude<ExtArgs> | null
    /**
     * The data needed to create a estabilizador.
     */
    data: XOR<estabilizadorCreateInput, estabilizadorUncheckedCreateInput>
  }

  /**
   * estabilizador createMany
   */
  export type estabilizadorCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many estabilizadors.
     */
    data: estabilizadorCreateManyInput | estabilizadorCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * estabilizador createManyAndReturn
   */
  export type estabilizadorCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estabilizador
     */
    select?: estabilizadorSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many estabilizadors.
     */
    data: estabilizadorCreateManyInput | estabilizadorCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estabilizadorIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * estabilizador update
   */
  export type estabilizadorUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estabilizador
     */
    select?: estabilizadorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estabilizadorInclude<ExtArgs> | null
    /**
     * The data needed to update a estabilizador.
     */
    data: XOR<estabilizadorUpdateInput, estabilizadorUncheckedUpdateInput>
    /**
     * Choose, which estabilizador to update.
     */
    where: estabilizadorWhereUniqueInput
  }

  /**
   * estabilizador updateMany
   */
  export type estabilizadorUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update estabilizadors.
     */
    data: XOR<estabilizadorUpdateManyMutationInput, estabilizadorUncheckedUpdateManyInput>
    /**
     * Filter which estabilizadors to update
     */
    where?: estabilizadorWhereInput
  }

  /**
   * estabilizador upsert
   */
  export type estabilizadorUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estabilizador
     */
    select?: estabilizadorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estabilizadorInclude<ExtArgs> | null
    /**
     * The filter to search for the estabilizador to update in case it exists.
     */
    where: estabilizadorWhereUniqueInput
    /**
     * In case the estabilizador found by the `where` argument doesn't exist, create a new estabilizador with this data.
     */
    create: XOR<estabilizadorCreateInput, estabilizadorUncheckedCreateInput>
    /**
     * In case the estabilizador was found with the provided `where` argument, update it with this data.
     */
    update: XOR<estabilizadorUpdateInput, estabilizadorUncheckedUpdateInput>
  }

  /**
   * estabilizador delete
   */
  export type estabilizadorDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estabilizador
     */
    select?: estabilizadorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estabilizadorInclude<ExtArgs> | null
    /**
     * Filter which estabilizador to delete.
     */
    where: estabilizadorWhereUniqueInput
  }

  /**
   * estabilizador deleteMany
   */
  export type estabilizadorDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which estabilizadors to delete
     */
    where?: estabilizadorWhereInput
  }

  /**
   * estabilizador.doacao
   */
  export type estabilizador$doacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the doacao
     */
    select?: doacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: doacaoInclude<ExtArgs> | null
    where?: doacaoWhereInput
  }

  /**
   * estabilizador.descarte
   */
  export type estabilizador$descarteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the descarte
     */
    select?: descarteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: descarteInclude<ExtArgs> | null
    where?: descarteWhereInput
  }

  /**
   * estabilizador.usuario
   */
  export type estabilizador$usuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aluno
     */
    select?: alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alunoInclude<ExtArgs> | null
    where?: alunoWhereInput
  }

  /**
   * estabilizador.modificador
   */
  export type estabilizador$modificadorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aluno
     */
    select?: alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alunoInclude<ExtArgs> | null
    where?: alunoWhereInput
  }

  /**
   * estabilizador without action
   */
  export type estabilizadorDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estabilizador
     */
    select?: estabilizadorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estabilizadorInclude<ExtArgs> | null
  }


  /**
   * Model impressora
   */

  export type AggregateImpressora = {
    _count: ImpressoraCountAggregateOutputType | null
    _avg: ImpressoraAvgAggregateOutputType | null
    _sum: ImpressoraSumAggregateOutputType | null
    _min: ImpressoraMinAggregateOutputType | null
    _max: ImpressoraMaxAggregateOutputType | null
  }

  export type ImpressoraAvgAggregateOutputType = {
    id: number | null
    alunoid: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
  }

  export type ImpressoraSumAggregateOutputType = {
    id: number | null
    alunoid: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
  }

  export type ImpressoraMinAggregateOutputType = {
    id: number | null
    codigoDereferencia: string | null
    descricao: string | null
    status: string | null
    dataDeChegada: Date | null
    dataDeSaida: Date | null
    marca: string | null
    modelo: string | null
    nome: string | null
    imagem: string | null
    situacao: string | null
    tipoDeTinta: string | null
    updatedAt: Date | null
    alunoid: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
  }

  export type ImpressoraMaxAggregateOutputType = {
    id: number | null
    codigoDereferencia: string | null
    descricao: string | null
    status: string | null
    dataDeChegada: Date | null
    dataDeSaida: Date | null
    marca: string | null
    modelo: string | null
    nome: string | null
    imagem: string | null
    situacao: string | null
    tipoDeTinta: string | null
    updatedAt: Date | null
    alunoid: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
  }

  export type ImpressoraCountAggregateOutputType = {
    id: number
    codigoDereferencia: number
    descricao: number
    status: number
    dataDeChegada: number
    dataDeSaida: number
    marca: number
    modelo: number
    nome: number
    imagem: number
    situacao: number
    tipoDeTinta: number
    updatedAt: number
    alunoid: number
    modificadorid: number
    descarteId: number
    doacaoId: number
    _all: number
  }


  export type ImpressoraAvgAggregateInputType = {
    id?: true
    alunoid?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
  }

  export type ImpressoraSumAggregateInputType = {
    id?: true
    alunoid?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
  }

  export type ImpressoraMinAggregateInputType = {
    id?: true
    codigoDereferencia?: true
    descricao?: true
    status?: true
    dataDeChegada?: true
    dataDeSaida?: true
    marca?: true
    modelo?: true
    nome?: true
    imagem?: true
    situacao?: true
    tipoDeTinta?: true
    updatedAt?: true
    alunoid?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
  }

  export type ImpressoraMaxAggregateInputType = {
    id?: true
    codigoDereferencia?: true
    descricao?: true
    status?: true
    dataDeChegada?: true
    dataDeSaida?: true
    marca?: true
    modelo?: true
    nome?: true
    imagem?: true
    situacao?: true
    tipoDeTinta?: true
    updatedAt?: true
    alunoid?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
  }

  export type ImpressoraCountAggregateInputType = {
    id?: true
    codigoDereferencia?: true
    descricao?: true
    status?: true
    dataDeChegada?: true
    dataDeSaida?: true
    marca?: true
    modelo?: true
    nome?: true
    imagem?: true
    situacao?: true
    tipoDeTinta?: true
    updatedAt?: true
    alunoid?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
    _all?: true
  }

  export type ImpressoraAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which impressora to aggregate.
     */
    where?: impressoraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of impressoras to fetch.
     */
    orderBy?: impressoraOrderByWithRelationInput | impressoraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: impressoraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` impressoras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` impressoras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned impressoras
    **/
    _count?: true | ImpressoraCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ImpressoraAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ImpressoraSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ImpressoraMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ImpressoraMaxAggregateInputType
  }

  export type GetImpressoraAggregateType<T extends ImpressoraAggregateArgs> = {
        [P in keyof T & keyof AggregateImpressora]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateImpressora[P]>
      : GetScalarType<T[P], AggregateImpressora[P]>
  }




  export type impressoraGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: impressoraWhereInput
    orderBy?: impressoraOrderByWithAggregationInput | impressoraOrderByWithAggregationInput[]
    by: ImpressoraScalarFieldEnum[] | ImpressoraScalarFieldEnum
    having?: impressoraScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ImpressoraCountAggregateInputType | true
    _avg?: ImpressoraAvgAggregateInputType
    _sum?: ImpressoraSumAggregateInputType
    _min?: ImpressoraMinAggregateInputType
    _max?: ImpressoraMaxAggregateInputType
  }

  export type ImpressoraGroupByOutputType = {
    id: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date
    dataDeSaida: Date | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    tipoDeTinta: string
    updatedAt: Date
    alunoid: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
    _count: ImpressoraCountAggregateOutputType | null
    _avg: ImpressoraAvgAggregateOutputType | null
    _sum: ImpressoraSumAggregateOutputType | null
    _min: ImpressoraMinAggregateOutputType | null
    _max: ImpressoraMaxAggregateOutputType | null
  }

  type GetImpressoraGroupByPayload<T extends impressoraGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ImpressoraGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ImpressoraGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ImpressoraGroupByOutputType[P]>
            : GetScalarType<T[P], ImpressoraGroupByOutputType[P]>
        }
      >
    >


  export type impressoraSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    codigoDereferencia?: boolean
    descricao?: boolean
    status?: boolean
    dataDeChegada?: boolean
    dataDeSaida?: boolean
    marca?: boolean
    modelo?: boolean
    nome?: boolean
    imagem?: boolean
    situacao?: boolean
    tipoDeTinta?: boolean
    updatedAt?: boolean
    alunoid?: boolean
    modificadorid?: boolean
    descarteId?: boolean
    doacaoId?: boolean
    doacao?: boolean | impressora$doacaoArgs<ExtArgs>
    descarte?: boolean | impressora$descarteArgs<ExtArgs>
    usuario?: boolean | impressora$usuarioArgs<ExtArgs>
    modificador?: boolean | impressora$modificadorArgs<ExtArgs>
  }, ExtArgs["result"]["impressora"]>

  export type impressoraSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    codigoDereferencia?: boolean
    descricao?: boolean
    status?: boolean
    dataDeChegada?: boolean
    dataDeSaida?: boolean
    marca?: boolean
    modelo?: boolean
    nome?: boolean
    imagem?: boolean
    situacao?: boolean
    tipoDeTinta?: boolean
    updatedAt?: boolean
    alunoid?: boolean
    modificadorid?: boolean
    descarteId?: boolean
    doacaoId?: boolean
    doacao?: boolean | impressora$doacaoArgs<ExtArgs>
    descarte?: boolean | impressora$descarteArgs<ExtArgs>
    usuario?: boolean | impressora$usuarioArgs<ExtArgs>
    modificador?: boolean | impressora$modificadorArgs<ExtArgs>
  }, ExtArgs["result"]["impressora"]>

  export type impressoraSelectScalar = {
    id?: boolean
    codigoDereferencia?: boolean
    descricao?: boolean
    status?: boolean
    dataDeChegada?: boolean
    dataDeSaida?: boolean
    marca?: boolean
    modelo?: boolean
    nome?: boolean
    imagem?: boolean
    situacao?: boolean
    tipoDeTinta?: boolean
    updatedAt?: boolean
    alunoid?: boolean
    modificadorid?: boolean
    descarteId?: boolean
    doacaoId?: boolean
  }

  export type impressoraInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    doacao?: boolean | impressora$doacaoArgs<ExtArgs>
    descarte?: boolean | impressora$descarteArgs<ExtArgs>
    usuario?: boolean | impressora$usuarioArgs<ExtArgs>
    modificador?: boolean | impressora$modificadorArgs<ExtArgs>
  }
  export type impressoraIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    doacao?: boolean | impressora$doacaoArgs<ExtArgs>
    descarte?: boolean | impressora$descarteArgs<ExtArgs>
    usuario?: boolean | impressora$usuarioArgs<ExtArgs>
    modificador?: boolean | impressora$modificadorArgs<ExtArgs>
  }

  export type $impressoraPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "impressora"
    objects: {
      doacao: Prisma.$doacaoPayload<ExtArgs> | null
      descarte: Prisma.$descartePayload<ExtArgs> | null
      usuario: Prisma.$alunoPayload<ExtArgs> | null
      modificador: Prisma.$alunoPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      codigoDereferencia: string
      descricao: string
      status: string
      dataDeChegada: Date
      dataDeSaida: Date | null
      marca: string
      modelo: string
      nome: string
      imagem: string
      situacao: string
      tipoDeTinta: string
      updatedAt: Date
      alunoid: number | null
      modificadorid: number | null
      descarteId: number | null
      doacaoId: number | null
    }, ExtArgs["result"]["impressora"]>
    composites: {}
  }

  type impressoraGetPayload<S extends boolean | null | undefined | impressoraDefaultArgs> = $Result.GetResult<Prisma.$impressoraPayload, S>

  type impressoraCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<impressoraFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ImpressoraCountAggregateInputType | true
    }

  export interface impressoraDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['impressora'], meta: { name: 'impressora' } }
    /**
     * Find zero or one Impressora that matches the filter.
     * @param {impressoraFindUniqueArgs} args - Arguments to find a Impressora
     * @example
     * // Get one Impressora
     * const impressora = await prisma.impressora.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends impressoraFindUniqueArgs>(args: SelectSubset<T, impressoraFindUniqueArgs<ExtArgs>>): Prisma__impressoraClient<$Result.GetResult<Prisma.$impressoraPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Impressora that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {impressoraFindUniqueOrThrowArgs} args - Arguments to find a Impressora
     * @example
     * // Get one Impressora
     * const impressora = await prisma.impressora.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends impressoraFindUniqueOrThrowArgs>(args: SelectSubset<T, impressoraFindUniqueOrThrowArgs<ExtArgs>>): Prisma__impressoraClient<$Result.GetResult<Prisma.$impressoraPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Impressora that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {impressoraFindFirstArgs} args - Arguments to find a Impressora
     * @example
     * // Get one Impressora
     * const impressora = await prisma.impressora.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends impressoraFindFirstArgs>(args?: SelectSubset<T, impressoraFindFirstArgs<ExtArgs>>): Prisma__impressoraClient<$Result.GetResult<Prisma.$impressoraPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Impressora that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {impressoraFindFirstOrThrowArgs} args - Arguments to find a Impressora
     * @example
     * // Get one Impressora
     * const impressora = await prisma.impressora.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends impressoraFindFirstOrThrowArgs>(args?: SelectSubset<T, impressoraFindFirstOrThrowArgs<ExtArgs>>): Prisma__impressoraClient<$Result.GetResult<Prisma.$impressoraPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Impressoras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {impressoraFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Impressoras
     * const impressoras = await prisma.impressora.findMany()
     * 
     * // Get first 10 Impressoras
     * const impressoras = await prisma.impressora.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const impressoraWithIdOnly = await prisma.impressora.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends impressoraFindManyArgs>(args?: SelectSubset<T, impressoraFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$impressoraPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Impressora.
     * @param {impressoraCreateArgs} args - Arguments to create a Impressora.
     * @example
     * // Create one Impressora
     * const Impressora = await prisma.impressora.create({
     *   data: {
     *     // ... data to create a Impressora
     *   }
     * })
     * 
     */
    create<T extends impressoraCreateArgs>(args: SelectSubset<T, impressoraCreateArgs<ExtArgs>>): Prisma__impressoraClient<$Result.GetResult<Prisma.$impressoraPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Impressoras.
     * @param {impressoraCreateManyArgs} args - Arguments to create many Impressoras.
     * @example
     * // Create many Impressoras
     * const impressora = await prisma.impressora.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends impressoraCreateManyArgs>(args?: SelectSubset<T, impressoraCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Impressoras and returns the data saved in the database.
     * @param {impressoraCreateManyAndReturnArgs} args - Arguments to create many Impressoras.
     * @example
     * // Create many Impressoras
     * const impressora = await prisma.impressora.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Impressoras and only return the `id`
     * const impressoraWithIdOnly = await prisma.impressora.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends impressoraCreateManyAndReturnArgs>(args?: SelectSubset<T, impressoraCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$impressoraPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Impressora.
     * @param {impressoraDeleteArgs} args - Arguments to delete one Impressora.
     * @example
     * // Delete one Impressora
     * const Impressora = await prisma.impressora.delete({
     *   where: {
     *     // ... filter to delete one Impressora
     *   }
     * })
     * 
     */
    delete<T extends impressoraDeleteArgs>(args: SelectSubset<T, impressoraDeleteArgs<ExtArgs>>): Prisma__impressoraClient<$Result.GetResult<Prisma.$impressoraPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Impressora.
     * @param {impressoraUpdateArgs} args - Arguments to update one Impressora.
     * @example
     * // Update one Impressora
     * const impressora = await prisma.impressora.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends impressoraUpdateArgs>(args: SelectSubset<T, impressoraUpdateArgs<ExtArgs>>): Prisma__impressoraClient<$Result.GetResult<Prisma.$impressoraPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Impressoras.
     * @param {impressoraDeleteManyArgs} args - Arguments to filter Impressoras to delete.
     * @example
     * // Delete a few Impressoras
     * const { count } = await prisma.impressora.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends impressoraDeleteManyArgs>(args?: SelectSubset<T, impressoraDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Impressoras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {impressoraUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Impressoras
     * const impressora = await prisma.impressora.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends impressoraUpdateManyArgs>(args: SelectSubset<T, impressoraUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Impressora.
     * @param {impressoraUpsertArgs} args - Arguments to update or create a Impressora.
     * @example
     * // Update or create a Impressora
     * const impressora = await prisma.impressora.upsert({
     *   create: {
     *     // ... data to create a Impressora
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Impressora we want to update
     *   }
     * })
     */
    upsert<T extends impressoraUpsertArgs>(args: SelectSubset<T, impressoraUpsertArgs<ExtArgs>>): Prisma__impressoraClient<$Result.GetResult<Prisma.$impressoraPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Impressoras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {impressoraCountArgs} args - Arguments to filter Impressoras to count.
     * @example
     * // Count the number of Impressoras
     * const count = await prisma.impressora.count({
     *   where: {
     *     // ... the filter for the Impressoras we want to count
     *   }
     * })
    **/
    count<T extends impressoraCountArgs>(
      args?: Subset<T, impressoraCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ImpressoraCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Impressora.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImpressoraAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ImpressoraAggregateArgs>(args: Subset<T, ImpressoraAggregateArgs>): Prisma.PrismaPromise<GetImpressoraAggregateType<T>>

    /**
     * Group by Impressora.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {impressoraGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends impressoraGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: impressoraGroupByArgs['orderBy'] }
        : { orderBy?: impressoraGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, impressoraGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetImpressoraGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the impressora model
   */
  readonly fields: impressoraFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for impressora.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__impressoraClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    doacao<T extends impressora$doacaoArgs<ExtArgs> = {}>(args?: Subset<T, impressora$doacaoArgs<ExtArgs>>): Prisma__doacaoClient<$Result.GetResult<Prisma.$doacaoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    descarte<T extends impressora$descarteArgs<ExtArgs> = {}>(args?: Subset<T, impressora$descarteArgs<ExtArgs>>): Prisma__descarteClient<$Result.GetResult<Prisma.$descartePayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    usuario<T extends impressora$usuarioArgs<ExtArgs> = {}>(args?: Subset<T, impressora$usuarioArgs<ExtArgs>>): Prisma__alunoClient<$Result.GetResult<Prisma.$alunoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    modificador<T extends impressora$modificadorArgs<ExtArgs> = {}>(args?: Subset<T, impressora$modificadorArgs<ExtArgs>>): Prisma__alunoClient<$Result.GetResult<Prisma.$alunoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the impressora model
   */ 
  interface impressoraFieldRefs {
    readonly id: FieldRef<"impressora", 'Int'>
    readonly codigoDereferencia: FieldRef<"impressora", 'String'>
    readonly descricao: FieldRef<"impressora", 'String'>
    readonly status: FieldRef<"impressora", 'String'>
    readonly dataDeChegada: FieldRef<"impressora", 'DateTime'>
    readonly dataDeSaida: FieldRef<"impressora", 'DateTime'>
    readonly marca: FieldRef<"impressora", 'String'>
    readonly modelo: FieldRef<"impressora", 'String'>
    readonly nome: FieldRef<"impressora", 'String'>
    readonly imagem: FieldRef<"impressora", 'String'>
    readonly situacao: FieldRef<"impressora", 'String'>
    readonly tipoDeTinta: FieldRef<"impressora", 'String'>
    readonly updatedAt: FieldRef<"impressora", 'DateTime'>
    readonly alunoid: FieldRef<"impressora", 'Int'>
    readonly modificadorid: FieldRef<"impressora", 'Int'>
    readonly descarteId: FieldRef<"impressora", 'Int'>
    readonly doacaoId: FieldRef<"impressora", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * impressora findUnique
   */
  export type impressoraFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the impressora
     */
    select?: impressoraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: impressoraInclude<ExtArgs> | null
    /**
     * Filter, which impressora to fetch.
     */
    where: impressoraWhereUniqueInput
  }

  /**
   * impressora findUniqueOrThrow
   */
  export type impressoraFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the impressora
     */
    select?: impressoraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: impressoraInclude<ExtArgs> | null
    /**
     * Filter, which impressora to fetch.
     */
    where: impressoraWhereUniqueInput
  }

  /**
   * impressora findFirst
   */
  export type impressoraFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the impressora
     */
    select?: impressoraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: impressoraInclude<ExtArgs> | null
    /**
     * Filter, which impressora to fetch.
     */
    where?: impressoraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of impressoras to fetch.
     */
    orderBy?: impressoraOrderByWithRelationInput | impressoraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for impressoras.
     */
    cursor?: impressoraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` impressoras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` impressoras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of impressoras.
     */
    distinct?: ImpressoraScalarFieldEnum | ImpressoraScalarFieldEnum[]
  }

  /**
   * impressora findFirstOrThrow
   */
  export type impressoraFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the impressora
     */
    select?: impressoraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: impressoraInclude<ExtArgs> | null
    /**
     * Filter, which impressora to fetch.
     */
    where?: impressoraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of impressoras to fetch.
     */
    orderBy?: impressoraOrderByWithRelationInput | impressoraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for impressoras.
     */
    cursor?: impressoraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` impressoras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` impressoras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of impressoras.
     */
    distinct?: ImpressoraScalarFieldEnum | ImpressoraScalarFieldEnum[]
  }

  /**
   * impressora findMany
   */
  export type impressoraFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the impressora
     */
    select?: impressoraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: impressoraInclude<ExtArgs> | null
    /**
     * Filter, which impressoras to fetch.
     */
    where?: impressoraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of impressoras to fetch.
     */
    orderBy?: impressoraOrderByWithRelationInput | impressoraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing impressoras.
     */
    cursor?: impressoraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` impressoras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` impressoras.
     */
    skip?: number
    distinct?: ImpressoraScalarFieldEnum | ImpressoraScalarFieldEnum[]
  }

  /**
   * impressora create
   */
  export type impressoraCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the impressora
     */
    select?: impressoraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: impressoraInclude<ExtArgs> | null
    /**
     * The data needed to create a impressora.
     */
    data: XOR<impressoraCreateInput, impressoraUncheckedCreateInput>
  }

  /**
   * impressora createMany
   */
  export type impressoraCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many impressoras.
     */
    data: impressoraCreateManyInput | impressoraCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * impressora createManyAndReturn
   */
  export type impressoraCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the impressora
     */
    select?: impressoraSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many impressoras.
     */
    data: impressoraCreateManyInput | impressoraCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: impressoraIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * impressora update
   */
  export type impressoraUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the impressora
     */
    select?: impressoraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: impressoraInclude<ExtArgs> | null
    /**
     * The data needed to update a impressora.
     */
    data: XOR<impressoraUpdateInput, impressoraUncheckedUpdateInput>
    /**
     * Choose, which impressora to update.
     */
    where: impressoraWhereUniqueInput
  }

  /**
   * impressora updateMany
   */
  export type impressoraUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update impressoras.
     */
    data: XOR<impressoraUpdateManyMutationInput, impressoraUncheckedUpdateManyInput>
    /**
     * Filter which impressoras to update
     */
    where?: impressoraWhereInput
  }

  /**
   * impressora upsert
   */
  export type impressoraUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the impressora
     */
    select?: impressoraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: impressoraInclude<ExtArgs> | null
    /**
     * The filter to search for the impressora to update in case it exists.
     */
    where: impressoraWhereUniqueInput
    /**
     * In case the impressora found by the `where` argument doesn't exist, create a new impressora with this data.
     */
    create: XOR<impressoraCreateInput, impressoraUncheckedCreateInput>
    /**
     * In case the impressora was found with the provided `where` argument, update it with this data.
     */
    update: XOR<impressoraUpdateInput, impressoraUncheckedUpdateInput>
  }

  /**
   * impressora delete
   */
  export type impressoraDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the impressora
     */
    select?: impressoraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: impressoraInclude<ExtArgs> | null
    /**
     * Filter which impressora to delete.
     */
    where: impressoraWhereUniqueInput
  }

  /**
   * impressora deleteMany
   */
  export type impressoraDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which impressoras to delete
     */
    where?: impressoraWhereInput
  }

  /**
   * impressora.doacao
   */
  export type impressora$doacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the doacao
     */
    select?: doacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: doacaoInclude<ExtArgs> | null
    where?: doacaoWhereInput
  }

  /**
   * impressora.descarte
   */
  export type impressora$descarteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the descarte
     */
    select?: descarteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: descarteInclude<ExtArgs> | null
    where?: descarteWhereInput
  }

  /**
   * impressora.usuario
   */
  export type impressora$usuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aluno
     */
    select?: alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alunoInclude<ExtArgs> | null
    where?: alunoWhereInput
  }

  /**
   * impressora.modificador
   */
  export type impressora$modificadorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aluno
     */
    select?: alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alunoInclude<ExtArgs> | null
    where?: alunoWhereInput
  }

  /**
   * impressora without action
   */
  export type impressoraDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the impressora
     */
    select?: impressoraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: impressoraInclude<ExtArgs> | null
  }


  /**
   * Model placamae
   */

  export type AggregatePlacamae = {
    _count: PlacamaeCountAggregateOutputType | null
    _avg: PlacamaeAvgAggregateOutputType | null
    _sum: PlacamaeSumAggregateOutputType | null
    _min: PlacamaeMinAggregateOutputType | null
    _max: PlacamaeMaxAggregateOutputType | null
  }

  export type PlacamaeAvgAggregateOutputType = {
    id: number | null
    alunoid: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
  }

  export type PlacamaeSumAggregateOutputType = {
    id: number | null
    alunoid: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
  }

  export type PlacamaeMinAggregateOutputType = {
    id: number | null
    codigoDereferencia: string | null
    descricao: string | null
    status: string | null
    dataDeChegada: Date | null
    dataDeSaida: Date | null
    marca: string | null
    modelo: string | null
    nome: string | null
    imagem: string | null
    situacao: string | null
    updatedAt: Date | null
    alunoid: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
  }

  export type PlacamaeMaxAggregateOutputType = {
    id: number | null
    codigoDereferencia: string | null
    descricao: string | null
    status: string | null
    dataDeChegada: Date | null
    dataDeSaida: Date | null
    marca: string | null
    modelo: string | null
    nome: string | null
    imagem: string | null
    situacao: string | null
    updatedAt: Date | null
    alunoid: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
  }

  export type PlacamaeCountAggregateOutputType = {
    id: number
    codigoDereferencia: number
    descricao: number
    status: number
    dataDeChegada: number
    dataDeSaida: number
    marca: number
    modelo: number
    nome: number
    imagem: number
    situacao: number
    updatedAt: number
    alunoid: number
    modificadorid: number
    descarteId: number
    doacaoId: number
    _all: number
  }


  export type PlacamaeAvgAggregateInputType = {
    id?: true
    alunoid?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
  }

  export type PlacamaeSumAggregateInputType = {
    id?: true
    alunoid?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
  }

  export type PlacamaeMinAggregateInputType = {
    id?: true
    codigoDereferencia?: true
    descricao?: true
    status?: true
    dataDeChegada?: true
    dataDeSaida?: true
    marca?: true
    modelo?: true
    nome?: true
    imagem?: true
    situacao?: true
    updatedAt?: true
    alunoid?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
  }

  export type PlacamaeMaxAggregateInputType = {
    id?: true
    codigoDereferencia?: true
    descricao?: true
    status?: true
    dataDeChegada?: true
    dataDeSaida?: true
    marca?: true
    modelo?: true
    nome?: true
    imagem?: true
    situacao?: true
    updatedAt?: true
    alunoid?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
  }

  export type PlacamaeCountAggregateInputType = {
    id?: true
    codigoDereferencia?: true
    descricao?: true
    status?: true
    dataDeChegada?: true
    dataDeSaida?: true
    marca?: true
    modelo?: true
    nome?: true
    imagem?: true
    situacao?: true
    updatedAt?: true
    alunoid?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
    _all?: true
  }

  export type PlacamaeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which placamae to aggregate.
     */
    where?: placamaeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of placamaes to fetch.
     */
    orderBy?: placamaeOrderByWithRelationInput | placamaeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: placamaeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` placamaes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` placamaes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned placamaes
    **/
    _count?: true | PlacamaeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PlacamaeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PlacamaeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PlacamaeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PlacamaeMaxAggregateInputType
  }

  export type GetPlacamaeAggregateType<T extends PlacamaeAggregateArgs> = {
        [P in keyof T & keyof AggregatePlacamae]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePlacamae[P]>
      : GetScalarType<T[P], AggregatePlacamae[P]>
  }




  export type placamaeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: placamaeWhereInput
    orderBy?: placamaeOrderByWithAggregationInput | placamaeOrderByWithAggregationInput[]
    by: PlacamaeScalarFieldEnum[] | PlacamaeScalarFieldEnum
    having?: placamaeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PlacamaeCountAggregateInputType | true
    _avg?: PlacamaeAvgAggregateInputType
    _sum?: PlacamaeSumAggregateInputType
    _min?: PlacamaeMinAggregateInputType
    _max?: PlacamaeMaxAggregateInputType
  }

  export type PlacamaeGroupByOutputType = {
    id: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date
    dataDeSaida: Date | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt: Date
    alunoid: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
    _count: PlacamaeCountAggregateOutputType | null
    _avg: PlacamaeAvgAggregateOutputType | null
    _sum: PlacamaeSumAggregateOutputType | null
    _min: PlacamaeMinAggregateOutputType | null
    _max: PlacamaeMaxAggregateOutputType | null
  }

  type GetPlacamaeGroupByPayload<T extends placamaeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PlacamaeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PlacamaeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PlacamaeGroupByOutputType[P]>
            : GetScalarType<T[P], PlacamaeGroupByOutputType[P]>
        }
      >
    >


  export type placamaeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    codigoDereferencia?: boolean
    descricao?: boolean
    status?: boolean
    dataDeChegada?: boolean
    dataDeSaida?: boolean
    marca?: boolean
    modelo?: boolean
    nome?: boolean
    imagem?: boolean
    situacao?: boolean
    updatedAt?: boolean
    alunoid?: boolean
    modificadorid?: boolean
    descarteId?: boolean
    doacaoId?: boolean
    doacao?: boolean | placamae$doacaoArgs<ExtArgs>
    descarte?: boolean | placamae$descarteArgs<ExtArgs>
    usuario?: boolean | placamae$usuarioArgs<ExtArgs>
    modificador?: boolean | placamae$modificadorArgs<ExtArgs>
  }, ExtArgs["result"]["placamae"]>

  export type placamaeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    codigoDereferencia?: boolean
    descricao?: boolean
    status?: boolean
    dataDeChegada?: boolean
    dataDeSaida?: boolean
    marca?: boolean
    modelo?: boolean
    nome?: boolean
    imagem?: boolean
    situacao?: boolean
    updatedAt?: boolean
    alunoid?: boolean
    modificadorid?: boolean
    descarteId?: boolean
    doacaoId?: boolean
    doacao?: boolean | placamae$doacaoArgs<ExtArgs>
    descarte?: boolean | placamae$descarteArgs<ExtArgs>
    usuario?: boolean | placamae$usuarioArgs<ExtArgs>
    modificador?: boolean | placamae$modificadorArgs<ExtArgs>
  }, ExtArgs["result"]["placamae"]>

  export type placamaeSelectScalar = {
    id?: boolean
    codigoDereferencia?: boolean
    descricao?: boolean
    status?: boolean
    dataDeChegada?: boolean
    dataDeSaida?: boolean
    marca?: boolean
    modelo?: boolean
    nome?: boolean
    imagem?: boolean
    situacao?: boolean
    updatedAt?: boolean
    alunoid?: boolean
    modificadorid?: boolean
    descarteId?: boolean
    doacaoId?: boolean
  }

  export type placamaeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    doacao?: boolean | placamae$doacaoArgs<ExtArgs>
    descarte?: boolean | placamae$descarteArgs<ExtArgs>
    usuario?: boolean | placamae$usuarioArgs<ExtArgs>
    modificador?: boolean | placamae$modificadorArgs<ExtArgs>
  }
  export type placamaeIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    doacao?: boolean | placamae$doacaoArgs<ExtArgs>
    descarte?: boolean | placamae$descarteArgs<ExtArgs>
    usuario?: boolean | placamae$usuarioArgs<ExtArgs>
    modificador?: boolean | placamae$modificadorArgs<ExtArgs>
  }

  export type $placamaePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "placamae"
    objects: {
      doacao: Prisma.$doacaoPayload<ExtArgs> | null
      descarte: Prisma.$descartePayload<ExtArgs> | null
      usuario: Prisma.$alunoPayload<ExtArgs> | null
      modificador: Prisma.$alunoPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      codigoDereferencia: string
      descricao: string
      status: string
      dataDeChegada: Date
      dataDeSaida: Date | null
      marca: string
      modelo: string
      nome: string
      imagem: string
      situacao: string
      updatedAt: Date
      alunoid: number | null
      modificadorid: number | null
      descarteId: number | null
      doacaoId: number | null
    }, ExtArgs["result"]["placamae"]>
    composites: {}
  }

  type placamaeGetPayload<S extends boolean | null | undefined | placamaeDefaultArgs> = $Result.GetResult<Prisma.$placamaePayload, S>

  type placamaeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<placamaeFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PlacamaeCountAggregateInputType | true
    }

  export interface placamaeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['placamae'], meta: { name: 'placamae' } }
    /**
     * Find zero or one Placamae that matches the filter.
     * @param {placamaeFindUniqueArgs} args - Arguments to find a Placamae
     * @example
     * // Get one Placamae
     * const placamae = await prisma.placamae.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends placamaeFindUniqueArgs>(args: SelectSubset<T, placamaeFindUniqueArgs<ExtArgs>>): Prisma__placamaeClient<$Result.GetResult<Prisma.$placamaePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Placamae that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {placamaeFindUniqueOrThrowArgs} args - Arguments to find a Placamae
     * @example
     * // Get one Placamae
     * const placamae = await prisma.placamae.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends placamaeFindUniqueOrThrowArgs>(args: SelectSubset<T, placamaeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__placamaeClient<$Result.GetResult<Prisma.$placamaePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Placamae that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {placamaeFindFirstArgs} args - Arguments to find a Placamae
     * @example
     * // Get one Placamae
     * const placamae = await prisma.placamae.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends placamaeFindFirstArgs>(args?: SelectSubset<T, placamaeFindFirstArgs<ExtArgs>>): Prisma__placamaeClient<$Result.GetResult<Prisma.$placamaePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Placamae that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {placamaeFindFirstOrThrowArgs} args - Arguments to find a Placamae
     * @example
     * // Get one Placamae
     * const placamae = await prisma.placamae.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends placamaeFindFirstOrThrowArgs>(args?: SelectSubset<T, placamaeFindFirstOrThrowArgs<ExtArgs>>): Prisma__placamaeClient<$Result.GetResult<Prisma.$placamaePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Placamaes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {placamaeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Placamaes
     * const placamaes = await prisma.placamae.findMany()
     * 
     * // Get first 10 Placamaes
     * const placamaes = await prisma.placamae.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const placamaeWithIdOnly = await prisma.placamae.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends placamaeFindManyArgs>(args?: SelectSubset<T, placamaeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$placamaePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Placamae.
     * @param {placamaeCreateArgs} args - Arguments to create a Placamae.
     * @example
     * // Create one Placamae
     * const Placamae = await prisma.placamae.create({
     *   data: {
     *     // ... data to create a Placamae
     *   }
     * })
     * 
     */
    create<T extends placamaeCreateArgs>(args: SelectSubset<T, placamaeCreateArgs<ExtArgs>>): Prisma__placamaeClient<$Result.GetResult<Prisma.$placamaePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Placamaes.
     * @param {placamaeCreateManyArgs} args - Arguments to create many Placamaes.
     * @example
     * // Create many Placamaes
     * const placamae = await prisma.placamae.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends placamaeCreateManyArgs>(args?: SelectSubset<T, placamaeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Placamaes and returns the data saved in the database.
     * @param {placamaeCreateManyAndReturnArgs} args - Arguments to create many Placamaes.
     * @example
     * // Create many Placamaes
     * const placamae = await prisma.placamae.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Placamaes and only return the `id`
     * const placamaeWithIdOnly = await prisma.placamae.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends placamaeCreateManyAndReturnArgs>(args?: SelectSubset<T, placamaeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$placamaePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Placamae.
     * @param {placamaeDeleteArgs} args - Arguments to delete one Placamae.
     * @example
     * // Delete one Placamae
     * const Placamae = await prisma.placamae.delete({
     *   where: {
     *     // ... filter to delete one Placamae
     *   }
     * })
     * 
     */
    delete<T extends placamaeDeleteArgs>(args: SelectSubset<T, placamaeDeleteArgs<ExtArgs>>): Prisma__placamaeClient<$Result.GetResult<Prisma.$placamaePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Placamae.
     * @param {placamaeUpdateArgs} args - Arguments to update one Placamae.
     * @example
     * // Update one Placamae
     * const placamae = await prisma.placamae.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends placamaeUpdateArgs>(args: SelectSubset<T, placamaeUpdateArgs<ExtArgs>>): Prisma__placamaeClient<$Result.GetResult<Prisma.$placamaePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Placamaes.
     * @param {placamaeDeleteManyArgs} args - Arguments to filter Placamaes to delete.
     * @example
     * // Delete a few Placamaes
     * const { count } = await prisma.placamae.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends placamaeDeleteManyArgs>(args?: SelectSubset<T, placamaeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Placamaes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {placamaeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Placamaes
     * const placamae = await prisma.placamae.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends placamaeUpdateManyArgs>(args: SelectSubset<T, placamaeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Placamae.
     * @param {placamaeUpsertArgs} args - Arguments to update or create a Placamae.
     * @example
     * // Update or create a Placamae
     * const placamae = await prisma.placamae.upsert({
     *   create: {
     *     // ... data to create a Placamae
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Placamae we want to update
     *   }
     * })
     */
    upsert<T extends placamaeUpsertArgs>(args: SelectSubset<T, placamaeUpsertArgs<ExtArgs>>): Prisma__placamaeClient<$Result.GetResult<Prisma.$placamaePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Placamaes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {placamaeCountArgs} args - Arguments to filter Placamaes to count.
     * @example
     * // Count the number of Placamaes
     * const count = await prisma.placamae.count({
     *   where: {
     *     // ... the filter for the Placamaes we want to count
     *   }
     * })
    **/
    count<T extends placamaeCountArgs>(
      args?: Subset<T, placamaeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PlacamaeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Placamae.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlacamaeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PlacamaeAggregateArgs>(args: Subset<T, PlacamaeAggregateArgs>): Prisma.PrismaPromise<GetPlacamaeAggregateType<T>>

    /**
     * Group by Placamae.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {placamaeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends placamaeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: placamaeGroupByArgs['orderBy'] }
        : { orderBy?: placamaeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, placamaeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPlacamaeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the placamae model
   */
  readonly fields: placamaeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for placamae.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__placamaeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    doacao<T extends placamae$doacaoArgs<ExtArgs> = {}>(args?: Subset<T, placamae$doacaoArgs<ExtArgs>>): Prisma__doacaoClient<$Result.GetResult<Prisma.$doacaoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    descarte<T extends placamae$descarteArgs<ExtArgs> = {}>(args?: Subset<T, placamae$descarteArgs<ExtArgs>>): Prisma__descarteClient<$Result.GetResult<Prisma.$descartePayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    usuario<T extends placamae$usuarioArgs<ExtArgs> = {}>(args?: Subset<T, placamae$usuarioArgs<ExtArgs>>): Prisma__alunoClient<$Result.GetResult<Prisma.$alunoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    modificador<T extends placamae$modificadorArgs<ExtArgs> = {}>(args?: Subset<T, placamae$modificadorArgs<ExtArgs>>): Prisma__alunoClient<$Result.GetResult<Prisma.$alunoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the placamae model
   */ 
  interface placamaeFieldRefs {
    readonly id: FieldRef<"placamae", 'Int'>
    readonly codigoDereferencia: FieldRef<"placamae", 'String'>
    readonly descricao: FieldRef<"placamae", 'String'>
    readonly status: FieldRef<"placamae", 'String'>
    readonly dataDeChegada: FieldRef<"placamae", 'DateTime'>
    readonly dataDeSaida: FieldRef<"placamae", 'DateTime'>
    readonly marca: FieldRef<"placamae", 'String'>
    readonly modelo: FieldRef<"placamae", 'String'>
    readonly nome: FieldRef<"placamae", 'String'>
    readonly imagem: FieldRef<"placamae", 'String'>
    readonly situacao: FieldRef<"placamae", 'String'>
    readonly updatedAt: FieldRef<"placamae", 'DateTime'>
    readonly alunoid: FieldRef<"placamae", 'Int'>
    readonly modificadorid: FieldRef<"placamae", 'Int'>
    readonly descarteId: FieldRef<"placamae", 'Int'>
    readonly doacaoId: FieldRef<"placamae", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * placamae findUnique
   */
  export type placamaeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the placamae
     */
    select?: placamaeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: placamaeInclude<ExtArgs> | null
    /**
     * Filter, which placamae to fetch.
     */
    where: placamaeWhereUniqueInput
  }

  /**
   * placamae findUniqueOrThrow
   */
  export type placamaeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the placamae
     */
    select?: placamaeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: placamaeInclude<ExtArgs> | null
    /**
     * Filter, which placamae to fetch.
     */
    where: placamaeWhereUniqueInput
  }

  /**
   * placamae findFirst
   */
  export type placamaeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the placamae
     */
    select?: placamaeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: placamaeInclude<ExtArgs> | null
    /**
     * Filter, which placamae to fetch.
     */
    where?: placamaeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of placamaes to fetch.
     */
    orderBy?: placamaeOrderByWithRelationInput | placamaeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for placamaes.
     */
    cursor?: placamaeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` placamaes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` placamaes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of placamaes.
     */
    distinct?: PlacamaeScalarFieldEnum | PlacamaeScalarFieldEnum[]
  }

  /**
   * placamae findFirstOrThrow
   */
  export type placamaeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the placamae
     */
    select?: placamaeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: placamaeInclude<ExtArgs> | null
    /**
     * Filter, which placamae to fetch.
     */
    where?: placamaeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of placamaes to fetch.
     */
    orderBy?: placamaeOrderByWithRelationInput | placamaeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for placamaes.
     */
    cursor?: placamaeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` placamaes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` placamaes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of placamaes.
     */
    distinct?: PlacamaeScalarFieldEnum | PlacamaeScalarFieldEnum[]
  }

  /**
   * placamae findMany
   */
  export type placamaeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the placamae
     */
    select?: placamaeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: placamaeInclude<ExtArgs> | null
    /**
     * Filter, which placamaes to fetch.
     */
    where?: placamaeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of placamaes to fetch.
     */
    orderBy?: placamaeOrderByWithRelationInput | placamaeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing placamaes.
     */
    cursor?: placamaeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` placamaes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` placamaes.
     */
    skip?: number
    distinct?: PlacamaeScalarFieldEnum | PlacamaeScalarFieldEnum[]
  }

  /**
   * placamae create
   */
  export type placamaeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the placamae
     */
    select?: placamaeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: placamaeInclude<ExtArgs> | null
    /**
     * The data needed to create a placamae.
     */
    data: XOR<placamaeCreateInput, placamaeUncheckedCreateInput>
  }

  /**
   * placamae createMany
   */
  export type placamaeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many placamaes.
     */
    data: placamaeCreateManyInput | placamaeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * placamae createManyAndReturn
   */
  export type placamaeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the placamae
     */
    select?: placamaeSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many placamaes.
     */
    data: placamaeCreateManyInput | placamaeCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: placamaeIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * placamae update
   */
  export type placamaeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the placamae
     */
    select?: placamaeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: placamaeInclude<ExtArgs> | null
    /**
     * The data needed to update a placamae.
     */
    data: XOR<placamaeUpdateInput, placamaeUncheckedUpdateInput>
    /**
     * Choose, which placamae to update.
     */
    where: placamaeWhereUniqueInput
  }

  /**
   * placamae updateMany
   */
  export type placamaeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update placamaes.
     */
    data: XOR<placamaeUpdateManyMutationInput, placamaeUncheckedUpdateManyInput>
    /**
     * Filter which placamaes to update
     */
    where?: placamaeWhereInput
  }

  /**
   * placamae upsert
   */
  export type placamaeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the placamae
     */
    select?: placamaeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: placamaeInclude<ExtArgs> | null
    /**
     * The filter to search for the placamae to update in case it exists.
     */
    where: placamaeWhereUniqueInput
    /**
     * In case the placamae found by the `where` argument doesn't exist, create a new placamae with this data.
     */
    create: XOR<placamaeCreateInput, placamaeUncheckedCreateInput>
    /**
     * In case the placamae was found with the provided `where` argument, update it with this data.
     */
    update: XOR<placamaeUpdateInput, placamaeUncheckedUpdateInput>
  }

  /**
   * placamae delete
   */
  export type placamaeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the placamae
     */
    select?: placamaeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: placamaeInclude<ExtArgs> | null
    /**
     * Filter which placamae to delete.
     */
    where: placamaeWhereUniqueInput
  }

  /**
   * placamae deleteMany
   */
  export type placamaeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which placamaes to delete
     */
    where?: placamaeWhereInput
  }

  /**
   * placamae.doacao
   */
  export type placamae$doacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the doacao
     */
    select?: doacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: doacaoInclude<ExtArgs> | null
    where?: doacaoWhereInput
  }

  /**
   * placamae.descarte
   */
  export type placamae$descarteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the descarte
     */
    select?: descarteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: descarteInclude<ExtArgs> | null
    where?: descarteWhereInput
  }

  /**
   * placamae.usuario
   */
  export type placamae$usuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aluno
     */
    select?: alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alunoInclude<ExtArgs> | null
    where?: alunoWhereInput
  }

  /**
   * placamae.modificador
   */
  export type placamae$modificadorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aluno
     */
    select?: alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alunoInclude<ExtArgs> | null
    where?: alunoWhereInput
  }

  /**
   * placamae without action
   */
  export type placamaeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the placamae
     */
    select?: placamaeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: placamaeInclude<ExtArgs> | null
  }


  /**
   * Model notebook
   */

  export type AggregateNotebook = {
    _count: NotebookCountAggregateOutputType | null
    _avg: NotebookAvgAggregateOutputType | null
    _sum: NotebookSumAggregateOutputType | null
    _min: NotebookMinAggregateOutputType | null
    _max: NotebookMaxAggregateOutputType | null
  }

  export type NotebookAvgAggregateOutputType = {
    id: number | null
    alunoid: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
  }

  export type NotebookSumAggregateOutputType = {
    id: number | null
    alunoid: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
  }

  export type NotebookMinAggregateOutputType = {
    id: number | null
    codigoDereferencia: string | null
    descricao: string | null
    status: string | null
    dataDeChegada: Date | null
    dataDeSaida: Date | null
    marca: string | null
    modelo: string | null
    nome: string | null
    imagem: string | null
    situacao: string | null
    updatedAt: Date | null
    alunoid: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
  }

  export type NotebookMaxAggregateOutputType = {
    id: number | null
    codigoDereferencia: string | null
    descricao: string | null
    status: string | null
    dataDeChegada: Date | null
    dataDeSaida: Date | null
    marca: string | null
    modelo: string | null
    nome: string | null
    imagem: string | null
    situacao: string | null
    updatedAt: Date | null
    alunoid: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
  }

  export type NotebookCountAggregateOutputType = {
    id: number
    codigoDereferencia: number
    descricao: number
    status: number
    dataDeChegada: number
    dataDeSaida: number
    marca: number
    modelo: number
    nome: number
    imagem: number
    situacao: number
    updatedAt: number
    alunoid: number
    modificadorid: number
    descarteId: number
    doacaoId: number
    _all: number
  }


  export type NotebookAvgAggregateInputType = {
    id?: true
    alunoid?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
  }

  export type NotebookSumAggregateInputType = {
    id?: true
    alunoid?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
  }

  export type NotebookMinAggregateInputType = {
    id?: true
    codigoDereferencia?: true
    descricao?: true
    status?: true
    dataDeChegada?: true
    dataDeSaida?: true
    marca?: true
    modelo?: true
    nome?: true
    imagem?: true
    situacao?: true
    updatedAt?: true
    alunoid?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
  }

  export type NotebookMaxAggregateInputType = {
    id?: true
    codigoDereferencia?: true
    descricao?: true
    status?: true
    dataDeChegada?: true
    dataDeSaida?: true
    marca?: true
    modelo?: true
    nome?: true
    imagem?: true
    situacao?: true
    updatedAt?: true
    alunoid?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
  }

  export type NotebookCountAggregateInputType = {
    id?: true
    codigoDereferencia?: true
    descricao?: true
    status?: true
    dataDeChegada?: true
    dataDeSaida?: true
    marca?: true
    modelo?: true
    nome?: true
    imagem?: true
    situacao?: true
    updatedAt?: true
    alunoid?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
    _all?: true
  }

  export type NotebookAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which notebook to aggregate.
     */
    where?: notebookWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notebooks to fetch.
     */
    orderBy?: notebookOrderByWithRelationInput | notebookOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: notebookWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notebooks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notebooks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned notebooks
    **/
    _count?: true | NotebookCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: NotebookAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: NotebookSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NotebookMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NotebookMaxAggregateInputType
  }

  export type GetNotebookAggregateType<T extends NotebookAggregateArgs> = {
        [P in keyof T & keyof AggregateNotebook]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNotebook[P]>
      : GetScalarType<T[P], AggregateNotebook[P]>
  }




  export type notebookGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: notebookWhereInput
    orderBy?: notebookOrderByWithAggregationInput | notebookOrderByWithAggregationInput[]
    by: NotebookScalarFieldEnum[] | NotebookScalarFieldEnum
    having?: notebookScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NotebookCountAggregateInputType | true
    _avg?: NotebookAvgAggregateInputType
    _sum?: NotebookSumAggregateInputType
    _min?: NotebookMinAggregateInputType
    _max?: NotebookMaxAggregateInputType
  }

  export type NotebookGroupByOutputType = {
    id: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date
    dataDeSaida: Date | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt: Date
    alunoid: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
    _count: NotebookCountAggregateOutputType | null
    _avg: NotebookAvgAggregateOutputType | null
    _sum: NotebookSumAggregateOutputType | null
    _min: NotebookMinAggregateOutputType | null
    _max: NotebookMaxAggregateOutputType | null
  }

  type GetNotebookGroupByPayload<T extends notebookGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NotebookGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NotebookGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NotebookGroupByOutputType[P]>
            : GetScalarType<T[P], NotebookGroupByOutputType[P]>
        }
      >
    >


  export type notebookSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    codigoDereferencia?: boolean
    descricao?: boolean
    status?: boolean
    dataDeChegada?: boolean
    dataDeSaida?: boolean
    marca?: boolean
    modelo?: boolean
    nome?: boolean
    imagem?: boolean
    situacao?: boolean
    updatedAt?: boolean
    alunoid?: boolean
    modificadorid?: boolean
    descarteId?: boolean
    doacaoId?: boolean
    doacao?: boolean | notebook$doacaoArgs<ExtArgs>
    descarte?: boolean | notebook$descarteArgs<ExtArgs>
    usuario?: boolean | notebook$usuarioArgs<ExtArgs>
    modificador?: boolean | notebook$modificadorArgs<ExtArgs>
  }, ExtArgs["result"]["notebook"]>

  export type notebookSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    codigoDereferencia?: boolean
    descricao?: boolean
    status?: boolean
    dataDeChegada?: boolean
    dataDeSaida?: boolean
    marca?: boolean
    modelo?: boolean
    nome?: boolean
    imagem?: boolean
    situacao?: boolean
    updatedAt?: boolean
    alunoid?: boolean
    modificadorid?: boolean
    descarteId?: boolean
    doacaoId?: boolean
    doacao?: boolean | notebook$doacaoArgs<ExtArgs>
    descarte?: boolean | notebook$descarteArgs<ExtArgs>
    usuario?: boolean | notebook$usuarioArgs<ExtArgs>
    modificador?: boolean | notebook$modificadorArgs<ExtArgs>
  }, ExtArgs["result"]["notebook"]>

  export type notebookSelectScalar = {
    id?: boolean
    codigoDereferencia?: boolean
    descricao?: boolean
    status?: boolean
    dataDeChegada?: boolean
    dataDeSaida?: boolean
    marca?: boolean
    modelo?: boolean
    nome?: boolean
    imagem?: boolean
    situacao?: boolean
    updatedAt?: boolean
    alunoid?: boolean
    modificadorid?: boolean
    descarteId?: boolean
    doacaoId?: boolean
  }

  export type notebookInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    doacao?: boolean | notebook$doacaoArgs<ExtArgs>
    descarte?: boolean | notebook$descarteArgs<ExtArgs>
    usuario?: boolean | notebook$usuarioArgs<ExtArgs>
    modificador?: boolean | notebook$modificadorArgs<ExtArgs>
  }
  export type notebookIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    doacao?: boolean | notebook$doacaoArgs<ExtArgs>
    descarte?: boolean | notebook$descarteArgs<ExtArgs>
    usuario?: boolean | notebook$usuarioArgs<ExtArgs>
    modificador?: boolean | notebook$modificadorArgs<ExtArgs>
  }

  export type $notebookPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "notebook"
    objects: {
      doacao: Prisma.$doacaoPayload<ExtArgs> | null
      descarte: Prisma.$descartePayload<ExtArgs> | null
      usuario: Prisma.$alunoPayload<ExtArgs> | null
      modificador: Prisma.$alunoPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      codigoDereferencia: string
      descricao: string
      status: string
      dataDeChegada: Date
      dataDeSaida: Date | null
      marca: string
      modelo: string
      nome: string
      imagem: string
      situacao: string
      updatedAt: Date
      alunoid: number | null
      modificadorid: number | null
      descarteId: number | null
      doacaoId: number | null
    }, ExtArgs["result"]["notebook"]>
    composites: {}
  }

  type notebookGetPayload<S extends boolean | null | undefined | notebookDefaultArgs> = $Result.GetResult<Prisma.$notebookPayload, S>

  type notebookCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<notebookFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: NotebookCountAggregateInputType | true
    }

  export interface notebookDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['notebook'], meta: { name: 'notebook' } }
    /**
     * Find zero or one Notebook that matches the filter.
     * @param {notebookFindUniqueArgs} args - Arguments to find a Notebook
     * @example
     * // Get one Notebook
     * const notebook = await prisma.notebook.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends notebookFindUniqueArgs>(args: SelectSubset<T, notebookFindUniqueArgs<ExtArgs>>): Prisma__notebookClient<$Result.GetResult<Prisma.$notebookPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Notebook that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {notebookFindUniqueOrThrowArgs} args - Arguments to find a Notebook
     * @example
     * // Get one Notebook
     * const notebook = await prisma.notebook.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends notebookFindUniqueOrThrowArgs>(args: SelectSubset<T, notebookFindUniqueOrThrowArgs<ExtArgs>>): Prisma__notebookClient<$Result.GetResult<Prisma.$notebookPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Notebook that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notebookFindFirstArgs} args - Arguments to find a Notebook
     * @example
     * // Get one Notebook
     * const notebook = await prisma.notebook.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends notebookFindFirstArgs>(args?: SelectSubset<T, notebookFindFirstArgs<ExtArgs>>): Prisma__notebookClient<$Result.GetResult<Prisma.$notebookPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Notebook that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notebookFindFirstOrThrowArgs} args - Arguments to find a Notebook
     * @example
     * // Get one Notebook
     * const notebook = await prisma.notebook.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends notebookFindFirstOrThrowArgs>(args?: SelectSubset<T, notebookFindFirstOrThrowArgs<ExtArgs>>): Prisma__notebookClient<$Result.GetResult<Prisma.$notebookPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Notebooks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notebookFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Notebooks
     * const notebooks = await prisma.notebook.findMany()
     * 
     * // Get first 10 Notebooks
     * const notebooks = await prisma.notebook.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const notebookWithIdOnly = await prisma.notebook.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends notebookFindManyArgs>(args?: SelectSubset<T, notebookFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notebookPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Notebook.
     * @param {notebookCreateArgs} args - Arguments to create a Notebook.
     * @example
     * // Create one Notebook
     * const Notebook = await prisma.notebook.create({
     *   data: {
     *     // ... data to create a Notebook
     *   }
     * })
     * 
     */
    create<T extends notebookCreateArgs>(args: SelectSubset<T, notebookCreateArgs<ExtArgs>>): Prisma__notebookClient<$Result.GetResult<Prisma.$notebookPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Notebooks.
     * @param {notebookCreateManyArgs} args - Arguments to create many Notebooks.
     * @example
     * // Create many Notebooks
     * const notebook = await prisma.notebook.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends notebookCreateManyArgs>(args?: SelectSubset<T, notebookCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Notebooks and returns the data saved in the database.
     * @param {notebookCreateManyAndReturnArgs} args - Arguments to create many Notebooks.
     * @example
     * // Create many Notebooks
     * const notebook = await prisma.notebook.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Notebooks and only return the `id`
     * const notebookWithIdOnly = await prisma.notebook.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends notebookCreateManyAndReturnArgs>(args?: SelectSubset<T, notebookCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notebookPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Notebook.
     * @param {notebookDeleteArgs} args - Arguments to delete one Notebook.
     * @example
     * // Delete one Notebook
     * const Notebook = await prisma.notebook.delete({
     *   where: {
     *     // ... filter to delete one Notebook
     *   }
     * })
     * 
     */
    delete<T extends notebookDeleteArgs>(args: SelectSubset<T, notebookDeleteArgs<ExtArgs>>): Prisma__notebookClient<$Result.GetResult<Prisma.$notebookPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Notebook.
     * @param {notebookUpdateArgs} args - Arguments to update one Notebook.
     * @example
     * // Update one Notebook
     * const notebook = await prisma.notebook.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends notebookUpdateArgs>(args: SelectSubset<T, notebookUpdateArgs<ExtArgs>>): Prisma__notebookClient<$Result.GetResult<Prisma.$notebookPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Notebooks.
     * @param {notebookDeleteManyArgs} args - Arguments to filter Notebooks to delete.
     * @example
     * // Delete a few Notebooks
     * const { count } = await prisma.notebook.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends notebookDeleteManyArgs>(args?: SelectSubset<T, notebookDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notebooks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notebookUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Notebooks
     * const notebook = await prisma.notebook.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends notebookUpdateManyArgs>(args: SelectSubset<T, notebookUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Notebook.
     * @param {notebookUpsertArgs} args - Arguments to update or create a Notebook.
     * @example
     * // Update or create a Notebook
     * const notebook = await prisma.notebook.upsert({
     *   create: {
     *     // ... data to create a Notebook
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Notebook we want to update
     *   }
     * })
     */
    upsert<T extends notebookUpsertArgs>(args: SelectSubset<T, notebookUpsertArgs<ExtArgs>>): Prisma__notebookClient<$Result.GetResult<Prisma.$notebookPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Notebooks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notebookCountArgs} args - Arguments to filter Notebooks to count.
     * @example
     * // Count the number of Notebooks
     * const count = await prisma.notebook.count({
     *   where: {
     *     // ... the filter for the Notebooks we want to count
     *   }
     * })
    **/
    count<T extends notebookCountArgs>(
      args?: Subset<T, notebookCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NotebookCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Notebook.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotebookAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NotebookAggregateArgs>(args: Subset<T, NotebookAggregateArgs>): Prisma.PrismaPromise<GetNotebookAggregateType<T>>

    /**
     * Group by Notebook.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notebookGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends notebookGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: notebookGroupByArgs['orderBy'] }
        : { orderBy?: notebookGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, notebookGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNotebookGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the notebook model
   */
  readonly fields: notebookFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for notebook.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__notebookClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    doacao<T extends notebook$doacaoArgs<ExtArgs> = {}>(args?: Subset<T, notebook$doacaoArgs<ExtArgs>>): Prisma__doacaoClient<$Result.GetResult<Prisma.$doacaoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    descarte<T extends notebook$descarteArgs<ExtArgs> = {}>(args?: Subset<T, notebook$descarteArgs<ExtArgs>>): Prisma__descarteClient<$Result.GetResult<Prisma.$descartePayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    usuario<T extends notebook$usuarioArgs<ExtArgs> = {}>(args?: Subset<T, notebook$usuarioArgs<ExtArgs>>): Prisma__alunoClient<$Result.GetResult<Prisma.$alunoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    modificador<T extends notebook$modificadorArgs<ExtArgs> = {}>(args?: Subset<T, notebook$modificadorArgs<ExtArgs>>): Prisma__alunoClient<$Result.GetResult<Prisma.$alunoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the notebook model
   */ 
  interface notebookFieldRefs {
    readonly id: FieldRef<"notebook", 'Int'>
    readonly codigoDereferencia: FieldRef<"notebook", 'String'>
    readonly descricao: FieldRef<"notebook", 'String'>
    readonly status: FieldRef<"notebook", 'String'>
    readonly dataDeChegada: FieldRef<"notebook", 'DateTime'>
    readonly dataDeSaida: FieldRef<"notebook", 'DateTime'>
    readonly marca: FieldRef<"notebook", 'String'>
    readonly modelo: FieldRef<"notebook", 'String'>
    readonly nome: FieldRef<"notebook", 'String'>
    readonly imagem: FieldRef<"notebook", 'String'>
    readonly situacao: FieldRef<"notebook", 'String'>
    readonly updatedAt: FieldRef<"notebook", 'DateTime'>
    readonly alunoid: FieldRef<"notebook", 'Int'>
    readonly modificadorid: FieldRef<"notebook", 'Int'>
    readonly descarteId: FieldRef<"notebook", 'Int'>
    readonly doacaoId: FieldRef<"notebook", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * notebook findUnique
   */
  export type notebookFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notebook
     */
    select?: notebookSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notebookInclude<ExtArgs> | null
    /**
     * Filter, which notebook to fetch.
     */
    where: notebookWhereUniqueInput
  }

  /**
   * notebook findUniqueOrThrow
   */
  export type notebookFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notebook
     */
    select?: notebookSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notebookInclude<ExtArgs> | null
    /**
     * Filter, which notebook to fetch.
     */
    where: notebookWhereUniqueInput
  }

  /**
   * notebook findFirst
   */
  export type notebookFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notebook
     */
    select?: notebookSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notebookInclude<ExtArgs> | null
    /**
     * Filter, which notebook to fetch.
     */
    where?: notebookWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notebooks to fetch.
     */
    orderBy?: notebookOrderByWithRelationInput | notebookOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for notebooks.
     */
    cursor?: notebookWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notebooks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notebooks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of notebooks.
     */
    distinct?: NotebookScalarFieldEnum | NotebookScalarFieldEnum[]
  }

  /**
   * notebook findFirstOrThrow
   */
  export type notebookFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notebook
     */
    select?: notebookSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notebookInclude<ExtArgs> | null
    /**
     * Filter, which notebook to fetch.
     */
    where?: notebookWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notebooks to fetch.
     */
    orderBy?: notebookOrderByWithRelationInput | notebookOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for notebooks.
     */
    cursor?: notebookWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notebooks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notebooks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of notebooks.
     */
    distinct?: NotebookScalarFieldEnum | NotebookScalarFieldEnum[]
  }

  /**
   * notebook findMany
   */
  export type notebookFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notebook
     */
    select?: notebookSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notebookInclude<ExtArgs> | null
    /**
     * Filter, which notebooks to fetch.
     */
    where?: notebookWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notebooks to fetch.
     */
    orderBy?: notebookOrderByWithRelationInput | notebookOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing notebooks.
     */
    cursor?: notebookWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notebooks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notebooks.
     */
    skip?: number
    distinct?: NotebookScalarFieldEnum | NotebookScalarFieldEnum[]
  }

  /**
   * notebook create
   */
  export type notebookCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notebook
     */
    select?: notebookSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notebookInclude<ExtArgs> | null
    /**
     * The data needed to create a notebook.
     */
    data: XOR<notebookCreateInput, notebookUncheckedCreateInput>
  }

  /**
   * notebook createMany
   */
  export type notebookCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many notebooks.
     */
    data: notebookCreateManyInput | notebookCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * notebook createManyAndReturn
   */
  export type notebookCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notebook
     */
    select?: notebookSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many notebooks.
     */
    data: notebookCreateManyInput | notebookCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notebookIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * notebook update
   */
  export type notebookUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notebook
     */
    select?: notebookSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notebookInclude<ExtArgs> | null
    /**
     * The data needed to update a notebook.
     */
    data: XOR<notebookUpdateInput, notebookUncheckedUpdateInput>
    /**
     * Choose, which notebook to update.
     */
    where: notebookWhereUniqueInput
  }

  /**
   * notebook updateMany
   */
  export type notebookUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update notebooks.
     */
    data: XOR<notebookUpdateManyMutationInput, notebookUncheckedUpdateManyInput>
    /**
     * Filter which notebooks to update
     */
    where?: notebookWhereInput
  }

  /**
   * notebook upsert
   */
  export type notebookUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notebook
     */
    select?: notebookSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notebookInclude<ExtArgs> | null
    /**
     * The filter to search for the notebook to update in case it exists.
     */
    where: notebookWhereUniqueInput
    /**
     * In case the notebook found by the `where` argument doesn't exist, create a new notebook with this data.
     */
    create: XOR<notebookCreateInput, notebookUncheckedCreateInput>
    /**
     * In case the notebook was found with the provided `where` argument, update it with this data.
     */
    update: XOR<notebookUpdateInput, notebookUncheckedUpdateInput>
  }

  /**
   * notebook delete
   */
  export type notebookDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notebook
     */
    select?: notebookSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notebookInclude<ExtArgs> | null
    /**
     * Filter which notebook to delete.
     */
    where: notebookWhereUniqueInput
  }

  /**
   * notebook deleteMany
   */
  export type notebookDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which notebooks to delete
     */
    where?: notebookWhereInput
  }

  /**
   * notebook.doacao
   */
  export type notebook$doacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the doacao
     */
    select?: doacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: doacaoInclude<ExtArgs> | null
    where?: doacaoWhereInput
  }

  /**
   * notebook.descarte
   */
  export type notebook$descarteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the descarte
     */
    select?: descarteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: descarteInclude<ExtArgs> | null
    where?: descarteWhereInput
  }

  /**
   * notebook.usuario
   */
  export type notebook$usuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aluno
     */
    select?: alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alunoInclude<ExtArgs> | null
    where?: alunoWhereInput
  }

  /**
   * notebook.modificador
   */
  export type notebook$modificadorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aluno
     */
    select?: alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alunoInclude<ExtArgs> | null
    where?: alunoWhereInput
  }

  /**
   * notebook without action
   */
  export type notebookDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notebook
     */
    select?: notebookSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notebookInclude<ExtArgs> | null
  }


  /**
   * Model processador
   */

  export type AggregateProcessador = {
    _count: ProcessadorCountAggregateOutputType | null
    _avg: ProcessadorAvgAggregateOutputType | null
    _sum: ProcessadorSumAggregateOutputType | null
    _min: ProcessadorMinAggregateOutputType | null
    _max: ProcessadorMaxAggregateOutputType | null
  }

  export type ProcessadorAvgAggregateOutputType = {
    id: number | null
    alunoid: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
  }

  export type ProcessadorSumAggregateOutputType = {
    id: number | null
    alunoid: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
  }

  export type ProcessadorMinAggregateOutputType = {
    id: number | null
    codigoDereferencia: string | null
    descricao: string | null
    status: string | null
    dataDeChegada: Date | null
    dataDeSaida: Date | null
    marca: string | null
    modelo: string | null
    nome: string | null
    imagem: string | null
    situacao: string | null
    updatedAt: Date | null
    alunoid: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
  }

  export type ProcessadorMaxAggregateOutputType = {
    id: number | null
    codigoDereferencia: string | null
    descricao: string | null
    status: string | null
    dataDeChegada: Date | null
    dataDeSaida: Date | null
    marca: string | null
    modelo: string | null
    nome: string | null
    imagem: string | null
    situacao: string | null
    updatedAt: Date | null
    alunoid: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
  }

  export type ProcessadorCountAggregateOutputType = {
    id: number
    codigoDereferencia: number
    descricao: number
    status: number
    dataDeChegada: number
    dataDeSaida: number
    marca: number
    modelo: number
    nome: number
    imagem: number
    situacao: number
    updatedAt: number
    alunoid: number
    modificadorid: number
    descarteId: number
    doacaoId: number
    _all: number
  }


  export type ProcessadorAvgAggregateInputType = {
    id?: true
    alunoid?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
  }

  export type ProcessadorSumAggregateInputType = {
    id?: true
    alunoid?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
  }

  export type ProcessadorMinAggregateInputType = {
    id?: true
    codigoDereferencia?: true
    descricao?: true
    status?: true
    dataDeChegada?: true
    dataDeSaida?: true
    marca?: true
    modelo?: true
    nome?: true
    imagem?: true
    situacao?: true
    updatedAt?: true
    alunoid?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
  }

  export type ProcessadorMaxAggregateInputType = {
    id?: true
    codigoDereferencia?: true
    descricao?: true
    status?: true
    dataDeChegada?: true
    dataDeSaida?: true
    marca?: true
    modelo?: true
    nome?: true
    imagem?: true
    situacao?: true
    updatedAt?: true
    alunoid?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
  }

  export type ProcessadorCountAggregateInputType = {
    id?: true
    codigoDereferencia?: true
    descricao?: true
    status?: true
    dataDeChegada?: true
    dataDeSaida?: true
    marca?: true
    modelo?: true
    nome?: true
    imagem?: true
    situacao?: true
    updatedAt?: true
    alunoid?: true
    modificadorid?: true
    descarteId?: true
    doacaoId?: true
    _all?: true
  }

  export type ProcessadorAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which processador to aggregate.
     */
    where?: processadorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of processadors to fetch.
     */
    orderBy?: processadorOrderByWithRelationInput | processadorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: processadorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` processadors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` processadors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned processadors
    **/
    _count?: true | ProcessadorCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProcessadorAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProcessadorSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProcessadorMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProcessadorMaxAggregateInputType
  }

  export type GetProcessadorAggregateType<T extends ProcessadorAggregateArgs> = {
        [P in keyof T & keyof AggregateProcessador]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProcessador[P]>
      : GetScalarType<T[P], AggregateProcessador[P]>
  }




  export type processadorGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: processadorWhereInput
    orderBy?: processadorOrderByWithAggregationInput | processadorOrderByWithAggregationInput[]
    by: ProcessadorScalarFieldEnum[] | ProcessadorScalarFieldEnum
    having?: processadorScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProcessadorCountAggregateInputType | true
    _avg?: ProcessadorAvgAggregateInputType
    _sum?: ProcessadorSumAggregateInputType
    _min?: ProcessadorMinAggregateInputType
    _max?: ProcessadorMaxAggregateInputType
  }

  export type ProcessadorGroupByOutputType = {
    id: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date
    dataDeSaida: Date | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt: Date
    alunoid: number | null
    modificadorid: number | null
    descarteId: number | null
    doacaoId: number | null
    _count: ProcessadorCountAggregateOutputType | null
    _avg: ProcessadorAvgAggregateOutputType | null
    _sum: ProcessadorSumAggregateOutputType | null
    _min: ProcessadorMinAggregateOutputType | null
    _max: ProcessadorMaxAggregateOutputType | null
  }

  type GetProcessadorGroupByPayload<T extends processadorGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProcessadorGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProcessadorGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProcessadorGroupByOutputType[P]>
            : GetScalarType<T[P], ProcessadorGroupByOutputType[P]>
        }
      >
    >


  export type processadorSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    codigoDereferencia?: boolean
    descricao?: boolean
    status?: boolean
    dataDeChegada?: boolean
    dataDeSaida?: boolean
    marca?: boolean
    modelo?: boolean
    nome?: boolean
    imagem?: boolean
    situacao?: boolean
    updatedAt?: boolean
    alunoid?: boolean
    modificadorid?: boolean
    descarteId?: boolean
    doacaoId?: boolean
    doacao?: boolean | processador$doacaoArgs<ExtArgs>
    descarte?: boolean | processador$descarteArgs<ExtArgs>
    usuario?: boolean | processador$usuarioArgs<ExtArgs>
    modificador?: boolean | processador$modificadorArgs<ExtArgs>
  }, ExtArgs["result"]["processador"]>

  export type processadorSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    codigoDereferencia?: boolean
    descricao?: boolean
    status?: boolean
    dataDeChegada?: boolean
    dataDeSaida?: boolean
    marca?: boolean
    modelo?: boolean
    nome?: boolean
    imagem?: boolean
    situacao?: boolean
    updatedAt?: boolean
    alunoid?: boolean
    modificadorid?: boolean
    descarteId?: boolean
    doacaoId?: boolean
    doacao?: boolean | processador$doacaoArgs<ExtArgs>
    descarte?: boolean | processador$descarteArgs<ExtArgs>
    usuario?: boolean | processador$usuarioArgs<ExtArgs>
    modificador?: boolean | processador$modificadorArgs<ExtArgs>
  }, ExtArgs["result"]["processador"]>

  export type processadorSelectScalar = {
    id?: boolean
    codigoDereferencia?: boolean
    descricao?: boolean
    status?: boolean
    dataDeChegada?: boolean
    dataDeSaida?: boolean
    marca?: boolean
    modelo?: boolean
    nome?: boolean
    imagem?: boolean
    situacao?: boolean
    updatedAt?: boolean
    alunoid?: boolean
    modificadorid?: boolean
    descarteId?: boolean
    doacaoId?: boolean
  }

  export type processadorInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    doacao?: boolean | processador$doacaoArgs<ExtArgs>
    descarte?: boolean | processador$descarteArgs<ExtArgs>
    usuario?: boolean | processador$usuarioArgs<ExtArgs>
    modificador?: boolean | processador$modificadorArgs<ExtArgs>
  }
  export type processadorIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    doacao?: boolean | processador$doacaoArgs<ExtArgs>
    descarte?: boolean | processador$descarteArgs<ExtArgs>
    usuario?: boolean | processador$usuarioArgs<ExtArgs>
    modificador?: boolean | processador$modificadorArgs<ExtArgs>
  }

  export type $processadorPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "processador"
    objects: {
      doacao: Prisma.$doacaoPayload<ExtArgs> | null
      descarte: Prisma.$descartePayload<ExtArgs> | null
      usuario: Prisma.$alunoPayload<ExtArgs> | null
      modificador: Prisma.$alunoPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      codigoDereferencia: string
      descricao: string
      status: string
      dataDeChegada: Date
      dataDeSaida: Date | null
      marca: string
      modelo: string
      nome: string
      imagem: string
      situacao: string
      updatedAt: Date
      alunoid: number | null
      modificadorid: number | null
      descarteId: number | null
      doacaoId: number | null
    }, ExtArgs["result"]["processador"]>
    composites: {}
  }

  type processadorGetPayload<S extends boolean | null | undefined | processadorDefaultArgs> = $Result.GetResult<Prisma.$processadorPayload, S>

  type processadorCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<processadorFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ProcessadorCountAggregateInputType | true
    }

  export interface processadorDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['processador'], meta: { name: 'processador' } }
    /**
     * Find zero or one Processador that matches the filter.
     * @param {processadorFindUniqueArgs} args - Arguments to find a Processador
     * @example
     * // Get one Processador
     * const processador = await prisma.processador.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends processadorFindUniqueArgs>(args: SelectSubset<T, processadorFindUniqueArgs<ExtArgs>>): Prisma__processadorClient<$Result.GetResult<Prisma.$processadorPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Processador that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {processadorFindUniqueOrThrowArgs} args - Arguments to find a Processador
     * @example
     * // Get one Processador
     * const processador = await prisma.processador.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends processadorFindUniqueOrThrowArgs>(args: SelectSubset<T, processadorFindUniqueOrThrowArgs<ExtArgs>>): Prisma__processadorClient<$Result.GetResult<Prisma.$processadorPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Processador that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {processadorFindFirstArgs} args - Arguments to find a Processador
     * @example
     * // Get one Processador
     * const processador = await prisma.processador.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends processadorFindFirstArgs>(args?: SelectSubset<T, processadorFindFirstArgs<ExtArgs>>): Prisma__processadorClient<$Result.GetResult<Prisma.$processadorPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Processador that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {processadorFindFirstOrThrowArgs} args - Arguments to find a Processador
     * @example
     * // Get one Processador
     * const processador = await prisma.processador.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends processadorFindFirstOrThrowArgs>(args?: SelectSubset<T, processadorFindFirstOrThrowArgs<ExtArgs>>): Prisma__processadorClient<$Result.GetResult<Prisma.$processadorPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Processadors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {processadorFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Processadors
     * const processadors = await prisma.processador.findMany()
     * 
     * // Get first 10 Processadors
     * const processadors = await prisma.processador.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const processadorWithIdOnly = await prisma.processador.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends processadorFindManyArgs>(args?: SelectSubset<T, processadorFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$processadorPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Processador.
     * @param {processadorCreateArgs} args - Arguments to create a Processador.
     * @example
     * // Create one Processador
     * const Processador = await prisma.processador.create({
     *   data: {
     *     // ... data to create a Processador
     *   }
     * })
     * 
     */
    create<T extends processadorCreateArgs>(args: SelectSubset<T, processadorCreateArgs<ExtArgs>>): Prisma__processadorClient<$Result.GetResult<Prisma.$processadorPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Processadors.
     * @param {processadorCreateManyArgs} args - Arguments to create many Processadors.
     * @example
     * // Create many Processadors
     * const processador = await prisma.processador.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends processadorCreateManyArgs>(args?: SelectSubset<T, processadorCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Processadors and returns the data saved in the database.
     * @param {processadorCreateManyAndReturnArgs} args - Arguments to create many Processadors.
     * @example
     * // Create many Processadors
     * const processador = await prisma.processador.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Processadors and only return the `id`
     * const processadorWithIdOnly = await prisma.processador.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends processadorCreateManyAndReturnArgs>(args?: SelectSubset<T, processadorCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$processadorPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Processador.
     * @param {processadorDeleteArgs} args - Arguments to delete one Processador.
     * @example
     * // Delete one Processador
     * const Processador = await prisma.processador.delete({
     *   where: {
     *     // ... filter to delete one Processador
     *   }
     * })
     * 
     */
    delete<T extends processadorDeleteArgs>(args: SelectSubset<T, processadorDeleteArgs<ExtArgs>>): Prisma__processadorClient<$Result.GetResult<Prisma.$processadorPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Processador.
     * @param {processadorUpdateArgs} args - Arguments to update one Processador.
     * @example
     * // Update one Processador
     * const processador = await prisma.processador.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends processadorUpdateArgs>(args: SelectSubset<T, processadorUpdateArgs<ExtArgs>>): Prisma__processadorClient<$Result.GetResult<Prisma.$processadorPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Processadors.
     * @param {processadorDeleteManyArgs} args - Arguments to filter Processadors to delete.
     * @example
     * // Delete a few Processadors
     * const { count } = await prisma.processador.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends processadorDeleteManyArgs>(args?: SelectSubset<T, processadorDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Processadors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {processadorUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Processadors
     * const processador = await prisma.processador.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends processadorUpdateManyArgs>(args: SelectSubset<T, processadorUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Processador.
     * @param {processadorUpsertArgs} args - Arguments to update or create a Processador.
     * @example
     * // Update or create a Processador
     * const processador = await prisma.processador.upsert({
     *   create: {
     *     // ... data to create a Processador
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Processador we want to update
     *   }
     * })
     */
    upsert<T extends processadorUpsertArgs>(args: SelectSubset<T, processadorUpsertArgs<ExtArgs>>): Prisma__processadorClient<$Result.GetResult<Prisma.$processadorPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Processadors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {processadorCountArgs} args - Arguments to filter Processadors to count.
     * @example
     * // Count the number of Processadors
     * const count = await prisma.processador.count({
     *   where: {
     *     // ... the filter for the Processadors we want to count
     *   }
     * })
    **/
    count<T extends processadorCountArgs>(
      args?: Subset<T, processadorCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProcessadorCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Processador.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProcessadorAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProcessadorAggregateArgs>(args: Subset<T, ProcessadorAggregateArgs>): Prisma.PrismaPromise<GetProcessadorAggregateType<T>>

    /**
     * Group by Processador.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {processadorGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends processadorGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: processadorGroupByArgs['orderBy'] }
        : { orderBy?: processadorGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, processadorGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProcessadorGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the processador model
   */
  readonly fields: processadorFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for processador.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__processadorClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    doacao<T extends processador$doacaoArgs<ExtArgs> = {}>(args?: Subset<T, processador$doacaoArgs<ExtArgs>>): Prisma__doacaoClient<$Result.GetResult<Prisma.$doacaoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    descarte<T extends processador$descarteArgs<ExtArgs> = {}>(args?: Subset<T, processador$descarteArgs<ExtArgs>>): Prisma__descarteClient<$Result.GetResult<Prisma.$descartePayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    usuario<T extends processador$usuarioArgs<ExtArgs> = {}>(args?: Subset<T, processador$usuarioArgs<ExtArgs>>): Prisma__alunoClient<$Result.GetResult<Prisma.$alunoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    modificador<T extends processador$modificadorArgs<ExtArgs> = {}>(args?: Subset<T, processador$modificadorArgs<ExtArgs>>): Prisma__alunoClient<$Result.GetResult<Prisma.$alunoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the processador model
   */ 
  interface processadorFieldRefs {
    readonly id: FieldRef<"processador", 'Int'>
    readonly codigoDereferencia: FieldRef<"processador", 'String'>
    readonly descricao: FieldRef<"processador", 'String'>
    readonly status: FieldRef<"processador", 'String'>
    readonly dataDeChegada: FieldRef<"processador", 'DateTime'>
    readonly dataDeSaida: FieldRef<"processador", 'DateTime'>
    readonly marca: FieldRef<"processador", 'String'>
    readonly modelo: FieldRef<"processador", 'String'>
    readonly nome: FieldRef<"processador", 'String'>
    readonly imagem: FieldRef<"processador", 'String'>
    readonly situacao: FieldRef<"processador", 'String'>
    readonly updatedAt: FieldRef<"processador", 'DateTime'>
    readonly alunoid: FieldRef<"processador", 'Int'>
    readonly modificadorid: FieldRef<"processador", 'Int'>
    readonly descarteId: FieldRef<"processador", 'Int'>
    readonly doacaoId: FieldRef<"processador", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * processador findUnique
   */
  export type processadorFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the processador
     */
    select?: processadorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: processadorInclude<ExtArgs> | null
    /**
     * Filter, which processador to fetch.
     */
    where: processadorWhereUniqueInput
  }

  /**
   * processador findUniqueOrThrow
   */
  export type processadorFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the processador
     */
    select?: processadorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: processadorInclude<ExtArgs> | null
    /**
     * Filter, which processador to fetch.
     */
    where: processadorWhereUniqueInput
  }

  /**
   * processador findFirst
   */
  export type processadorFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the processador
     */
    select?: processadorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: processadorInclude<ExtArgs> | null
    /**
     * Filter, which processador to fetch.
     */
    where?: processadorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of processadors to fetch.
     */
    orderBy?: processadorOrderByWithRelationInput | processadorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for processadors.
     */
    cursor?: processadorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` processadors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` processadors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of processadors.
     */
    distinct?: ProcessadorScalarFieldEnum | ProcessadorScalarFieldEnum[]
  }

  /**
   * processador findFirstOrThrow
   */
  export type processadorFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the processador
     */
    select?: processadorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: processadorInclude<ExtArgs> | null
    /**
     * Filter, which processador to fetch.
     */
    where?: processadorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of processadors to fetch.
     */
    orderBy?: processadorOrderByWithRelationInput | processadorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for processadors.
     */
    cursor?: processadorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` processadors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` processadors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of processadors.
     */
    distinct?: ProcessadorScalarFieldEnum | ProcessadorScalarFieldEnum[]
  }

  /**
   * processador findMany
   */
  export type processadorFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the processador
     */
    select?: processadorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: processadorInclude<ExtArgs> | null
    /**
     * Filter, which processadors to fetch.
     */
    where?: processadorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of processadors to fetch.
     */
    orderBy?: processadorOrderByWithRelationInput | processadorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing processadors.
     */
    cursor?: processadorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` processadors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` processadors.
     */
    skip?: number
    distinct?: ProcessadorScalarFieldEnum | ProcessadorScalarFieldEnum[]
  }

  /**
   * processador create
   */
  export type processadorCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the processador
     */
    select?: processadorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: processadorInclude<ExtArgs> | null
    /**
     * The data needed to create a processador.
     */
    data: XOR<processadorCreateInput, processadorUncheckedCreateInput>
  }

  /**
   * processador createMany
   */
  export type processadorCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many processadors.
     */
    data: processadorCreateManyInput | processadorCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * processador createManyAndReturn
   */
  export type processadorCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the processador
     */
    select?: processadorSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many processadors.
     */
    data: processadorCreateManyInput | processadorCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: processadorIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * processador update
   */
  export type processadorUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the processador
     */
    select?: processadorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: processadorInclude<ExtArgs> | null
    /**
     * The data needed to update a processador.
     */
    data: XOR<processadorUpdateInput, processadorUncheckedUpdateInput>
    /**
     * Choose, which processador to update.
     */
    where: processadorWhereUniqueInput
  }

  /**
   * processador updateMany
   */
  export type processadorUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update processadors.
     */
    data: XOR<processadorUpdateManyMutationInput, processadorUncheckedUpdateManyInput>
    /**
     * Filter which processadors to update
     */
    where?: processadorWhereInput
  }

  /**
   * processador upsert
   */
  export type processadorUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the processador
     */
    select?: processadorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: processadorInclude<ExtArgs> | null
    /**
     * The filter to search for the processador to update in case it exists.
     */
    where: processadorWhereUniqueInput
    /**
     * In case the processador found by the `where` argument doesn't exist, create a new processador with this data.
     */
    create: XOR<processadorCreateInput, processadorUncheckedCreateInput>
    /**
     * In case the processador was found with the provided `where` argument, update it with this data.
     */
    update: XOR<processadorUpdateInput, processadorUncheckedUpdateInput>
  }

  /**
   * processador delete
   */
  export type processadorDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the processador
     */
    select?: processadorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: processadorInclude<ExtArgs> | null
    /**
     * Filter which processador to delete.
     */
    where: processadorWhereUniqueInput
  }

  /**
   * processador deleteMany
   */
  export type processadorDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which processadors to delete
     */
    where?: processadorWhereInput
  }

  /**
   * processador.doacao
   */
  export type processador$doacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the doacao
     */
    select?: doacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: doacaoInclude<ExtArgs> | null
    where?: doacaoWhereInput
  }

  /**
   * processador.descarte
   */
  export type processador$descarteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the descarte
     */
    select?: descarteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: descarteInclude<ExtArgs> | null
    where?: descarteWhereInput
  }

  /**
   * processador.usuario
   */
  export type processador$usuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aluno
     */
    select?: alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alunoInclude<ExtArgs> | null
    where?: alunoWhereInput
  }

  /**
   * processador.modificador
   */
  export type processador$modificadorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aluno
     */
    select?: alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alunoInclude<ExtArgs> | null
    where?: alunoWhereInput
  }

  /**
   * processador without action
   */
  export type processadorDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the processador
     */
    select?: processadorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: processadorInclude<ExtArgs> | null
  }


  /**
   * Model descarte
   */

  export type AggregateDescarte = {
    _count: DescarteCountAggregateOutputType | null
    _avg: DescarteAvgAggregateOutputType | null
    _sum: DescarteSumAggregateOutputType | null
    _min: DescarteMinAggregateOutputType | null
    _max: DescarteMaxAggregateOutputType | null
  }

  export type DescarteAvgAggregateOutputType = {
    id: number | null
    usuarioId: number | null
  }

  export type DescarteSumAggregateOutputType = {
    id: number | null
    usuarioId: number | null
  }

  export type DescarteMinAggregateOutputType = {
    id: number | null
    name: string | null
    descricao: string | null
    data: Date | null
    codigoDeReferencias: string | null
    usuarioId: number | null
    createdAt: Date | null
  }

  export type DescarteMaxAggregateOutputType = {
    id: number | null
    name: string | null
    descricao: string | null
    data: Date | null
    codigoDeReferencias: string | null
    usuarioId: number | null
    createdAt: Date | null
  }

  export type DescarteCountAggregateOutputType = {
    id: number
    name: number
    descricao: number
    data: number
    codigoDeReferencias: number
    usuarioId: number
    createdAt: number
    _all: number
  }


  export type DescarteAvgAggregateInputType = {
    id?: true
    usuarioId?: true
  }

  export type DescarteSumAggregateInputType = {
    id?: true
    usuarioId?: true
  }

  export type DescarteMinAggregateInputType = {
    id?: true
    name?: true
    descricao?: true
    data?: true
    codigoDeReferencias?: true
    usuarioId?: true
    createdAt?: true
  }

  export type DescarteMaxAggregateInputType = {
    id?: true
    name?: true
    descricao?: true
    data?: true
    codigoDeReferencias?: true
    usuarioId?: true
    createdAt?: true
  }

  export type DescarteCountAggregateInputType = {
    id?: true
    name?: true
    descricao?: true
    data?: true
    codigoDeReferencias?: true
    usuarioId?: true
    createdAt?: true
    _all?: true
  }

  export type DescarteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which descarte to aggregate.
     */
    where?: descarteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of descartes to fetch.
     */
    orderBy?: descarteOrderByWithRelationInput | descarteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: descarteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` descartes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` descartes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned descartes
    **/
    _count?: true | DescarteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DescarteAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DescarteSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DescarteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DescarteMaxAggregateInputType
  }

  export type GetDescarteAggregateType<T extends DescarteAggregateArgs> = {
        [P in keyof T & keyof AggregateDescarte]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDescarte[P]>
      : GetScalarType<T[P], AggregateDescarte[P]>
  }




  export type descarteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: descarteWhereInput
    orderBy?: descarteOrderByWithAggregationInput | descarteOrderByWithAggregationInput[]
    by: DescarteScalarFieldEnum[] | DescarteScalarFieldEnum
    having?: descarteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DescarteCountAggregateInputType | true
    _avg?: DescarteAvgAggregateInputType
    _sum?: DescarteSumAggregateInputType
    _min?: DescarteMinAggregateInputType
    _max?: DescarteMaxAggregateInputType
  }

  export type DescarteGroupByOutputType = {
    id: number
    name: string
    descricao: string
    data: Date
    codigoDeReferencias: string
    usuarioId: number | null
    createdAt: Date
    _count: DescarteCountAggregateOutputType | null
    _avg: DescarteAvgAggregateOutputType | null
    _sum: DescarteSumAggregateOutputType | null
    _min: DescarteMinAggregateOutputType | null
    _max: DescarteMaxAggregateOutputType | null
  }

  type GetDescarteGroupByPayload<T extends descarteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DescarteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DescarteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DescarteGroupByOutputType[P]>
            : GetScalarType<T[P], DescarteGroupByOutputType[P]>
        }
      >
    >


  export type descarteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    descricao?: boolean
    data?: boolean
    codigoDeReferencias?: boolean
    usuarioId?: boolean
    createdAt?: boolean
    usuario?: boolean | descarte$usuarioArgs<ExtArgs>
    teclados?: boolean | descarte$tecladosArgs<ExtArgs>
    hds?: boolean | descarte$hdsArgs<ExtArgs>
    fontesDeAlimentacao?: boolean | descarte$fontesDeAlimentacaoArgs<ExtArgs>
    gabinetes?: boolean | descarte$gabinetesArgs<ExtArgs>
    monitores?: boolean | descarte$monitoresArgs<ExtArgs>
    mouses?: boolean | descarte$mousesArgs<ExtArgs>
    estabilizadores?: boolean | descarte$estabilizadoresArgs<ExtArgs>
    impressoras?: boolean | descarte$impressorasArgs<ExtArgs>
    placasmae?: boolean | descarte$placasmaeArgs<ExtArgs>
    notebooks?: boolean | descarte$notebooksArgs<ExtArgs>
    processadores?: boolean | descarte$processadoresArgs<ExtArgs>
    _count?: boolean | DescarteCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["descarte"]>

  export type descarteSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    descricao?: boolean
    data?: boolean
    codigoDeReferencias?: boolean
    usuarioId?: boolean
    createdAt?: boolean
    usuario?: boolean | descarte$usuarioArgs<ExtArgs>
  }, ExtArgs["result"]["descarte"]>

  export type descarteSelectScalar = {
    id?: boolean
    name?: boolean
    descricao?: boolean
    data?: boolean
    codigoDeReferencias?: boolean
    usuarioId?: boolean
    createdAt?: boolean
  }

  export type descarteInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | descarte$usuarioArgs<ExtArgs>
    teclados?: boolean | descarte$tecladosArgs<ExtArgs>
    hds?: boolean | descarte$hdsArgs<ExtArgs>
    fontesDeAlimentacao?: boolean | descarte$fontesDeAlimentacaoArgs<ExtArgs>
    gabinetes?: boolean | descarte$gabinetesArgs<ExtArgs>
    monitores?: boolean | descarte$monitoresArgs<ExtArgs>
    mouses?: boolean | descarte$mousesArgs<ExtArgs>
    estabilizadores?: boolean | descarte$estabilizadoresArgs<ExtArgs>
    impressoras?: boolean | descarte$impressorasArgs<ExtArgs>
    placasmae?: boolean | descarte$placasmaeArgs<ExtArgs>
    notebooks?: boolean | descarte$notebooksArgs<ExtArgs>
    processadores?: boolean | descarte$processadoresArgs<ExtArgs>
    _count?: boolean | DescarteCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type descarteIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | descarte$usuarioArgs<ExtArgs>
  }

  export type $descartePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "descarte"
    objects: {
      usuario: Prisma.$alunoPayload<ExtArgs> | null
      teclados: Prisma.$tecladoPayload<ExtArgs>[]
      hds: Prisma.$hdPayload<ExtArgs>[]
      fontesDeAlimentacao: Prisma.$fontedealimentacaoPayload<ExtArgs>[]
      gabinetes: Prisma.$gabinetePayload<ExtArgs>[]
      monitores: Prisma.$monitorPayload<ExtArgs>[]
      mouses: Prisma.$mousePayload<ExtArgs>[]
      estabilizadores: Prisma.$estabilizadorPayload<ExtArgs>[]
      impressoras: Prisma.$impressoraPayload<ExtArgs>[]
      placasmae: Prisma.$placamaePayload<ExtArgs>[]
      notebooks: Prisma.$notebookPayload<ExtArgs>[]
      processadores: Prisma.$processadorPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      descricao: string
      data: Date
      codigoDeReferencias: string
      usuarioId: number | null
      createdAt: Date
    }, ExtArgs["result"]["descarte"]>
    composites: {}
  }

  type descarteGetPayload<S extends boolean | null | undefined | descarteDefaultArgs> = $Result.GetResult<Prisma.$descartePayload, S>

  type descarteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<descarteFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: DescarteCountAggregateInputType | true
    }

  export interface descarteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['descarte'], meta: { name: 'descarte' } }
    /**
     * Find zero or one Descarte that matches the filter.
     * @param {descarteFindUniqueArgs} args - Arguments to find a Descarte
     * @example
     * // Get one Descarte
     * const descarte = await prisma.descarte.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends descarteFindUniqueArgs>(args: SelectSubset<T, descarteFindUniqueArgs<ExtArgs>>): Prisma__descarteClient<$Result.GetResult<Prisma.$descartePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Descarte that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {descarteFindUniqueOrThrowArgs} args - Arguments to find a Descarte
     * @example
     * // Get one Descarte
     * const descarte = await prisma.descarte.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends descarteFindUniqueOrThrowArgs>(args: SelectSubset<T, descarteFindUniqueOrThrowArgs<ExtArgs>>): Prisma__descarteClient<$Result.GetResult<Prisma.$descartePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Descarte that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {descarteFindFirstArgs} args - Arguments to find a Descarte
     * @example
     * // Get one Descarte
     * const descarte = await prisma.descarte.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends descarteFindFirstArgs>(args?: SelectSubset<T, descarteFindFirstArgs<ExtArgs>>): Prisma__descarteClient<$Result.GetResult<Prisma.$descartePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Descarte that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {descarteFindFirstOrThrowArgs} args - Arguments to find a Descarte
     * @example
     * // Get one Descarte
     * const descarte = await prisma.descarte.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends descarteFindFirstOrThrowArgs>(args?: SelectSubset<T, descarteFindFirstOrThrowArgs<ExtArgs>>): Prisma__descarteClient<$Result.GetResult<Prisma.$descartePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Descartes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {descarteFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Descartes
     * const descartes = await prisma.descarte.findMany()
     * 
     * // Get first 10 Descartes
     * const descartes = await prisma.descarte.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const descarteWithIdOnly = await prisma.descarte.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends descarteFindManyArgs>(args?: SelectSubset<T, descarteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$descartePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Descarte.
     * @param {descarteCreateArgs} args - Arguments to create a Descarte.
     * @example
     * // Create one Descarte
     * const Descarte = await prisma.descarte.create({
     *   data: {
     *     // ... data to create a Descarte
     *   }
     * })
     * 
     */
    create<T extends descarteCreateArgs>(args: SelectSubset<T, descarteCreateArgs<ExtArgs>>): Prisma__descarteClient<$Result.GetResult<Prisma.$descartePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Descartes.
     * @param {descarteCreateManyArgs} args - Arguments to create many Descartes.
     * @example
     * // Create many Descartes
     * const descarte = await prisma.descarte.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends descarteCreateManyArgs>(args?: SelectSubset<T, descarteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Descartes and returns the data saved in the database.
     * @param {descarteCreateManyAndReturnArgs} args - Arguments to create many Descartes.
     * @example
     * // Create many Descartes
     * const descarte = await prisma.descarte.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Descartes and only return the `id`
     * const descarteWithIdOnly = await prisma.descarte.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends descarteCreateManyAndReturnArgs>(args?: SelectSubset<T, descarteCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$descartePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Descarte.
     * @param {descarteDeleteArgs} args - Arguments to delete one Descarte.
     * @example
     * // Delete one Descarte
     * const Descarte = await prisma.descarte.delete({
     *   where: {
     *     // ... filter to delete one Descarte
     *   }
     * })
     * 
     */
    delete<T extends descarteDeleteArgs>(args: SelectSubset<T, descarteDeleteArgs<ExtArgs>>): Prisma__descarteClient<$Result.GetResult<Prisma.$descartePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Descarte.
     * @param {descarteUpdateArgs} args - Arguments to update one Descarte.
     * @example
     * // Update one Descarte
     * const descarte = await prisma.descarte.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends descarteUpdateArgs>(args: SelectSubset<T, descarteUpdateArgs<ExtArgs>>): Prisma__descarteClient<$Result.GetResult<Prisma.$descartePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Descartes.
     * @param {descarteDeleteManyArgs} args - Arguments to filter Descartes to delete.
     * @example
     * // Delete a few Descartes
     * const { count } = await prisma.descarte.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends descarteDeleteManyArgs>(args?: SelectSubset<T, descarteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Descartes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {descarteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Descartes
     * const descarte = await prisma.descarte.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends descarteUpdateManyArgs>(args: SelectSubset<T, descarteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Descarte.
     * @param {descarteUpsertArgs} args - Arguments to update or create a Descarte.
     * @example
     * // Update or create a Descarte
     * const descarte = await prisma.descarte.upsert({
     *   create: {
     *     // ... data to create a Descarte
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Descarte we want to update
     *   }
     * })
     */
    upsert<T extends descarteUpsertArgs>(args: SelectSubset<T, descarteUpsertArgs<ExtArgs>>): Prisma__descarteClient<$Result.GetResult<Prisma.$descartePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Descartes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {descarteCountArgs} args - Arguments to filter Descartes to count.
     * @example
     * // Count the number of Descartes
     * const count = await prisma.descarte.count({
     *   where: {
     *     // ... the filter for the Descartes we want to count
     *   }
     * })
    **/
    count<T extends descarteCountArgs>(
      args?: Subset<T, descarteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DescarteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Descarte.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DescarteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DescarteAggregateArgs>(args: Subset<T, DescarteAggregateArgs>): Prisma.PrismaPromise<GetDescarteAggregateType<T>>

    /**
     * Group by Descarte.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {descarteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends descarteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: descarteGroupByArgs['orderBy'] }
        : { orderBy?: descarteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, descarteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDescarteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the descarte model
   */
  readonly fields: descarteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for descarte.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__descarteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuario<T extends descarte$usuarioArgs<ExtArgs> = {}>(args?: Subset<T, descarte$usuarioArgs<ExtArgs>>): Prisma__alunoClient<$Result.GetResult<Prisma.$alunoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    teclados<T extends descarte$tecladosArgs<ExtArgs> = {}>(args?: Subset<T, descarte$tecladosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tecladoPayload<ExtArgs>, T, "findMany"> | Null>
    hds<T extends descarte$hdsArgs<ExtArgs> = {}>(args?: Subset<T, descarte$hdsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$hdPayload<ExtArgs>, T, "findMany"> | Null>
    fontesDeAlimentacao<T extends descarte$fontesDeAlimentacaoArgs<ExtArgs> = {}>(args?: Subset<T, descarte$fontesDeAlimentacaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$fontedealimentacaoPayload<ExtArgs>, T, "findMany"> | Null>
    gabinetes<T extends descarte$gabinetesArgs<ExtArgs> = {}>(args?: Subset<T, descarte$gabinetesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$gabinetePayload<ExtArgs>, T, "findMany"> | Null>
    monitores<T extends descarte$monitoresArgs<ExtArgs> = {}>(args?: Subset<T, descarte$monitoresArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$monitorPayload<ExtArgs>, T, "findMany"> | Null>
    mouses<T extends descarte$mousesArgs<ExtArgs> = {}>(args?: Subset<T, descarte$mousesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mousePayload<ExtArgs>, T, "findMany"> | Null>
    estabilizadores<T extends descarte$estabilizadoresArgs<ExtArgs> = {}>(args?: Subset<T, descarte$estabilizadoresArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$estabilizadorPayload<ExtArgs>, T, "findMany"> | Null>
    impressoras<T extends descarte$impressorasArgs<ExtArgs> = {}>(args?: Subset<T, descarte$impressorasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$impressoraPayload<ExtArgs>, T, "findMany"> | Null>
    placasmae<T extends descarte$placasmaeArgs<ExtArgs> = {}>(args?: Subset<T, descarte$placasmaeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$placamaePayload<ExtArgs>, T, "findMany"> | Null>
    notebooks<T extends descarte$notebooksArgs<ExtArgs> = {}>(args?: Subset<T, descarte$notebooksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notebookPayload<ExtArgs>, T, "findMany"> | Null>
    processadores<T extends descarte$processadoresArgs<ExtArgs> = {}>(args?: Subset<T, descarte$processadoresArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$processadorPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the descarte model
   */ 
  interface descarteFieldRefs {
    readonly id: FieldRef<"descarte", 'Int'>
    readonly name: FieldRef<"descarte", 'String'>
    readonly descricao: FieldRef<"descarte", 'String'>
    readonly data: FieldRef<"descarte", 'DateTime'>
    readonly codigoDeReferencias: FieldRef<"descarte", 'String'>
    readonly usuarioId: FieldRef<"descarte", 'Int'>
    readonly createdAt: FieldRef<"descarte", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * descarte findUnique
   */
  export type descarteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the descarte
     */
    select?: descarteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: descarteInclude<ExtArgs> | null
    /**
     * Filter, which descarte to fetch.
     */
    where: descarteWhereUniqueInput
  }

  /**
   * descarte findUniqueOrThrow
   */
  export type descarteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the descarte
     */
    select?: descarteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: descarteInclude<ExtArgs> | null
    /**
     * Filter, which descarte to fetch.
     */
    where: descarteWhereUniqueInput
  }

  /**
   * descarte findFirst
   */
  export type descarteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the descarte
     */
    select?: descarteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: descarteInclude<ExtArgs> | null
    /**
     * Filter, which descarte to fetch.
     */
    where?: descarteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of descartes to fetch.
     */
    orderBy?: descarteOrderByWithRelationInput | descarteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for descartes.
     */
    cursor?: descarteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` descartes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` descartes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of descartes.
     */
    distinct?: DescarteScalarFieldEnum | DescarteScalarFieldEnum[]
  }

  /**
   * descarte findFirstOrThrow
   */
  export type descarteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the descarte
     */
    select?: descarteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: descarteInclude<ExtArgs> | null
    /**
     * Filter, which descarte to fetch.
     */
    where?: descarteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of descartes to fetch.
     */
    orderBy?: descarteOrderByWithRelationInput | descarteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for descartes.
     */
    cursor?: descarteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` descartes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` descartes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of descartes.
     */
    distinct?: DescarteScalarFieldEnum | DescarteScalarFieldEnum[]
  }

  /**
   * descarte findMany
   */
  export type descarteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the descarte
     */
    select?: descarteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: descarteInclude<ExtArgs> | null
    /**
     * Filter, which descartes to fetch.
     */
    where?: descarteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of descartes to fetch.
     */
    orderBy?: descarteOrderByWithRelationInput | descarteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing descartes.
     */
    cursor?: descarteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` descartes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` descartes.
     */
    skip?: number
    distinct?: DescarteScalarFieldEnum | DescarteScalarFieldEnum[]
  }

  /**
   * descarte create
   */
  export type descarteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the descarte
     */
    select?: descarteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: descarteInclude<ExtArgs> | null
    /**
     * The data needed to create a descarte.
     */
    data: XOR<descarteCreateInput, descarteUncheckedCreateInput>
  }

  /**
   * descarte createMany
   */
  export type descarteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many descartes.
     */
    data: descarteCreateManyInput | descarteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * descarte createManyAndReturn
   */
  export type descarteCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the descarte
     */
    select?: descarteSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many descartes.
     */
    data: descarteCreateManyInput | descarteCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: descarteIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * descarte update
   */
  export type descarteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the descarte
     */
    select?: descarteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: descarteInclude<ExtArgs> | null
    /**
     * The data needed to update a descarte.
     */
    data: XOR<descarteUpdateInput, descarteUncheckedUpdateInput>
    /**
     * Choose, which descarte to update.
     */
    where: descarteWhereUniqueInput
  }

  /**
   * descarte updateMany
   */
  export type descarteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update descartes.
     */
    data: XOR<descarteUpdateManyMutationInput, descarteUncheckedUpdateManyInput>
    /**
     * Filter which descartes to update
     */
    where?: descarteWhereInput
  }

  /**
   * descarte upsert
   */
  export type descarteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the descarte
     */
    select?: descarteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: descarteInclude<ExtArgs> | null
    /**
     * The filter to search for the descarte to update in case it exists.
     */
    where: descarteWhereUniqueInput
    /**
     * In case the descarte found by the `where` argument doesn't exist, create a new descarte with this data.
     */
    create: XOR<descarteCreateInput, descarteUncheckedCreateInput>
    /**
     * In case the descarte was found with the provided `where` argument, update it with this data.
     */
    update: XOR<descarteUpdateInput, descarteUncheckedUpdateInput>
  }

  /**
   * descarte delete
   */
  export type descarteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the descarte
     */
    select?: descarteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: descarteInclude<ExtArgs> | null
    /**
     * Filter which descarte to delete.
     */
    where: descarteWhereUniqueInput
  }

  /**
   * descarte deleteMany
   */
  export type descarteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which descartes to delete
     */
    where?: descarteWhereInput
  }

  /**
   * descarte.usuario
   */
  export type descarte$usuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aluno
     */
    select?: alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alunoInclude<ExtArgs> | null
    where?: alunoWhereInput
  }

  /**
   * descarte.teclados
   */
  export type descarte$tecladosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the teclado
     */
    select?: tecladoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tecladoInclude<ExtArgs> | null
    where?: tecladoWhereInput
    orderBy?: tecladoOrderByWithRelationInput | tecladoOrderByWithRelationInput[]
    cursor?: tecladoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TecladoScalarFieldEnum | TecladoScalarFieldEnum[]
  }

  /**
   * descarte.hds
   */
  export type descarte$hdsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hd
     */
    select?: hdSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: hdInclude<ExtArgs> | null
    where?: hdWhereInput
    orderBy?: hdOrderByWithRelationInput | hdOrderByWithRelationInput[]
    cursor?: hdWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HdScalarFieldEnum | HdScalarFieldEnum[]
  }

  /**
   * descarte.fontesDeAlimentacao
   */
  export type descarte$fontesDeAlimentacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fontedealimentacao
     */
    select?: fontedealimentacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fontedealimentacaoInclude<ExtArgs> | null
    where?: fontedealimentacaoWhereInput
    orderBy?: fontedealimentacaoOrderByWithRelationInput | fontedealimentacaoOrderByWithRelationInput[]
    cursor?: fontedealimentacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FontedealimentacaoScalarFieldEnum | FontedealimentacaoScalarFieldEnum[]
  }

  /**
   * descarte.gabinetes
   */
  export type descarte$gabinetesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the gabinete
     */
    select?: gabineteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: gabineteInclude<ExtArgs> | null
    where?: gabineteWhereInput
    orderBy?: gabineteOrderByWithRelationInput | gabineteOrderByWithRelationInput[]
    cursor?: gabineteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: GabineteScalarFieldEnum | GabineteScalarFieldEnum[]
  }

  /**
   * descarte.monitores
   */
  export type descarte$monitoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the monitor
     */
    select?: monitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: monitorInclude<ExtArgs> | null
    where?: monitorWhereInput
    orderBy?: monitorOrderByWithRelationInput | monitorOrderByWithRelationInput[]
    cursor?: monitorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MonitorScalarFieldEnum | MonitorScalarFieldEnum[]
  }

  /**
   * descarte.mouses
   */
  export type descarte$mousesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mouse
     */
    select?: mouseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mouseInclude<ExtArgs> | null
    where?: mouseWhereInput
    orderBy?: mouseOrderByWithRelationInput | mouseOrderByWithRelationInput[]
    cursor?: mouseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MouseScalarFieldEnum | MouseScalarFieldEnum[]
  }

  /**
   * descarte.estabilizadores
   */
  export type descarte$estabilizadoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estabilizador
     */
    select?: estabilizadorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estabilizadorInclude<ExtArgs> | null
    where?: estabilizadorWhereInput
    orderBy?: estabilizadorOrderByWithRelationInput | estabilizadorOrderByWithRelationInput[]
    cursor?: estabilizadorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EstabilizadorScalarFieldEnum | EstabilizadorScalarFieldEnum[]
  }

  /**
   * descarte.impressoras
   */
  export type descarte$impressorasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the impressora
     */
    select?: impressoraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: impressoraInclude<ExtArgs> | null
    where?: impressoraWhereInput
    orderBy?: impressoraOrderByWithRelationInput | impressoraOrderByWithRelationInput[]
    cursor?: impressoraWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ImpressoraScalarFieldEnum | ImpressoraScalarFieldEnum[]
  }

  /**
   * descarte.placasmae
   */
  export type descarte$placasmaeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the placamae
     */
    select?: placamaeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: placamaeInclude<ExtArgs> | null
    where?: placamaeWhereInput
    orderBy?: placamaeOrderByWithRelationInput | placamaeOrderByWithRelationInput[]
    cursor?: placamaeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PlacamaeScalarFieldEnum | PlacamaeScalarFieldEnum[]
  }

  /**
   * descarte.notebooks
   */
  export type descarte$notebooksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notebook
     */
    select?: notebookSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notebookInclude<ExtArgs> | null
    where?: notebookWhereInput
    orderBy?: notebookOrderByWithRelationInput | notebookOrderByWithRelationInput[]
    cursor?: notebookWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotebookScalarFieldEnum | NotebookScalarFieldEnum[]
  }

  /**
   * descarte.processadores
   */
  export type descarte$processadoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the processador
     */
    select?: processadorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: processadorInclude<ExtArgs> | null
    where?: processadorWhereInput
    orderBy?: processadorOrderByWithRelationInput | processadorOrderByWithRelationInput[]
    cursor?: processadorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProcessadorScalarFieldEnum | ProcessadorScalarFieldEnum[]
  }

  /**
   * descarte without action
   */
  export type descarteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the descarte
     */
    select?: descarteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: descarteInclude<ExtArgs> | null
  }


  /**
   * Model doacao
   */

  export type AggregateDoacao = {
    _count: DoacaoCountAggregateOutputType | null
    _avg: DoacaoAvgAggregateOutputType | null
    _sum: DoacaoSumAggregateOutputType | null
    _min: DoacaoMinAggregateOutputType | null
    _max: DoacaoMaxAggregateOutputType | null
  }

  export type DoacaoAvgAggregateOutputType = {
    id: number | null
    donatarioId: number | null
    usuariofisicoId: number | null
    usuariojuridicoId: number | null
  }

  export type DoacaoSumAggregateOutputType = {
    id: number | null
    donatarioId: number | null
    usuariofisicoId: number | null
    usuariojuridicoId: number | null
  }

  export type DoacaoMinAggregateOutputType = {
    id: number | null
    name: string | null
    codigoDeReferencias: string | null
    descricao: string | null
    justificativa: string | null
    nomeOuEmpresa: string | null
    contato: string | null
    data: Date | null
    status: string | null
    donatarioId: number | null
    usuariofisicoId: number | null
    usuariojuridicoId: number | null
    createdAt: Date | null
  }

  export type DoacaoMaxAggregateOutputType = {
    id: number | null
    name: string | null
    codigoDeReferencias: string | null
    descricao: string | null
    justificativa: string | null
    nomeOuEmpresa: string | null
    contato: string | null
    data: Date | null
    status: string | null
    donatarioId: number | null
    usuariofisicoId: number | null
    usuariojuridicoId: number | null
    createdAt: Date | null
  }

  export type DoacaoCountAggregateOutputType = {
    id: number
    name: number
    codigoDeReferencias: number
    descricao: number
    justificativa: number
    nomeOuEmpresa: number
    contato: number
    data: number
    status: number
    donatarioId: number
    usuariofisicoId: number
    usuariojuridicoId: number
    createdAt: number
    _all: number
  }


  export type DoacaoAvgAggregateInputType = {
    id?: true
    donatarioId?: true
    usuariofisicoId?: true
    usuariojuridicoId?: true
  }

  export type DoacaoSumAggregateInputType = {
    id?: true
    donatarioId?: true
    usuariofisicoId?: true
    usuariojuridicoId?: true
  }

  export type DoacaoMinAggregateInputType = {
    id?: true
    name?: true
    codigoDeReferencias?: true
    descricao?: true
    justificativa?: true
    nomeOuEmpresa?: true
    contato?: true
    data?: true
    status?: true
    donatarioId?: true
    usuariofisicoId?: true
    usuariojuridicoId?: true
    createdAt?: true
  }

  export type DoacaoMaxAggregateInputType = {
    id?: true
    name?: true
    codigoDeReferencias?: true
    descricao?: true
    justificativa?: true
    nomeOuEmpresa?: true
    contato?: true
    data?: true
    status?: true
    donatarioId?: true
    usuariofisicoId?: true
    usuariojuridicoId?: true
    createdAt?: true
  }

  export type DoacaoCountAggregateInputType = {
    id?: true
    name?: true
    codigoDeReferencias?: true
    descricao?: true
    justificativa?: true
    nomeOuEmpresa?: true
    contato?: true
    data?: true
    status?: true
    donatarioId?: true
    usuariofisicoId?: true
    usuariojuridicoId?: true
    createdAt?: true
    _all?: true
  }

  export type DoacaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which doacao to aggregate.
     */
    where?: doacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of doacaos to fetch.
     */
    orderBy?: doacaoOrderByWithRelationInput | doacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: doacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` doacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` doacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned doacaos
    **/
    _count?: true | DoacaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DoacaoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DoacaoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DoacaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DoacaoMaxAggregateInputType
  }

  export type GetDoacaoAggregateType<T extends DoacaoAggregateArgs> = {
        [P in keyof T & keyof AggregateDoacao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDoacao[P]>
      : GetScalarType<T[P], AggregateDoacao[P]>
  }




  export type doacaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: doacaoWhereInput
    orderBy?: doacaoOrderByWithAggregationInput | doacaoOrderByWithAggregationInput[]
    by: DoacaoScalarFieldEnum[] | DoacaoScalarFieldEnum
    having?: doacaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DoacaoCountAggregateInputType | true
    _avg?: DoacaoAvgAggregateInputType
    _sum?: DoacaoSumAggregateInputType
    _min?: DoacaoMinAggregateInputType
    _max?: DoacaoMaxAggregateInputType
  }

  export type DoacaoGroupByOutputType = {
    id: number
    name: string
    codigoDeReferencias: string
    descricao: string
    justificativa: string
    nomeOuEmpresa: string
    contato: string
    data: Date
    status: string
    donatarioId: number | null
    usuariofisicoId: number | null
    usuariojuridicoId: number | null
    createdAt: Date
    _count: DoacaoCountAggregateOutputType | null
    _avg: DoacaoAvgAggregateOutputType | null
    _sum: DoacaoSumAggregateOutputType | null
    _min: DoacaoMinAggregateOutputType | null
    _max: DoacaoMaxAggregateOutputType | null
  }

  type GetDoacaoGroupByPayload<T extends doacaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DoacaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DoacaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DoacaoGroupByOutputType[P]>
            : GetScalarType<T[P], DoacaoGroupByOutputType[P]>
        }
      >
    >


  export type doacaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    codigoDeReferencias?: boolean
    descricao?: boolean
    justificativa?: boolean
    nomeOuEmpresa?: boolean
    contato?: boolean
    data?: boolean
    status?: boolean
    donatarioId?: boolean
    usuariofisicoId?: boolean
    usuariojuridicoId?: boolean
    createdAt?: boolean
    donatario?: boolean | doacao$donatarioArgs<ExtArgs>
    usuariofisico?: boolean | doacao$usuariofisicoArgs<ExtArgs>
    usuariojuridico?: boolean | doacao$usuariojuridicoArgs<ExtArgs>
    teclados?: boolean | doacao$tecladosArgs<ExtArgs>
    hds?: boolean | doacao$hdsArgs<ExtArgs>
    fontesDeAlimentacao?: boolean | doacao$fontesDeAlimentacaoArgs<ExtArgs>
    gabinetes?: boolean | doacao$gabinetesArgs<ExtArgs>
    monitores?: boolean | doacao$monitoresArgs<ExtArgs>
    mouses?: boolean | doacao$mousesArgs<ExtArgs>
    estabilizadores?: boolean | doacao$estabilizadoresArgs<ExtArgs>
    impressoras?: boolean | doacao$impressorasArgs<ExtArgs>
    placasmae?: boolean | doacao$placasmaeArgs<ExtArgs>
    notebooks?: boolean | doacao$notebooksArgs<ExtArgs>
    processadores?: boolean | doacao$processadoresArgs<ExtArgs>
    _count?: boolean | DoacaoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["doacao"]>

  export type doacaoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    codigoDeReferencias?: boolean
    descricao?: boolean
    justificativa?: boolean
    nomeOuEmpresa?: boolean
    contato?: boolean
    data?: boolean
    status?: boolean
    donatarioId?: boolean
    usuariofisicoId?: boolean
    usuariojuridicoId?: boolean
    createdAt?: boolean
    donatario?: boolean | doacao$donatarioArgs<ExtArgs>
    usuariofisico?: boolean | doacao$usuariofisicoArgs<ExtArgs>
    usuariojuridico?: boolean | doacao$usuariojuridicoArgs<ExtArgs>
  }, ExtArgs["result"]["doacao"]>

  export type doacaoSelectScalar = {
    id?: boolean
    name?: boolean
    codigoDeReferencias?: boolean
    descricao?: boolean
    justificativa?: boolean
    nomeOuEmpresa?: boolean
    contato?: boolean
    data?: boolean
    status?: boolean
    donatarioId?: boolean
    usuariofisicoId?: boolean
    usuariojuridicoId?: boolean
    createdAt?: boolean
  }

  export type doacaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    donatario?: boolean | doacao$donatarioArgs<ExtArgs>
    usuariofisico?: boolean | doacao$usuariofisicoArgs<ExtArgs>
    usuariojuridico?: boolean | doacao$usuariojuridicoArgs<ExtArgs>
    teclados?: boolean | doacao$tecladosArgs<ExtArgs>
    hds?: boolean | doacao$hdsArgs<ExtArgs>
    fontesDeAlimentacao?: boolean | doacao$fontesDeAlimentacaoArgs<ExtArgs>
    gabinetes?: boolean | doacao$gabinetesArgs<ExtArgs>
    monitores?: boolean | doacao$monitoresArgs<ExtArgs>
    mouses?: boolean | doacao$mousesArgs<ExtArgs>
    estabilizadores?: boolean | doacao$estabilizadoresArgs<ExtArgs>
    impressoras?: boolean | doacao$impressorasArgs<ExtArgs>
    placasmae?: boolean | doacao$placasmaeArgs<ExtArgs>
    notebooks?: boolean | doacao$notebooksArgs<ExtArgs>
    processadores?: boolean | doacao$processadoresArgs<ExtArgs>
    _count?: boolean | DoacaoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type doacaoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    donatario?: boolean | doacao$donatarioArgs<ExtArgs>
    usuariofisico?: boolean | doacao$usuariofisicoArgs<ExtArgs>
    usuariojuridico?: boolean | doacao$usuariojuridicoArgs<ExtArgs>
  }

  export type $doacaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "doacao"
    objects: {
      donatario: Prisma.$alunoPayload<ExtArgs> | null
      usuariofisico: Prisma.$pessoafisicaPayload<ExtArgs> | null
      usuariojuridico: Prisma.$pessoajuridicaPayload<ExtArgs> | null
      teclados: Prisma.$tecladoPayload<ExtArgs>[]
      hds: Prisma.$hdPayload<ExtArgs>[]
      fontesDeAlimentacao: Prisma.$fontedealimentacaoPayload<ExtArgs>[]
      gabinetes: Prisma.$gabinetePayload<ExtArgs>[]
      monitores: Prisma.$monitorPayload<ExtArgs>[]
      mouses: Prisma.$mousePayload<ExtArgs>[]
      estabilizadores: Prisma.$estabilizadorPayload<ExtArgs>[]
      impressoras: Prisma.$impressoraPayload<ExtArgs>[]
      placasmae: Prisma.$placamaePayload<ExtArgs>[]
      notebooks: Prisma.$notebookPayload<ExtArgs>[]
      processadores: Prisma.$processadorPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      codigoDeReferencias: string
      descricao: string
      justificativa: string
      nomeOuEmpresa: string
      contato: string
      data: Date
      status: string
      donatarioId: number | null
      usuariofisicoId: number | null
      usuariojuridicoId: number | null
      createdAt: Date
    }, ExtArgs["result"]["doacao"]>
    composites: {}
  }

  type doacaoGetPayload<S extends boolean | null | undefined | doacaoDefaultArgs> = $Result.GetResult<Prisma.$doacaoPayload, S>

  type doacaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<doacaoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: DoacaoCountAggregateInputType | true
    }

  export interface doacaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['doacao'], meta: { name: 'doacao' } }
    /**
     * Find zero or one Doacao that matches the filter.
     * @param {doacaoFindUniqueArgs} args - Arguments to find a Doacao
     * @example
     * // Get one Doacao
     * const doacao = await prisma.doacao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends doacaoFindUniqueArgs>(args: SelectSubset<T, doacaoFindUniqueArgs<ExtArgs>>): Prisma__doacaoClient<$Result.GetResult<Prisma.$doacaoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Doacao that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {doacaoFindUniqueOrThrowArgs} args - Arguments to find a Doacao
     * @example
     * // Get one Doacao
     * const doacao = await prisma.doacao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends doacaoFindUniqueOrThrowArgs>(args: SelectSubset<T, doacaoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__doacaoClient<$Result.GetResult<Prisma.$doacaoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Doacao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {doacaoFindFirstArgs} args - Arguments to find a Doacao
     * @example
     * // Get one Doacao
     * const doacao = await prisma.doacao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends doacaoFindFirstArgs>(args?: SelectSubset<T, doacaoFindFirstArgs<ExtArgs>>): Prisma__doacaoClient<$Result.GetResult<Prisma.$doacaoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Doacao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {doacaoFindFirstOrThrowArgs} args - Arguments to find a Doacao
     * @example
     * // Get one Doacao
     * const doacao = await prisma.doacao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends doacaoFindFirstOrThrowArgs>(args?: SelectSubset<T, doacaoFindFirstOrThrowArgs<ExtArgs>>): Prisma__doacaoClient<$Result.GetResult<Prisma.$doacaoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Doacaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {doacaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Doacaos
     * const doacaos = await prisma.doacao.findMany()
     * 
     * // Get first 10 Doacaos
     * const doacaos = await prisma.doacao.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const doacaoWithIdOnly = await prisma.doacao.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends doacaoFindManyArgs>(args?: SelectSubset<T, doacaoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$doacaoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Doacao.
     * @param {doacaoCreateArgs} args - Arguments to create a Doacao.
     * @example
     * // Create one Doacao
     * const Doacao = await prisma.doacao.create({
     *   data: {
     *     // ... data to create a Doacao
     *   }
     * })
     * 
     */
    create<T extends doacaoCreateArgs>(args: SelectSubset<T, doacaoCreateArgs<ExtArgs>>): Prisma__doacaoClient<$Result.GetResult<Prisma.$doacaoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Doacaos.
     * @param {doacaoCreateManyArgs} args - Arguments to create many Doacaos.
     * @example
     * // Create many Doacaos
     * const doacao = await prisma.doacao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends doacaoCreateManyArgs>(args?: SelectSubset<T, doacaoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Doacaos and returns the data saved in the database.
     * @param {doacaoCreateManyAndReturnArgs} args - Arguments to create many Doacaos.
     * @example
     * // Create many Doacaos
     * const doacao = await prisma.doacao.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Doacaos and only return the `id`
     * const doacaoWithIdOnly = await prisma.doacao.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends doacaoCreateManyAndReturnArgs>(args?: SelectSubset<T, doacaoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$doacaoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Doacao.
     * @param {doacaoDeleteArgs} args - Arguments to delete one Doacao.
     * @example
     * // Delete one Doacao
     * const Doacao = await prisma.doacao.delete({
     *   where: {
     *     // ... filter to delete one Doacao
     *   }
     * })
     * 
     */
    delete<T extends doacaoDeleteArgs>(args: SelectSubset<T, doacaoDeleteArgs<ExtArgs>>): Prisma__doacaoClient<$Result.GetResult<Prisma.$doacaoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Doacao.
     * @param {doacaoUpdateArgs} args - Arguments to update one Doacao.
     * @example
     * // Update one Doacao
     * const doacao = await prisma.doacao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends doacaoUpdateArgs>(args: SelectSubset<T, doacaoUpdateArgs<ExtArgs>>): Prisma__doacaoClient<$Result.GetResult<Prisma.$doacaoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Doacaos.
     * @param {doacaoDeleteManyArgs} args - Arguments to filter Doacaos to delete.
     * @example
     * // Delete a few Doacaos
     * const { count } = await prisma.doacao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends doacaoDeleteManyArgs>(args?: SelectSubset<T, doacaoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Doacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {doacaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Doacaos
     * const doacao = await prisma.doacao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends doacaoUpdateManyArgs>(args: SelectSubset<T, doacaoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Doacao.
     * @param {doacaoUpsertArgs} args - Arguments to update or create a Doacao.
     * @example
     * // Update or create a Doacao
     * const doacao = await prisma.doacao.upsert({
     *   create: {
     *     // ... data to create a Doacao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Doacao we want to update
     *   }
     * })
     */
    upsert<T extends doacaoUpsertArgs>(args: SelectSubset<T, doacaoUpsertArgs<ExtArgs>>): Prisma__doacaoClient<$Result.GetResult<Prisma.$doacaoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Doacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {doacaoCountArgs} args - Arguments to filter Doacaos to count.
     * @example
     * // Count the number of Doacaos
     * const count = await prisma.doacao.count({
     *   where: {
     *     // ... the filter for the Doacaos we want to count
     *   }
     * })
    **/
    count<T extends doacaoCountArgs>(
      args?: Subset<T, doacaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DoacaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Doacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DoacaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DoacaoAggregateArgs>(args: Subset<T, DoacaoAggregateArgs>): Prisma.PrismaPromise<GetDoacaoAggregateType<T>>

    /**
     * Group by Doacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {doacaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends doacaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: doacaoGroupByArgs['orderBy'] }
        : { orderBy?: doacaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, doacaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDoacaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the doacao model
   */
  readonly fields: doacaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for doacao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__doacaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    donatario<T extends doacao$donatarioArgs<ExtArgs> = {}>(args?: Subset<T, doacao$donatarioArgs<ExtArgs>>): Prisma__alunoClient<$Result.GetResult<Prisma.$alunoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    usuariofisico<T extends doacao$usuariofisicoArgs<ExtArgs> = {}>(args?: Subset<T, doacao$usuariofisicoArgs<ExtArgs>>): Prisma__pessoafisicaClient<$Result.GetResult<Prisma.$pessoafisicaPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    usuariojuridico<T extends doacao$usuariojuridicoArgs<ExtArgs> = {}>(args?: Subset<T, doacao$usuariojuridicoArgs<ExtArgs>>): Prisma__pessoajuridicaClient<$Result.GetResult<Prisma.$pessoajuridicaPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    teclados<T extends doacao$tecladosArgs<ExtArgs> = {}>(args?: Subset<T, doacao$tecladosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tecladoPayload<ExtArgs>, T, "findMany"> | Null>
    hds<T extends doacao$hdsArgs<ExtArgs> = {}>(args?: Subset<T, doacao$hdsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$hdPayload<ExtArgs>, T, "findMany"> | Null>
    fontesDeAlimentacao<T extends doacao$fontesDeAlimentacaoArgs<ExtArgs> = {}>(args?: Subset<T, doacao$fontesDeAlimentacaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$fontedealimentacaoPayload<ExtArgs>, T, "findMany"> | Null>
    gabinetes<T extends doacao$gabinetesArgs<ExtArgs> = {}>(args?: Subset<T, doacao$gabinetesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$gabinetePayload<ExtArgs>, T, "findMany"> | Null>
    monitores<T extends doacao$monitoresArgs<ExtArgs> = {}>(args?: Subset<T, doacao$monitoresArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$monitorPayload<ExtArgs>, T, "findMany"> | Null>
    mouses<T extends doacao$mousesArgs<ExtArgs> = {}>(args?: Subset<T, doacao$mousesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mousePayload<ExtArgs>, T, "findMany"> | Null>
    estabilizadores<T extends doacao$estabilizadoresArgs<ExtArgs> = {}>(args?: Subset<T, doacao$estabilizadoresArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$estabilizadorPayload<ExtArgs>, T, "findMany"> | Null>
    impressoras<T extends doacao$impressorasArgs<ExtArgs> = {}>(args?: Subset<T, doacao$impressorasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$impressoraPayload<ExtArgs>, T, "findMany"> | Null>
    placasmae<T extends doacao$placasmaeArgs<ExtArgs> = {}>(args?: Subset<T, doacao$placasmaeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$placamaePayload<ExtArgs>, T, "findMany"> | Null>
    notebooks<T extends doacao$notebooksArgs<ExtArgs> = {}>(args?: Subset<T, doacao$notebooksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notebookPayload<ExtArgs>, T, "findMany"> | Null>
    processadores<T extends doacao$processadoresArgs<ExtArgs> = {}>(args?: Subset<T, doacao$processadoresArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$processadorPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the doacao model
   */ 
  interface doacaoFieldRefs {
    readonly id: FieldRef<"doacao", 'Int'>
    readonly name: FieldRef<"doacao", 'String'>
    readonly codigoDeReferencias: FieldRef<"doacao", 'String'>
    readonly descricao: FieldRef<"doacao", 'String'>
    readonly justificativa: FieldRef<"doacao", 'String'>
    readonly nomeOuEmpresa: FieldRef<"doacao", 'String'>
    readonly contato: FieldRef<"doacao", 'String'>
    readonly data: FieldRef<"doacao", 'DateTime'>
    readonly status: FieldRef<"doacao", 'String'>
    readonly donatarioId: FieldRef<"doacao", 'Int'>
    readonly usuariofisicoId: FieldRef<"doacao", 'Int'>
    readonly usuariojuridicoId: FieldRef<"doacao", 'Int'>
    readonly createdAt: FieldRef<"doacao", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * doacao findUnique
   */
  export type doacaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the doacao
     */
    select?: doacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: doacaoInclude<ExtArgs> | null
    /**
     * Filter, which doacao to fetch.
     */
    where: doacaoWhereUniqueInput
  }

  /**
   * doacao findUniqueOrThrow
   */
  export type doacaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the doacao
     */
    select?: doacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: doacaoInclude<ExtArgs> | null
    /**
     * Filter, which doacao to fetch.
     */
    where: doacaoWhereUniqueInput
  }

  /**
   * doacao findFirst
   */
  export type doacaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the doacao
     */
    select?: doacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: doacaoInclude<ExtArgs> | null
    /**
     * Filter, which doacao to fetch.
     */
    where?: doacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of doacaos to fetch.
     */
    orderBy?: doacaoOrderByWithRelationInput | doacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for doacaos.
     */
    cursor?: doacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` doacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` doacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of doacaos.
     */
    distinct?: DoacaoScalarFieldEnum | DoacaoScalarFieldEnum[]
  }

  /**
   * doacao findFirstOrThrow
   */
  export type doacaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the doacao
     */
    select?: doacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: doacaoInclude<ExtArgs> | null
    /**
     * Filter, which doacao to fetch.
     */
    where?: doacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of doacaos to fetch.
     */
    orderBy?: doacaoOrderByWithRelationInput | doacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for doacaos.
     */
    cursor?: doacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` doacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` doacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of doacaos.
     */
    distinct?: DoacaoScalarFieldEnum | DoacaoScalarFieldEnum[]
  }

  /**
   * doacao findMany
   */
  export type doacaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the doacao
     */
    select?: doacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: doacaoInclude<ExtArgs> | null
    /**
     * Filter, which doacaos to fetch.
     */
    where?: doacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of doacaos to fetch.
     */
    orderBy?: doacaoOrderByWithRelationInput | doacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing doacaos.
     */
    cursor?: doacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` doacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` doacaos.
     */
    skip?: number
    distinct?: DoacaoScalarFieldEnum | DoacaoScalarFieldEnum[]
  }

  /**
   * doacao create
   */
  export type doacaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the doacao
     */
    select?: doacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: doacaoInclude<ExtArgs> | null
    /**
     * The data needed to create a doacao.
     */
    data: XOR<doacaoCreateInput, doacaoUncheckedCreateInput>
  }

  /**
   * doacao createMany
   */
  export type doacaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many doacaos.
     */
    data: doacaoCreateManyInput | doacaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * doacao createManyAndReturn
   */
  export type doacaoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the doacao
     */
    select?: doacaoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many doacaos.
     */
    data: doacaoCreateManyInput | doacaoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: doacaoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * doacao update
   */
  export type doacaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the doacao
     */
    select?: doacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: doacaoInclude<ExtArgs> | null
    /**
     * The data needed to update a doacao.
     */
    data: XOR<doacaoUpdateInput, doacaoUncheckedUpdateInput>
    /**
     * Choose, which doacao to update.
     */
    where: doacaoWhereUniqueInput
  }

  /**
   * doacao updateMany
   */
  export type doacaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update doacaos.
     */
    data: XOR<doacaoUpdateManyMutationInput, doacaoUncheckedUpdateManyInput>
    /**
     * Filter which doacaos to update
     */
    where?: doacaoWhereInput
  }

  /**
   * doacao upsert
   */
  export type doacaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the doacao
     */
    select?: doacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: doacaoInclude<ExtArgs> | null
    /**
     * The filter to search for the doacao to update in case it exists.
     */
    where: doacaoWhereUniqueInput
    /**
     * In case the doacao found by the `where` argument doesn't exist, create a new doacao with this data.
     */
    create: XOR<doacaoCreateInput, doacaoUncheckedCreateInput>
    /**
     * In case the doacao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<doacaoUpdateInput, doacaoUncheckedUpdateInput>
  }

  /**
   * doacao delete
   */
  export type doacaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the doacao
     */
    select?: doacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: doacaoInclude<ExtArgs> | null
    /**
     * Filter which doacao to delete.
     */
    where: doacaoWhereUniqueInput
  }

  /**
   * doacao deleteMany
   */
  export type doacaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which doacaos to delete
     */
    where?: doacaoWhereInput
  }

  /**
   * doacao.donatario
   */
  export type doacao$donatarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aluno
     */
    select?: alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alunoInclude<ExtArgs> | null
    where?: alunoWhereInput
  }

  /**
   * doacao.usuariofisico
   */
  export type doacao$usuariofisicoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pessoafisica
     */
    select?: pessoafisicaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pessoafisicaInclude<ExtArgs> | null
    where?: pessoafisicaWhereInput
  }

  /**
   * doacao.usuariojuridico
   */
  export type doacao$usuariojuridicoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pessoajuridica
     */
    select?: pessoajuridicaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pessoajuridicaInclude<ExtArgs> | null
    where?: pessoajuridicaWhereInput
  }

  /**
   * doacao.teclados
   */
  export type doacao$tecladosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the teclado
     */
    select?: tecladoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tecladoInclude<ExtArgs> | null
    where?: tecladoWhereInput
    orderBy?: tecladoOrderByWithRelationInput | tecladoOrderByWithRelationInput[]
    cursor?: tecladoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TecladoScalarFieldEnum | TecladoScalarFieldEnum[]
  }

  /**
   * doacao.hds
   */
  export type doacao$hdsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hd
     */
    select?: hdSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: hdInclude<ExtArgs> | null
    where?: hdWhereInput
    orderBy?: hdOrderByWithRelationInput | hdOrderByWithRelationInput[]
    cursor?: hdWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HdScalarFieldEnum | HdScalarFieldEnum[]
  }

  /**
   * doacao.fontesDeAlimentacao
   */
  export type doacao$fontesDeAlimentacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fontedealimentacao
     */
    select?: fontedealimentacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fontedealimentacaoInclude<ExtArgs> | null
    where?: fontedealimentacaoWhereInput
    orderBy?: fontedealimentacaoOrderByWithRelationInput | fontedealimentacaoOrderByWithRelationInput[]
    cursor?: fontedealimentacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FontedealimentacaoScalarFieldEnum | FontedealimentacaoScalarFieldEnum[]
  }

  /**
   * doacao.gabinetes
   */
  export type doacao$gabinetesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the gabinete
     */
    select?: gabineteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: gabineteInclude<ExtArgs> | null
    where?: gabineteWhereInput
    orderBy?: gabineteOrderByWithRelationInput | gabineteOrderByWithRelationInput[]
    cursor?: gabineteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: GabineteScalarFieldEnum | GabineteScalarFieldEnum[]
  }

  /**
   * doacao.monitores
   */
  export type doacao$monitoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the monitor
     */
    select?: monitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: monitorInclude<ExtArgs> | null
    where?: monitorWhereInput
    orderBy?: monitorOrderByWithRelationInput | monitorOrderByWithRelationInput[]
    cursor?: monitorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MonitorScalarFieldEnum | MonitorScalarFieldEnum[]
  }

  /**
   * doacao.mouses
   */
  export type doacao$mousesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mouse
     */
    select?: mouseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mouseInclude<ExtArgs> | null
    where?: mouseWhereInput
    orderBy?: mouseOrderByWithRelationInput | mouseOrderByWithRelationInput[]
    cursor?: mouseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MouseScalarFieldEnum | MouseScalarFieldEnum[]
  }

  /**
   * doacao.estabilizadores
   */
  export type doacao$estabilizadoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estabilizador
     */
    select?: estabilizadorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estabilizadorInclude<ExtArgs> | null
    where?: estabilizadorWhereInput
    orderBy?: estabilizadorOrderByWithRelationInput | estabilizadorOrderByWithRelationInput[]
    cursor?: estabilizadorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EstabilizadorScalarFieldEnum | EstabilizadorScalarFieldEnum[]
  }

  /**
   * doacao.impressoras
   */
  export type doacao$impressorasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the impressora
     */
    select?: impressoraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: impressoraInclude<ExtArgs> | null
    where?: impressoraWhereInput
    orderBy?: impressoraOrderByWithRelationInput | impressoraOrderByWithRelationInput[]
    cursor?: impressoraWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ImpressoraScalarFieldEnum | ImpressoraScalarFieldEnum[]
  }

  /**
   * doacao.placasmae
   */
  export type doacao$placasmaeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the placamae
     */
    select?: placamaeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: placamaeInclude<ExtArgs> | null
    where?: placamaeWhereInput
    orderBy?: placamaeOrderByWithRelationInput | placamaeOrderByWithRelationInput[]
    cursor?: placamaeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PlacamaeScalarFieldEnum | PlacamaeScalarFieldEnum[]
  }

  /**
   * doacao.notebooks
   */
  export type doacao$notebooksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notebook
     */
    select?: notebookSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notebookInclude<ExtArgs> | null
    where?: notebookWhereInput
    orderBy?: notebookOrderByWithRelationInput | notebookOrderByWithRelationInput[]
    cursor?: notebookWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotebookScalarFieldEnum | NotebookScalarFieldEnum[]
  }

  /**
   * doacao.processadores
   */
  export type doacao$processadoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the processador
     */
    select?: processadorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: processadorInclude<ExtArgs> | null
    where?: processadorWhereInput
    orderBy?: processadorOrderByWithRelationInput | processadorOrderByWithRelationInput[]
    cursor?: processadorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProcessadorScalarFieldEnum | ProcessadorScalarFieldEnum[]
  }

  /**
   * doacao without action
   */
  export type doacaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the doacao
     */
    select?: doacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: doacaoInclude<ExtArgs> | null
  }


  /**
   * Model doacaoUsuario
   */

  export type AggregateDoacaoUsuario = {
    _count: DoacaoUsuarioCountAggregateOutputType | null
    _avg: DoacaoUsuarioAvgAggregateOutputType | null
    _sum: DoacaoUsuarioSumAggregateOutputType | null
    _min: DoacaoUsuarioMinAggregateOutputType | null
    _max: DoacaoUsuarioMaxAggregateOutputType | null
  }

  export type DoacaoUsuarioAvgAggregateOutputType = {
    id: number | null
    donatariofisicoId: number | null
    donatariojuridicoId: number | null
    usuarioid: number | null
  }

  export type DoacaoUsuarioSumAggregateOutputType = {
    id: number | null
    donatariofisicoId: number | null
    donatariojuridicoId: number | null
    usuarioid: number | null
  }

  export type DoacaoUsuarioMinAggregateOutputType = {
    id: number | null
    name: string | null
    eletronicos: string | null
    descricao: string | null
    informacoesAdicionais: string | null
    horarioDeEntrega: string | null
    contato: string | null
    data: Date | null
    status: string | null
    donatariofisicoId: number | null
    donatariojuridicoId: number | null
    usuarioid: number | null
    createdAt: Date | null
  }

  export type DoacaoUsuarioMaxAggregateOutputType = {
    id: number | null
    name: string | null
    eletronicos: string | null
    descricao: string | null
    informacoesAdicionais: string | null
    horarioDeEntrega: string | null
    contato: string | null
    data: Date | null
    status: string | null
    donatariofisicoId: number | null
    donatariojuridicoId: number | null
    usuarioid: number | null
    createdAt: Date | null
  }

  export type DoacaoUsuarioCountAggregateOutputType = {
    id: number
    name: number
    eletronicos: number
    descricao: number
    informacoesAdicionais: number
    horarioDeEntrega: number
    contato: number
    data: number
    status: number
    donatariofisicoId: number
    donatariojuridicoId: number
    usuarioid: number
    createdAt: number
    _all: number
  }


  export type DoacaoUsuarioAvgAggregateInputType = {
    id?: true
    donatariofisicoId?: true
    donatariojuridicoId?: true
    usuarioid?: true
  }

  export type DoacaoUsuarioSumAggregateInputType = {
    id?: true
    donatariofisicoId?: true
    donatariojuridicoId?: true
    usuarioid?: true
  }

  export type DoacaoUsuarioMinAggregateInputType = {
    id?: true
    name?: true
    eletronicos?: true
    descricao?: true
    informacoesAdicionais?: true
    horarioDeEntrega?: true
    contato?: true
    data?: true
    status?: true
    donatariofisicoId?: true
    donatariojuridicoId?: true
    usuarioid?: true
    createdAt?: true
  }

  export type DoacaoUsuarioMaxAggregateInputType = {
    id?: true
    name?: true
    eletronicos?: true
    descricao?: true
    informacoesAdicionais?: true
    horarioDeEntrega?: true
    contato?: true
    data?: true
    status?: true
    donatariofisicoId?: true
    donatariojuridicoId?: true
    usuarioid?: true
    createdAt?: true
  }

  export type DoacaoUsuarioCountAggregateInputType = {
    id?: true
    name?: true
    eletronicos?: true
    descricao?: true
    informacoesAdicionais?: true
    horarioDeEntrega?: true
    contato?: true
    data?: true
    status?: true
    donatariofisicoId?: true
    donatariojuridicoId?: true
    usuarioid?: true
    createdAt?: true
    _all?: true
  }

  export type DoacaoUsuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which doacaoUsuario to aggregate.
     */
    where?: doacaoUsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of doacaoUsuarios to fetch.
     */
    orderBy?: doacaoUsuarioOrderByWithRelationInput | doacaoUsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: doacaoUsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` doacaoUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` doacaoUsuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned doacaoUsuarios
    **/
    _count?: true | DoacaoUsuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DoacaoUsuarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DoacaoUsuarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DoacaoUsuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DoacaoUsuarioMaxAggregateInputType
  }

  export type GetDoacaoUsuarioAggregateType<T extends DoacaoUsuarioAggregateArgs> = {
        [P in keyof T & keyof AggregateDoacaoUsuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDoacaoUsuario[P]>
      : GetScalarType<T[P], AggregateDoacaoUsuario[P]>
  }




  export type doacaoUsuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: doacaoUsuarioWhereInput
    orderBy?: doacaoUsuarioOrderByWithAggregationInput | doacaoUsuarioOrderByWithAggregationInput[]
    by: DoacaoUsuarioScalarFieldEnum[] | DoacaoUsuarioScalarFieldEnum
    having?: doacaoUsuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DoacaoUsuarioCountAggregateInputType | true
    _avg?: DoacaoUsuarioAvgAggregateInputType
    _sum?: DoacaoUsuarioSumAggregateInputType
    _min?: DoacaoUsuarioMinAggregateInputType
    _max?: DoacaoUsuarioMaxAggregateInputType
  }

  export type DoacaoUsuarioGroupByOutputType = {
    id: number
    name: string
    eletronicos: string
    descricao: string
    informacoesAdicionais: string
    horarioDeEntrega: string
    contato: string
    data: Date
    status: string
    donatariofisicoId: number | null
    donatariojuridicoId: number | null
    usuarioid: number | null
    createdAt: Date
    _count: DoacaoUsuarioCountAggregateOutputType | null
    _avg: DoacaoUsuarioAvgAggregateOutputType | null
    _sum: DoacaoUsuarioSumAggregateOutputType | null
    _min: DoacaoUsuarioMinAggregateOutputType | null
    _max: DoacaoUsuarioMaxAggregateOutputType | null
  }

  type GetDoacaoUsuarioGroupByPayload<T extends doacaoUsuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DoacaoUsuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DoacaoUsuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DoacaoUsuarioGroupByOutputType[P]>
            : GetScalarType<T[P], DoacaoUsuarioGroupByOutputType[P]>
        }
      >
    >


  export type doacaoUsuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    eletronicos?: boolean
    descricao?: boolean
    informacoesAdicionais?: boolean
    horarioDeEntrega?: boolean
    contato?: boolean
    data?: boolean
    status?: boolean
    donatariofisicoId?: boolean
    donatariojuridicoId?: boolean
    usuarioid?: boolean
    createdAt?: boolean
    donatariofisico?: boolean | doacaoUsuario$donatariofisicoArgs<ExtArgs>
    donatariojuridico?: boolean | doacaoUsuario$donatariojuridicoArgs<ExtArgs>
    usuario?: boolean | doacaoUsuario$usuarioArgs<ExtArgs>
  }, ExtArgs["result"]["doacaoUsuario"]>

  export type doacaoUsuarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    eletronicos?: boolean
    descricao?: boolean
    informacoesAdicionais?: boolean
    horarioDeEntrega?: boolean
    contato?: boolean
    data?: boolean
    status?: boolean
    donatariofisicoId?: boolean
    donatariojuridicoId?: boolean
    usuarioid?: boolean
    createdAt?: boolean
    donatariofisico?: boolean | doacaoUsuario$donatariofisicoArgs<ExtArgs>
    donatariojuridico?: boolean | doacaoUsuario$donatariojuridicoArgs<ExtArgs>
    usuario?: boolean | doacaoUsuario$usuarioArgs<ExtArgs>
  }, ExtArgs["result"]["doacaoUsuario"]>

  export type doacaoUsuarioSelectScalar = {
    id?: boolean
    name?: boolean
    eletronicos?: boolean
    descricao?: boolean
    informacoesAdicionais?: boolean
    horarioDeEntrega?: boolean
    contato?: boolean
    data?: boolean
    status?: boolean
    donatariofisicoId?: boolean
    donatariojuridicoId?: boolean
    usuarioid?: boolean
    createdAt?: boolean
  }

  export type doacaoUsuarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    donatariofisico?: boolean | doacaoUsuario$donatariofisicoArgs<ExtArgs>
    donatariojuridico?: boolean | doacaoUsuario$donatariojuridicoArgs<ExtArgs>
    usuario?: boolean | doacaoUsuario$usuarioArgs<ExtArgs>
  }
  export type doacaoUsuarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    donatariofisico?: boolean | doacaoUsuario$donatariofisicoArgs<ExtArgs>
    donatariojuridico?: boolean | doacaoUsuario$donatariojuridicoArgs<ExtArgs>
    usuario?: boolean | doacaoUsuario$usuarioArgs<ExtArgs>
  }

  export type $doacaoUsuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "doacaoUsuario"
    objects: {
      donatariofisico: Prisma.$pessoafisicaPayload<ExtArgs> | null
      donatariojuridico: Prisma.$pessoajuridicaPayload<ExtArgs> | null
      usuario: Prisma.$alunoPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      eletronicos: string
      descricao: string
      informacoesAdicionais: string
      horarioDeEntrega: string
      contato: string
      data: Date
      status: string
      donatariofisicoId: number | null
      donatariojuridicoId: number | null
      usuarioid: number | null
      createdAt: Date
    }, ExtArgs["result"]["doacaoUsuario"]>
    composites: {}
  }

  type doacaoUsuarioGetPayload<S extends boolean | null | undefined | doacaoUsuarioDefaultArgs> = $Result.GetResult<Prisma.$doacaoUsuarioPayload, S>

  type doacaoUsuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<doacaoUsuarioFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: DoacaoUsuarioCountAggregateInputType | true
    }

  export interface doacaoUsuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['doacaoUsuario'], meta: { name: 'doacaoUsuario' } }
    /**
     * Find zero or one DoacaoUsuario that matches the filter.
     * @param {doacaoUsuarioFindUniqueArgs} args - Arguments to find a DoacaoUsuario
     * @example
     * // Get one DoacaoUsuario
     * const doacaoUsuario = await prisma.doacaoUsuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends doacaoUsuarioFindUniqueArgs>(args: SelectSubset<T, doacaoUsuarioFindUniqueArgs<ExtArgs>>): Prisma__doacaoUsuarioClient<$Result.GetResult<Prisma.$doacaoUsuarioPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one DoacaoUsuario that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {doacaoUsuarioFindUniqueOrThrowArgs} args - Arguments to find a DoacaoUsuario
     * @example
     * // Get one DoacaoUsuario
     * const doacaoUsuario = await prisma.doacaoUsuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends doacaoUsuarioFindUniqueOrThrowArgs>(args: SelectSubset<T, doacaoUsuarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__doacaoUsuarioClient<$Result.GetResult<Prisma.$doacaoUsuarioPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first DoacaoUsuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {doacaoUsuarioFindFirstArgs} args - Arguments to find a DoacaoUsuario
     * @example
     * // Get one DoacaoUsuario
     * const doacaoUsuario = await prisma.doacaoUsuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends doacaoUsuarioFindFirstArgs>(args?: SelectSubset<T, doacaoUsuarioFindFirstArgs<ExtArgs>>): Prisma__doacaoUsuarioClient<$Result.GetResult<Prisma.$doacaoUsuarioPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first DoacaoUsuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {doacaoUsuarioFindFirstOrThrowArgs} args - Arguments to find a DoacaoUsuario
     * @example
     * // Get one DoacaoUsuario
     * const doacaoUsuario = await prisma.doacaoUsuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends doacaoUsuarioFindFirstOrThrowArgs>(args?: SelectSubset<T, doacaoUsuarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__doacaoUsuarioClient<$Result.GetResult<Prisma.$doacaoUsuarioPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more DoacaoUsuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {doacaoUsuarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DoacaoUsuarios
     * const doacaoUsuarios = await prisma.doacaoUsuario.findMany()
     * 
     * // Get first 10 DoacaoUsuarios
     * const doacaoUsuarios = await prisma.doacaoUsuario.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const doacaoUsuarioWithIdOnly = await prisma.doacaoUsuario.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends doacaoUsuarioFindManyArgs>(args?: SelectSubset<T, doacaoUsuarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$doacaoUsuarioPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a DoacaoUsuario.
     * @param {doacaoUsuarioCreateArgs} args - Arguments to create a DoacaoUsuario.
     * @example
     * // Create one DoacaoUsuario
     * const DoacaoUsuario = await prisma.doacaoUsuario.create({
     *   data: {
     *     // ... data to create a DoacaoUsuario
     *   }
     * })
     * 
     */
    create<T extends doacaoUsuarioCreateArgs>(args: SelectSubset<T, doacaoUsuarioCreateArgs<ExtArgs>>): Prisma__doacaoUsuarioClient<$Result.GetResult<Prisma.$doacaoUsuarioPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many DoacaoUsuarios.
     * @param {doacaoUsuarioCreateManyArgs} args - Arguments to create many DoacaoUsuarios.
     * @example
     * // Create many DoacaoUsuarios
     * const doacaoUsuario = await prisma.doacaoUsuario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends doacaoUsuarioCreateManyArgs>(args?: SelectSubset<T, doacaoUsuarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many DoacaoUsuarios and returns the data saved in the database.
     * @param {doacaoUsuarioCreateManyAndReturnArgs} args - Arguments to create many DoacaoUsuarios.
     * @example
     * // Create many DoacaoUsuarios
     * const doacaoUsuario = await prisma.doacaoUsuario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many DoacaoUsuarios and only return the `id`
     * const doacaoUsuarioWithIdOnly = await prisma.doacaoUsuario.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends doacaoUsuarioCreateManyAndReturnArgs>(args?: SelectSubset<T, doacaoUsuarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$doacaoUsuarioPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a DoacaoUsuario.
     * @param {doacaoUsuarioDeleteArgs} args - Arguments to delete one DoacaoUsuario.
     * @example
     * // Delete one DoacaoUsuario
     * const DoacaoUsuario = await prisma.doacaoUsuario.delete({
     *   where: {
     *     // ... filter to delete one DoacaoUsuario
     *   }
     * })
     * 
     */
    delete<T extends doacaoUsuarioDeleteArgs>(args: SelectSubset<T, doacaoUsuarioDeleteArgs<ExtArgs>>): Prisma__doacaoUsuarioClient<$Result.GetResult<Prisma.$doacaoUsuarioPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one DoacaoUsuario.
     * @param {doacaoUsuarioUpdateArgs} args - Arguments to update one DoacaoUsuario.
     * @example
     * // Update one DoacaoUsuario
     * const doacaoUsuario = await prisma.doacaoUsuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends doacaoUsuarioUpdateArgs>(args: SelectSubset<T, doacaoUsuarioUpdateArgs<ExtArgs>>): Prisma__doacaoUsuarioClient<$Result.GetResult<Prisma.$doacaoUsuarioPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more DoacaoUsuarios.
     * @param {doacaoUsuarioDeleteManyArgs} args - Arguments to filter DoacaoUsuarios to delete.
     * @example
     * // Delete a few DoacaoUsuarios
     * const { count } = await prisma.doacaoUsuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends doacaoUsuarioDeleteManyArgs>(args?: SelectSubset<T, doacaoUsuarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DoacaoUsuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {doacaoUsuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DoacaoUsuarios
     * const doacaoUsuario = await prisma.doacaoUsuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends doacaoUsuarioUpdateManyArgs>(args: SelectSubset<T, doacaoUsuarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one DoacaoUsuario.
     * @param {doacaoUsuarioUpsertArgs} args - Arguments to update or create a DoacaoUsuario.
     * @example
     * // Update or create a DoacaoUsuario
     * const doacaoUsuario = await prisma.doacaoUsuario.upsert({
     *   create: {
     *     // ... data to create a DoacaoUsuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DoacaoUsuario we want to update
     *   }
     * })
     */
    upsert<T extends doacaoUsuarioUpsertArgs>(args: SelectSubset<T, doacaoUsuarioUpsertArgs<ExtArgs>>): Prisma__doacaoUsuarioClient<$Result.GetResult<Prisma.$doacaoUsuarioPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of DoacaoUsuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {doacaoUsuarioCountArgs} args - Arguments to filter DoacaoUsuarios to count.
     * @example
     * // Count the number of DoacaoUsuarios
     * const count = await prisma.doacaoUsuario.count({
     *   where: {
     *     // ... the filter for the DoacaoUsuarios we want to count
     *   }
     * })
    **/
    count<T extends doacaoUsuarioCountArgs>(
      args?: Subset<T, doacaoUsuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DoacaoUsuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DoacaoUsuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DoacaoUsuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DoacaoUsuarioAggregateArgs>(args: Subset<T, DoacaoUsuarioAggregateArgs>): Prisma.PrismaPromise<GetDoacaoUsuarioAggregateType<T>>

    /**
     * Group by DoacaoUsuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {doacaoUsuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends doacaoUsuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: doacaoUsuarioGroupByArgs['orderBy'] }
        : { orderBy?: doacaoUsuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, doacaoUsuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDoacaoUsuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the doacaoUsuario model
   */
  readonly fields: doacaoUsuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for doacaoUsuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__doacaoUsuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    donatariofisico<T extends doacaoUsuario$donatariofisicoArgs<ExtArgs> = {}>(args?: Subset<T, doacaoUsuario$donatariofisicoArgs<ExtArgs>>): Prisma__pessoafisicaClient<$Result.GetResult<Prisma.$pessoafisicaPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    donatariojuridico<T extends doacaoUsuario$donatariojuridicoArgs<ExtArgs> = {}>(args?: Subset<T, doacaoUsuario$donatariojuridicoArgs<ExtArgs>>): Prisma__pessoajuridicaClient<$Result.GetResult<Prisma.$pessoajuridicaPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    usuario<T extends doacaoUsuario$usuarioArgs<ExtArgs> = {}>(args?: Subset<T, doacaoUsuario$usuarioArgs<ExtArgs>>): Prisma__alunoClient<$Result.GetResult<Prisma.$alunoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the doacaoUsuario model
   */ 
  interface doacaoUsuarioFieldRefs {
    readonly id: FieldRef<"doacaoUsuario", 'Int'>
    readonly name: FieldRef<"doacaoUsuario", 'String'>
    readonly eletronicos: FieldRef<"doacaoUsuario", 'String'>
    readonly descricao: FieldRef<"doacaoUsuario", 'String'>
    readonly informacoesAdicionais: FieldRef<"doacaoUsuario", 'String'>
    readonly horarioDeEntrega: FieldRef<"doacaoUsuario", 'String'>
    readonly contato: FieldRef<"doacaoUsuario", 'String'>
    readonly data: FieldRef<"doacaoUsuario", 'DateTime'>
    readonly status: FieldRef<"doacaoUsuario", 'String'>
    readonly donatariofisicoId: FieldRef<"doacaoUsuario", 'Int'>
    readonly donatariojuridicoId: FieldRef<"doacaoUsuario", 'Int'>
    readonly usuarioid: FieldRef<"doacaoUsuario", 'Int'>
    readonly createdAt: FieldRef<"doacaoUsuario", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * doacaoUsuario findUnique
   */
  export type doacaoUsuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the doacaoUsuario
     */
    select?: doacaoUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: doacaoUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which doacaoUsuario to fetch.
     */
    where: doacaoUsuarioWhereUniqueInput
  }

  /**
   * doacaoUsuario findUniqueOrThrow
   */
  export type doacaoUsuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the doacaoUsuario
     */
    select?: doacaoUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: doacaoUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which doacaoUsuario to fetch.
     */
    where: doacaoUsuarioWhereUniqueInput
  }

  /**
   * doacaoUsuario findFirst
   */
  export type doacaoUsuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the doacaoUsuario
     */
    select?: doacaoUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: doacaoUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which doacaoUsuario to fetch.
     */
    where?: doacaoUsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of doacaoUsuarios to fetch.
     */
    orderBy?: doacaoUsuarioOrderByWithRelationInput | doacaoUsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for doacaoUsuarios.
     */
    cursor?: doacaoUsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` doacaoUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` doacaoUsuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of doacaoUsuarios.
     */
    distinct?: DoacaoUsuarioScalarFieldEnum | DoacaoUsuarioScalarFieldEnum[]
  }

  /**
   * doacaoUsuario findFirstOrThrow
   */
  export type doacaoUsuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the doacaoUsuario
     */
    select?: doacaoUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: doacaoUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which doacaoUsuario to fetch.
     */
    where?: doacaoUsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of doacaoUsuarios to fetch.
     */
    orderBy?: doacaoUsuarioOrderByWithRelationInput | doacaoUsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for doacaoUsuarios.
     */
    cursor?: doacaoUsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` doacaoUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` doacaoUsuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of doacaoUsuarios.
     */
    distinct?: DoacaoUsuarioScalarFieldEnum | DoacaoUsuarioScalarFieldEnum[]
  }

  /**
   * doacaoUsuario findMany
   */
  export type doacaoUsuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the doacaoUsuario
     */
    select?: doacaoUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: doacaoUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which doacaoUsuarios to fetch.
     */
    where?: doacaoUsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of doacaoUsuarios to fetch.
     */
    orderBy?: doacaoUsuarioOrderByWithRelationInput | doacaoUsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing doacaoUsuarios.
     */
    cursor?: doacaoUsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` doacaoUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` doacaoUsuarios.
     */
    skip?: number
    distinct?: DoacaoUsuarioScalarFieldEnum | DoacaoUsuarioScalarFieldEnum[]
  }

  /**
   * doacaoUsuario create
   */
  export type doacaoUsuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the doacaoUsuario
     */
    select?: doacaoUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: doacaoUsuarioInclude<ExtArgs> | null
    /**
     * The data needed to create a doacaoUsuario.
     */
    data: XOR<doacaoUsuarioCreateInput, doacaoUsuarioUncheckedCreateInput>
  }

  /**
   * doacaoUsuario createMany
   */
  export type doacaoUsuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many doacaoUsuarios.
     */
    data: doacaoUsuarioCreateManyInput | doacaoUsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * doacaoUsuario createManyAndReturn
   */
  export type doacaoUsuarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the doacaoUsuario
     */
    select?: doacaoUsuarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many doacaoUsuarios.
     */
    data: doacaoUsuarioCreateManyInput | doacaoUsuarioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: doacaoUsuarioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * doacaoUsuario update
   */
  export type doacaoUsuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the doacaoUsuario
     */
    select?: doacaoUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: doacaoUsuarioInclude<ExtArgs> | null
    /**
     * The data needed to update a doacaoUsuario.
     */
    data: XOR<doacaoUsuarioUpdateInput, doacaoUsuarioUncheckedUpdateInput>
    /**
     * Choose, which doacaoUsuario to update.
     */
    where: doacaoUsuarioWhereUniqueInput
  }

  /**
   * doacaoUsuario updateMany
   */
  export type doacaoUsuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update doacaoUsuarios.
     */
    data: XOR<doacaoUsuarioUpdateManyMutationInput, doacaoUsuarioUncheckedUpdateManyInput>
    /**
     * Filter which doacaoUsuarios to update
     */
    where?: doacaoUsuarioWhereInput
  }

  /**
   * doacaoUsuario upsert
   */
  export type doacaoUsuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the doacaoUsuario
     */
    select?: doacaoUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: doacaoUsuarioInclude<ExtArgs> | null
    /**
     * The filter to search for the doacaoUsuario to update in case it exists.
     */
    where: doacaoUsuarioWhereUniqueInput
    /**
     * In case the doacaoUsuario found by the `where` argument doesn't exist, create a new doacaoUsuario with this data.
     */
    create: XOR<doacaoUsuarioCreateInput, doacaoUsuarioUncheckedCreateInput>
    /**
     * In case the doacaoUsuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<doacaoUsuarioUpdateInput, doacaoUsuarioUncheckedUpdateInput>
  }

  /**
   * doacaoUsuario delete
   */
  export type doacaoUsuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the doacaoUsuario
     */
    select?: doacaoUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: doacaoUsuarioInclude<ExtArgs> | null
    /**
     * Filter which doacaoUsuario to delete.
     */
    where: doacaoUsuarioWhereUniqueInput
  }

  /**
   * doacaoUsuario deleteMany
   */
  export type doacaoUsuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which doacaoUsuarios to delete
     */
    where?: doacaoUsuarioWhereInput
  }

  /**
   * doacaoUsuario.donatariofisico
   */
  export type doacaoUsuario$donatariofisicoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pessoafisica
     */
    select?: pessoafisicaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pessoafisicaInclude<ExtArgs> | null
    where?: pessoafisicaWhereInput
  }

  /**
   * doacaoUsuario.donatariojuridico
   */
  export type doacaoUsuario$donatariojuridicoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pessoajuridica
     */
    select?: pessoajuridicaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pessoajuridicaInclude<ExtArgs> | null
    where?: pessoajuridicaWhereInput
  }

  /**
   * doacaoUsuario.usuario
   */
  export type doacaoUsuario$usuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aluno
     */
    select?: alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alunoInclude<ExtArgs> | null
    where?: alunoWhereInput
  }

  /**
   * doacaoUsuario without action
   */
  export type doacaoUsuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the doacaoUsuario
     */
    select?: doacaoUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: doacaoUsuarioInclude<ExtArgs> | null
  }


  /**
   * Model solicitacao
   */

  export type AggregateSolicitacao = {
    _count: SolicitacaoCountAggregateOutputType | null
    _avg: SolicitacaoAvgAggregateOutputType | null
    _sum: SolicitacaoSumAggregateOutputType | null
    _min: SolicitacaoMinAggregateOutputType | null
    _max: SolicitacaoMaxAggregateOutputType | null
  }

  export type SolicitacaoAvgAggregateOutputType = {
    id: number | null
    solicitacaofisicoId: number | null
    solicitacaojuridicoId: number | null
    usuarioid: number | null
  }

  export type SolicitacaoSumAggregateOutputType = {
    id: number | null
    solicitacaofisicoId: number | null
    solicitacaojuridicoId: number | null
    usuarioid: number | null
  }

  export type SolicitacaoMinAggregateOutputType = {
    id: number | null
    name: string | null
    eletronicos: string | null
    descricao: string | null
    informacoes: string | null
    horarioparapegar: string | null
    contato: string | null
    data: Date | null
    dataparapegar: Date | null
    status: string | null
    solicitacaofisicoId: number | null
    solicitacaojuridicoId: number | null
    usuarioid: number | null
    createdAt: Date | null
  }

  export type SolicitacaoMaxAggregateOutputType = {
    id: number | null
    name: string | null
    eletronicos: string | null
    descricao: string | null
    informacoes: string | null
    horarioparapegar: string | null
    contato: string | null
    data: Date | null
    dataparapegar: Date | null
    status: string | null
    solicitacaofisicoId: number | null
    solicitacaojuridicoId: number | null
    usuarioid: number | null
    createdAt: Date | null
  }

  export type SolicitacaoCountAggregateOutputType = {
    id: number
    name: number
    eletronicos: number
    descricao: number
    informacoes: number
    horarioparapegar: number
    contato: number
    data: number
    dataparapegar: number
    status: number
    solicitacaofisicoId: number
    solicitacaojuridicoId: number
    usuarioid: number
    createdAt: number
    _all: number
  }


  export type SolicitacaoAvgAggregateInputType = {
    id?: true
    solicitacaofisicoId?: true
    solicitacaojuridicoId?: true
    usuarioid?: true
  }

  export type SolicitacaoSumAggregateInputType = {
    id?: true
    solicitacaofisicoId?: true
    solicitacaojuridicoId?: true
    usuarioid?: true
  }

  export type SolicitacaoMinAggregateInputType = {
    id?: true
    name?: true
    eletronicos?: true
    descricao?: true
    informacoes?: true
    horarioparapegar?: true
    contato?: true
    data?: true
    dataparapegar?: true
    status?: true
    solicitacaofisicoId?: true
    solicitacaojuridicoId?: true
    usuarioid?: true
    createdAt?: true
  }

  export type SolicitacaoMaxAggregateInputType = {
    id?: true
    name?: true
    eletronicos?: true
    descricao?: true
    informacoes?: true
    horarioparapegar?: true
    contato?: true
    data?: true
    dataparapegar?: true
    status?: true
    solicitacaofisicoId?: true
    solicitacaojuridicoId?: true
    usuarioid?: true
    createdAt?: true
  }

  export type SolicitacaoCountAggregateInputType = {
    id?: true
    name?: true
    eletronicos?: true
    descricao?: true
    informacoes?: true
    horarioparapegar?: true
    contato?: true
    data?: true
    dataparapegar?: true
    status?: true
    solicitacaofisicoId?: true
    solicitacaojuridicoId?: true
    usuarioid?: true
    createdAt?: true
    _all?: true
  }

  export type SolicitacaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which solicitacao to aggregate.
     */
    where?: solicitacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of solicitacaos to fetch.
     */
    orderBy?: solicitacaoOrderByWithRelationInput | solicitacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: solicitacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` solicitacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` solicitacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned solicitacaos
    **/
    _count?: true | SolicitacaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SolicitacaoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SolicitacaoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SolicitacaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SolicitacaoMaxAggregateInputType
  }

  export type GetSolicitacaoAggregateType<T extends SolicitacaoAggregateArgs> = {
        [P in keyof T & keyof AggregateSolicitacao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSolicitacao[P]>
      : GetScalarType<T[P], AggregateSolicitacao[P]>
  }




  export type solicitacaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: solicitacaoWhereInput
    orderBy?: solicitacaoOrderByWithAggregationInput | solicitacaoOrderByWithAggregationInput[]
    by: SolicitacaoScalarFieldEnum[] | SolicitacaoScalarFieldEnum
    having?: solicitacaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SolicitacaoCountAggregateInputType | true
    _avg?: SolicitacaoAvgAggregateInputType
    _sum?: SolicitacaoSumAggregateInputType
    _min?: SolicitacaoMinAggregateInputType
    _max?: SolicitacaoMaxAggregateInputType
  }

  export type SolicitacaoGroupByOutputType = {
    id: number
    name: string
    eletronicos: string
    descricao: string
    informacoes: string
    horarioparapegar: string
    contato: string
    data: Date
    dataparapegar: Date
    status: string
    solicitacaofisicoId: number | null
    solicitacaojuridicoId: number | null
    usuarioid: number | null
    createdAt: Date
    _count: SolicitacaoCountAggregateOutputType | null
    _avg: SolicitacaoAvgAggregateOutputType | null
    _sum: SolicitacaoSumAggregateOutputType | null
    _min: SolicitacaoMinAggregateOutputType | null
    _max: SolicitacaoMaxAggregateOutputType | null
  }

  type GetSolicitacaoGroupByPayload<T extends solicitacaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SolicitacaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SolicitacaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SolicitacaoGroupByOutputType[P]>
            : GetScalarType<T[P], SolicitacaoGroupByOutputType[P]>
        }
      >
    >


  export type solicitacaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    eletronicos?: boolean
    descricao?: boolean
    informacoes?: boolean
    horarioparapegar?: boolean
    contato?: boolean
    data?: boolean
    dataparapegar?: boolean
    status?: boolean
    solicitacaofisicoId?: boolean
    solicitacaojuridicoId?: boolean
    usuarioid?: boolean
    createdAt?: boolean
    usuariosolicitacaofisico?: boolean | solicitacao$usuariosolicitacaofisicoArgs<ExtArgs>
    donatariojuridico?: boolean | solicitacao$donatariojuridicoArgs<ExtArgs>
    usuario?: boolean | solicitacao$usuarioArgs<ExtArgs>
  }, ExtArgs["result"]["solicitacao"]>

  export type solicitacaoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    eletronicos?: boolean
    descricao?: boolean
    informacoes?: boolean
    horarioparapegar?: boolean
    contato?: boolean
    data?: boolean
    dataparapegar?: boolean
    status?: boolean
    solicitacaofisicoId?: boolean
    solicitacaojuridicoId?: boolean
    usuarioid?: boolean
    createdAt?: boolean
    usuariosolicitacaofisico?: boolean | solicitacao$usuariosolicitacaofisicoArgs<ExtArgs>
    donatariojuridico?: boolean | solicitacao$donatariojuridicoArgs<ExtArgs>
    usuario?: boolean | solicitacao$usuarioArgs<ExtArgs>
  }, ExtArgs["result"]["solicitacao"]>

  export type solicitacaoSelectScalar = {
    id?: boolean
    name?: boolean
    eletronicos?: boolean
    descricao?: boolean
    informacoes?: boolean
    horarioparapegar?: boolean
    contato?: boolean
    data?: boolean
    dataparapegar?: boolean
    status?: boolean
    solicitacaofisicoId?: boolean
    solicitacaojuridicoId?: boolean
    usuarioid?: boolean
    createdAt?: boolean
  }

  export type solicitacaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuariosolicitacaofisico?: boolean | solicitacao$usuariosolicitacaofisicoArgs<ExtArgs>
    donatariojuridico?: boolean | solicitacao$donatariojuridicoArgs<ExtArgs>
    usuario?: boolean | solicitacao$usuarioArgs<ExtArgs>
  }
  export type solicitacaoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuariosolicitacaofisico?: boolean | solicitacao$usuariosolicitacaofisicoArgs<ExtArgs>
    donatariojuridico?: boolean | solicitacao$donatariojuridicoArgs<ExtArgs>
    usuario?: boolean | solicitacao$usuarioArgs<ExtArgs>
  }

  export type $solicitacaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "solicitacao"
    objects: {
      usuariosolicitacaofisico: Prisma.$pessoafisicaPayload<ExtArgs> | null
      donatariojuridico: Prisma.$pessoajuridicaPayload<ExtArgs> | null
      usuario: Prisma.$alunoPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      eletronicos: string
      descricao: string
      informacoes: string
      horarioparapegar: string
      contato: string
      data: Date
      dataparapegar: Date
      status: string
      solicitacaofisicoId: number | null
      solicitacaojuridicoId: number | null
      usuarioid: number | null
      createdAt: Date
    }, ExtArgs["result"]["solicitacao"]>
    composites: {}
  }

  type solicitacaoGetPayload<S extends boolean | null | undefined | solicitacaoDefaultArgs> = $Result.GetResult<Prisma.$solicitacaoPayload, S>

  type solicitacaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<solicitacaoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SolicitacaoCountAggregateInputType | true
    }

  export interface solicitacaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['solicitacao'], meta: { name: 'solicitacao' } }
    /**
     * Find zero or one Solicitacao that matches the filter.
     * @param {solicitacaoFindUniqueArgs} args - Arguments to find a Solicitacao
     * @example
     * // Get one Solicitacao
     * const solicitacao = await prisma.solicitacao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends solicitacaoFindUniqueArgs>(args: SelectSubset<T, solicitacaoFindUniqueArgs<ExtArgs>>): Prisma__solicitacaoClient<$Result.GetResult<Prisma.$solicitacaoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Solicitacao that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {solicitacaoFindUniqueOrThrowArgs} args - Arguments to find a Solicitacao
     * @example
     * // Get one Solicitacao
     * const solicitacao = await prisma.solicitacao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends solicitacaoFindUniqueOrThrowArgs>(args: SelectSubset<T, solicitacaoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__solicitacaoClient<$Result.GetResult<Prisma.$solicitacaoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Solicitacao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {solicitacaoFindFirstArgs} args - Arguments to find a Solicitacao
     * @example
     * // Get one Solicitacao
     * const solicitacao = await prisma.solicitacao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends solicitacaoFindFirstArgs>(args?: SelectSubset<T, solicitacaoFindFirstArgs<ExtArgs>>): Prisma__solicitacaoClient<$Result.GetResult<Prisma.$solicitacaoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Solicitacao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {solicitacaoFindFirstOrThrowArgs} args - Arguments to find a Solicitacao
     * @example
     * // Get one Solicitacao
     * const solicitacao = await prisma.solicitacao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends solicitacaoFindFirstOrThrowArgs>(args?: SelectSubset<T, solicitacaoFindFirstOrThrowArgs<ExtArgs>>): Prisma__solicitacaoClient<$Result.GetResult<Prisma.$solicitacaoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Solicitacaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {solicitacaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Solicitacaos
     * const solicitacaos = await prisma.solicitacao.findMany()
     * 
     * // Get first 10 Solicitacaos
     * const solicitacaos = await prisma.solicitacao.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const solicitacaoWithIdOnly = await prisma.solicitacao.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends solicitacaoFindManyArgs>(args?: SelectSubset<T, solicitacaoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$solicitacaoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Solicitacao.
     * @param {solicitacaoCreateArgs} args - Arguments to create a Solicitacao.
     * @example
     * // Create one Solicitacao
     * const Solicitacao = await prisma.solicitacao.create({
     *   data: {
     *     // ... data to create a Solicitacao
     *   }
     * })
     * 
     */
    create<T extends solicitacaoCreateArgs>(args: SelectSubset<T, solicitacaoCreateArgs<ExtArgs>>): Prisma__solicitacaoClient<$Result.GetResult<Prisma.$solicitacaoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Solicitacaos.
     * @param {solicitacaoCreateManyArgs} args - Arguments to create many Solicitacaos.
     * @example
     * // Create many Solicitacaos
     * const solicitacao = await prisma.solicitacao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends solicitacaoCreateManyArgs>(args?: SelectSubset<T, solicitacaoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Solicitacaos and returns the data saved in the database.
     * @param {solicitacaoCreateManyAndReturnArgs} args - Arguments to create many Solicitacaos.
     * @example
     * // Create many Solicitacaos
     * const solicitacao = await prisma.solicitacao.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Solicitacaos and only return the `id`
     * const solicitacaoWithIdOnly = await prisma.solicitacao.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends solicitacaoCreateManyAndReturnArgs>(args?: SelectSubset<T, solicitacaoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$solicitacaoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Solicitacao.
     * @param {solicitacaoDeleteArgs} args - Arguments to delete one Solicitacao.
     * @example
     * // Delete one Solicitacao
     * const Solicitacao = await prisma.solicitacao.delete({
     *   where: {
     *     // ... filter to delete one Solicitacao
     *   }
     * })
     * 
     */
    delete<T extends solicitacaoDeleteArgs>(args: SelectSubset<T, solicitacaoDeleteArgs<ExtArgs>>): Prisma__solicitacaoClient<$Result.GetResult<Prisma.$solicitacaoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Solicitacao.
     * @param {solicitacaoUpdateArgs} args - Arguments to update one Solicitacao.
     * @example
     * // Update one Solicitacao
     * const solicitacao = await prisma.solicitacao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends solicitacaoUpdateArgs>(args: SelectSubset<T, solicitacaoUpdateArgs<ExtArgs>>): Prisma__solicitacaoClient<$Result.GetResult<Prisma.$solicitacaoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Solicitacaos.
     * @param {solicitacaoDeleteManyArgs} args - Arguments to filter Solicitacaos to delete.
     * @example
     * // Delete a few Solicitacaos
     * const { count } = await prisma.solicitacao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends solicitacaoDeleteManyArgs>(args?: SelectSubset<T, solicitacaoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Solicitacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {solicitacaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Solicitacaos
     * const solicitacao = await prisma.solicitacao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends solicitacaoUpdateManyArgs>(args: SelectSubset<T, solicitacaoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Solicitacao.
     * @param {solicitacaoUpsertArgs} args - Arguments to update or create a Solicitacao.
     * @example
     * // Update or create a Solicitacao
     * const solicitacao = await prisma.solicitacao.upsert({
     *   create: {
     *     // ... data to create a Solicitacao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Solicitacao we want to update
     *   }
     * })
     */
    upsert<T extends solicitacaoUpsertArgs>(args: SelectSubset<T, solicitacaoUpsertArgs<ExtArgs>>): Prisma__solicitacaoClient<$Result.GetResult<Prisma.$solicitacaoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Solicitacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {solicitacaoCountArgs} args - Arguments to filter Solicitacaos to count.
     * @example
     * // Count the number of Solicitacaos
     * const count = await prisma.solicitacao.count({
     *   where: {
     *     // ... the filter for the Solicitacaos we want to count
     *   }
     * })
    **/
    count<T extends solicitacaoCountArgs>(
      args?: Subset<T, solicitacaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SolicitacaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Solicitacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SolicitacaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SolicitacaoAggregateArgs>(args: Subset<T, SolicitacaoAggregateArgs>): Prisma.PrismaPromise<GetSolicitacaoAggregateType<T>>

    /**
     * Group by Solicitacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {solicitacaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends solicitacaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: solicitacaoGroupByArgs['orderBy'] }
        : { orderBy?: solicitacaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, solicitacaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSolicitacaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the solicitacao model
   */
  readonly fields: solicitacaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for solicitacao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__solicitacaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuariosolicitacaofisico<T extends solicitacao$usuariosolicitacaofisicoArgs<ExtArgs> = {}>(args?: Subset<T, solicitacao$usuariosolicitacaofisicoArgs<ExtArgs>>): Prisma__pessoafisicaClient<$Result.GetResult<Prisma.$pessoafisicaPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    donatariojuridico<T extends solicitacao$donatariojuridicoArgs<ExtArgs> = {}>(args?: Subset<T, solicitacao$donatariojuridicoArgs<ExtArgs>>): Prisma__pessoajuridicaClient<$Result.GetResult<Prisma.$pessoajuridicaPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    usuario<T extends solicitacao$usuarioArgs<ExtArgs> = {}>(args?: Subset<T, solicitacao$usuarioArgs<ExtArgs>>): Prisma__alunoClient<$Result.GetResult<Prisma.$alunoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the solicitacao model
   */ 
  interface solicitacaoFieldRefs {
    readonly id: FieldRef<"solicitacao", 'Int'>
    readonly name: FieldRef<"solicitacao", 'String'>
    readonly eletronicos: FieldRef<"solicitacao", 'String'>
    readonly descricao: FieldRef<"solicitacao", 'String'>
    readonly informacoes: FieldRef<"solicitacao", 'String'>
    readonly horarioparapegar: FieldRef<"solicitacao", 'String'>
    readonly contato: FieldRef<"solicitacao", 'String'>
    readonly data: FieldRef<"solicitacao", 'DateTime'>
    readonly dataparapegar: FieldRef<"solicitacao", 'DateTime'>
    readonly status: FieldRef<"solicitacao", 'String'>
    readonly solicitacaofisicoId: FieldRef<"solicitacao", 'Int'>
    readonly solicitacaojuridicoId: FieldRef<"solicitacao", 'Int'>
    readonly usuarioid: FieldRef<"solicitacao", 'Int'>
    readonly createdAt: FieldRef<"solicitacao", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * solicitacao findUnique
   */
  export type solicitacaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the solicitacao
     */
    select?: solicitacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: solicitacaoInclude<ExtArgs> | null
    /**
     * Filter, which solicitacao to fetch.
     */
    where: solicitacaoWhereUniqueInput
  }

  /**
   * solicitacao findUniqueOrThrow
   */
  export type solicitacaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the solicitacao
     */
    select?: solicitacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: solicitacaoInclude<ExtArgs> | null
    /**
     * Filter, which solicitacao to fetch.
     */
    where: solicitacaoWhereUniqueInput
  }

  /**
   * solicitacao findFirst
   */
  export type solicitacaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the solicitacao
     */
    select?: solicitacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: solicitacaoInclude<ExtArgs> | null
    /**
     * Filter, which solicitacao to fetch.
     */
    where?: solicitacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of solicitacaos to fetch.
     */
    orderBy?: solicitacaoOrderByWithRelationInput | solicitacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for solicitacaos.
     */
    cursor?: solicitacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` solicitacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` solicitacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of solicitacaos.
     */
    distinct?: SolicitacaoScalarFieldEnum | SolicitacaoScalarFieldEnum[]
  }

  /**
   * solicitacao findFirstOrThrow
   */
  export type solicitacaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the solicitacao
     */
    select?: solicitacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: solicitacaoInclude<ExtArgs> | null
    /**
     * Filter, which solicitacao to fetch.
     */
    where?: solicitacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of solicitacaos to fetch.
     */
    orderBy?: solicitacaoOrderByWithRelationInput | solicitacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for solicitacaos.
     */
    cursor?: solicitacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` solicitacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` solicitacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of solicitacaos.
     */
    distinct?: SolicitacaoScalarFieldEnum | SolicitacaoScalarFieldEnum[]
  }

  /**
   * solicitacao findMany
   */
  export type solicitacaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the solicitacao
     */
    select?: solicitacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: solicitacaoInclude<ExtArgs> | null
    /**
     * Filter, which solicitacaos to fetch.
     */
    where?: solicitacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of solicitacaos to fetch.
     */
    orderBy?: solicitacaoOrderByWithRelationInput | solicitacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing solicitacaos.
     */
    cursor?: solicitacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` solicitacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` solicitacaos.
     */
    skip?: number
    distinct?: SolicitacaoScalarFieldEnum | SolicitacaoScalarFieldEnum[]
  }

  /**
   * solicitacao create
   */
  export type solicitacaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the solicitacao
     */
    select?: solicitacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: solicitacaoInclude<ExtArgs> | null
    /**
     * The data needed to create a solicitacao.
     */
    data: XOR<solicitacaoCreateInput, solicitacaoUncheckedCreateInput>
  }

  /**
   * solicitacao createMany
   */
  export type solicitacaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many solicitacaos.
     */
    data: solicitacaoCreateManyInput | solicitacaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * solicitacao createManyAndReturn
   */
  export type solicitacaoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the solicitacao
     */
    select?: solicitacaoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many solicitacaos.
     */
    data: solicitacaoCreateManyInput | solicitacaoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: solicitacaoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * solicitacao update
   */
  export type solicitacaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the solicitacao
     */
    select?: solicitacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: solicitacaoInclude<ExtArgs> | null
    /**
     * The data needed to update a solicitacao.
     */
    data: XOR<solicitacaoUpdateInput, solicitacaoUncheckedUpdateInput>
    /**
     * Choose, which solicitacao to update.
     */
    where: solicitacaoWhereUniqueInput
  }

  /**
   * solicitacao updateMany
   */
  export type solicitacaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update solicitacaos.
     */
    data: XOR<solicitacaoUpdateManyMutationInput, solicitacaoUncheckedUpdateManyInput>
    /**
     * Filter which solicitacaos to update
     */
    where?: solicitacaoWhereInput
  }

  /**
   * solicitacao upsert
   */
  export type solicitacaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the solicitacao
     */
    select?: solicitacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: solicitacaoInclude<ExtArgs> | null
    /**
     * The filter to search for the solicitacao to update in case it exists.
     */
    where: solicitacaoWhereUniqueInput
    /**
     * In case the solicitacao found by the `where` argument doesn't exist, create a new solicitacao with this data.
     */
    create: XOR<solicitacaoCreateInput, solicitacaoUncheckedCreateInput>
    /**
     * In case the solicitacao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<solicitacaoUpdateInput, solicitacaoUncheckedUpdateInput>
  }

  /**
   * solicitacao delete
   */
  export type solicitacaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the solicitacao
     */
    select?: solicitacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: solicitacaoInclude<ExtArgs> | null
    /**
     * Filter which solicitacao to delete.
     */
    where: solicitacaoWhereUniqueInput
  }

  /**
   * solicitacao deleteMany
   */
  export type solicitacaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which solicitacaos to delete
     */
    where?: solicitacaoWhereInput
  }

  /**
   * solicitacao.usuariosolicitacaofisico
   */
  export type solicitacao$usuariosolicitacaofisicoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pessoafisica
     */
    select?: pessoafisicaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pessoafisicaInclude<ExtArgs> | null
    where?: pessoafisicaWhereInput
  }

  /**
   * solicitacao.donatariojuridico
   */
  export type solicitacao$donatariojuridicoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pessoajuridica
     */
    select?: pessoajuridicaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pessoajuridicaInclude<ExtArgs> | null
    where?: pessoajuridicaWhereInput
  }

  /**
   * solicitacao.usuario
   */
  export type solicitacao$usuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aluno
     */
    select?: alunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alunoInclude<ExtArgs> | null
    where?: alunoWhereInput
  }

  /**
   * solicitacao without action
   */
  export type solicitacaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the solicitacao
     */
    select?: solicitacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: solicitacaoInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const AlunoScalarFieldEnum: {
    id: 'id',
    name: 'name',
    email: 'email',
    password: 'password',
    matricula: 'matricula',
    curso: 'curso',
    dias: 'dias',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type AlunoScalarFieldEnum = (typeof AlunoScalarFieldEnum)[keyof typeof AlunoScalarFieldEnum]


  export const PessoafisicaScalarFieldEnum: {
    id: 'id',
    name: 'name',
    email: 'email',
    password: 'password',
    cpf: 'cpf',
    comprovanteDeBaixaRenda: 'comprovanteDeBaixaRenda',
    telefone: 'telefone',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type PessoafisicaScalarFieldEnum = (typeof PessoafisicaScalarFieldEnum)[keyof typeof PessoafisicaScalarFieldEnum]


  export const PessoajuridicaScalarFieldEnum: {
    id: 'id',
    name: 'name',
    email: 'email',
    password: 'password',
    cnpj: 'cnpj',
    comprovanteDeProjeto: 'comprovanteDeProjeto',
    endereco: 'endereco',
    telefone: 'telefone',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type PessoajuridicaScalarFieldEnum = (typeof PessoajuridicaScalarFieldEnum)[keyof typeof PessoajuridicaScalarFieldEnum]


  export const InscritoScalarFieldEnum: {
    id: 'id',
    name: 'name',
    email: 'email',
    dias: 'dias',
    matricula: 'matricula',
    curso: 'curso',
    periodo: 'periodo',
    bolsista: 'bolsista'
  };

  export type InscritoScalarFieldEnum = (typeof InscritoScalarFieldEnum)[keyof typeof InscritoScalarFieldEnum]


  export const TecladoScalarFieldEnum: {
    id: 'id',
    codigoDereferencia: 'codigoDereferencia',
    descricao: 'descricao',
    status: 'status',
    dataDeChegada: 'dataDeChegada',
    dataDeSaida: 'dataDeSaida',
    marca: 'marca',
    modelo: 'modelo',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    nome: 'nome',
    imagem: 'imagem',
    situacao: 'situacao',
    tipoDeConexao: 'tipoDeConexao',
    usuarioId: 'usuarioId',
    modificadorid: 'modificadorid',
    descarteId: 'descarteId',
    doacaoId: 'doacaoId'
  };

  export type TecladoScalarFieldEnum = (typeof TecladoScalarFieldEnum)[keyof typeof TecladoScalarFieldEnum]


  export const HdScalarFieldEnum: {
    id: 'id',
    codigoDereferencia: 'codigoDereferencia',
    descricao: 'descricao',
    status: 'status',
    dataDeChegada: 'dataDeChegada',
    dataDeSaida: 'dataDeSaida',
    marca: 'marca',
    modelo: 'modelo',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    nome: 'nome',
    imagem: 'imagem',
    situacao: 'situacao',
    tipoDeCapacidade: 'tipoDeCapacidade',
    capacidade: 'capacidade',
    usuarioId: 'usuarioId',
    modificadorid: 'modificadorid',
    descarteId: 'descarteId',
    doacaoId: 'doacaoId'
  };

  export type HdScalarFieldEnum = (typeof HdScalarFieldEnum)[keyof typeof HdScalarFieldEnum]


  export const FontedealimentacaoScalarFieldEnum: {
    id: 'id',
    codigoDereferencia: 'codigoDereferencia',
    descricao: 'descricao',
    status: 'status',
    dataDeChegada: 'dataDeChegada',
    dataDeSaida: 'dataDeSaida',
    marca: 'marca',
    modelo: 'modelo',
    nome: 'nome',
    imagem: 'imagem',
    situacao: 'situacao',
    potencia: 'potencia',
    updatedAt: 'updatedAt',
    alunoid: 'alunoid',
    modificadorid: 'modificadorid',
    descarteId: 'descarteId',
    doacaoId: 'doacaoId'
  };

  export type FontedealimentacaoScalarFieldEnum = (typeof FontedealimentacaoScalarFieldEnum)[keyof typeof FontedealimentacaoScalarFieldEnum]


  export const GabineteScalarFieldEnum: {
    id: 'id',
    codigoDereferencia: 'codigoDereferencia',
    descricao: 'descricao',
    status: 'status',
    dataDeChegada: 'dataDeChegada',
    dataDeSaida: 'dataDeSaida',
    marca: 'marca',
    modelo: 'modelo',
    nome: 'nome',
    imagem: 'imagem',
    situacao: 'situacao',
    updatedAt: 'updatedAt',
    alunoid: 'alunoid',
    modificadorid: 'modificadorid',
    descarteId: 'descarteId',
    doacaoId: 'doacaoId'
  };

  export type GabineteScalarFieldEnum = (typeof GabineteScalarFieldEnum)[keyof typeof GabineteScalarFieldEnum]


  export const MonitorScalarFieldEnum: {
    id: 'id',
    codigoDereferencia: 'codigoDereferencia',
    descricao: 'descricao',
    status: 'status',
    dataDeChegada: 'dataDeChegada',
    dataDeSaida: 'dataDeSaida',
    marca: 'marca',
    modelo: 'modelo',
    nome: 'nome',
    imagem: 'imagem',
    situacao: 'situacao',
    polegadas: 'polegadas',
    updatedAt: 'updatedAt',
    alunoid: 'alunoid',
    modificadorid: 'modificadorid',
    descarteId: 'descarteId',
    doacaoId: 'doacaoId'
  };

  export type MonitorScalarFieldEnum = (typeof MonitorScalarFieldEnum)[keyof typeof MonitorScalarFieldEnum]


  export const MouseScalarFieldEnum: {
    id: 'id',
    codigoDereferencia: 'codigoDereferencia',
    descricao: 'descricao',
    status: 'status',
    dataDeChegada: 'dataDeChegada',
    dataDeSaida: 'dataDeSaida',
    marca: 'marca',
    modelo: 'modelo',
    nome: 'nome',
    imagem: 'imagem',
    situacao: 'situacao',
    tipoDeConexao: 'tipoDeConexao',
    updatedAt: 'updatedAt',
    alunoid: 'alunoid',
    modificadorid: 'modificadorid',
    descarteId: 'descarteId',
    doacaoId: 'doacaoId'
  };

  export type MouseScalarFieldEnum = (typeof MouseScalarFieldEnum)[keyof typeof MouseScalarFieldEnum]


  export const EstabilizadorScalarFieldEnum: {
    id: 'id',
    codigoDereferencia: 'codigoDereferencia',
    descricao: 'descricao',
    status: 'status',
    dataDeChegada: 'dataDeChegada',
    dataDeSaida: 'dataDeSaida',
    marca: 'marca',
    modelo: 'modelo',
    nome: 'nome',
    imagem: 'imagem',
    situacao: 'situacao',
    potencia: 'potencia',
    updatedAt: 'updatedAt',
    alunoid: 'alunoid',
    modificadorid: 'modificadorid',
    descarteId: 'descarteId',
    doacaoId: 'doacaoId'
  };

  export type EstabilizadorScalarFieldEnum = (typeof EstabilizadorScalarFieldEnum)[keyof typeof EstabilizadorScalarFieldEnum]


  export const ImpressoraScalarFieldEnum: {
    id: 'id',
    codigoDereferencia: 'codigoDereferencia',
    descricao: 'descricao',
    status: 'status',
    dataDeChegada: 'dataDeChegada',
    dataDeSaida: 'dataDeSaida',
    marca: 'marca',
    modelo: 'modelo',
    nome: 'nome',
    imagem: 'imagem',
    situacao: 'situacao',
    tipoDeTinta: 'tipoDeTinta',
    updatedAt: 'updatedAt',
    alunoid: 'alunoid',
    modificadorid: 'modificadorid',
    descarteId: 'descarteId',
    doacaoId: 'doacaoId'
  };

  export type ImpressoraScalarFieldEnum = (typeof ImpressoraScalarFieldEnum)[keyof typeof ImpressoraScalarFieldEnum]


  export const PlacamaeScalarFieldEnum: {
    id: 'id',
    codigoDereferencia: 'codigoDereferencia',
    descricao: 'descricao',
    status: 'status',
    dataDeChegada: 'dataDeChegada',
    dataDeSaida: 'dataDeSaida',
    marca: 'marca',
    modelo: 'modelo',
    nome: 'nome',
    imagem: 'imagem',
    situacao: 'situacao',
    updatedAt: 'updatedAt',
    alunoid: 'alunoid',
    modificadorid: 'modificadorid',
    descarteId: 'descarteId',
    doacaoId: 'doacaoId'
  };

  export type PlacamaeScalarFieldEnum = (typeof PlacamaeScalarFieldEnum)[keyof typeof PlacamaeScalarFieldEnum]


  export const NotebookScalarFieldEnum: {
    id: 'id',
    codigoDereferencia: 'codigoDereferencia',
    descricao: 'descricao',
    status: 'status',
    dataDeChegada: 'dataDeChegada',
    dataDeSaida: 'dataDeSaida',
    marca: 'marca',
    modelo: 'modelo',
    nome: 'nome',
    imagem: 'imagem',
    situacao: 'situacao',
    updatedAt: 'updatedAt',
    alunoid: 'alunoid',
    modificadorid: 'modificadorid',
    descarteId: 'descarteId',
    doacaoId: 'doacaoId'
  };

  export type NotebookScalarFieldEnum = (typeof NotebookScalarFieldEnum)[keyof typeof NotebookScalarFieldEnum]


  export const ProcessadorScalarFieldEnum: {
    id: 'id',
    codigoDereferencia: 'codigoDereferencia',
    descricao: 'descricao',
    status: 'status',
    dataDeChegada: 'dataDeChegada',
    dataDeSaida: 'dataDeSaida',
    marca: 'marca',
    modelo: 'modelo',
    nome: 'nome',
    imagem: 'imagem',
    situacao: 'situacao',
    updatedAt: 'updatedAt',
    alunoid: 'alunoid',
    modificadorid: 'modificadorid',
    descarteId: 'descarteId',
    doacaoId: 'doacaoId'
  };

  export type ProcessadorScalarFieldEnum = (typeof ProcessadorScalarFieldEnum)[keyof typeof ProcessadorScalarFieldEnum]


  export const DescarteScalarFieldEnum: {
    id: 'id',
    name: 'name',
    descricao: 'descricao',
    data: 'data',
    codigoDeReferencias: 'codigoDeReferencias',
    usuarioId: 'usuarioId',
    createdAt: 'createdAt'
  };

  export type DescarteScalarFieldEnum = (typeof DescarteScalarFieldEnum)[keyof typeof DescarteScalarFieldEnum]


  export const DoacaoScalarFieldEnum: {
    id: 'id',
    name: 'name',
    codigoDeReferencias: 'codigoDeReferencias',
    descricao: 'descricao',
    justificativa: 'justificativa',
    nomeOuEmpresa: 'nomeOuEmpresa',
    contato: 'contato',
    data: 'data',
    status: 'status',
    donatarioId: 'donatarioId',
    usuariofisicoId: 'usuariofisicoId',
    usuariojuridicoId: 'usuariojuridicoId',
    createdAt: 'createdAt'
  };

  export type DoacaoScalarFieldEnum = (typeof DoacaoScalarFieldEnum)[keyof typeof DoacaoScalarFieldEnum]


  export const DoacaoUsuarioScalarFieldEnum: {
    id: 'id',
    name: 'name',
    eletronicos: 'eletronicos',
    descricao: 'descricao',
    informacoesAdicionais: 'informacoesAdicionais',
    horarioDeEntrega: 'horarioDeEntrega',
    contato: 'contato',
    data: 'data',
    status: 'status',
    donatariofisicoId: 'donatariofisicoId',
    donatariojuridicoId: 'donatariojuridicoId',
    usuarioid: 'usuarioid',
    createdAt: 'createdAt'
  };

  export type DoacaoUsuarioScalarFieldEnum = (typeof DoacaoUsuarioScalarFieldEnum)[keyof typeof DoacaoUsuarioScalarFieldEnum]


  export const SolicitacaoScalarFieldEnum: {
    id: 'id',
    name: 'name',
    eletronicos: 'eletronicos',
    descricao: 'descricao',
    informacoes: 'informacoes',
    horarioparapegar: 'horarioparapegar',
    contato: 'contato',
    data: 'data',
    dataparapegar: 'dataparapegar',
    status: 'status',
    solicitacaofisicoId: 'solicitacaofisicoId',
    solicitacaojuridicoId: 'solicitacaojuridicoId',
    usuarioid: 'usuarioid',
    createdAt: 'createdAt'
  };

  export type SolicitacaoScalarFieldEnum = (typeof SolicitacaoScalarFieldEnum)[keyof typeof SolicitacaoScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type alunoWhereInput = {
    AND?: alunoWhereInput | alunoWhereInput[]
    OR?: alunoWhereInput[]
    NOT?: alunoWhereInput | alunoWhereInput[]
    id?: IntFilter<"aluno"> | number
    name?: StringFilter<"aluno"> | string
    email?: StringFilter<"aluno"> | string
    password?: StringFilter<"aluno"> | string
    matricula?: StringFilter<"aluno"> | string
    curso?: StringFilter<"aluno"> | string
    dias?: StringFilter<"aluno"> | string
    createdAt?: DateTimeFilter<"aluno"> | Date | string
    updatedAt?: DateTimeFilter<"aluno"> | Date | string
    descarte?: DescarteListRelationFilter
    doacao?: DoacaoListRelationFilter
    doacaoUsuario?: DoacaoUsuarioListRelationFilter
    solicitacao?: SolicitacaoListRelationFilter
    modificadorTeclado?: TecladoListRelationFilter
    usuarioTeclado?: TecladoListRelationFilter
    hd?: HdListRelationFilter
    modificadorHd?: HdListRelationFilter
    fonteDeAlimentacao?: FontedealimentacaoListRelationFilter
    modificadorFonteDeAlimentacao?: FontedealimentacaoListRelationFilter
    gabinete?: GabineteListRelationFilter
    modificadorGabinete?: GabineteListRelationFilter
    monitor?: MonitorListRelationFilter
    modificadorMonitor?: MonitorListRelationFilter
    usuarioMouse?: MouseListRelationFilter
    modificadorMouse?: MouseListRelationFilter
    usuarioEstabilizador?: EstabilizadorListRelationFilter
    modificadorEstabilizador?: EstabilizadorListRelationFilter
    usuarioImpressora?: ImpressoraListRelationFilter
    modificadorImpressora?: ImpressoraListRelationFilter
    usuarioPlacamae?: PlacamaeListRelationFilter
    modificadorPlacamae?: PlacamaeListRelationFilter
    usuarioNotebook?: NotebookListRelationFilter
    modificadorNotebook?: NotebookListRelationFilter
    usuarioProcessador?: ProcessadorListRelationFilter
    modificadorProcessador?: ProcessadorListRelationFilter
  }

  export type alunoOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    matricula?: SortOrder
    curso?: SortOrder
    dias?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    descarte?: descarteOrderByRelationAggregateInput
    doacao?: doacaoOrderByRelationAggregateInput
    doacaoUsuario?: doacaoUsuarioOrderByRelationAggregateInput
    solicitacao?: solicitacaoOrderByRelationAggregateInput
    modificadorTeclado?: tecladoOrderByRelationAggregateInput
    usuarioTeclado?: tecladoOrderByRelationAggregateInput
    hd?: hdOrderByRelationAggregateInput
    modificadorHd?: hdOrderByRelationAggregateInput
    fonteDeAlimentacao?: fontedealimentacaoOrderByRelationAggregateInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoOrderByRelationAggregateInput
    gabinete?: gabineteOrderByRelationAggregateInput
    modificadorGabinete?: gabineteOrderByRelationAggregateInput
    monitor?: monitorOrderByRelationAggregateInput
    modificadorMonitor?: monitorOrderByRelationAggregateInput
    usuarioMouse?: mouseOrderByRelationAggregateInput
    modificadorMouse?: mouseOrderByRelationAggregateInput
    usuarioEstabilizador?: estabilizadorOrderByRelationAggregateInput
    modificadorEstabilizador?: estabilizadorOrderByRelationAggregateInput
    usuarioImpressora?: impressoraOrderByRelationAggregateInput
    modificadorImpressora?: impressoraOrderByRelationAggregateInput
    usuarioPlacamae?: placamaeOrderByRelationAggregateInput
    modificadorPlacamae?: placamaeOrderByRelationAggregateInput
    usuarioNotebook?: notebookOrderByRelationAggregateInput
    modificadorNotebook?: notebookOrderByRelationAggregateInput
    usuarioProcessador?: processadorOrderByRelationAggregateInput
    modificadorProcessador?: processadorOrderByRelationAggregateInput
  }

  export type alunoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    matricula?: string
    AND?: alunoWhereInput | alunoWhereInput[]
    OR?: alunoWhereInput[]
    NOT?: alunoWhereInput | alunoWhereInput[]
    name?: StringFilter<"aluno"> | string
    password?: StringFilter<"aluno"> | string
    curso?: StringFilter<"aluno"> | string
    dias?: StringFilter<"aluno"> | string
    createdAt?: DateTimeFilter<"aluno"> | Date | string
    updatedAt?: DateTimeFilter<"aluno"> | Date | string
    descarte?: DescarteListRelationFilter
    doacao?: DoacaoListRelationFilter
    doacaoUsuario?: DoacaoUsuarioListRelationFilter
    solicitacao?: SolicitacaoListRelationFilter
    modificadorTeclado?: TecladoListRelationFilter
    usuarioTeclado?: TecladoListRelationFilter
    hd?: HdListRelationFilter
    modificadorHd?: HdListRelationFilter
    fonteDeAlimentacao?: FontedealimentacaoListRelationFilter
    modificadorFonteDeAlimentacao?: FontedealimentacaoListRelationFilter
    gabinete?: GabineteListRelationFilter
    modificadorGabinete?: GabineteListRelationFilter
    monitor?: MonitorListRelationFilter
    modificadorMonitor?: MonitorListRelationFilter
    usuarioMouse?: MouseListRelationFilter
    modificadorMouse?: MouseListRelationFilter
    usuarioEstabilizador?: EstabilizadorListRelationFilter
    modificadorEstabilizador?: EstabilizadorListRelationFilter
    usuarioImpressora?: ImpressoraListRelationFilter
    modificadorImpressora?: ImpressoraListRelationFilter
    usuarioPlacamae?: PlacamaeListRelationFilter
    modificadorPlacamae?: PlacamaeListRelationFilter
    usuarioNotebook?: NotebookListRelationFilter
    modificadorNotebook?: NotebookListRelationFilter
    usuarioProcessador?: ProcessadorListRelationFilter
    modificadorProcessador?: ProcessadorListRelationFilter
  }, "id" | "email" | "matricula">

  export type alunoOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    matricula?: SortOrder
    curso?: SortOrder
    dias?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: alunoCountOrderByAggregateInput
    _avg?: alunoAvgOrderByAggregateInput
    _max?: alunoMaxOrderByAggregateInput
    _min?: alunoMinOrderByAggregateInput
    _sum?: alunoSumOrderByAggregateInput
  }

  export type alunoScalarWhereWithAggregatesInput = {
    AND?: alunoScalarWhereWithAggregatesInput | alunoScalarWhereWithAggregatesInput[]
    OR?: alunoScalarWhereWithAggregatesInput[]
    NOT?: alunoScalarWhereWithAggregatesInput | alunoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"aluno"> | number
    name?: StringWithAggregatesFilter<"aluno"> | string
    email?: StringWithAggregatesFilter<"aluno"> | string
    password?: StringWithAggregatesFilter<"aluno"> | string
    matricula?: StringWithAggregatesFilter<"aluno"> | string
    curso?: StringWithAggregatesFilter<"aluno"> | string
    dias?: StringWithAggregatesFilter<"aluno"> | string
    createdAt?: DateTimeWithAggregatesFilter<"aluno"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"aluno"> | Date | string
  }

  export type pessoafisicaWhereInput = {
    AND?: pessoafisicaWhereInput | pessoafisicaWhereInput[]
    OR?: pessoafisicaWhereInput[]
    NOT?: pessoafisicaWhereInput | pessoafisicaWhereInput[]
    id?: IntFilter<"pessoafisica"> | number
    name?: StringFilter<"pessoafisica"> | string
    email?: StringFilter<"pessoafisica"> | string
    password?: StringFilter<"pessoafisica"> | string
    cpf?: StringFilter<"pessoafisica"> | string
    comprovanteDeBaixaRenda?: StringFilter<"pessoafisica"> | string
    telefone?: StringFilter<"pessoafisica"> | string
    createdAt?: DateTimeFilter<"pessoafisica"> | Date | string
    updatedAt?: DateTimeFilter<"pessoafisica"> | Date | string
    doacao?: DoacaoListRelationFilter
    doacaoUsuario?: DoacaoUsuarioListRelationFilter
    solicitacao?: SolicitacaoListRelationFilter
  }

  export type pessoafisicaOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    cpf?: SortOrder
    comprovanteDeBaixaRenda?: SortOrder
    telefone?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    doacao?: doacaoOrderByRelationAggregateInput
    doacaoUsuario?: doacaoUsuarioOrderByRelationAggregateInput
    solicitacao?: solicitacaoOrderByRelationAggregateInput
  }

  export type pessoafisicaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    cpf?: string
    AND?: pessoafisicaWhereInput | pessoafisicaWhereInput[]
    OR?: pessoafisicaWhereInput[]
    NOT?: pessoafisicaWhereInput | pessoafisicaWhereInput[]
    name?: StringFilter<"pessoafisica"> | string
    password?: StringFilter<"pessoafisica"> | string
    comprovanteDeBaixaRenda?: StringFilter<"pessoafisica"> | string
    telefone?: StringFilter<"pessoafisica"> | string
    createdAt?: DateTimeFilter<"pessoafisica"> | Date | string
    updatedAt?: DateTimeFilter<"pessoafisica"> | Date | string
    doacao?: DoacaoListRelationFilter
    doacaoUsuario?: DoacaoUsuarioListRelationFilter
    solicitacao?: SolicitacaoListRelationFilter
  }, "id" | "email" | "cpf">

  export type pessoafisicaOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    cpf?: SortOrder
    comprovanteDeBaixaRenda?: SortOrder
    telefone?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: pessoafisicaCountOrderByAggregateInput
    _avg?: pessoafisicaAvgOrderByAggregateInput
    _max?: pessoafisicaMaxOrderByAggregateInput
    _min?: pessoafisicaMinOrderByAggregateInput
    _sum?: pessoafisicaSumOrderByAggregateInput
  }

  export type pessoafisicaScalarWhereWithAggregatesInput = {
    AND?: pessoafisicaScalarWhereWithAggregatesInput | pessoafisicaScalarWhereWithAggregatesInput[]
    OR?: pessoafisicaScalarWhereWithAggregatesInput[]
    NOT?: pessoafisicaScalarWhereWithAggregatesInput | pessoafisicaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"pessoafisica"> | number
    name?: StringWithAggregatesFilter<"pessoafisica"> | string
    email?: StringWithAggregatesFilter<"pessoafisica"> | string
    password?: StringWithAggregatesFilter<"pessoafisica"> | string
    cpf?: StringWithAggregatesFilter<"pessoafisica"> | string
    comprovanteDeBaixaRenda?: StringWithAggregatesFilter<"pessoafisica"> | string
    telefone?: StringWithAggregatesFilter<"pessoafisica"> | string
    createdAt?: DateTimeWithAggregatesFilter<"pessoafisica"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"pessoafisica"> | Date | string
  }

  export type pessoajuridicaWhereInput = {
    AND?: pessoajuridicaWhereInput | pessoajuridicaWhereInput[]
    OR?: pessoajuridicaWhereInput[]
    NOT?: pessoajuridicaWhereInput | pessoajuridicaWhereInput[]
    id?: IntFilter<"pessoajuridica"> | number
    name?: StringFilter<"pessoajuridica"> | string
    email?: StringFilter<"pessoajuridica"> | string
    password?: StringFilter<"pessoajuridica"> | string
    cnpj?: StringFilter<"pessoajuridica"> | string
    comprovanteDeProjeto?: StringFilter<"pessoajuridica"> | string
    endereco?: StringFilter<"pessoajuridica"> | string
    telefone?: StringFilter<"pessoajuridica"> | string
    createdAt?: DateTimeFilter<"pessoajuridica"> | Date | string
    updatedAt?: DateTimeFilter<"pessoajuridica"> | Date | string
    doacao?: DoacaoListRelationFilter
    doacaoUsuario?: DoacaoUsuarioListRelationFilter
    solicitacao?: SolicitacaoListRelationFilter
  }

  export type pessoajuridicaOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    cnpj?: SortOrder
    comprovanteDeProjeto?: SortOrder
    endereco?: SortOrder
    telefone?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    doacao?: doacaoOrderByRelationAggregateInput
    doacaoUsuario?: doacaoUsuarioOrderByRelationAggregateInput
    solicitacao?: solicitacaoOrderByRelationAggregateInput
  }

  export type pessoajuridicaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    cnpj?: string
    AND?: pessoajuridicaWhereInput | pessoajuridicaWhereInput[]
    OR?: pessoajuridicaWhereInput[]
    NOT?: pessoajuridicaWhereInput | pessoajuridicaWhereInput[]
    name?: StringFilter<"pessoajuridica"> | string
    password?: StringFilter<"pessoajuridica"> | string
    comprovanteDeProjeto?: StringFilter<"pessoajuridica"> | string
    endereco?: StringFilter<"pessoajuridica"> | string
    telefone?: StringFilter<"pessoajuridica"> | string
    createdAt?: DateTimeFilter<"pessoajuridica"> | Date | string
    updatedAt?: DateTimeFilter<"pessoajuridica"> | Date | string
    doacao?: DoacaoListRelationFilter
    doacaoUsuario?: DoacaoUsuarioListRelationFilter
    solicitacao?: SolicitacaoListRelationFilter
  }, "id" | "email" | "cnpj">

  export type pessoajuridicaOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    cnpj?: SortOrder
    comprovanteDeProjeto?: SortOrder
    endereco?: SortOrder
    telefone?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: pessoajuridicaCountOrderByAggregateInput
    _avg?: pessoajuridicaAvgOrderByAggregateInput
    _max?: pessoajuridicaMaxOrderByAggregateInput
    _min?: pessoajuridicaMinOrderByAggregateInput
    _sum?: pessoajuridicaSumOrderByAggregateInput
  }

  export type pessoajuridicaScalarWhereWithAggregatesInput = {
    AND?: pessoajuridicaScalarWhereWithAggregatesInput | pessoajuridicaScalarWhereWithAggregatesInput[]
    OR?: pessoajuridicaScalarWhereWithAggregatesInput[]
    NOT?: pessoajuridicaScalarWhereWithAggregatesInput | pessoajuridicaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"pessoajuridica"> | number
    name?: StringWithAggregatesFilter<"pessoajuridica"> | string
    email?: StringWithAggregatesFilter<"pessoajuridica"> | string
    password?: StringWithAggregatesFilter<"pessoajuridica"> | string
    cnpj?: StringWithAggregatesFilter<"pessoajuridica"> | string
    comprovanteDeProjeto?: StringWithAggregatesFilter<"pessoajuridica"> | string
    endereco?: StringWithAggregatesFilter<"pessoajuridica"> | string
    telefone?: StringWithAggregatesFilter<"pessoajuridica"> | string
    createdAt?: DateTimeWithAggregatesFilter<"pessoajuridica"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"pessoajuridica"> | Date | string
  }

  export type inscritoWhereInput = {
    AND?: inscritoWhereInput | inscritoWhereInput[]
    OR?: inscritoWhereInput[]
    NOT?: inscritoWhereInput | inscritoWhereInput[]
    id?: IntFilter<"inscrito"> | number
    name?: StringFilter<"inscrito"> | string
    email?: StringFilter<"inscrito"> | string
    dias?: StringFilter<"inscrito"> | string
    matricula?: StringFilter<"inscrito"> | string
    curso?: StringFilter<"inscrito"> | string
    periodo?: StringFilter<"inscrito"> | string
    bolsista?: BoolFilter<"inscrito"> | boolean
  }

  export type inscritoOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    dias?: SortOrder
    matricula?: SortOrder
    curso?: SortOrder
    periodo?: SortOrder
    bolsista?: SortOrder
  }

  export type inscritoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    matricula?: string
    AND?: inscritoWhereInput | inscritoWhereInput[]
    OR?: inscritoWhereInput[]
    NOT?: inscritoWhereInput | inscritoWhereInput[]
    name?: StringFilter<"inscrito"> | string
    dias?: StringFilter<"inscrito"> | string
    curso?: StringFilter<"inscrito"> | string
    periodo?: StringFilter<"inscrito"> | string
    bolsista?: BoolFilter<"inscrito"> | boolean
  }, "id" | "email" | "matricula">

  export type inscritoOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    dias?: SortOrder
    matricula?: SortOrder
    curso?: SortOrder
    periodo?: SortOrder
    bolsista?: SortOrder
    _count?: inscritoCountOrderByAggregateInput
    _avg?: inscritoAvgOrderByAggregateInput
    _max?: inscritoMaxOrderByAggregateInput
    _min?: inscritoMinOrderByAggregateInput
    _sum?: inscritoSumOrderByAggregateInput
  }

  export type inscritoScalarWhereWithAggregatesInput = {
    AND?: inscritoScalarWhereWithAggregatesInput | inscritoScalarWhereWithAggregatesInput[]
    OR?: inscritoScalarWhereWithAggregatesInput[]
    NOT?: inscritoScalarWhereWithAggregatesInput | inscritoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"inscrito"> | number
    name?: StringWithAggregatesFilter<"inscrito"> | string
    email?: StringWithAggregatesFilter<"inscrito"> | string
    dias?: StringWithAggregatesFilter<"inscrito"> | string
    matricula?: StringWithAggregatesFilter<"inscrito"> | string
    curso?: StringWithAggregatesFilter<"inscrito"> | string
    periodo?: StringWithAggregatesFilter<"inscrito"> | string
    bolsista?: BoolWithAggregatesFilter<"inscrito"> | boolean
  }

  export type tecladoWhereInput = {
    AND?: tecladoWhereInput | tecladoWhereInput[]
    OR?: tecladoWhereInput[]
    NOT?: tecladoWhereInput | tecladoWhereInput[]
    id?: IntFilter<"teclado"> | number
    codigoDereferencia?: StringFilter<"teclado"> | string
    descricao?: StringFilter<"teclado"> | string
    status?: StringFilter<"teclado"> | string
    dataDeChegada?: DateTimeFilter<"teclado"> | Date | string
    dataDeSaida?: DateTimeNullableFilter<"teclado"> | Date | string | null
    marca?: StringFilter<"teclado"> | string
    modelo?: StringFilter<"teclado"> | string
    createdAt?: DateTimeFilter<"teclado"> | Date | string
    updatedAt?: DateTimeFilter<"teclado"> | Date | string
    nome?: StringFilter<"teclado"> | string
    imagem?: StringFilter<"teclado"> | string
    situacao?: StringFilter<"teclado"> | string
    tipoDeConexao?: StringFilter<"teclado"> | string
    usuarioId?: IntNullableFilter<"teclado"> | number | null
    modificadorid?: IntNullableFilter<"teclado"> | number | null
    descarteId?: IntNullableFilter<"teclado"> | number | null
    doacaoId?: IntNullableFilter<"teclado"> | number | null
    descarte?: XOR<DescarteNullableScalarRelationFilter, descarteWhereInput> | null
    doacao?: XOR<DoacaoNullableScalarRelationFilter, doacaoWhereInput> | null
    usuario?: XOR<AlunoNullableScalarRelationFilter, alunoWhereInput> | null
    modificador?: XOR<AlunoNullableScalarRelationFilter, alunoWhereInput> | null
  }

  export type tecladoOrderByWithRelationInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrderInput | SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    tipoDeConexao?: SortOrder
    usuarioId?: SortOrderInput | SortOrder
    modificadorid?: SortOrderInput | SortOrder
    descarteId?: SortOrderInput | SortOrder
    doacaoId?: SortOrderInput | SortOrder
    descarte?: descarteOrderByWithRelationInput
    doacao?: doacaoOrderByWithRelationInput
    usuario?: alunoOrderByWithRelationInput
    modificador?: alunoOrderByWithRelationInput
  }

  export type tecladoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    codigoDereferencia?: string
    AND?: tecladoWhereInput | tecladoWhereInput[]
    OR?: tecladoWhereInput[]
    NOT?: tecladoWhereInput | tecladoWhereInput[]
    descricao?: StringFilter<"teclado"> | string
    status?: StringFilter<"teclado"> | string
    dataDeChegada?: DateTimeFilter<"teclado"> | Date | string
    dataDeSaida?: DateTimeNullableFilter<"teclado"> | Date | string | null
    marca?: StringFilter<"teclado"> | string
    modelo?: StringFilter<"teclado"> | string
    createdAt?: DateTimeFilter<"teclado"> | Date | string
    updatedAt?: DateTimeFilter<"teclado"> | Date | string
    nome?: StringFilter<"teclado"> | string
    imagem?: StringFilter<"teclado"> | string
    situacao?: StringFilter<"teclado"> | string
    tipoDeConexao?: StringFilter<"teclado"> | string
    usuarioId?: IntNullableFilter<"teclado"> | number | null
    modificadorid?: IntNullableFilter<"teclado"> | number | null
    descarteId?: IntNullableFilter<"teclado"> | number | null
    doacaoId?: IntNullableFilter<"teclado"> | number | null
    descarte?: XOR<DescarteNullableScalarRelationFilter, descarteWhereInput> | null
    doacao?: XOR<DoacaoNullableScalarRelationFilter, doacaoWhereInput> | null
    usuario?: XOR<AlunoNullableScalarRelationFilter, alunoWhereInput> | null
    modificador?: XOR<AlunoNullableScalarRelationFilter, alunoWhereInput> | null
  }, "id" | "codigoDereferencia">

  export type tecladoOrderByWithAggregationInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrderInput | SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    tipoDeConexao?: SortOrder
    usuarioId?: SortOrderInput | SortOrder
    modificadorid?: SortOrderInput | SortOrder
    descarteId?: SortOrderInput | SortOrder
    doacaoId?: SortOrderInput | SortOrder
    _count?: tecladoCountOrderByAggregateInput
    _avg?: tecladoAvgOrderByAggregateInput
    _max?: tecladoMaxOrderByAggregateInput
    _min?: tecladoMinOrderByAggregateInput
    _sum?: tecladoSumOrderByAggregateInput
  }

  export type tecladoScalarWhereWithAggregatesInput = {
    AND?: tecladoScalarWhereWithAggregatesInput | tecladoScalarWhereWithAggregatesInput[]
    OR?: tecladoScalarWhereWithAggregatesInput[]
    NOT?: tecladoScalarWhereWithAggregatesInput | tecladoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"teclado"> | number
    codigoDereferencia?: StringWithAggregatesFilter<"teclado"> | string
    descricao?: StringWithAggregatesFilter<"teclado"> | string
    status?: StringWithAggregatesFilter<"teclado"> | string
    dataDeChegada?: DateTimeWithAggregatesFilter<"teclado"> | Date | string
    dataDeSaida?: DateTimeNullableWithAggregatesFilter<"teclado"> | Date | string | null
    marca?: StringWithAggregatesFilter<"teclado"> | string
    modelo?: StringWithAggregatesFilter<"teclado"> | string
    createdAt?: DateTimeWithAggregatesFilter<"teclado"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"teclado"> | Date | string
    nome?: StringWithAggregatesFilter<"teclado"> | string
    imagem?: StringWithAggregatesFilter<"teclado"> | string
    situacao?: StringWithAggregatesFilter<"teclado"> | string
    tipoDeConexao?: StringWithAggregatesFilter<"teclado"> | string
    usuarioId?: IntNullableWithAggregatesFilter<"teclado"> | number | null
    modificadorid?: IntNullableWithAggregatesFilter<"teclado"> | number | null
    descarteId?: IntNullableWithAggregatesFilter<"teclado"> | number | null
    doacaoId?: IntNullableWithAggregatesFilter<"teclado"> | number | null
  }

  export type hdWhereInput = {
    AND?: hdWhereInput | hdWhereInput[]
    OR?: hdWhereInput[]
    NOT?: hdWhereInput | hdWhereInput[]
    id?: IntFilter<"hd"> | number
    codigoDereferencia?: StringFilter<"hd"> | string
    descricao?: StringFilter<"hd"> | string
    status?: StringFilter<"hd"> | string
    dataDeChegada?: DateTimeFilter<"hd"> | Date | string
    dataDeSaida?: DateTimeNullableFilter<"hd"> | Date | string | null
    marca?: StringFilter<"hd"> | string
    modelo?: StringFilter<"hd"> | string
    createdAt?: DateTimeFilter<"hd"> | Date | string
    updatedAt?: DateTimeFilter<"hd"> | Date | string
    nome?: StringFilter<"hd"> | string
    imagem?: StringFilter<"hd"> | string
    situacao?: StringFilter<"hd"> | string
    tipoDeCapacidade?: StringFilter<"hd"> | string
    capacidade?: IntFilter<"hd"> | number
    usuarioId?: IntNullableFilter<"hd"> | number | null
    modificadorid?: IntNullableFilter<"hd"> | number | null
    descarteId?: IntNullableFilter<"hd"> | number | null
    doacaoId?: IntNullableFilter<"hd"> | number | null
    doacao?: XOR<DoacaoNullableScalarRelationFilter, doacaoWhereInput> | null
    descarte?: XOR<DescarteNullableScalarRelationFilter, descarteWhereInput> | null
    aluno?: XOR<AlunoNullableScalarRelationFilter, alunoWhereInput> | null
    modificador?: XOR<AlunoNullableScalarRelationFilter, alunoWhereInput> | null
  }

  export type hdOrderByWithRelationInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrderInput | SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    tipoDeCapacidade?: SortOrder
    capacidade?: SortOrder
    usuarioId?: SortOrderInput | SortOrder
    modificadorid?: SortOrderInput | SortOrder
    descarteId?: SortOrderInput | SortOrder
    doacaoId?: SortOrderInput | SortOrder
    doacao?: doacaoOrderByWithRelationInput
    descarte?: descarteOrderByWithRelationInput
    aluno?: alunoOrderByWithRelationInput
    modificador?: alunoOrderByWithRelationInput
  }

  export type hdWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    codigoDereferencia?: string
    AND?: hdWhereInput | hdWhereInput[]
    OR?: hdWhereInput[]
    NOT?: hdWhereInput | hdWhereInput[]
    descricao?: StringFilter<"hd"> | string
    status?: StringFilter<"hd"> | string
    dataDeChegada?: DateTimeFilter<"hd"> | Date | string
    dataDeSaida?: DateTimeNullableFilter<"hd"> | Date | string | null
    marca?: StringFilter<"hd"> | string
    modelo?: StringFilter<"hd"> | string
    createdAt?: DateTimeFilter<"hd"> | Date | string
    updatedAt?: DateTimeFilter<"hd"> | Date | string
    nome?: StringFilter<"hd"> | string
    imagem?: StringFilter<"hd"> | string
    situacao?: StringFilter<"hd"> | string
    tipoDeCapacidade?: StringFilter<"hd"> | string
    capacidade?: IntFilter<"hd"> | number
    usuarioId?: IntNullableFilter<"hd"> | number | null
    modificadorid?: IntNullableFilter<"hd"> | number | null
    descarteId?: IntNullableFilter<"hd"> | number | null
    doacaoId?: IntNullableFilter<"hd"> | number | null
    doacao?: XOR<DoacaoNullableScalarRelationFilter, doacaoWhereInput> | null
    descarte?: XOR<DescarteNullableScalarRelationFilter, descarteWhereInput> | null
    aluno?: XOR<AlunoNullableScalarRelationFilter, alunoWhereInput> | null
    modificador?: XOR<AlunoNullableScalarRelationFilter, alunoWhereInput> | null
  }, "id" | "codigoDereferencia">

  export type hdOrderByWithAggregationInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrderInput | SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    tipoDeCapacidade?: SortOrder
    capacidade?: SortOrder
    usuarioId?: SortOrderInput | SortOrder
    modificadorid?: SortOrderInput | SortOrder
    descarteId?: SortOrderInput | SortOrder
    doacaoId?: SortOrderInput | SortOrder
    _count?: hdCountOrderByAggregateInput
    _avg?: hdAvgOrderByAggregateInput
    _max?: hdMaxOrderByAggregateInput
    _min?: hdMinOrderByAggregateInput
    _sum?: hdSumOrderByAggregateInput
  }

  export type hdScalarWhereWithAggregatesInput = {
    AND?: hdScalarWhereWithAggregatesInput | hdScalarWhereWithAggregatesInput[]
    OR?: hdScalarWhereWithAggregatesInput[]
    NOT?: hdScalarWhereWithAggregatesInput | hdScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"hd"> | number
    codigoDereferencia?: StringWithAggregatesFilter<"hd"> | string
    descricao?: StringWithAggregatesFilter<"hd"> | string
    status?: StringWithAggregatesFilter<"hd"> | string
    dataDeChegada?: DateTimeWithAggregatesFilter<"hd"> | Date | string
    dataDeSaida?: DateTimeNullableWithAggregatesFilter<"hd"> | Date | string | null
    marca?: StringWithAggregatesFilter<"hd"> | string
    modelo?: StringWithAggregatesFilter<"hd"> | string
    createdAt?: DateTimeWithAggregatesFilter<"hd"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"hd"> | Date | string
    nome?: StringWithAggregatesFilter<"hd"> | string
    imagem?: StringWithAggregatesFilter<"hd"> | string
    situacao?: StringWithAggregatesFilter<"hd"> | string
    tipoDeCapacidade?: StringWithAggregatesFilter<"hd"> | string
    capacidade?: IntWithAggregatesFilter<"hd"> | number
    usuarioId?: IntNullableWithAggregatesFilter<"hd"> | number | null
    modificadorid?: IntNullableWithAggregatesFilter<"hd"> | number | null
    descarteId?: IntNullableWithAggregatesFilter<"hd"> | number | null
    doacaoId?: IntNullableWithAggregatesFilter<"hd"> | number | null
  }

  export type fontedealimentacaoWhereInput = {
    AND?: fontedealimentacaoWhereInput | fontedealimentacaoWhereInput[]
    OR?: fontedealimentacaoWhereInput[]
    NOT?: fontedealimentacaoWhereInput | fontedealimentacaoWhereInput[]
    id?: IntFilter<"fontedealimentacao"> | number
    codigoDereferencia?: StringFilter<"fontedealimentacao"> | string
    descricao?: StringFilter<"fontedealimentacao"> | string
    status?: StringFilter<"fontedealimentacao"> | string
    dataDeChegada?: DateTimeFilter<"fontedealimentacao"> | Date | string
    dataDeSaida?: DateTimeNullableFilter<"fontedealimentacao"> | Date | string | null
    marca?: StringFilter<"fontedealimentacao"> | string
    modelo?: StringFilter<"fontedealimentacao"> | string
    nome?: StringFilter<"fontedealimentacao"> | string
    imagem?: StringFilter<"fontedealimentacao"> | string
    situacao?: StringFilter<"fontedealimentacao"> | string
    potencia?: IntFilter<"fontedealimentacao"> | number
    updatedAt?: DateTimeFilter<"fontedealimentacao"> | Date | string
    alunoid?: IntNullableFilter<"fontedealimentacao"> | number | null
    modificadorid?: IntNullableFilter<"fontedealimentacao"> | number | null
    descarteId?: IntNullableFilter<"fontedealimentacao"> | number | null
    doacaoId?: IntNullableFilter<"fontedealimentacao"> | number | null
    doacao?: XOR<DoacaoNullableScalarRelationFilter, doacaoWhereInput> | null
    descarte?: XOR<DescarteNullableScalarRelationFilter, descarteWhereInput> | null
    usuario?: XOR<AlunoNullableScalarRelationFilter, alunoWhereInput> | null
    modificador?: XOR<AlunoNullableScalarRelationFilter, alunoWhereInput> | null
  }

  export type fontedealimentacaoOrderByWithRelationInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrderInput | SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    potencia?: SortOrder
    updatedAt?: SortOrder
    alunoid?: SortOrderInput | SortOrder
    modificadorid?: SortOrderInput | SortOrder
    descarteId?: SortOrderInput | SortOrder
    doacaoId?: SortOrderInput | SortOrder
    doacao?: doacaoOrderByWithRelationInput
    descarte?: descarteOrderByWithRelationInput
    usuario?: alunoOrderByWithRelationInput
    modificador?: alunoOrderByWithRelationInput
  }

  export type fontedealimentacaoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    codigoDereferencia?: string
    AND?: fontedealimentacaoWhereInput | fontedealimentacaoWhereInput[]
    OR?: fontedealimentacaoWhereInput[]
    NOT?: fontedealimentacaoWhereInput | fontedealimentacaoWhereInput[]
    descricao?: StringFilter<"fontedealimentacao"> | string
    status?: StringFilter<"fontedealimentacao"> | string
    dataDeChegada?: DateTimeFilter<"fontedealimentacao"> | Date | string
    dataDeSaida?: DateTimeNullableFilter<"fontedealimentacao"> | Date | string | null
    marca?: StringFilter<"fontedealimentacao"> | string
    modelo?: StringFilter<"fontedealimentacao"> | string
    nome?: StringFilter<"fontedealimentacao"> | string
    imagem?: StringFilter<"fontedealimentacao"> | string
    situacao?: StringFilter<"fontedealimentacao"> | string
    potencia?: IntFilter<"fontedealimentacao"> | number
    updatedAt?: DateTimeFilter<"fontedealimentacao"> | Date | string
    alunoid?: IntNullableFilter<"fontedealimentacao"> | number | null
    modificadorid?: IntNullableFilter<"fontedealimentacao"> | number | null
    descarteId?: IntNullableFilter<"fontedealimentacao"> | number | null
    doacaoId?: IntNullableFilter<"fontedealimentacao"> | number | null
    doacao?: XOR<DoacaoNullableScalarRelationFilter, doacaoWhereInput> | null
    descarte?: XOR<DescarteNullableScalarRelationFilter, descarteWhereInput> | null
    usuario?: XOR<AlunoNullableScalarRelationFilter, alunoWhereInput> | null
    modificador?: XOR<AlunoNullableScalarRelationFilter, alunoWhereInput> | null
  }, "id" | "codigoDereferencia">

  export type fontedealimentacaoOrderByWithAggregationInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrderInput | SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    potencia?: SortOrder
    updatedAt?: SortOrder
    alunoid?: SortOrderInput | SortOrder
    modificadorid?: SortOrderInput | SortOrder
    descarteId?: SortOrderInput | SortOrder
    doacaoId?: SortOrderInput | SortOrder
    _count?: fontedealimentacaoCountOrderByAggregateInput
    _avg?: fontedealimentacaoAvgOrderByAggregateInput
    _max?: fontedealimentacaoMaxOrderByAggregateInput
    _min?: fontedealimentacaoMinOrderByAggregateInput
    _sum?: fontedealimentacaoSumOrderByAggregateInput
  }

  export type fontedealimentacaoScalarWhereWithAggregatesInput = {
    AND?: fontedealimentacaoScalarWhereWithAggregatesInput | fontedealimentacaoScalarWhereWithAggregatesInput[]
    OR?: fontedealimentacaoScalarWhereWithAggregatesInput[]
    NOT?: fontedealimentacaoScalarWhereWithAggregatesInput | fontedealimentacaoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"fontedealimentacao"> | number
    codigoDereferencia?: StringWithAggregatesFilter<"fontedealimentacao"> | string
    descricao?: StringWithAggregatesFilter<"fontedealimentacao"> | string
    status?: StringWithAggregatesFilter<"fontedealimentacao"> | string
    dataDeChegada?: DateTimeWithAggregatesFilter<"fontedealimentacao"> | Date | string
    dataDeSaida?: DateTimeNullableWithAggregatesFilter<"fontedealimentacao"> | Date | string | null
    marca?: StringWithAggregatesFilter<"fontedealimentacao"> | string
    modelo?: StringWithAggregatesFilter<"fontedealimentacao"> | string
    nome?: StringWithAggregatesFilter<"fontedealimentacao"> | string
    imagem?: StringWithAggregatesFilter<"fontedealimentacao"> | string
    situacao?: StringWithAggregatesFilter<"fontedealimentacao"> | string
    potencia?: IntWithAggregatesFilter<"fontedealimentacao"> | number
    updatedAt?: DateTimeWithAggregatesFilter<"fontedealimentacao"> | Date | string
    alunoid?: IntNullableWithAggregatesFilter<"fontedealimentacao"> | number | null
    modificadorid?: IntNullableWithAggregatesFilter<"fontedealimentacao"> | number | null
    descarteId?: IntNullableWithAggregatesFilter<"fontedealimentacao"> | number | null
    doacaoId?: IntNullableWithAggregatesFilter<"fontedealimentacao"> | number | null
  }

  export type gabineteWhereInput = {
    AND?: gabineteWhereInput | gabineteWhereInput[]
    OR?: gabineteWhereInput[]
    NOT?: gabineteWhereInput | gabineteWhereInput[]
    id?: IntFilter<"gabinete"> | number
    codigoDereferencia?: StringFilter<"gabinete"> | string
    descricao?: StringFilter<"gabinete"> | string
    status?: StringFilter<"gabinete"> | string
    dataDeChegada?: DateTimeFilter<"gabinete"> | Date | string
    dataDeSaida?: DateTimeNullableFilter<"gabinete"> | Date | string | null
    marca?: StringFilter<"gabinete"> | string
    modelo?: StringFilter<"gabinete"> | string
    nome?: StringFilter<"gabinete"> | string
    imagem?: StringFilter<"gabinete"> | string
    situacao?: StringFilter<"gabinete"> | string
    updatedAt?: DateTimeFilter<"gabinete"> | Date | string
    alunoid?: IntNullableFilter<"gabinete"> | number | null
    modificadorid?: IntNullableFilter<"gabinete"> | number | null
    descarteId?: IntNullableFilter<"gabinete"> | number | null
    doacaoId?: IntNullableFilter<"gabinete"> | number | null
    doacao?: XOR<DoacaoNullableScalarRelationFilter, doacaoWhereInput> | null
    descarte?: XOR<DescarteNullableScalarRelationFilter, descarteWhereInput> | null
    usuario?: XOR<AlunoNullableScalarRelationFilter, alunoWhereInput> | null
    modificador?: XOR<AlunoNullableScalarRelationFilter, alunoWhereInput> | null
  }

  export type gabineteOrderByWithRelationInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrderInput | SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    updatedAt?: SortOrder
    alunoid?: SortOrderInput | SortOrder
    modificadorid?: SortOrderInput | SortOrder
    descarteId?: SortOrderInput | SortOrder
    doacaoId?: SortOrderInput | SortOrder
    doacao?: doacaoOrderByWithRelationInput
    descarte?: descarteOrderByWithRelationInput
    usuario?: alunoOrderByWithRelationInput
    modificador?: alunoOrderByWithRelationInput
  }

  export type gabineteWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    codigoDereferencia?: string
    AND?: gabineteWhereInput | gabineteWhereInput[]
    OR?: gabineteWhereInput[]
    NOT?: gabineteWhereInput | gabineteWhereInput[]
    descricao?: StringFilter<"gabinete"> | string
    status?: StringFilter<"gabinete"> | string
    dataDeChegada?: DateTimeFilter<"gabinete"> | Date | string
    dataDeSaida?: DateTimeNullableFilter<"gabinete"> | Date | string | null
    marca?: StringFilter<"gabinete"> | string
    modelo?: StringFilter<"gabinete"> | string
    nome?: StringFilter<"gabinete"> | string
    imagem?: StringFilter<"gabinete"> | string
    situacao?: StringFilter<"gabinete"> | string
    updatedAt?: DateTimeFilter<"gabinete"> | Date | string
    alunoid?: IntNullableFilter<"gabinete"> | number | null
    modificadorid?: IntNullableFilter<"gabinete"> | number | null
    descarteId?: IntNullableFilter<"gabinete"> | number | null
    doacaoId?: IntNullableFilter<"gabinete"> | number | null
    doacao?: XOR<DoacaoNullableScalarRelationFilter, doacaoWhereInput> | null
    descarte?: XOR<DescarteNullableScalarRelationFilter, descarteWhereInput> | null
    usuario?: XOR<AlunoNullableScalarRelationFilter, alunoWhereInput> | null
    modificador?: XOR<AlunoNullableScalarRelationFilter, alunoWhereInput> | null
  }, "id" | "codigoDereferencia">

  export type gabineteOrderByWithAggregationInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrderInput | SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    updatedAt?: SortOrder
    alunoid?: SortOrderInput | SortOrder
    modificadorid?: SortOrderInput | SortOrder
    descarteId?: SortOrderInput | SortOrder
    doacaoId?: SortOrderInput | SortOrder
    _count?: gabineteCountOrderByAggregateInput
    _avg?: gabineteAvgOrderByAggregateInput
    _max?: gabineteMaxOrderByAggregateInput
    _min?: gabineteMinOrderByAggregateInput
    _sum?: gabineteSumOrderByAggregateInput
  }

  export type gabineteScalarWhereWithAggregatesInput = {
    AND?: gabineteScalarWhereWithAggregatesInput | gabineteScalarWhereWithAggregatesInput[]
    OR?: gabineteScalarWhereWithAggregatesInput[]
    NOT?: gabineteScalarWhereWithAggregatesInput | gabineteScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"gabinete"> | number
    codigoDereferencia?: StringWithAggregatesFilter<"gabinete"> | string
    descricao?: StringWithAggregatesFilter<"gabinete"> | string
    status?: StringWithAggregatesFilter<"gabinete"> | string
    dataDeChegada?: DateTimeWithAggregatesFilter<"gabinete"> | Date | string
    dataDeSaida?: DateTimeNullableWithAggregatesFilter<"gabinete"> | Date | string | null
    marca?: StringWithAggregatesFilter<"gabinete"> | string
    modelo?: StringWithAggregatesFilter<"gabinete"> | string
    nome?: StringWithAggregatesFilter<"gabinete"> | string
    imagem?: StringWithAggregatesFilter<"gabinete"> | string
    situacao?: StringWithAggregatesFilter<"gabinete"> | string
    updatedAt?: DateTimeWithAggregatesFilter<"gabinete"> | Date | string
    alunoid?: IntNullableWithAggregatesFilter<"gabinete"> | number | null
    modificadorid?: IntNullableWithAggregatesFilter<"gabinete"> | number | null
    descarteId?: IntNullableWithAggregatesFilter<"gabinete"> | number | null
    doacaoId?: IntNullableWithAggregatesFilter<"gabinete"> | number | null
  }

  export type monitorWhereInput = {
    AND?: monitorWhereInput | monitorWhereInput[]
    OR?: monitorWhereInput[]
    NOT?: monitorWhereInput | monitorWhereInput[]
    id?: IntFilter<"monitor"> | number
    codigoDereferencia?: StringFilter<"monitor"> | string
    descricao?: StringFilter<"monitor"> | string
    status?: StringFilter<"monitor"> | string
    dataDeChegada?: DateTimeFilter<"monitor"> | Date | string
    dataDeSaida?: DateTimeNullableFilter<"monitor"> | Date | string | null
    marca?: StringFilter<"monitor"> | string
    modelo?: StringFilter<"monitor"> | string
    nome?: StringFilter<"monitor"> | string
    imagem?: StringFilter<"monitor"> | string
    situacao?: StringFilter<"monitor"> | string
    polegadas?: IntFilter<"monitor"> | number
    updatedAt?: DateTimeFilter<"monitor"> | Date | string
    alunoid?: IntNullableFilter<"monitor"> | number | null
    modificadorid?: IntNullableFilter<"monitor"> | number | null
    descarteId?: IntNullableFilter<"monitor"> | number | null
    doacaoId?: IntNullableFilter<"monitor"> | number | null
    doacao?: XOR<DoacaoNullableScalarRelationFilter, doacaoWhereInput> | null
    descarte?: XOR<DescarteNullableScalarRelationFilter, descarteWhereInput> | null
    usuario?: XOR<AlunoNullableScalarRelationFilter, alunoWhereInput> | null
    modificador?: XOR<AlunoNullableScalarRelationFilter, alunoWhereInput> | null
  }

  export type monitorOrderByWithRelationInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrderInput | SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    polegadas?: SortOrder
    updatedAt?: SortOrder
    alunoid?: SortOrderInput | SortOrder
    modificadorid?: SortOrderInput | SortOrder
    descarteId?: SortOrderInput | SortOrder
    doacaoId?: SortOrderInput | SortOrder
    doacao?: doacaoOrderByWithRelationInput
    descarte?: descarteOrderByWithRelationInput
    usuario?: alunoOrderByWithRelationInput
    modificador?: alunoOrderByWithRelationInput
  }

  export type monitorWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    codigoDereferencia?: string
    AND?: monitorWhereInput | monitorWhereInput[]
    OR?: monitorWhereInput[]
    NOT?: monitorWhereInput | monitorWhereInput[]
    descricao?: StringFilter<"monitor"> | string
    status?: StringFilter<"monitor"> | string
    dataDeChegada?: DateTimeFilter<"monitor"> | Date | string
    dataDeSaida?: DateTimeNullableFilter<"monitor"> | Date | string | null
    marca?: StringFilter<"monitor"> | string
    modelo?: StringFilter<"monitor"> | string
    nome?: StringFilter<"monitor"> | string
    imagem?: StringFilter<"monitor"> | string
    situacao?: StringFilter<"monitor"> | string
    polegadas?: IntFilter<"monitor"> | number
    updatedAt?: DateTimeFilter<"monitor"> | Date | string
    alunoid?: IntNullableFilter<"monitor"> | number | null
    modificadorid?: IntNullableFilter<"monitor"> | number | null
    descarteId?: IntNullableFilter<"monitor"> | number | null
    doacaoId?: IntNullableFilter<"monitor"> | number | null
    doacao?: XOR<DoacaoNullableScalarRelationFilter, doacaoWhereInput> | null
    descarte?: XOR<DescarteNullableScalarRelationFilter, descarteWhereInput> | null
    usuario?: XOR<AlunoNullableScalarRelationFilter, alunoWhereInput> | null
    modificador?: XOR<AlunoNullableScalarRelationFilter, alunoWhereInput> | null
  }, "id" | "codigoDereferencia">

  export type monitorOrderByWithAggregationInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrderInput | SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    polegadas?: SortOrder
    updatedAt?: SortOrder
    alunoid?: SortOrderInput | SortOrder
    modificadorid?: SortOrderInput | SortOrder
    descarteId?: SortOrderInput | SortOrder
    doacaoId?: SortOrderInput | SortOrder
    _count?: monitorCountOrderByAggregateInput
    _avg?: monitorAvgOrderByAggregateInput
    _max?: monitorMaxOrderByAggregateInput
    _min?: monitorMinOrderByAggregateInput
    _sum?: monitorSumOrderByAggregateInput
  }

  export type monitorScalarWhereWithAggregatesInput = {
    AND?: monitorScalarWhereWithAggregatesInput | monitorScalarWhereWithAggregatesInput[]
    OR?: monitorScalarWhereWithAggregatesInput[]
    NOT?: monitorScalarWhereWithAggregatesInput | monitorScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"monitor"> | number
    codigoDereferencia?: StringWithAggregatesFilter<"monitor"> | string
    descricao?: StringWithAggregatesFilter<"monitor"> | string
    status?: StringWithAggregatesFilter<"monitor"> | string
    dataDeChegada?: DateTimeWithAggregatesFilter<"monitor"> | Date | string
    dataDeSaida?: DateTimeNullableWithAggregatesFilter<"monitor"> | Date | string | null
    marca?: StringWithAggregatesFilter<"monitor"> | string
    modelo?: StringWithAggregatesFilter<"monitor"> | string
    nome?: StringWithAggregatesFilter<"monitor"> | string
    imagem?: StringWithAggregatesFilter<"monitor"> | string
    situacao?: StringWithAggregatesFilter<"monitor"> | string
    polegadas?: IntWithAggregatesFilter<"monitor"> | number
    updatedAt?: DateTimeWithAggregatesFilter<"monitor"> | Date | string
    alunoid?: IntNullableWithAggregatesFilter<"monitor"> | number | null
    modificadorid?: IntNullableWithAggregatesFilter<"monitor"> | number | null
    descarteId?: IntNullableWithAggregatesFilter<"monitor"> | number | null
    doacaoId?: IntNullableWithAggregatesFilter<"monitor"> | number | null
  }

  export type mouseWhereInput = {
    AND?: mouseWhereInput | mouseWhereInput[]
    OR?: mouseWhereInput[]
    NOT?: mouseWhereInput | mouseWhereInput[]
    id?: IntFilter<"mouse"> | number
    codigoDereferencia?: StringFilter<"mouse"> | string
    descricao?: StringFilter<"mouse"> | string
    status?: StringFilter<"mouse"> | string
    dataDeChegada?: DateTimeFilter<"mouse"> | Date | string
    dataDeSaida?: DateTimeNullableFilter<"mouse"> | Date | string | null
    marca?: StringFilter<"mouse"> | string
    modelo?: StringFilter<"mouse"> | string
    nome?: StringFilter<"mouse"> | string
    imagem?: StringFilter<"mouse"> | string
    situacao?: StringFilter<"mouse"> | string
    tipoDeConexao?: StringFilter<"mouse"> | string
    updatedAt?: DateTimeFilter<"mouse"> | Date | string
    alunoid?: IntNullableFilter<"mouse"> | number | null
    modificadorid?: IntNullableFilter<"mouse"> | number | null
    descarteId?: IntNullableFilter<"mouse"> | number | null
    doacaoId?: IntNullableFilter<"mouse"> | number | null
    doacao?: XOR<DoacaoNullableScalarRelationFilter, doacaoWhereInput> | null
    descarte?: XOR<DescarteNullableScalarRelationFilter, descarteWhereInput> | null
    usuario?: XOR<AlunoNullableScalarRelationFilter, alunoWhereInput> | null
    modificador?: XOR<AlunoNullableScalarRelationFilter, alunoWhereInput> | null
  }

  export type mouseOrderByWithRelationInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrderInput | SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    tipoDeConexao?: SortOrder
    updatedAt?: SortOrder
    alunoid?: SortOrderInput | SortOrder
    modificadorid?: SortOrderInput | SortOrder
    descarteId?: SortOrderInput | SortOrder
    doacaoId?: SortOrderInput | SortOrder
    doacao?: doacaoOrderByWithRelationInput
    descarte?: descarteOrderByWithRelationInput
    usuario?: alunoOrderByWithRelationInput
    modificador?: alunoOrderByWithRelationInput
  }

  export type mouseWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    codigoDereferencia?: string
    AND?: mouseWhereInput | mouseWhereInput[]
    OR?: mouseWhereInput[]
    NOT?: mouseWhereInput | mouseWhereInput[]
    descricao?: StringFilter<"mouse"> | string
    status?: StringFilter<"mouse"> | string
    dataDeChegada?: DateTimeFilter<"mouse"> | Date | string
    dataDeSaida?: DateTimeNullableFilter<"mouse"> | Date | string | null
    marca?: StringFilter<"mouse"> | string
    modelo?: StringFilter<"mouse"> | string
    nome?: StringFilter<"mouse"> | string
    imagem?: StringFilter<"mouse"> | string
    situacao?: StringFilter<"mouse"> | string
    tipoDeConexao?: StringFilter<"mouse"> | string
    updatedAt?: DateTimeFilter<"mouse"> | Date | string
    alunoid?: IntNullableFilter<"mouse"> | number | null
    modificadorid?: IntNullableFilter<"mouse"> | number | null
    descarteId?: IntNullableFilter<"mouse"> | number | null
    doacaoId?: IntNullableFilter<"mouse"> | number | null
    doacao?: XOR<DoacaoNullableScalarRelationFilter, doacaoWhereInput> | null
    descarte?: XOR<DescarteNullableScalarRelationFilter, descarteWhereInput> | null
    usuario?: XOR<AlunoNullableScalarRelationFilter, alunoWhereInput> | null
    modificador?: XOR<AlunoNullableScalarRelationFilter, alunoWhereInput> | null
  }, "id" | "codigoDereferencia">

  export type mouseOrderByWithAggregationInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrderInput | SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    tipoDeConexao?: SortOrder
    updatedAt?: SortOrder
    alunoid?: SortOrderInput | SortOrder
    modificadorid?: SortOrderInput | SortOrder
    descarteId?: SortOrderInput | SortOrder
    doacaoId?: SortOrderInput | SortOrder
    _count?: mouseCountOrderByAggregateInput
    _avg?: mouseAvgOrderByAggregateInput
    _max?: mouseMaxOrderByAggregateInput
    _min?: mouseMinOrderByAggregateInput
    _sum?: mouseSumOrderByAggregateInput
  }

  export type mouseScalarWhereWithAggregatesInput = {
    AND?: mouseScalarWhereWithAggregatesInput | mouseScalarWhereWithAggregatesInput[]
    OR?: mouseScalarWhereWithAggregatesInput[]
    NOT?: mouseScalarWhereWithAggregatesInput | mouseScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"mouse"> | number
    codigoDereferencia?: StringWithAggregatesFilter<"mouse"> | string
    descricao?: StringWithAggregatesFilter<"mouse"> | string
    status?: StringWithAggregatesFilter<"mouse"> | string
    dataDeChegada?: DateTimeWithAggregatesFilter<"mouse"> | Date | string
    dataDeSaida?: DateTimeNullableWithAggregatesFilter<"mouse"> | Date | string | null
    marca?: StringWithAggregatesFilter<"mouse"> | string
    modelo?: StringWithAggregatesFilter<"mouse"> | string
    nome?: StringWithAggregatesFilter<"mouse"> | string
    imagem?: StringWithAggregatesFilter<"mouse"> | string
    situacao?: StringWithAggregatesFilter<"mouse"> | string
    tipoDeConexao?: StringWithAggregatesFilter<"mouse"> | string
    updatedAt?: DateTimeWithAggregatesFilter<"mouse"> | Date | string
    alunoid?: IntNullableWithAggregatesFilter<"mouse"> | number | null
    modificadorid?: IntNullableWithAggregatesFilter<"mouse"> | number | null
    descarteId?: IntNullableWithAggregatesFilter<"mouse"> | number | null
    doacaoId?: IntNullableWithAggregatesFilter<"mouse"> | number | null
  }

  export type estabilizadorWhereInput = {
    AND?: estabilizadorWhereInput | estabilizadorWhereInput[]
    OR?: estabilizadorWhereInput[]
    NOT?: estabilizadorWhereInput | estabilizadorWhereInput[]
    id?: IntFilter<"estabilizador"> | number
    codigoDereferencia?: StringFilter<"estabilizador"> | string
    descricao?: StringFilter<"estabilizador"> | string
    status?: StringFilter<"estabilizador"> | string
    dataDeChegada?: DateTimeFilter<"estabilizador"> | Date | string
    dataDeSaida?: DateTimeNullableFilter<"estabilizador"> | Date | string | null
    marca?: StringFilter<"estabilizador"> | string
    modelo?: StringFilter<"estabilizador"> | string
    nome?: StringFilter<"estabilizador"> | string
    imagem?: StringFilter<"estabilizador"> | string
    situacao?: StringFilter<"estabilizador"> | string
    potencia?: IntFilter<"estabilizador"> | number
    updatedAt?: DateTimeFilter<"estabilizador"> | Date | string
    alunoid?: IntNullableFilter<"estabilizador"> | number | null
    modificadorid?: IntNullableFilter<"estabilizador"> | number | null
    descarteId?: IntNullableFilter<"estabilizador"> | number | null
    doacaoId?: IntNullableFilter<"estabilizador"> | number | null
    doacao?: XOR<DoacaoNullableScalarRelationFilter, doacaoWhereInput> | null
    descarte?: XOR<DescarteNullableScalarRelationFilter, descarteWhereInput> | null
    usuario?: XOR<AlunoNullableScalarRelationFilter, alunoWhereInput> | null
    modificador?: XOR<AlunoNullableScalarRelationFilter, alunoWhereInput> | null
  }

  export type estabilizadorOrderByWithRelationInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrderInput | SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    potencia?: SortOrder
    updatedAt?: SortOrder
    alunoid?: SortOrderInput | SortOrder
    modificadorid?: SortOrderInput | SortOrder
    descarteId?: SortOrderInput | SortOrder
    doacaoId?: SortOrderInput | SortOrder
    doacao?: doacaoOrderByWithRelationInput
    descarte?: descarteOrderByWithRelationInput
    usuario?: alunoOrderByWithRelationInput
    modificador?: alunoOrderByWithRelationInput
  }

  export type estabilizadorWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    codigoDereferencia?: string
    AND?: estabilizadorWhereInput | estabilizadorWhereInput[]
    OR?: estabilizadorWhereInput[]
    NOT?: estabilizadorWhereInput | estabilizadorWhereInput[]
    descricao?: StringFilter<"estabilizador"> | string
    status?: StringFilter<"estabilizador"> | string
    dataDeChegada?: DateTimeFilter<"estabilizador"> | Date | string
    dataDeSaida?: DateTimeNullableFilter<"estabilizador"> | Date | string | null
    marca?: StringFilter<"estabilizador"> | string
    modelo?: StringFilter<"estabilizador"> | string
    nome?: StringFilter<"estabilizador"> | string
    imagem?: StringFilter<"estabilizador"> | string
    situacao?: StringFilter<"estabilizador"> | string
    potencia?: IntFilter<"estabilizador"> | number
    updatedAt?: DateTimeFilter<"estabilizador"> | Date | string
    alunoid?: IntNullableFilter<"estabilizador"> | number | null
    modificadorid?: IntNullableFilter<"estabilizador"> | number | null
    descarteId?: IntNullableFilter<"estabilizador"> | number | null
    doacaoId?: IntNullableFilter<"estabilizador"> | number | null
    doacao?: XOR<DoacaoNullableScalarRelationFilter, doacaoWhereInput> | null
    descarte?: XOR<DescarteNullableScalarRelationFilter, descarteWhereInput> | null
    usuario?: XOR<AlunoNullableScalarRelationFilter, alunoWhereInput> | null
    modificador?: XOR<AlunoNullableScalarRelationFilter, alunoWhereInput> | null
  }, "id" | "codigoDereferencia">

  export type estabilizadorOrderByWithAggregationInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrderInput | SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    potencia?: SortOrder
    updatedAt?: SortOrder
    alunoid?: SortOrderInput | SortOrder
    modificadorid?: SortOrderInput | SortOrder
    descarteId?: SortOrderInput | SortOrder
    doacaoId?: SortOrderInput | SortOrder
    _count?: estabilizadorCountOrderByAggregateInput
    _avg?: estabilizadorAvgOrderByAggregateInput
    _max?: estabilizadorMaxOrderByAggregateInput
    _min?: estabilizadorMinOrderByAggregateInput
    _sum?: estabilizadorSumOrderByAggregateInput
  }

  export type estabilizadorScalarWhereWithAggregatesInput = {
    AND?: estabilizadorScalarWhereWithAggregatesInput | estabilizadorScalarWhereWithAggregatesInput[]
    OR?: estabilizadorScalarWhereWithAggregatesInput[]
    NOT?: estabilizadorScalarWhereWithAggregatesInput | estabilizadorScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"estabilizador"> | number
    codigoDereferencia?: StringWithAggregatesFilter<"estabilizador"> | string
    descricao?: StringWithAggregatesFilter<"estabilizador"> | string
    status?: StringWithAggregatesFilter<"estabilizador"> | string
    dataDeChegada?: DateTimeWithAggregatesFilter<"estabilizador"> | Date | string
    dataDeSaida?: DateTimeNullableWithAggregatesFilter<"estabilizador"> | Date | string | null
    marca?: StringWithAggregatesFilter<"estabilizador"> | string
    modelo?: StringWithAggregatesFilter<"estabilizador"> | string
    nome?: StringWithAggregatesFilter<"estabilizador"> | string
    imagem?: StringWithAggregatesFilter<"estabilizador"> | string
    situacao?: StringWithAggregatesFilter<"estabilizador"> | string
    potencia?: IntWithAggregatesFilter<"estabilizador"> | number
    updatedAt?: DateTimeWithAggregatesFilter<"estabilizador"> | Date | string
    alunoid?: IntNullableWithAggregatesFilter<"estabilizador"> | number | null
    modificadorid?: IntNullableWithAggregatesFilter<"estabilizador"> | number | null
    descarteId?: IntNullableWithAggregatesFilter<"estabilizador"> | number | null
    doacaoId?: IntNullableWithAggregatesFilter<"estabilizador"> | number | null
  }

  export type impressoraWhereInput = {
    AND?: impressoraWhereInput | impressoraWhereInput[]
    OR?: impressoraWhereInput[]
    NOT?: impressoraWhereInput | impressoraWhereInput[]
    id?: IntFilter<"impressora"> | number
    codigoDereferencia?: StringFilter<"impressora"> | string
    descricao?: StringFilter<"impressora"> | string
    status?: StringFilter<"impressora"> | string
    dataDeChegada?: DateTimeFilter<"impressora"> | Date | string
    dataDeSaida?: DateTimeNullableFilter<"impressora"> | Date | string | null
    marca?: StringFilter<"impressora"> | string
    modelo?: StringFilter<"impressora"> | string
    nome?: StringFilter<"impressora"> | string
    imagem?: StringFilter<"impressora"> | string
    situacao?: StringFilter<"impressora"> | string
    tipoDeTinta?: StringFilter<"impressora"> | string
    updatedAt?: DateTimeFilter<"impressora"> | Date | string
    alunoid?: IntNullableFilter<"impressora"> | number | null
    modificadorid?: IntNullableFilter<"impressora"> | number | null
    descarteId?: IntNullableFilter<"impressora"> | number | null
    doacaoId?: IntNullableFilter<"impressora"> | number | null
    doacao?: XOR<DoacaoNullableScalarRelationFilter, doacaoWhereInput> | null
    descarte?: XOR<DescarteNullableScalarRelationFilter, descarteWhereInput> | null
    usuario?: XOR<AlunoNullableScalarRelationFilter, alunoWhereInput> | null
    modificador?: XOR<AlunoNullableScalarRelationFilter, alunoWhereInput> | null
  }

  export type impressoraOrderByWithRelationInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrderInput | SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    tipoDeTinta?: SortOrder
    updatedAt?: SortOrder
    alunoid?: SortOrderInput | SortOrder
    modificadorid?: SortOrderInput | SortOrder
    descarteId?: SortOrderInput | SortOrder
    doacaoId?: SortOrderInput | SortOrder
    doacao?: doacaoOrderByWithRelationInput
    descarte?: descarteOrderByWithRelationInput
    usuario?: alunoOrderByWithRelationInput
    modificador?: alunoOrderByWithRelationInput
  }

  export type impressoraWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    codigoDereferencia?: string
    AND?: impressoraWhereInput | impressoraWhereInput[]
    OR?: impressoraWhereInput[]
    NOT?: impressoraWhereInput | impressoraWhereInput[]
    descricao?: StringFilter<"impressora"> | string
    status?: StringFilter<"impressora"> | string
    dataDeChegada?: DateTimeFilter<"impressora"> | Date | string
    dataDeSaida?: DateTimeNullableFilter<"impressora"> | Date | string | null
    marca?: StringFilter<"impressora"> | string
    modelo?: StringFilter<"impressora"> | string
    nome?: StringFilter<"impressora"> | string
    imagem?: StringFilter<"impressora"> | string
    situacao?: StringFilter<"impressora"> | string
    tipoDeTinta?: StringFilter<"impressora"> | string
    updatedAt?: DateTimeFilter<"impressora"> | Date | string
    alunoid?: IntNullableFilter<"impressora"> | number | null
    modificadorid?: IntNullableFilter<"impressora"> | number | null
    descarteId?: IntNullableFilter<"impressora"> | number | null
    doacaoId?: IntNullableFilter<"impressora"> | number | null
    doacao?: XOR<DoacaoNullableScalarRelationFilter, doacaoWhereInput> | null
    descarte?: XOR<DescarteNullableScalarRelationFilter, descarteWhereInput> | null
    usuario?: XOR<AlunoNullableScalarRelationFilter, alunoWhereInput> | null
    modificador?: XOR<AlunoNullableScalarRelationFilter, alunoWhereInput> | null
  }, "id" | "codigoDereferencia">

  export type impressoraOrderByWithAggregationInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrderInput | SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    tipoDeTinta?: SortOrder
    updatedAt?: SortOrder
    alunoid?: SortOrderInput | SortOrder
    modificadorid?: SortOrderInput | SortOrder
    descarteId?: SortOrderInput | SortOrder
    doacaoId?: SortOrderInput | SortOrder
    _count?: impressoraCountOrderByAggregateInput
    _avg?: impressoraAvgOrderByAggregateInput
    _max?: impressoraMaxOrderByAggregateInput
    _min?: impressoraMinOrderByAggregateInput
    _sum?: impressoraSumOrderByAggregateInput
  }

  export type impressoraScalarWhereWithAggregatesInput = {
    AND?: impressoraScalarWhereWithAggregatesInput | impressoraScalarWhereWithAggregatesInput[]
    OR?: impressoraScalarWhereWithAggregatesInput[]
    NOT?: impressoraScalarWhereWithAggregatesInput | impressoraScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"impressora"> | number
    codigoDereferencia?: StringWithAggregatesFilter<"impressora"> | string
    descricao?: StringWithAggregatesFilter<"impressora"> | string
    status?: StringWithAggregatesFilter<"impressora"> | string
    dataDeChegada?: DateTimeWithAggregatesFilter<"impressora"> | Date | string
    dataDeSaida?: DateTimeNullableWithAggregatesFilter<"impressora"> | Date | string | null
    marca?: StringWithAggregatesFilter<"impressora"> | string
    modelo?: StringWithAggregatesFilter<"impressora"> | string
    nome?: StringWithAggregatesFilter<"impressora"> | string
    imagem?: StringWithAggregatesFilter<"impressora"> | string
    situacao?: StringWithAggregatesFilter<"impressora"> | string
    tipoDeTinta?: StringWithAggregatesFilter<"impressora"> | string
    updatedAt?: DateTimeWithAggregatesFilter<"impressora"> | Date | string
    alunoid?: IntNullableWithAggregatesFilter<"impressora"> | number | null
    modificadorid?: IntNullableWithAggregatesFilter<"impressora"> | number | null
    descarteId?: IntNullableWithAggregatesFilter<"impressora"> | number | null
    doacaoId?: IntNullableWithAggregatesFilter<"impressora"> | number | null
  }

  export type placamaeWhereInput = {
    AND?: placamaeWhereInput | placamaeWhereInput[]
    OR?: placamaeWhereInput[]
    NOT?: placamaeWhereInput | placamaeWhereInput[]
    id?: IntFilter<"placamae"> | number
    codigoDereferencia?: StringFilter<"placamae"> | string
    descricao?: StringFilter<"placamae"> | string
    status?: StringFilter<"placamae"> | string
    dataDeChegada?: DateTimeFilter<"placamae"> | Date | string
    dataDeSaida?: DateTimeNullableFilter<"placamae"> | Date | string | null
    marca?: StringFilter<"placamae"> | string
    modelo?: StringFilter<"placamae"> | string
    nome?: StringFilter<"placamae"> | string
    imagem?: StringFilter<"placamae"> | string
    situacao?: StringFilter<"placamae"> | string
    updatedAt?: DateTimeFilter<"placamae"> | Date | string
    alunoid?: IntNullableFilter<"placamae"> | number | null
    modificadorid?: IntNullableFilter<"placamae"> | number | null
    descarteId?: IntNullableFilter<"placamae"> | number | null
    doacaoId?: IntNullableFilter<"placamae"> | number | null
    doacao?: XOR<DoacaoNullableScalarRelationFilter, doacaoWhereInput> | null
    descarte?: XOR<DescarteNullableScalarRelationFilter, descarteWhereInput> | null
    usuario?: XOR<AlunoNullableScalarRelationFilter, alunoWhereInput> | null
    modificador?: XOR<AlunoNullableScalarRelationFilter, alunoWhereInput> | null
  }

  export type placamaeOrderByWithRelationInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrderInput | SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    updatedAt?: SortOrder
    alunoid?: SortOrderInput | SortOrder
    modificadorid?: SortOrderInput | SortOrder
    descarteId?: SortOrderInput | SortOrder
    doacaoId?: SortOrderInput | SortOrder
    doacao?: doacaoOrderByWithRelationInput
    descarte?: descarteOrderByWithRelationInput
    usuario?: alunoOrderByWithRelationInput
    modificador?: alunoOrderByWithRelationInput
  }

  export type placamaeWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    codigoDereferencia?: string
    AND?: placamaeWhereInput | placamaeWhereInput[]
    OR?: placamaeWhereInput[]
    NOT?: placamaeWhereInput | placamaeWhereInput[]
    descricao?: StringFilter<"placamae"> | string
    status?: StringFilter<"placamae"> | string
    dataDeChegada?: DateTimeFilter<"placamae"> | Date | string
    dataDeSaida?: DateTimeNullableFilter<"placamae"> | Date | string | null
    marca?: StringFilter<"placamae"> | string
    modelo?: StringFilter<"placamae"> | string
    nome?: StringFilter<"placamae"> | string
    imagem?: StringFilter<"placamae"> | string
    situacao?: StringFilter<"placamae"> | string
    updatedAt?: DateTimeFilter<"placamae"> | Date | string
    alunoid?: IntNullableFilter<"placamae"> | number | null
    modificadorid?: IntNullableFilter<"placamae"> | number | null
    descarteId?: IntNullableFilter<"placamae"> | number | null
    doacaoId?: IntNullableFilter<"placamae"> | number | null
    doacao?: XOR<DoacaoNullableScalarRelationFilter, doacaoWhereInput> | null
    descarte?: XOR<DescarteNullableScalarRelationFilter, descarteWhereInput> | null
    usuario?: XOR<AlunoNullableScalarRelationFilter, alunoWhereInput> | null
    modificador?: XOR<AlunoNullableScalarRelationFilter, alunoWhereInput> | null
  }, "id" | "codigoDereferencia">

  export type placamaeOrderByWithAggregationInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrderInput | SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    updatedAt?: SortOrder
    alunoid?: SortOrderInput | SortOrder
    modificadorid?: SortOrderInput | SortOrder
    descarteId?: SortOrderInput | SortOrder
    doacaoId?: SortOrderInput | SortOrder
    _count?: placamaeCountOrderByAggregateInput
    _avg?: placamaeAvgOrderByAggregateInput
    _max?: placamaeMaxOrderByAggregateInput
    _min?: placamaeMinOrderByAggregateInput
    _sum?: placamaeSumOrderByAggregateInput
  }

  export type placamaeScalarWhereWithAggregatesInput = {
    AND?: placamaeScalarWhereWithAggregatesInput | placamaeScalarWhereWithAggregatesInput[]
    OR?: placamaeScalarWhereWithAggregatesInput[]
    NOT?: placamaeScalarWhereWithAggregatesInput | placamaeScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"placamae"> | number
    codigoDereferencia?: StringWithAggregatesFilter<"placamae"> | string
    descricao?: StringWithAggregatesFilter<"placamae"> | string
    status?: StringWithAggregatesFilter<"placamae"> | string
    dataDeChegada?: DateTimeWithAggregatesFilter<"placamae"> | Date | string
    dataDeSaida?: DateTimeNullableWithAggregatesFilter<"placamae"> | Date | string | null
    marca?: StringWithAggregatesFilter<"placamae"> | string
    modelo?: StringWithAggregatesFilter<"placamae"> | string
    nome?: StringWithAggregatesFilter<"placamae"> | string
    imagem?: StringWithAggregatesFilter<"placamae"> | string
    situacao?: StringWithAggregatesFilter<"placamae"> | string
    updatedAt?: DateTimeWithAggregatesFilter<"placamae"> | Date | string
    alunoid?: IntNullableWithAggregatesFilter<"placamae"> | number | null
    modificadorid?: IntNullableWithAggregatesFilter<"placamae"> | number | null
    descarteId?: IntNullableWithAggregatesFilter<"placamae"> | number | null
    doacaoId?: IntNullableWithAggregatesFilter<"placamae"> | number | null
  }

  export type notebookWhereInput = {
    AND?: notebookWhereInput | notebookWhereInput[]
    OR?: notebookWhereInput[]
    NOT?: notebookWhereInput | notebookWhereInput[]
    id?: IntFilter<"notebook"> | number
    codigoDereferencia?: StringFilter<"notebook"> | string
    descricao?: StringFilter<"notebook"> | string
    status?: StringFilter<"notebook"> | string
    dataDeChegada?: DateTimeFilter<"notebook"> | Date | string
    dataDeSaida?: DateTimeNullableFilter<"notebook"> | Date | string | null
    marca?: StringFilter<"notebook"> | string
    modelo?: StringFilter<"notebook"> | string
    nome?: StringFilter<"notebook"> | string
    imagem?: StringFilter<"notebook"> | string
    situacao?: StringFilter<"notebook"> | string
    updatedAt?: DateTimeFilter<"notebook"> | Date | string
    alunoid?: IntNullableFilter<"notebook"> | number | null
    modificadorid?: IntNullableFilter<"notebook"> | number | null
    descarteId?: IntNullableFilter<"notebook"> | number | null
    doacaoId?: IntNullableFilter<"notebook"> | number | null
    doacao?: XOR<DoacaoNullableScalarRelationFilter, doacaoWhereInput> | null
    descarte?: XOR<DescarteNullableScalarRelationFilter, descarteWhereInput> | null
    usuario?: XOR<AlunoNullableScalarRelationFilter, alunoWhereInput> | null
    modificador?: XOR<AlunoNullableScalarRelationFilter, alunoWhereInput> | null
  }

  export type notebookOrderByWithRelationInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrderInput | SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    updatedAt?: SortOrder
    alunoid?: SortOrderInput | SortOrder
    modificadorid?: SortOrderInput | SortOrder
    descarteId?: SortOrderInput | SortOrder
    doacaoId?: SortOrderInput | SortOrder
    doacao?: doacaoOrderByWithRelationInput
    descarte?: descarteOrderByWithRelationInput
    usuario?: alunoOrderByWithRelationInput
    modificador?: alunoOrderByWithRelationInput
  }

  export type notebookWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    codigoDereferencia?: string
    AND?: notebookWhereInput | notebookWhereInput[]
    OR?: notebookWhereInput[]
    NOT?: notebookWhereInput | notebookWhereInput[]
    descricao?: StringFilter<"notebook"> | string
    status?: StringFilter<"notebook"> | string
    dataDeChegada?: DateTimeFilter<"notebook"> | Date | string
    dataDeSaida?: DateTimeNullableFilter<"notebook"> | Date | string | null
    marca?: StringFilter<"notebook"> | string
    modelo?: StringFilter<"notebook"> | string
    nome?: StringFilter<"notebook"> | string
    imagem?: StringFilter<"notebook"> | string
    situacao?: StringFilter<"notebook"> | string
    updatedAt?: DateTimeFilter<"notebook"> | Date | string
    alunoid?: IntNullableFilter<"notebook"> | number | null
    modificadorid?: IntNullableFilter<"notebook"> | number | null
    descarteId?: IntNullableFilter<"notebook"> | number | null
    doacaoId?: IntNullableFilter<"notebook"> | number | null
    doacao?: XOR<DoacaoNullableScalarRelationFilter, doacaoWhereInput> | null
    descarte?: XOR<DescarteNullableScalarRelationFilter, descarteWhereInput> | null
    usuario?: XOR<AlunoNullableScalarRelationFilter, alunoWhereInput> | null
    modificador?: XOR<AlunoNullableScalarRelationFilter, alunoWhereInput> | null
  }, "id" | "codigoDereferencia">

  export type notebookOrderByWithAggregationInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrderInput | SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    updatedAt?: SortOrder
    alunoid?: SortOrderInput | SortOrder
    modificadorid?: SortOrderInput | SortOrder
    descarteId?: SortOrderInput | SortOrder
    doacaoId?: SortOrderInput | SortOrder
    _count?: notebookCountOrderByAggregateInput
    _avg?: notebookAvgOrderByAggregateInput
    _max?: notebookMaxOrderByAggregateInput
    _min?: notebookMinOrderByAggregateInput
    _sum?: notebookSumOrderByAggregateInput
  }

  export type notebookScalarWhereWithAggregatesInput = {
    AND?: notebookScalarWhereWithAggregatesInput | notebookScalarWhereWithAggregatesInput[]
    OR?: notebookScalarWhereWithAggregatesInput[]
    NOT?: notebookScalarWhereWithAggregatesInput | notebookScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"notebook"> | number
    codigoDereferencia?: StringWithAggregatesFilter<"notebook"> | string
    descricao?: StringWithAggregatesFilter<"notebook"> | string
    status?: StringWithAggregatesFilter<"notebook"> | string
    dataDeChegada?: DateTimeWithAggregatesFilter<"notebook"> | Date | string
    dataDeSaida?: DateTimeNullableWithAggregatesFilter<"notebook"> | Date | string | null
    marca?: StringWithAggregatesFilter<"notebook"> | string
    modelo?: StringWithAggregatesFilter<"notebook"> | string
    nome?: StringWithAggregatesFilter<"notebook"> | string
    imagem?: StringWithAggregatesFilter<"notebook"> | string
    situacao?: StringWithAggregatesFilter<"notebook"> | string
    updatedAt?: DateTimeWithAggregatesFilter<"notebook"> | Date | string
    alunoid?: IntNullableWithAggregatesFilter<"notebook"> | number | null
    modificadorid?: IntNullableWithAggregatesFilter<"notebook"> | number | null
    descarteId?: IntNullableWithAggregatesFilter<"notebook"> | number | null
    doacaoId?: IntNullableWithAggregatesFilter<"notebook"> | number | null
  }

  export type processadorWhereInput = {
    AND?: processadorWhereInput | processadorWhereInput[]
    OR?: processadorWhereInput[]
    NOT?: processadorWhereInput | processadorWhereInput[]
    id?: IntFilter<"processador"> | number
    codigoDereferencia?: StringFilter<"processador"> | string
    descricao?: StringFilter<"processador"> | string
    status?: StringFilter<"processador"> | string
    dataDeChegada?: DateTimeFilter<"processador"> | Date | string
    dataDeSaida?: DateTimeNullableFilter<"processador"> | Date | string | null
    marca?: StringFilter<"processador"> | string
    modelo?: StringFilter<"processador"> | string
    nome?: StringFilter<"processador"> | string
    imagem?: StringFilter<"processador"> | string
    situacao?: StringFilter<"processador"> | string
    updatedAt?: DateTimeFilter<"processador"> | Date | string
    alunoid?: IntNullableFilter<"processador"> | number | null
    modificadorid?: IntNullableFilter<"processador"> | number | null
    descarteId?: IntNullableFilter<"processador"> | number | null
    doacaoId?: IntNullableFilter<"processador"> | number | null
    doacao?: XOR<DoacaoNullableScalarRelationFilter, doacaoWhereInput> | null
    descarte?: XOR<DescarteNullableScalarRelationFilter, descarteWhereInput> | null
    usuario?: XOR<AlunoNullableScalarRelationFilter, alunoWhereInput> | null
    modificador?: XOR<AlunoNullableScalarRelationFilter, alunoWhereInput> | null
  }

  export type processadorOrderByWithRelationInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrderInput | SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    updatedAt?: SortOrder
    alunoid?: SortOrderInput | SortOrder
    modificadorid?: SortOrderInput | SortOrder
    descarteId?: SortOrderInput | SortOrder
    doacaoId?: SortOrderInput | SortOrder
    doacao?: doacaoOrderByWithRelationInput
    descarte?: descarteOrderByWithRelationInput
    usuario?: alunoOrderByWithRelationInput
    modificador?: alunoOrderByWithRelationInput
  }

  export type processadorWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    codigoDereferencia?: string
    AND?: processadorWhereInput | processadorWhereInput[]
    OR?: processadorWhereInput[]
    NOT?: processadorWhereInput | processadorWhereInput[]
    descricao?: StringFilter<"processador"> | string
    status?: StringFilter<"processador"> | string
    dataDeChegada?: DateTimeFilter<"processador"> | Date | string
    dataDeSaida?: DateTimeNullableFilter<"processador"> | Date | string | null
    marca?: StringFilter<"processador"> | string
    modelo?: StringFilter<"processador"> | string
    nome?: StringFilter<"processador"> | string
    imagem?: StringFilter<"processador"> | string
    situacao?: StringFilter<"processador"> | string
    updatedAt?: DateTimeFilter<"processador"> | Date | string
    alunoid?: IntNullableFilter<"processador"> | number | null
    modificadorid?: IntNullableFilter<"processador"> | number | null
    descarteId?: IntNullableFilter<"processador"> | number | null
    doacaoId?: IntNullableFilter<"processador"> | number | null
    doacao?: XOR<DoacaoNullableScalarRelationFilter, doacaoWhereInput> | null
    descarte?: XOR<DescarteNullableScalarRelationFilter, descarteWhereInput> | null
    usuario?: XOR<AlunoNullableScalarRelationFilter, alunoWhereInput> | null
    modificador?: XOR<AlunoNullableScalarRelationFilter, alunoWhereInput> | null
  }, "id" | "codigoDereferencia">

  export type processadorOrderByWithAggregationInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrderInput | SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    updatedAt?: SortOrder
    alunoid?: SortOrderInput | SortOrder
    modificadorid?: SortOrderInput | SortOrder
    descarteId?: SortOrderInput | SortOrder
    doacaoId?: SortOrderInput | SortOrder
    _count?: processadorCountOrderByAggregateInput
    _avg?: processadorAvgOrderByAggregateInput
    _max?: processadorMaxOrderByAggregateInput
    _min?: processadorMinOrderByAggregateInput
    _sum?: processadorSumOrderByAggregateInput
  }

  export type processadorScalarWhereWithAggregatesInput = {
    AND?: processadorScalarWhereWithAggregatesInput | processadorScalarWhereWithAggregatesInput[]
    OR?: processadorScalarWhereWithAggregatesInput[]
    NOT?: processadorScalarWhereWithAggregatesInput | processadorScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"processador"> | number
    codigoDereferencia?: StringWithAggregatesFilter<"processador"> | string
    descricao?: StringWithAggregatesFilter<"processador"> | string
    status?: StringWithAggregatesFilter<"processador"> | string
    dataDeChegada?: DateTimeWithAggregatesFilter<"processador"> | Date | string
    dataDeSaida?: DateTimeNullableWithAggregatesFilter<"processador"> | Date | string | null
    marca?: StringWithAggregatesFilter<"processador"> | string
    modelo?: StringWithAggregatesFilter<"processador"> | string
    nome?: StringWithAggregatesFilter<"processador"> | string
    imagem?: StringWithAggregatesFilter<"processador"> | string
    situacao?: StringWithAggregatesFilter<"processador"> | string
    updatedAt?: DateTimeWithAggregatesFilter<"processador"> | Date | string
    alunoid?: IntNullableWithAggregatesFilter<"processador"> | number | null
    modificadorid?: IntNullableWithAggregatesFilter<"processador"> | number | null
    descarteId?: IntNullableWithAggregatesFilter<"processador"> | number | null
    doacaoId?: IntNullableWithAggregatesFilter<"processador"> | number | null
  }

  export type descarteWhereInput = {
    AND?: descarteWhereInput | descarteWhereInput[]
    OR?: descarteWhereInput[]
    NOT?: descarteWhereInput | descarteWhereInput[]
    id?: IntFilter<"descarte"> | number
    name?: StringFilter<"descarte"> | string
    descricao?: StringFilter<"descarte"> | string
    data?: DateTimeFilter<"descarte"> | Date | string
    codigoDeReferencias?: StringFilter<"descarte"> | string
    usuarioId?: IntNullableFilter<"descarte"> | number | null
    createdAt?: DateTimeFilter<"descarte"> | Date | string
    usuario?: XOR<AlunoNullableScalarRelationFilter, alunoWhereInput> | null
    teclados?: TecladoListRelationFilter
    hds?: HdListRelationFilter
    fontesDeAlimentacao?: FontedealimentacaoListRelationFilter
    gabinetes?: GabineteListRelationFilter
    monitores?: MonitorListRelationFilter
    mouses?: MouseListRelationFilter
    estabilizadores?: EstabilizadorListRelationFilter
    impressoras?: ImpressoraListRelationFilter
    placasmae?: PlacamaeListRelationFilter
    notebooks?: NotebookListRelationFilter
    processadores?: ProcessadorListRelationFilter
  }

  export type descarteOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    descricao?: SortOrder
    data?: SortOrder
    codigoDeReferencias?: SortOrder
    usuarioId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    usuario?: alunoOrderByWithRelationInput
    teclados?: tecladoOrderByRelationAggregateInput
    hds?: hdOrderByRelationAggregateInput
    fontesDeAlimentacao?: fontedealimentacaoOrderByRelationAggregateInput
    gabinetes?: gabineteOrderByRelationAggregateInput
    monitores?: monitorOrderByRelationAggregateInput
    mouses?: mouseOrderByRelationAggregateInput
    estabilizadores?: estabilizadorOrderByRelationAggregateInput
    impressoras?: impressoraOrderByRelationAggregateInput
    placasmae?: placamaeOrderByRelationAggregateInput
    notebooks?: notebookOrderByRelationAggregateInput
    processadores?: processadorOrderByRelationAggregateInput
  }

  export type descarteWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: descarteWhereInput | descarteWhereInput[]
    OR?: descarteWhereInput[]
    NOT?: descarteWhereInput | descarteWhereInput[]
    name?: StringFilter<"descarte"> | string
    descricao?: StringFilter<"descarte"> | string
    data?: DateTimeFilter<"descarte"> | Date | string
    codigoDeReferencias?: StringFilter<"descarte"> | string
    usuarioId?: IntNullableFilter<"descarte"> | number | null
    createdAt?: DateTimeFilter<"descarte"> | Date | string
    usuario?: XOR<AlunoNullableScalarRelationFilter, alunoWhereInput> | null
    teclados?: TecladoListRelationFilter
    hds?: HdListRelationFilter
    fontesDeAlimentacao?: FontedealimentacaoListRelationFilter
    gabinetes?: GabineteListRelationFilter
    monitores?: MonitorListRelationFilter
    mouses?: MouseListRelationFilter
    estabilizadores?: EstabilizadorListRelationFilter
    impressoras?: ImpressoraListRelationFilter
    placasmae?: PlacamaeListRelationFilter
    notebooks?: NotebookListRelationFilter
    processadores?: ProcessadorListRelationFilter
  }, "id">

  export type descarteOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    descricao?: SortOrder
    data?: SortOrder
    codigoDeReferencias?: SortOrder
    usuarioId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: descarteCountOrderByAggregateInput
    _avg?: descarteAvgOrderByAggregateInput
    _max?: descarteMaxOrderByAggregateInput
    _min?: descarteMinOrderByAggregateInput
    _sum?: descarteSumOrderByAggregateInput
  }

  export type descarteScalarWhereWithAggregatesInput = {
    AND?: descarteScalarWhereWithAggregatesInput | descarteScalarWhereWithAggregatesInput[]
    OR?: descarteScalarWhereWithAggregatesInput[]
    NOT?: descarteScalarWhereWithAggregatesInput | descarteScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"descarte"> | number
    name?: StringWithAggregatesFilter<"descarte"> | string
    descricao?: StringWithAggregatesFilter<"descarte"> | string
    data?: DateTimeWithAggregatesFilter<"descarte"> | Date | string
    codigoDeReferencias?: StringWithAggregatesFilter<"descarte"> | string
    usuarioId?: IntNullableWithAggregatesFilter<"descarte"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"descarte"> | Date | string
  }

  export type doacaoWhereInput = {
    AND?: doacaoWhereInput | doacaoWhereInput[]
    OR?: doacaoWhereInput[]
    NOT?: doacaoWhereInput | doacaoWhereInput[]
    id?: IntFilter<"doacao"> | number
    name?: StringFilter<"doacao"> | string
    codigoDeReferencias?: StringFilter<"doacao"> | string
    descricao?: StringFilter<"doacao"> | string
    justificativa?: StringFilter<"doacao"> | string
    nomeOuEmpresa?: StringFilter<"doacao"> | string
    contato?: StringFilter<"doacao"> | string
    data?: DateTimeFilter<"doacao"> | Date | string
    status?: StringFilter<"doacao"> | string
    donatarioId?: IntNullableFilter<"doacao"> | number | null
    usuariofisicoId?: IntNullableFilter<"doacao"> | number | null
    usuariojuridicoId?: IntNullableFilter<"doacao"> | number | null
    createdAt?: DateTimeFilter<"doacao"> | Date | string
    donatario?: XOR<AlunoNullableScalarRelationFilter, alunoWhereInput> | null
    usuariofisico?: XOR<PessoafisicaNullableScalarRelationFilter, pessoafisicaWhereInput> | null
    usuariojuridico?: XOR<PessoajuridicaNullableScalarRelationFilter, pessoajuridicaWhereInput> | null
    teclados?: TecladoListRelationFilter
    hds?: HdListRelationFilter
    fontesDeAlimentacao?: FontedealimentacaoListRelationFilter
    gabinetes?: GabineteListRelationFilter
    monitores?: MonitorListRelationFilter
    mouses?: MouseListRelationFilter
    estabilizadores?: EstabilizadorListRelationFilter
    impressoras?: ImpressoraListRelationFilter
    placasmae?: PlacamaeListRelationFilter
    notebooks?: NotebookListRelationFilter
    processadores?: ProcessadorListRelationFilter
  }

  export type doacaoOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    codigoDeReferencias?: SortOrder
    descricao?: SortOrder
    justificativa?: SortOrder
    nomeOuEmpresa?: SortOrder
    contato?: SortOrder
    data?: SortOrder
    status?: SortOrder
    donatarioId?: SortOrderInput | SortOrder
    usuariofisicoId?: SortOrderInput | SortOrder
    usuariojuridicoId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    donatario?: alunoOrderByWithRelationInput
    usuariofisico?: pessoafisicaOrderByWithRelationInput
    usuariojuridico?: pessoajuridicaOrderByWithRelationInput
    teclados?: tecladoOrderByRelationAggregateInput
    hds?: hdOrderByRelationAggregateInput
    fontesDeAlimentacao?: fontedealimentacaoOrderByRelationAggregateInput
    gabinetes?: gabineteOrderByRelationAggregateInput
    monitores?: monitorOrderByRelationAggregateInput
    mouses?: mouseOrderByRelationAggregateInput
    estabilizadores?: estabilizadorOrderByRelationAggregateInput
    impressoras?: impressoraOrderByRelationAggregateInput
    placasmae?: placamaeOrderByRelationAggregateInput
    notebooks?: notebookOrderByRelationAggregateInput
    processadores?: processadorOrderByRelationAggregateInput
  }

  export type doacaoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: doacaoWhereInput | doacaoWhereInput[]
    OR?: doacaoWhereInput[]
    NOT?: doacaoWhereInput | doacaoWhereInput[]
    name?: StringFilter<"doacao"> | string
    codigoDeReferencias?: StringFilter<"doacao"> | string
    descricao?: StringFilter<"doacao"> | string
    justificativa?: StringFilter<"doacao"> | string
    nomeOuEmpresa?: StringFilter<"doacao"> | string
    contato?: StringFilter<"doacao"> | string
    data?: DateTimeFilter<"doacao"> | Date | string
    status?: StringFilter<"doacao"> | string
    donatarioId?: IntNullableFilter<"doacao"> | number | null
    usuariofisicoId?: IntNullableFilter<"doacao"> | number | null
    usuariojuridicoId?: IntNullableFilter<"doacao"> | number | null
    createdAt?: DateTimeFilter<"doacao"> | Date | string
    donatario?: XOR<AlunoNullableScalarRelationFilter, alunoWhereInput> | null
    usuariofisico?: XOR<PessoafisicaNullableScalarRelationFilter, pessoafisicaWhereInput> | null
    usuariojuridico?: XOR<PessoajuridicaNullableScalarRelationFilter, pessoajuridicaWhereInput> | null
    teclados?: TecladoListRelationFilter
    hds?: HdListRelationFilter
    fontesDeAlimentacao?: FontedealimentacaoListRelationFilter
    gabinetes?: GabineteListRelationFilter
    monitores?: MonitorListRelationFilter
    mouses?: MouseListRelationFilter
    estabilizadores?: EstabilizadorListRelationFilter
    impressoras?: ImpressoraListRelationFilter
    placasmae?: PlacamaeListRelationFilter
    notebooks?: NotebookListRelationFilter
    processadores?: ProcessadorListRelationFilter
  }, "id">

  export type doacaoOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    codigoDeReferencias?: SortOrder
    descricao?: SortOrder
    justificativa?: SortOrder
    nomeOuEmpresa?: SortOrder
    contato?: SortOrder
    data?: SortOrder
    status?: SortOrder
    donatarioId?: SortOrderInput | SortOrder
    usuariofisicoId?: SortOrderInput | SortOrder
    usuariojuridicoId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: doacaoCountOrderByAggregateInput
    _avg?: doacaoAvgOrderByAggregateInput
    _max?: doacaoMaxOrderByAggregateInput
    _min?: doacaoMinOrderByAggregateInput
    _sum?: doacaoSumOrderByAggregateInput
  }

  export type doacaoScalarWhereWithAggregatesInput = {
    AND?: doacaoScalarWhereWithAggregatesInput | doacaoScalarWhereWithAggregatesInput[]
    OR?: doacaoScalarWhereWithAggregatesInput[]
    NOT?: doacaoScalarWhereWithAggregatesInput | doacaoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"doacao"> | number
    name?: StringWithAggregatesFilter<"doacao"> | string
    codigoDeReferencias?: StringWithAggregatesFilter<"doacao"> | string
    descricao?: StringWithAggregatesFilter<"doacao"> | string
    justificativa?: StringWithAggregatesFilter<"doacao"> | string
    nomeOuEmpresa?: StringWithAggregatesFilter<"doacao"> | string
    contato?: StringWithAggregatesFilter<"doacao"> | string
    data?: DateTimeWithAggregatesFilter<"doacao"> | Date | string
    status?: StringWithAggregatesFilter<"doacao"> | string
    donatarioId?: IntNullableWithAggregatesFilter<"doacao"> | number | null
    usuariofisicoId?: IntNullableWithAggregatesFilter<"doacao"> | number | null
    usuariojuridicoId?: IntNullableWithAggregatesFilter<"doacao"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"doacao"> | Date | string
  }

  export type doacaoUsuarioWhereInput = {
    AND?: doacaoUsuarioWhereInput | doacaoUsuarioWhereInput[]
    OR?: doacaoUsuarioWhereInput[]
    NOT?: doacaoUsuarioWhereInput | doacaoUsuarioWhereInput[]
    id?: IntFilter<"doacaoUsuario"> | number
    name?: StringFilter<"doacaoUsuario"> | string
    eletronicos?: StringFilter<"doacaoUsuario"> | string
    descricao?: StringFilter<"doacaoUsuario"> | string
    informacoesAdicionais?: StringFilter<"doacaoUsuario"> | string
    horarioDeEntrega?: StringFilter<"doacaoUsuario"> | string
    contato?: StringFilter<"doacaoUsuario"> | string
    data?: DateTimeFilter<"doacaoUsuario"> | Date | string
    status?: StringFilter<"doacaoUsuario"> | string
    donatariofisicoId?: IntNullableFilter<"doacaoUsuario"> | number | null
    donatariojuridicoId?: IntNullableFilter<"doacaoUsuario"> | number | null
    usuarioid?: IntNullableFilter<"doacaoUsuario"> | number | null
    createdAt?: DateTimeFilter<"doacaoUsuario"> | Date | string
    donatariofisico?: XOR<PessoafisicaNullableScalarRelationFilter, pessoafisicaWhereInput> | null
    donatariojuridico?: XOR<PessoajuridicaNullableScalarRelationFilter, pessoajuridicaWhereInput> | null
    usuario?: XOR<AlunoNullableScalarRelationFilter, alunoWhereInput> | null
  }

  export type doacaoUsuarioOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    eletronicos?: SortOrder
    descricao?: SortOrder
    informacoesAdicionais?: SortOrder
    horarioDeEntrega?: SortOrder
    contato?: SortOrder
    data?: SortOrder
    status?: SortOrder
    donatariofisicoId?: SortOrderInput | SortOrder
    donatariojuridicoId?: SortOrderInput | SortOrder
    usuarioid?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    donatariofisico?: pessoafisicaOrderByWithRelationInput
    donatariojuridico?: pessoajuridicaOrderByWithRelationInput
    usuario?: alunoOrderByWithRelationInput
  }

  export type doacaoUsuarioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: doacaoUsuarioWhereInput | doacaoUsuarioWhereInput[]
    OR?: doacaoUsuarioWhereInput[]
    NOT?: doacaoUsuarioWhereInput | doacaoUsuarioWhereInput[]
    name?: StringFilter<"doacaoUsuario"> | string
    eletronicos?: StringFilter<"doacaoUsuario"> | string
    descricao?: StringFilter<"doacaoUsuario"> | string
    informacoesAdicionais?: StringFilter<"doacaoUsuario"> | string
    horarioDeEntrega?: StringFilter<"doacaoUsuario"> | string
    contato?: StringFilter<"doacaoUsuario"> | string
    data?: DateTimeFilter<"doacaoUsuario"> | Date | string
    status?: StringFilter<"doacaoUsuario"> | string
    donatariofisicoId?: IntNullableFilter<"doacaoUsuario"> | number | null
    donatariojuridicoId?: IntNullableFilter<"doacaoUsuario"> | number | null
    usuarioid?: IntNullableFilter<"doacaoUsuario"> | number | null
    createdAt?: DateTimeFilter<"doacaoUsuario"> | Date | string
    donatariofisico?: XOR<PessoafisicaNullableScalarRelationFilter, pessoafisicaWhereInput> | null
    donatariojuridico?: XOR<PessoajuridicaNullableScalarRelationFilter, pessoajuridicaWhereInput> | null
    usuario?: XOR<AlunoNullableScalarRelationFilter, alunoWhereInput> | null
  }, "id">

  export type doacaoUsuarioOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    eletronicos?: SortOrder
    descricao?: SortOrder
    informacoesAdicionais?: SortOrder
    horarioDeEntrega?: SortOrder
    contato?: SortOrder
    data?: SortOrder
    status?: SortOrder
    donatariofisicoId?: SortOrderInput | SortOrder
    donatariojuridicoId?: SortOrderInput | SortOrder
    usuarioid?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: doacaoUsuarioCountOrderByAggregateInput
    _avg?: doacaoUsuarioAvgOrderByAggregateInput
    _max?: doacaoUsuarioMaxOrderByAggregateInput
    _min?: doacaoUsuarioMinOrderByAggregateInput
    _sum?: doacaoUsuarioSumOrderByAggregateInput
  }

  export type doacaoUsuarioScalarWhereWithAggregatesInput = {
    AND?: doacaoUsuarioScalarWhereWithAggregatesInput | doacaoUsuarioScalarWhereWithAggregatesInput[]
    OR?: doacaoUsuarioScalarWhereWithAggregatesInput[]
    NOT?: doacaoUsuarioScalarWhereWithAggregatesInput | doacaoUsuarioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"doacaoUsuario"> | number
    name?: StringWithAggregatesFilter<"doacaoUsuario"> | string
    eletronicos?: StringWithAggregatesFilter<"doacaoUsuario"> | string
    descricao?: StringWithAggregatesFilter<"doacaoUsuario"> | string
    informacoesAdicionais?: StringWithAggregatesFilter<"doacaoUsuario"> | string
    horarioDeEntrega?: StringWithAggregatesFilter<"doacaoUsuario"> | string
    contato?: StringWithAggregatesFilter<"doacaoUsuario"> | string
    data?: DateTimeWithAggregatesFilter<"doacaoUsuario"> | Date | string
    status?: StringWithAggregatesFilter<"doacaoUsuario"> | string
    donatariofisicoId?: IntNullableWithAggregatesFilter<"doacaoUsuario"> | number | null
    donatariojuridicoId?: IntNullableWithAggregatesFilter<"doacaoUsuario"> | number | null
    usuarioid?: IntNullableWithAggregatesFilter<"doacaoUsuario"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"doacaoUsuario"> | Date | string
  }

  export type solicitacaoWhereInput = {
    AND?: solicitacaoWhereInput | solicitacaoWhereInput[]
    OR?: solicitacaoWhereInput[]
    NOT?: solicitacaoWhereInput | solicitacaoWhereInput[]
    id?: IntFilter<"solicitacao"> | number
    name?: StringFilter<"solicitacao"> | string
    eletronicos?: StringFilter<"solicitacao"> | string
    descricao?: StringFilter<"solicitacao"> | string
    informacoes?: StringFilter<"solicitacao"> | string
    horarioparapegar?: StringFilter<"solicitacao"> | string
    contato?: StringFilter<"solicitacao"> | string
    data?: DateTimeFilter<"solicitacao"> | Date | string
    dataparapegar?: DateTimeFilter<"solicitacao"> | Date | string
    status?: StringFilter<"solicitacao"> | string
    solicitacaofisicoId?: IntNullableFilter<"solicitacao"> | number | null
    solicitacaojuridicoId?: IntNullableFilter<"solicitacao"> | number | null
    usuarioid?: IntNullableFilter<"solicitacao"> | number | null
    createdAt?: DateTimeFilter<"solicitacao"> | Date | string
    usuariosolicitacaofisico?: XOR<PessoafisicaNullableScalarRelationFilter, pessoafisicaWhereInput> | null
    donatariojuridico?: XOR<PessoajuridicaNullableScalarRelationFilter, pessoajuridicaWhereInput> | null
    usuario?: XOR<AlunoNullableScalarRelationFilter, alunoWhereInput> | null
  }

  export type solicitacaoOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    eletronicos?: SortOrder
    descricao?: SortOrder
    informacoes?: SortOrder
    horarioparapegar?: SortOrder
    contato?: SortOrder
    data?: SortOrder
    dataparapegar?: SortOrder
    status?: SortOrder
    solicitacaofisicoId?: SortOrderInput | SortOrder
    solicitacaojuridicoId?: SortOrderInput | SortOrder
    usuarioid?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    usuariosolicitacaofisico?: pessoafisicaOrderByWithRelationInput
    donatariojuridico?: pessoajuridicaOrderByWithRelationInput
    usuario?: alunoOrderByWithRelationInput
  }

  export type solicitacaoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: solicitacaoWhereInput | solicitacaoWhereInput[]
    OR?: solicitacaoWhereInput[]
    NOT?: solicitacaoWhereInput | solicitacaoWhereInput[]
    name?: StringFilter<"solicitacao"> | string
    eletronicos?: StringFilter<"solicitacao"> | string
    descricao?: StringFilter<"solicitacao"> | string
    informacoes?: StringFilter<"solicitacao"> | string
    horarioparapegar?: StringFilter<"solicitacao"> | string
    contato?: StringFilter<"solicitacao"> | string
    data?: DateTimeFilter<"solicitacao"> | Date | string
    dataparapegar?: DateTimeFilter<"solicitacao"> | Date | string
    status?: StringFilter<"solicitacao"> | string
    solicitacaofisicoId?: IntNullableFilter<"solicitacao"> | number | null
    solicitacaojuridicoId?: IntNullableFilter<"solicitacao"> | number | null
    usuarioid?: IntNullableFilter<"solicitacao"> | number | null
    createdAt?: DateTimeFilter<"solicitacao"> | Date | string
    usuariosolicitacaofisico?: XOR<PessoafisicaNullableScalarRelationFilter, pessoafisicaWhereInput> | null
    donatariojuridico?: XOR<PessoajuridicaNullableScalarRelationFilter, pessoajuridicaWhereInput> | null
    usuario?: XOR<AlunoNullableScalarRelationFilter, alunoWhereInput> | null
  }, "id">

  export type solicitacaoOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    eletronicos?: SortOrder
    descricao?: SortOrder
    informacoes?: SortOrder
    horarioparapegar?: SortOrder
    contato?: SortOrder
    data?: SortOrder
    dataparapegar?: SortOrder
    status?: SortOrder
    solicitacaofisicoId?: SortOrderInput | SortOrder
    solicitacaojuridicoId?: SortOrderInput | SortOrder
    usuarioid?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: solicitacaoCountOrderByAggregateInput
    _avg?: solicitacaoAvgOrderByAggregateInput
    _max?: solicitacaoMaxOrderByAggregateInput
    _min?: solicitacaoMinOrderByAggregateInput
    _sum?: solicitacaoSumOrderByAggregateInput
  }

  export type solicitacaoScalarWhereWithAggregatesInput = {
    AND?: solicitacaoScalarWhereWithAggregatesInput | solicitacaoScalarWhereWithAggregatesInput[]
    OR?: solicitacaoScalarWhereWithAggregatesInput[]
    NOT?: solicitacaoScalarWhereWithAggregatesInput | solicitacaoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"solicitacao"> | number
    name?: StringWithAggregatesFilter<"solicitacao"> | string
    eletronicos?: StringWithAggregatesFilter<"solicitacao"> | string
    descricao?: StringWithAggregatesFilter<"solicitacao"> | string
    informacoes?: StringWithAggregatesFilter<"solicitacao"> | string
    horarioparapegar?: StringWithAggregatesFilter<"solicitacao"> | string
    contato?: StringWithAggregatesFilter<"solicitacao"> | string
    data?: DateTimeWithAggregatesFilter<"solicitacao"> | Date | string
    dataparapegar?: DateTimeWithAggregatesFilter<"solicitacao"> | Date | string
    status?: StringWithAggregatesFilter<"solicitacao"> | string
    solicitacaofisicoId?: IntNullableWithAggregatesFilter<"solicitacao"> | number | null
    solicitacaojuridicoId?: IntNullableWithAggregatesFilter<"solicitacao"> | number | null
    usuarioid?: IntNullableWithAggregatesFilter<"solicitacao"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"solicitacao"> | Date | string
  }

  export type alunoCreateInput = {
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    descarte?: descarteCreateNestedManyWithoutUsuarioInput
    doacao?: doacaoCreateNestedManyWithoutDonatarioInput
    doacaoUsuario?: doacaoUsuarioCreateNestedManyWithoutUsuarioInput
    solicitacao?: solicitacaoCreateNestedManyWithoutUsuarioInput
    modificadorTeclado?: tecladoCreateNestedManyWithoutModificadorInput
    usuarioTeclado?: tecladoCreateNestedManyWithoutUsuarioInput
    hd?: hdCreateNestedManyWithoutAlunoInput
    modificadorHd?: hdCreateNestedManyWithoutModificadorInput
    fonteDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutUsuarioInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutModificadorInput
    gabinete?: gabineteCreateNestedManyWithoutUsuarioInput
    modificadorGabinete?: gabineteCreateNestedManyWithoutModificadorInput
    monitor?: monitorCreateNestedManyWithoutUsuarioInput
    modificadorMonitor?: monitorCreateNestedManyWithoutModificadorInput
    usuarioMouse?: mouseCreateNestedManyWithoutUsuarioInput
    modificadorMouse?: mouseCreateNestedManyWithoutModificadorInput
    usuarioEstabilizador?: estabilizadorCreateNestedManyWithoutUsuarioInput
    modificadorEstabilizador?: estabilizadorCreateNestedManyWithoutModificadorInput
    usuarioImpressora?: impressoraCreateNestedManyWithoutUsuarioInput
    modificadorImpressora?: impressoraCreateNestedManyWithoutModificadorInput
    usuarioPlacamae?: placamaeCreateNestedManyWithoutUsuarioInput
    modificadorPlacamae?: placamaeCreateNestedManyWithoutModificadorInput
    usuarioNotebook?: notebookCreateNestedManyWithoutUsuarioInput
    modificadorNotebook?: notebookCreateNestedManyWithoutModificadorInput
    usuarioProcessador?: processadorCreateNestedManyWithoutUsuarioInput
    modificadorProcessador?: processadorCreateNestedManyWithoutModificadorInput
  }

  export type alunoUncheckedCreateInput = {
    id?: number
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    descarte?: descarteUncheckedCreateNestedManyWithoutUsuarioInput
    doacao?: doacaoUncheckedCreateNestedManyWithoutDonatarioInput
    doacaoUsuario?: doacaoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    solicitacao?: solicitacaoUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorTeclado?: tecladoUncheckedCreateNestedManyWithoutModificadorInput
    usuarioTeclado?: tecladoUncheckedCreateNestedManyWithoutUsuarioInput
    hd?: hdUncheckedCreateNestedManyWithoutAlunoInput
    modificadorHd?: hdUncheckedCreateNestedManyWithoutModificadorInput
    fonteDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutModificadorInput
    gabinete?: gabineteUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorGabinete?: gabineteUncheckedCreateNestedManyWithoutModificadorInput
    monitor?: monitorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorMonitor?: monitorUncheckedCreateNestedManyWithoutModificadorInput
    usuarioMouse?: mouseUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorMouse?: mouseUncheckedCreateNestedManyWithoutModificadorInput
    usuarioEstabilizador?: estabilizadorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorEstabilizador?: estabilizadorUncheckedCreateNestedManyWithoutModificadorInput
    usuarioImpressora?: impressoraUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorImpressora?: impressoraUncheckedCreateNestedManyWithoutModificadorInput
    usuarioPlacamae?: placamaeUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorPlacamae?: placamaeUncheckedCreateNestedManyWithoutModificadorInput
    usuarioNotebook?: notebookUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorNotebook?: notebookUncheckedCreateNestedManyWithoutModificadorInput
    usuarioProcessador?: processadorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorProcessador?: processadorUncheckedCreateNestedManyWithoutModificadorInput
  }

  export type alunoUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUpdateManyWithoutUsuarioNestedInput
    doacao?: doacaoUpdateManyWithoutDonatarioNestedInput
    doacaoUsuario?: doacaoUsuarioUpdateManyWithoutUsuarioNestedInput
    solicitacao?: solicitacaoUpdateManyWithoutUsuarioNestedInput
    modificadorTeclado?: tecladoUpdateManyWithoutModificadorNestedInput
    usuarioTeclado?: tecladoUpdateManyWithoutUsuarioNestedInput
    hd?: hdUpdateManyWithoutAlunoNestedInput
    modificadorHd?: hdUpdateManyWithoutModificadorNestedInput
    fonteDeAlimentacao?: fontedealimentacaoUpdateManyWithoutUsuarioNestedInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUpdateManyWithoutModificadorNestedInput
    gabinete?: gabineteUpdateManyWithoutUsuarioNestedInput
    modificadorGabinete?: gabineteUpdateManyWithoutModificadorNestedInput
    monitor?: monitorUpdateManyWithoutUsuarioNestedInput
    modificadorMonitor?: monitorUpdateManyWithoutModificadorNestedInput
    usuarioMouse?: mouseUpdateManyWithoutUsuarioNestedInput
    modificadorMouse?: mouseUpdateManyWithoutModificadorNestedInput
    usuarioEstabilizador?: estabilizadorUpdateManyWithoutUsuarioNestedInput
    modificadorEstabilizador?: estabilizadorUpdateManyWithoutModificadorNestedInput
    usuarioImpressora?: impressoraUpdateManyWithoutUsuarioNestedInput
    modificadorImpressora?: impressoraUpdateManyWithoutModificadorNestedInput
    usuarioPlacamae?: placamaeUpdateManyWithoutUsuarioNestedInput
    modificadorPlacamae?: placamaeUpdateManyWithoutModificadorNestedInput
    usuarioNotebook?: notebookUpdateManyWithoutUsuarioNestedInput
    modificadorNotebook?: notebookUpdateManyWithoutModificadorNestedInput
    usuarioProcessador?: processadorUpdateManyWithoutUsuarioNestedInput
    modificadorProcessador?: processadorUpdateManyWithoutModificadorNestedInput
  }

  export type alunoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUncheckedUpdateManyWithoutUsuarioNestedInput
    doacao?: doacaoUncheckedUpdateManyWithoutDonatarioNestedInput
    doacaoUsuario?: doacaoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitacao?: solicitacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorTeclado?: tecladoUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioTeclado?: tecladoUncheckedUpdateManyWithoutUsuarioNestedInput
    hd?: hdUncheckedUpdateManyWithoutAlunoNestedInput
    modificadorHd?: hdUncheckedUpdateManyWithoutModificadorNestedInput
    fonteDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutModificadorNestedInput
    gabinete?: gabineteUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorGabinete?: gabineteUncheckedUpdateManyWithoutModificadorNestedInput
    monitor?: monitorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorMonitor?: monitorUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioMouse?: mouseUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorMouse?: mouseUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioEstabilizador?: estabilizadorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorEstabilizador?: estabilizadorUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioImpressora?: impressoraUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorImpressora?: impressoraUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioPlacamae?: placamaeUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorPlacamae?: placamaeUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioNotebook?: notebookUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorNotebook?: notebookUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioProcessador?: processadorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorProcessador?: processadorUncheckedUpdateManyWithoutModificadorNestedInput
  }

  export type alunoCreateManyInput = {
    id?: number
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type alunoUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type alunoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type pessoafisicaCreateInput = {
    name: string
    email: string
    password: string
    cpf: string
    comprovanteDeBaixaRenda: string
    telefone: string
    createdAt?: Date | string
    updatedAt?: Date | string
    doacao?: doacaoCreateNestedManyWithoutUsuariofisicoInput
    doacaoUsuario?: doacaoUsuarioCreateNestedManyWithoutDonatariofisicoInput
    solicitacao?: solicitacaoCreateNestedManyWithoutUsuariosolicitacaofisicoInput
  }

  export type pessoafisicaUncheckedCreateInput = {
    id?: number
    name: string
    email: string
    password: string
    cpf: string
    comprovanteDeBaixaRenda: string
    telefone: string
    createdAt?: Date | string
    updatedAt?: Date | string
    doacao?: doacaoUncheckedCreateNestedManyWithoutUsuariofisicoInput
    doacaoUsuario?: doacaoUsuarioUncheckedCreateNestedManyWithoutDonatariofisicoInput
    solicitacao?: solicitacaoUncheckedCreateNestedManyWithoutUsuariosolicitacaofisicoInput
  }

  export type pessoafisicaUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    comprovanteDeBaixaRenda?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacao?: doacaoUpdateManyWithoutUsuariofisicoNestedInput
    doacaoUsuario?: doacaoUsuarioUpdateManyWithoutDonatariofisicoNestedInput
    solicitacao?: solicitacaoUpdateManyWithoutUsuariosolicitacaofisicoNestedInput
  }

  export type pessoafisicaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    comprovanteDeBaixaRenda?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacao?: doacaoUncheckedUpdateManyWithoutUsuariofisicoNestedInput
    doacaoUsuario?: doacaoUsuarioUncheckedUpdateManyWithoutDonatariofisicoNestedInput
    solicitacao?: solicitacaoUncheckedUpdateManyWithoutUsuariosolicitacaofisicoNestedInput
  }

  export type pessoafisicaCreateManyInput = {
    id?: number
    name: string
    email: string
    password: string
    cpf: string
    comprovanteDeBaixaRenda: string
    telefone: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type pessoafisicaUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    comprovanteDeBaixaRenda?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type pessoafisicaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    comprovanteDeBaixaRenda?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type pessoajuridicaCreateInput = {
    name: string
    email: string
    password: string
    cnpj: string
    comprovanteDeProjeto: string
    endereco: string
    telefone: string
    createdAt?: Date | string
    updatedAt?: Date | string
    doacao?: doacaoCreateNestedManyWithoutUsuariojuridicoInput
    doacaoUsuario?: doacaoUsuarioCreateNestedManyWithoutDonatariojuridicoInput
    solicitacao?: solicitacaoCreateNestedManyWithoutDonatariojuridicoInput
  }

  export type pessoajuridicaUncheckedCreateInput = {
    id?: number
    name: string
    email: string
    password: string
    cnpj: string
    comprovanteDeProjeto: string
    endereco: string
    telefone: string
    createdAt?: Date | string
    updatedAt?: Date | string
    doacao?: doacaoUncheckedCreateNestedManyWithoutUsuariojuridicoInput
    doacaoUsuario?: doacaoUsuarioUncheckedCreateNestedManyWithoutDonatariojuridicoInput
    solicitacao?: solicitacaoUncheckedCreateNestedManyWithoutDonatariojuridicoInput
  }

  export type pessoajuridicaUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    comprovanteDeProjeto?: StringFieldUpdateOperationsInput | string
    endereco?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacao?: doacaoUpdateManyWithoutUsuariojuridicoNestedInput
    doacaoUsuario?: doacaoUsuarioUpdateManyWithoutDonatariojuridicoNestedInput
    solicitacao?: solicitacaoUpdateManyWithoutDonatariojuridicoNestedInput
  }

  export type pessoajuridicaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    comprovanteDeProjeto?: StringFieldUpdateOperationsInput | string
    endereco?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacao?: doacaoUncheckedUpdateManyWithoutUsuariojuridicoNestedInput
    doacaoUsuario?: doacaoUsuarioUncheckedUpdateManyWithoutDonatariojuridicoNestedInput
    solicitacao?: solicitacaoUncheckedUpdateManyWithoutDonatariojuridicoNestedInput
  }

  export type pessoajuridicaCreateManyInput = {
    id?: number
    name: string
    email: string
    password: string
    cnpj: string
    comprovanteDeProjeto: string
    endereco: string
    telefone: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type pessoajuridicaUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    comprovanteDeProjeto?: StringFieldUpdateOperationsInput | string
    endereco?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type pessoajuridicaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    comprovanteDeProjeto?: StringFieldUpdateOperationsInput | string
    endereco?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type inscritoCreateInput = {
    name: string
    email: string
    dias: string
    matricula: string
    curso: string
    periodo: string
    bolsista: boolean
  }

  export type inscritoUncheckedCreateInput = {
    id?: number
    name: string
    email: string
    dias: string
    matricula: string
    curso: string
    periodo: string
    bolsista: boolean
  }

  export type inscritoUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    periodo?: StringFieldUpdateOperationsInput | string
    bolsista?: BoolFieldUpdateOperationsInput | boolean
  }

  export type inscritoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    periodo?: StringFieldUpdateOperationsInput | string
    bolsista?: BoolFieldUpdateOperationsInput | boolean
  }

  export type inscritoCreateManyInput = {
    id?: number
    name: string
    email: string
    dias: string
    matricula: string
    curso: string
    periodo: string
    bolsista: boolean
  }

  export type inscritoUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    periodo?: StringFieldUpdateOperationsInput | string
    bolsista?: BoolFieldUpdateOperationsInput | boolean
  }

  export type inscritoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    periodo?: StringFieldUpdateOperationsInput | string
    bolsista?: BoolFieldUpdateOperationsInput | boolean
  }

  export type tecladoCreateInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    createdAt?: Date | string
    updatedAt?: Date | string
    nome: string
    imagem: string
    situacao: string
    tipoDeConexao: string
    descarte?: descarteCreateNestedOneWithoutTecladosInput
    doacao?: doacaoCreateNestedOneWithoutTecladosInput
    usuario?: alunoCreateNestedOneWithoutUsuarioTecladoInput
    modificador?: alunoCreateNestedOneWithoutModificadorTecladoInput
  }

  export type tecladoUncheckedCreateInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    createdAt?: Date | string
    updatedAt?: Date | string
    nome: string
    imagem: string
    situacao: string
    tipoDeConexao: string
    usuarioId?: number | null
    modificadorid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type tecladoUpdateInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeConexao?: StringFieldUpdateOperationsInput | string
    descarte?: descarteUpdateOneWithoutTecladosNestedInput
    doacao?: doacaoUpdateOneWithoutTecladosNestedInput
    usuario?: alunoUpdateOneWithoutUsuarioTecladoNestedInput
    modificador?: alunoUpdateOneWithoutModificadorTecladoNestedInput
  }

  export type tecladoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeConexao?: StringFieldUpdateOperationsInput | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tecladoCreateManyInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    createdAt?: Date | string
    updatedAt?: Date | string
    nome: string
    imagem: string
    situacao: string
    tipoDeConexao: string
    usuarioId?: number | null
    modificadorid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type tecladoUpdateManyMutationInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeConexao?: StringFieldUpdateOperationsInput | string
  }

  export type tecladoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeConexao?: StringFieldUpdateOperationsInput | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type hdCreateInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    createdAt?: Date | string
    updatedAt?: Date | string
    nome: string
    imagem: string
    situacao: string
    tipoDeCapacidade: string
    capacidade: number
    doacao?: doacaoCreateNestedOneWithoutHdsInput
    descarte?: descarteCreateNestedOneWithoutHdsInput
    aluno?: alunoCreateNestedOneWithoutHdInput
    modificador?: alunoCreateNestedOneWithoutModificadorHdInput
  }

  export type hdUncheckedCreateInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    createdAt?: Date | string
    updatedAt?: Date | string
    nome: string
    imagem: string
    situacao: string
    tipoDeCapacidade: string
    capacidade: number
    usuarioId?: number | null
    modificadorid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type hdUpdateInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeCapacidade?: StringFieldUpdateOperationsInput | string
    capacidade?: IntFieldUpdateOperationsInput | number
    doacao?: doacaoUpdateOneWithoutHdsNestedInput
    descarte?: descarteUpdateOneWithoutHdsNestedInput
    aluno?: alunoUpdateOneWithoutHdNestedInput
    modificador?: alunoUpdateOneWithoutModificadorHdNestedInput
  }

  export type hdUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeCapacidade?: StringFieldUpdateOperationsInput | string
    capacidade?: IntFieldUpdateOperationsInput | number
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type hdCreateManyInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    createdAt?: Date | string
    updatedAt?: Date | string
    nome: string
    imagem: string
    situacao: string
    tipoDeCapacidade: string
    capacidade: number
    usuarioId?: number | null
    modificadorid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type hdUpdateManyMutationInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeCapacidade?: StringFieldUpdateOperationsInput | string
    capacidade?: IntFieldUpdateOperationsInput | number
  }

  export type hdUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeCapacidade?: StringFieldUpdateOperationsInput | string
    capacidade?: IntFieldUpdateOperationsInput | number
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type fontedealimentacaoCreateInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    potencia: number
    updatedAt?: Date | string
    doacao?: doacaoCreateNestedOneWithoutFontesDeAlimentacaoInput
    descarte?: descarteCreateNestedOneWithoutFontesDeAlimentacaoInput
    usuario?: alunoCreateNestedOneWithoutFonteDeAlimentacaoInput
    modificador?: alunoCreateNestedOneWithoutModificadorFonteDeAlimentacaoInput
  }

  export type fontedealimentacaoUncheckedCreateInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    potencia: number
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type fontedealimentacaoUpdateInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    potencia?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacao?: doacaoUpdateOneWithoutFontesDeAlimentacaoNestedInput
    descarte?: descarteUpdateOneWithoutFontesDeAlimentacaoNestedInput
    usuario?: alunoUpdateOneWithoutFonteDeAlimentacaoNestedInput
    modificador?: alunoUpdateOneWithoutModificadorFonteDeAlimentacaoNestedInput
  }

  export type fontedealimentacaoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    potencia?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type fontedealimentacaoCreateManyInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    potencia: number
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type fontedealimentacaoUpdateManyMutationInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    potencia?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type fontedealimentacaoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    potencia?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type gabineteCreateInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    doacao?: doacaoCreateNestedOneWithoutGabinetesInput
    descarte?: descarteCreateNestedOneWithoutGabinetesInput
    usuario?: alunoCreateNestedOneWithoutGabineteInput
    modificador?: alunoCreateNestedOneWithoutModificadorGabineteInput
  }

  export type gabineteUncheckedCreateInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type gabineteUpdateInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacao?: doacaoUpdateOneWithoutGabinetesNestedInput
    descarte?: descarteUpdateOneWithoutGabinetesNestedInput
    usuario?: alunoUpdateOneWithoutGabineteNestedInput
    modificador?: alunoUpdateOneWithoutModificadorGabineteNestedInput
  }

  export type gabineteUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type gabineteCreateManyInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type gabineteUpdateManyMutationInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type gabineteUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type monitorCreateInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    polegadas: number
    updatedAt?: Date | string
    doacao?: doacaoCreateNestedOneWithoutMonitoresInput
    descarte?: descarteCreateNestedOneWithoutMonitoresInput
    usuario?: alunoCreateNestedOneWithoutMonitorInput
    modificador?: alunoCreateNestedOneWithoutModificadorMonitorInput
  }

  export type monitorUncheckedCreateInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    polegadas: number
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type monitorUpdateInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    polegadas?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacao?: doacaoUpdateOneWithoutMonitoresNestedInput
    descarte?: descarteUpdateOneWithoutMonitoresNestedInput
    usuario?: alunoUpdateOneWithoutMonitorNestedInput
    modificador?: alunoUpdateOneWithoutModificadorMonitorNestedInput
  }

  export type monitorUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    polegadas?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type monitorCreateManyInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    polegadas: number
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type monitorUpdateManyMutationInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    polegadas?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type monitorUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    polegadas?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type mouseCreateInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    tipoDeConexao: string
    updatedAt?: Date | string
    doacao?: doacaoCreateNestedOneWithoutMousesInput
    descarte?: descarteCreateNestedOneWithoutMousesInput
    usuario?: alunoCreateNestedOneWithoutUsuarioMouseInput
    modificador?: alunoCreateNestedOneWithoutModificadorMouseInput
  }

  export type mouseUncheckedCreateInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    tipoDeConexao: string
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type mouseUpdateInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeConexao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacao?: doacaoUpdateOneWithoutMousesNestedInput
    descarte?: descarteUpdateOneWithoutMousesNestedInput
    usuario?: alunoUpdateOneWithoutUsuarioMouseNestedInput
    modificador?: alunoUpdateOneWithoutModificadorMouseNestedInput
  }

  export type mouseUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeConexao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type mouseCreateManyInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    tipoDeConexao: string
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type mouseUpdateManyMutationInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeConexao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type mouseUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeConexao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type estabilizadorCreateInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    potencia: number
    updatedAt?: Date | string
    doacao?: doacaoCreateNestedOneWithoutEstabilizadoresInput
    descarte?: descarteCreateNestedOneWithoutEstabilizadoresInput
    usuario?: alunoCreateNestedOneWithoutUsuarioEstabilizadorInput
    modificador?: alunoCreateNestedOneWithoutModificadorEstabilizadorInput
  }

  export type estabilizadorUncheckedCreateInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    potencia: number
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type estabilizadorUpdateInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    potencia?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacao?: doacaoUpdateOneWithoutEstabilizadoresNestedInput
    descarte?: descarteUpdateOneWithoutEstabilizadoresNestedInput
    usuario?: alunoUpdateOneWithoutUsuarioEstabilizadorNestedInput
    modificador?: alunoUpdateOneWithoutModificadorEstabilizadorNestedInput
  }

  export type estabilizadorUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    potencia?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type estabilizadorCreateManyInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    potencia: number
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type estabilizadorUpdateManyMutationInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    potencia?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type estabilizadorUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    potencia?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type impressoraCreateInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    tipoDeTinta: string
    updatedAt?: Date | string
    doacao?: doacaoCreateNestedOneWithoutImpressorasInput
    descarte?: descarteCreateNestedOneWithoutImpressorasInput
    usuario?: alunoCreateNestedOneWithoutUsuarioImpressoraInput
    modificador?: alunoCreateNestedOneWithoutModificadorImpressoraInput
  }

  export type impressoraUncheckedCreateInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    tipoDeTinta: string
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type impressoraUpdateInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeTinta?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacao?: doacaoUpdateOneWithoutImpressorasNestedInput
    descarte?: descarteUpdateOneWithoutImpressorasNestedInput
    usuario?: alunoUpdateOneWithoutUsuarioImpressoraNestedInput
    modificador?: alunoUpdateOneWithoutModificadorImpressoraNestedInput
  }

  export type impressoraUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeTinta?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type impressoraCreateManyInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    tipoDeTinta: string
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type impressoraUpdateManyMutationInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeTinta?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type impressoraUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeTinta?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type placamaeCreateInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    doacao?: doacaoCreateNestedOneWithoutPlacasmaeInput
    descarte?: descarteCreateNestedOneWithoutPlacasmaeInput
    usuario?: alunoCreateNestedOneWithoutUsuarioPlacamaeInput
    modificador?: alunoCreateNestedOneWithoutModificadorPlacamaeInput
  }

  export type placamaeUncheckedCreateInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type placamaeUpdateInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacao?: doacaoUpdateOneWithoutPlacasmaeNestedInput
    descarte?: descarteUpdateOneWithoutPlacasmaeNestedInput
    usuario?: alunoUpdateOneWithoutUsuarioPlacamaeNestedInput
    modificador?: alunoUpdateOneWithoutModificadorPlacamaeNestedInput
  }

  export type placamaeUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type placamaeCreateManyInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type placamaeUpdateManyMutationInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type placamaeUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type notebookCreateInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    doacao?: doacaoCreateNestedOneWithoutNotebooksInput
    descarte?: descarteCreateNestedOneWithoutNotebooksInput
    usuario?: alunoCreateNestedOneWithoutUsuarioNotebookInput
    modificador?: alunoCreateNestedOneWithoutModificadorNotebookInput
  }

  export type notebookUncheckedCreateInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type notebookUpdateInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacao?: doacaoUpdateOneWithoutNotebooksNestedInput
    descarte?: descarteUpdateOneWithoutNotebooksNestedInput
    usuario?: alunoUpdateOneWithoutUsuarioNotebookNestedInput
    modificador?: alunoUpdateOneWithoutModificadorNotebookNestedInput
  }

  export type notebookUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type notebookCreateManyInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type notebookUpdateManyMutationInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type notebookUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type processadorCreateInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    doacao?: doacaoCreateNestedOneWithoutProcessadoresInput
    descarte?: descarteCreateNestedOneWithoutProcessadoresInput
    usuario?: alunoCreateNestedOneWithoutUsuarioProcessadorInput
    modificador?: alunoCreateNestedOneWithoutModificadorProcessadorInput
  }

  export type processadorUncheckedCreateInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type processadorUpdateInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacao?: doacaoUpdateOneWithoutProcessadoresNestedInput
    descarte?: descarteUpdateOneWithoutProcessadoresNestedInput
    usuario?: alunoUpdateOneWithoutUsuarioProcessadorNestedInput
    modificador?: alunoUpdateOneWithoutModificadorProcessadorNestedInput
  }

  export type processadorUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type processadorCreateManyInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type processadorUpdateManyMutationInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type processadorUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type descarteCreateInput = {
    name: string
    descricao: string
    data: Date | string
    codigoDeReferencias: string
    createdAt?: Date | string
    usuario?: alunoCreateNestedOneWithoutDescarteInput
    teclados?: tecladoCreateNestedManyWithoutDescarteInput
    hds?: hdCreateNestedManyWithoutDescarteInput
    fontesDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutDescarteInput
    gabinetes?: gabineteCreateNestedManyWithoutDescarteInput
    monitores?: monitorCreateNestedManyWithoutDescarteInput
    mouses?: mouseCreateNestedManyWithoutDescarteInput
    estabilizadores?: estabilizadorCreateNestedManyWithoutDescarteInput
    impressoras?: impressoraCreateNestedManyWithoutDescarteInput
    placasmae?: placamaeCreateNestedManyWithoutDescarteInput
    notebooks?: notebookCreateNestedManyWithoutDescarteInput
    processadores?: processadorCreateNestedManyWithoutDescarteInput
  }

  export type descarteUncheckedCreateInput = {
    id?: number
    name: string
    descricao: string
    data: Date | string
    codigoDeReferencias: string
    usuarioId?: number | null
    createdAt?: Date | string
    teclados?: tecladoUncheckedCreateNestedManyWithoutDescarteInput
    hds?: hdUncheckedCreateNestedManyWithoutDescarteInput
    fontesDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutDescarteInput
    gabinetes?: gabineteUncheckedCreateNestedManyWithoutDescarteInput
    monitores?: monitorUncheckedCreateNestedManyWithoutDescarteInput
    mouses?: mouseUncheckedCreateNestedManyWithoutDescarteInput
    estabilizadores?: estabilizadorUncheckedCreateNestedManyWithoutDescarteInput
    impressoras?: impressoraUncheckedCreateNestedManyWithoutDescarteInput
    placasmae?: placamaeUncheckedCreateNestedManyWithoutDescarteInput
    notebooks?: notebookUncheckedCreateNestedManyWithoutDescarteInput
    processadores?: processadorUncheckedCreateNestedManyWithoutDescarteInput
  }

  export type descarteUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: alunoUpdateOneWithoutDescarteNestedInput
    teclados?: tecladoUpdateManyWithoutDescarteNestedInput
    hds?: hdUpdateManyWithoutDescarteNestedInput
    fontesDeAlimentacao?: fontedealimentacaoUpdateManyWithoutDescarteNestedInput
    gabinetes?: gabineteUpdateManyWithoutDescarteNestedInput
    monitores?: monitorUpdateManyWithoutDescarteNestedInput
    mouses?: mouseUpdateManyWithoutDescarteNestedInput
    estabilizadores?: estabilizadorUpdateManyWithoutDescarteNestedInput
    impressoras?: impressoraUpdateManyWithoutDescarteNestedInput
    placasmae?: placamaeUpdateManyWithoutDescarteNestedInput
    notebooks?: notebookUpdateManyWithoutDescarteNestedInput
    processadores?: processadorUpdateManyWithoutDescarteNestedInput
  }

  export type descarteUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    teclados?: tecladoUncheckedUpdateManyWithoutDescarteNestedInput
    hds?: hdUncheckedUpdateManyWithoutDescarteNestedInput
    fontesDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutDescarteNestedInput
    gabinetes?: gabineteUncheckedUpdateManyWithoutDescarteNestedInput
    monitores?: monitorUncheckedUpdateManyWithoutDescarteNestedInput
    mouses?: mouseUncheckedUpdateManyWithoutDescarteNestedInput
    estabilizadores?: estabilizadorUncheckedUpdateManyWithoutDescarteNestedInput
    impressoras?: impressoraUncheckedUpdateManyWithoutDescarteNestedInput
    placasmae?: placamaeUncheckedUpdateManyWithoutDescarteNestedInput
    notebooks?: notebookUncheckedUpdateManyWithoutDescarteNestedInput
    processadores?: processadorUncheckedUpdateManyWithoutDescarteNestedInput
  }

  export type descarteCreateManyInput = {
    id?: number
    name: string
    descricao: string
    data: Date | string
    codigoDeReferencias: string
    usuarioId?: number | null
    createdAt?: Date | string
  }

  export type descarteUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type descarteUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type doacaoCreateInput = {
    name: string
    codigoDeReferencias: string
    descricao: string
    justificativa: string
    nomeOuEmpresa: string
    contato: string
    data: Date | string
    status: string
    createdAt?: Date | string
    donatario?: alunoCreateNestedOneWithoutDoacaoInput
    usuariofisico?: pessoafisicaCreateNestedOneWithoutDoacaoInput
    usuariojuridico?: pessoajuridicaCreateNestedOneWithoutDoacaoInput
    teclados?: tecladoCreateNestedManyWithoutDoacaoInput
    hds?: hdCreateNestedManyWithoutDoacaoInput
    fontesDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutDoacaoInput
    gabinetes?: gabineteCreateNestedManyWithoutDoacaoInput
    monitores?: monitorCreateNestedManyWithoutDoacaoInput
    mouses?: mouseCreateNestedManyWithoutDoacaoInput
    estabilizadores?: estabilizadorCreateNestedManyWithoutDoacaoInput
    impressoras?: impressoraCreateNestedManyWithoutDoacaoInput
    placasmae?: placamaeCreateNestedManyWithoutDoacaoInput
    notebooks?: notebookCreateNestedManyWithoutDoacaoInput
    processadores?: processadorCreateNestedManyWithoutDoacaoInput
  }

  export type doacaoUncheckedCreateInput = {
    id?: number
    name: string
    codigoDeReferencias: string
    descricao: string
    justificativa: string
    nomeOuEmpresa: string
    contato: string
    data: Date | string
    status: string
    donatarioId?: number | null
    usuariofisicoId?: number | null
    usuariojuridicoId?: number | null
    createdAt?: Date | string
    teclados?: tecladoUncheckedCreateNestedManyWithoutDoacaoInput
    hds?: hdUncheckedCreateNestedManyWithoutDoacaoInput
    fontesDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutDoacaoInput
    gabinetes?: gabineteUncheckedCreateNestedManyWithoutDoacaoInput
    monitores?: monitorUncheckedCreateNestedManyWithoutDoacaoInput
    mouses?: mouseUncheckedCreateNestedManyWithoutDoacaoInput
    estabilizadores?: estabilizadorUncheckedCreateNestedManyWithoutDoacaoInput
    impressoras?: impressoraUncheckedCreateNestedManyWithoutDoacaoInput
    placasmae?: placamaeUncheckedCreateNestedManyWithoutDoacaoInput
    notebooks?: notebookUncheckedCreateNestedManyWithoutDoacaoInput
    processadores?: processadorUncheckedCreateNestedManyWithoutDoacaoInput
  }

  export type doacaoUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    justificativa?: StringFieldUpdateOperationsInput | string
    nomeOuEmpresa?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    donatario?: alunoUpdateOneWithoutDoacaoNestedInput
    usuariofisico?: pessoafisicaUpdateOneWithoutDoacaoNestedInput
    usuariojuridico?: pessoajuridicaUpdateOneWithoutDoacaoNestedInput
    teclados?: tecladoUpdateManyWithoutDoacaoNestedInput
    hds?: hdUpdateManyWithoutDoacaoNestedInput
    fontesDeAlimentacao?: fontedealimentacaoUpdateManyWithoutDoacaoNestedInput
    gabinetes?: gabineteUpdateManyWithoutDoacaoNestedInput
    monitores?: monitorUpdateManyWithoutDoacaoNestedInput
    mouses?: mouseUpdateManyWithoutDoacaoNestedInput
    estabilizadores?: estabilizadorUpdateManyWithoutDoacaoNestedInput
    impressoras?: impressoraUpdateManyWithoutDoacaoNestedInput
    placasmae?: placamaeUpdateManyWithoutDoacaoNestedInput
    notebooks?: notebookUpdateManyWithoutDoacaoNestedInput
    processadores?: processadorUpdateManyWithoutDoacaoNestedInput
  }

  export type doacaoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    justificativa?: StringFieldUpdateOperationsInput | string
    nomeOuEmpresa?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    donatarioId?: NullableIntFieldUpdateOperationsInput | number | null
    usuariofisicoId?: NullableIntFieldUpdateOperationsInput | number | null
    usuariojuridicoId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    teclados?: tecladoUncheckedUpdateManyWithoutDoacaoNestedInput
    hds?: hdUncheckedUpdateManyWithoutDoacaoNestedInput
    fontesDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutDoacaoNestedInput
    gabinetes?: gabineteUncheckedUpdateManyWithoutDoacaoNestedInput
    monitores?: monitorUncheckedUpdateManyWithoutDoacaoNestedInput
    mouses?: mouseUncheckedUpdateManyWithoutDoacaoNestedInput
    estabilizadores?: estabilizadorUncheckedUpdateManyWithoutDoacaoNestedInput
    impressoras?: impressoraUncheckedUpdateManyWithoutDoacaoNestedInput
    placasmae?: placamaeUncheckedUpdateManyWithoutDoacaoNestedInput
    notebooks?: notebookUncheckedUpdateManyWithoutDoacaoNestedInput
    processadores?: processadorUncheckedUpdateManyWithoutDoacaoNestedInput
  }

  export type doacaoCreateManyInput = {
    id?: number
    name: string
    codigoDeReferencias: string
    descricao: string
    justificativa: string
    nomeOuEmpresa: string
    contato: string
    data: Date | string
    status: string
    donatarioId?: number | null
    usuariofisicoId?: number | null
    usuariojuridicoId?: number | null
    createdAt?: Date | string
  }

  export type doacaoUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    justificativa?: StringFieldUpdateOperationsInput | string
    nomeOuEmpresa?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type doacaoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    justificativa?: StringFieldUpdateOperationsInput | string
    nomeOuEmpresa?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    donatarioId?: NullableIntFieldUpdateOperationsInput | number | null
    usuariofisicoId?: NullableIntFieldUpdateOperationsInput | number | null
    usuariojuridicoId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type doacaoUsuarioCreateInput = {
    name: string
    eletronicos: string
    descricao: string
    informacoesAdicionais: string
    horarioDeEntrega: string
    contato: string
    data: Date | string
    status: string
    createdAt?: Date | string
    donatariofisico?: pessoafisicaCreateNestedOneWithoutDoacaoUsuarioInput
    donatariojuridico?: pessoajuridicaCreateNestedOneWithoutDoacaoUsuarioInput
    usuario?: alunoCreateNestedOneWithoutDoacaoUsuarioInput
  }

  export type doacaoUsuarioUncheckedCreateInput = {
    id?: number
    name: string
    eletronicos: string
    descricao: string
    informacoesAdicionais: string
    horarioDeEntrega: string
    contato: string
    data: Date | string
    status: string
    donatariofisicoId?: number | null
    donatariojuridicoId?: number | null
    usuarioid?: number | null
    createdAt?: Date | string
  }

  export type doacaoUsuarioUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    eletronicos?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    informacoesAdicionais?: StringFieldUpdateOperationsInput | string
    horarioDeEntrega?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    donatariofisico?: pessoafisicaUpdateOneWithoutDoacaoUsuarioNestedInput
    donatariojuridico?: pessoajuridicaUpdateOneWithoutDoacaoUsuarioNestedInput
    usuario?: alunoUpdateOneWithoutDoacaoUsuarioNestedInput
  }

  export type doacaoUsuarioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    eletronicos?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    informacoesAdicionais?: StringFieldUpdateOperationsInput | string
    horarioDeEntrega?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    donatariofisicoId?: NullableIntFieldUpdateOperationsInput | number | null
    donatariojuridicoId?: NullableIntFieldUpdateOperationsInput | number | null
    usuarioid?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type doacaoUsuarioCreateManyInput = {
    id?: number
    name: string
    eletronicos: string
    descricao: string
    informacoesAdicionais: string
    horarioDeEntrega: string
    contato: string
    data: Date | string
    status: string
    donatariofisicoId?: number | null
    donatariojuridicoId?: number | null
    usuarioid?: number | null
    createdAt?: Date | string
  }

  export type doacaoUsuarioUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    eletronicos?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    informacoesAdicionais?: StringFieldUpdateOperationsInput | string
    horarioDeEntrega?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type doacaoUsuarioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    eletronicos?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    informacoesAdicionais?: StringFieldUpdateOperationsInput | string
    horarioDeEntrega?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    donatariofisicoId?: NullableIntFieldUpdateOperationsInput | number | null
    donatariojuridicoId?: NullableIntFieldUpdateOperationsInput | number | null
    usuarioid?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type solicitacaoCreateInput = {
    name: string
    eletronicos: string
    descricao: string
    informacoes: string
    horarioparapegar: string
    contato: string
    data: Date | string
    dataparapegar: Date | string
    status: string
    createdAt?: Date | string
    usuariosolicitacaofisico?: pessoafisicaCreateNestedOneWithoutSolicitacaoInput
    donatariojuridico?: pessoajuridicaCreateNestedOneWithoutSolicitacaoInput
    usuario?: alunoCreateNestedOneWithoutSolicitacaoInput
  }

  export type solicitacaoUncheckedCreateInput = {
    id?: number
    name: string
    eletronicos: string
    descricao: string
    informacoes: string
    horarioparapegar: string
    contato: string
    data: Date | string
    dataparapegar: Date | string
    status: string
    solicitacaofisicoId?: number | null
    solicitacaojuridicoId?: number | null
    usuarioid?: number | null
    createdAt?: Date | string
  }

  export type solicitacaoUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    eletronicos?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    informacoes?: StringFieldUpdateOperationsInput | string
    horarioparapegar?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    dataparapegar?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuariosolicitacaofisico?: pessoafisicaUpdateOneWithoutSolicitacaoNestedInput
    donatariojuridico?: pessoajuridicaUpdateOneWithoutSolicitacaoNestedInput
    usuario?: alunoUpdateOneWithoutSolicitacaoNestedInput
  }

  export type solicitacaoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    eletronicos?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    informacoes?: StringFieldUpdateOperationsInput | string
    horarioparapegar?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    dataparapegar?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    solicitacaofisicoId?: NullableIntFieldUpdateOperationsInput | number | null
    solicitacaojuridicoId?: NullableIntFieldUpdateOperationsInput | number | null
    usuarioid?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type solicitacaoCreateManyInput = {
    id?: number
    name: string
    eletronicos: string
    descricao: string
    informacoes: string
    horarioparapegar: string
    contato: string
    data: Date | string
    dataparapegar: Date | string
    status: string
    solicitacaofisicoId?: number | null
    solicitacaojuridicoId?: number | null
    usuarioid?: number | null
    createdAt?: Date | string
  }

  export type solicitacaoUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    eletronicos?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    informacoes?: StringFieldUpdateOperationsInput | string
    horarioparapegar?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    dataparapegar?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type solicitacaoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    eletronicos?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    informacoes?: StringFieldUpdateOperationsInput | string
    horarioparapegar?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    dataparapegar?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    solicitacaofisicoId?: NullableIntFieldUpdateOperationsInput | number | null
    solicitacaojuridicoId?: NullableIntFieldUpdateOperationsInput | number | null
    usuarioid?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type DescarteListRelationFilter = {
    every?: descarteWhereInput
    some?: descarteWhereInput
    none?: descarteWhereInput
  }

  export type DoacaoListRelationFilter = {
    every?: doacaoWhereInput
    some?: doacaoWhereInput
    none?: doacaoWhereInput
  }

  export type DoacaoUsuarioListRelationFilter = {
    every?: doacaoUsuarioWhereInput
    some?: doacaoUsuarioWhereInput
    none?: doacaoUsuarioWhereInput
  }

  export type SolicitacaoListRelationFilter = {
    every?: solicitacaoWhereInput
    some?: solicitacaoWhereInput
    none?: solicitacaoWhereInput
  }

  export type TecladoListRelationFilter = {
    every?: tecladoWhereInput
    some?: tecladoWhereInput
    none?: tecladoWhereInput
  }

  export type HdListRelationFilter = {
    every?: hdWhereInput
    some?: hdWhereInput
    none?: hdWhereInput
  }

  export type FontedealimentacaoListRelationFilter = {
    every?: fontedealimentacaoWhereInput
    some?: fontedealimentacaoWhereInput
    none?: fontedealimentacaoWhereInput
  }

  export type GabineteListRelationFilter = {
    every?: gabineteWhereInput
    some?: gabineteWhereInput
    none?: gabineteWhereInput
  }

  export type MonitorListRelationFilter = {
    every?: monitorWhereInput
    some?: monitorWhereInput
    none?: monitorWhereInput
  }

  export type MouseListRelationFilter = {
    every?: mouseWhereInput
    some?: mouseWhereInput
    none?: mouseWhereInput
  }

  export type EstabilizadorListRelationFilter = {
    every?: estabilizadorWhereInput
    some?: estabilizadorWhereInput
    none?: estabilizadorWhereInput
  }

  export type ImpressoraListRelationFilter = {
    every?: impressoraWhereInput
    some?: impressoraWhereInput
    none?: impressoraWhereInput
  }

  export type PlacamaeListRelationFilter = {
    every?: placamaeWhereInput
    some?: placamaeWhereInput
    none?: placamaeWhereInput
  }

  export type NotebookListRelationFilter = {
    every?: notebookWhereInput
    some?: notebookWhereInput
    none?: notebookWhereInput
  }

  export type ProcessadorListRelationFilter = {
    every?: processadorWhereInput
    some?: processadorWhereInput
    none?: processadorWhereInput
  }

  export type descarteOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type doacaoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type doacaoUsuarioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type solicitacaoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tecladoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type hdOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type fontedealimentacaoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type gabineteOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type monitorOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type mouseOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type estabilizadorOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type impressoraOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type placamaeOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type notebookOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type processadorOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type alunoCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    matricula?: SortOrder
    curso?: SortOrder
    dias?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type alunoAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type alunoMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    matricula?: SortOrder
    curso?: SortOrder
    dias?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type alunoMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    matricula?: SortOrder
    curso?: SortOrder
    dias?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type alunoSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type pessoafisicaCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    cpf?: SortOrder
    comprovanteDeBaixaRenda?: SortOrder
    telefone?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type pessoafisicaAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type pessoafisicaMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    cpf?: SortOrder
    comprovanteDeBaixaRenda?: SortOrder
    telefone?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type pessoafisicaMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    cpf?: SortOrder
    comprovanteDeBaixaRenda?: SortOrder
    telefone?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type pessoafisicaSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type pessoajuridicaCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    cnpj?: SortOrder
    comprovanteDeProjeto?: SortOrder
    endereco?: SortOrder
    telefone?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type pessoajuridicaAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type pessoajuridicaMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    cnpj?: SortOrder
    comprovanteDeProjeto?: SortOrder
    endereco?: SortOrder
    telefone?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type pessoajuridicaMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    cnpj?: SortOrder
    comprovanteDeProjeto?: SortOrder
    endereco?: SortOrder
    telefone?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type pessoajuridicaSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type inscritoCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    dias?: SortOrder
    matricula?: SortOrder
    curso?: SortOrder
    periodo?: SortOrder
    bolsista?: SortOrder
  }

  export type inscritoAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type inscritoMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    dias?: SortOrder
    matricula?: SortOrder
    curso?: SortOrder
    periodo?: SortOrder
    bolsista?: SortOrder
  }

  export type inscritoMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    dias?: SortOrder
    matricula?: SortOrder
    curso?: SortOrder
    periodo?: SortOrder
    bolsista?: SortOrder
  }

  export type inscritoSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type DescarteNullableScalarRelationFilter = {
    is?: descarteWhereInput | null
    isNot?: descarteWhereInput | null
  }

  export type DoacaoNullableScalarRelationFilter = {
    is?: doacaoWhereInput | null
    isNot?: doacaoWhereInput | null
  }

  export type AlunoNullableScalarRelationFilter = {
    is?: alunoWhereInput | null
    isNot?: alunoWhereInput | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type tecladoCountOrderByAggregateInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    tipoDeConexao?: SortOrder
    usuarioId?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type tecladoAvgOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type tecladoMaxOrderByAggregateInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    tipoDeConexao?: SortOrder
    usuarioId?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type tecladoMinOrderByAggregateInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    tipoDeConexao?: SortOrder
    usuarioId?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type tecladoSumOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type hdCountOrderByAggregateInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    tipoDeCapacidade?: SortOrder
    capacidade?: SortOrder
    usuarioId?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type hdAvgOrderByAggregateInput = {
    id?: SortOrder
    capacidade?: SortOrder
    usuarioId?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type hdMaxOrderByAggregateInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    tipoDeCapacidade?: SortOrder
    capacidade?: SortOrder
    usuarioId?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type hdMinOrderByAggregateInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    tipoDeCapacidade?: SortOrder
    capacidade?: SortOrder
    usuarioId?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type hdSumOrderByAggregateInput = {
    id?: SortOrder
    capacidade?: SortOrder
    usuarioId?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type fontedealimentacaoCountOrderByAggregateInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    potencia?: SortOrder
    updatedAt?: SortOrder
    alunoid?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type fontedealimentacaoAvgOrderByAggregateInput = {
    id?: SortOrder
    potencia?: SortOrder
    alunoid?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type fontedealimentacaoMaxOrderByAggregateInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    potencia?: SortOrder
    updatedAt?: SortOrder
    alunoid?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type fontedealimentacaoMinOrderByAggregateInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    potencia?: SortOrder
    updatedAt?: SortOrder
    alunoid?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type fontedealimentacaoSumOrderByAggregateInput = {
    id?: SortOrder
    potencia?: SortOrder
    alunoid?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type gabineteCountOrderByAggregateInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    updatedAt?: SortOrder
    alunoid?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type gabineteAvgOrderByAggregateInput = {
    id?: SortOrder
    alunoid?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type gabineteMaxOrderByAggregateInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    updatedAt?: SortOrder
    alunoid?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type gabineteMinOrderByAggregateInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    updatedAt?: SortOrder
    alunoid?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type gabineteSumOrderByAggregateInput = {
    id?: SortOrder
    alunoid?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type monitorCountOrderByAggregateInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    polegadas?: SortOrder
    updatedAt?: SortOrder
    alunoid?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type monitorAvgOrderByAggregateInput = {
    id?: SortOrder
    polegadas?: SortOrder
    alunoid?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type monitorMaxOrderByAggregateInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    polegadas?: SortOrder
    updatedAt?: SortOrder
    alunoid?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type monitorMinOrderByAggregateInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    polegadas?: SortOrder
    updatedAt?: SortOrder
    alunoid?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type monitorSumOrderByAggregateInput = {
    id?: SortOrder
    polegadas?: SortOrder
    alunoid?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type mouseCountOrderByAggregateInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    tipoDeConexao?: SortOrder
    updatedAt?: SortOrder
    alunoid?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type mouseAvgOrderByAggregateInput = {
    id?: SortOrder
    alunoid?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type mouseMaxOrderByAggregateInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    tipoDeConexao?: SortOrder
    updatedAt?: SortOrder
    alunoid?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type mouseMinOrderByAggregateInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    tipoDeConexao?: SortOrder
    updatedAt?: SortOrder
    alunoid?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type mouseSumOrderByAggregateInput = {
    id?: SortOrder
    alunoid?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type estabilizadorCountOrderByAggregateInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    potencia?: SortOrder
    updatedAt?: SortOrder
    alunoid?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type estabilizadorAvgOrderByAggregateInput = {
    id?: SortOrder
    potencia?: SortOrder
    alunoid?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type estabilizadorMaxOrderByAggregateInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    potencia?: SortOrder
    updatedAt?: SortOrder
    alunoid?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type estabilizadorMinOrderByAggregateInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    potencia?: SortOrder
    updatedAt?: SortOrder
    alunoid?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type estabilizadorSumOrderByAggregateInput = {
    id?: SortOrder
    potencia?: SortOrder
    alunoid?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type impressoraCountOrderByAggregateInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    tipoDeTinta?: SortOrder
    updatedAt?: SortOrder
    alunoid?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type impressoraAvgOrderByAggregateInput = {
    id?: SortOrder
    alunoid?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type impressoraMaxOrderByAggregateInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    tipoDeTinta?: SortOrder
    updatedAt?: SortOrder
    alunoid?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type impressoraMinOrderByAggregateInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    tipoDeTinta?: SortOrder
    updatedAt?: SortOrder
    alunoid?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type impressoraSumOrderByAggregateInput = {
    id?: SortOrder
    alunoid?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type placamaeCountOrderByAggregateInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    updatedAt?: SortOrder
    alunoid?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type placamaeAvgOrderByAggregateInput = {
    id?: SortOrder
    alunoid?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type placamaeMaxOrderByAggregateInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    updatedAt?: SortOrder
    alunoid?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type placamaeMinOrderByAggregateInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    updatedAt?: SortOrder
    alunoid?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type placamaeSumOrderByAggregateInput = {
    id?: SortOrder
    alunoid?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type notebookCountOrderByAggregateInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    updatedAt?: SortOrder
    alunoid?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type notebookAvgOrderByAggregateInput = {
    id?: SortOrder
    alunoid?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type notebookMaxOrderByAggregateInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    updatedAt?: SortOrder
    alunoid?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type notebookMinOrderByAggregateInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    updatedAt?: SortOrder
    alunoid?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type notebookSumOrderByAggregateInput = {
    id?: SortOrder
    alunoid?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type processadorCountOrderByAggregateInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    updatedAt?: SortOrder
    alunoid?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type processadorAvgOrderByAggregateInput = {
    id?: SortOrder
    alunoid?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type processadorMaxOrderByAggregateInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    updatedAt?: SortOrder
    alunoid?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type processadorMinOrderByAggregateInput = {
    id?: SortOrder
    codigoDereferencia?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
    dataDeChegada?: SortOrder
    dataDeSaida?: SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    nome?: SortOrder
    imagem?: SortOrder
    situacao?: SortOrder
    updatedAt?: SortOrder
    alunoid?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type processadorSumOrderByAggregateInput = {
    id?: SortOrder
    alunoid?: SortOrder
    modificadorid?: SortOrder
    descarteId?: SortOrder
    doacaoId?: SortOrder
  }

  export type descarteCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    descricao?: SortOrder
    data?: SortOrder
    codigoDeReferencias?: SortOrder
    usuarioId?: SortOrder
    createdAt?: SortOrder
  }

  export type descarteAvgOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
  }

  export type descarteMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    descricao?: SortOrder
    data?: SortOrder
    codigoDeReferencias?: SortOrder
    usuarioId?: SortOrder
    createdAt?: SortOrder
  }

  export type descarteMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    descricao?: SortOrder
    data?: SortOrder
    codigoDeReferencias?: SortOrder
    usuarioId?: SortOrder
    createdAt?: SortOrder
  }

  export type descarteSumOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
  }

  export type PessoafisicaNullableScalarRelationFilter = {
    is?: pessoafisicaWhereInput | null
    isNot?: pessoafisicaWhereInput | null
  }

  export type PessoajuridicaNullableScalarRelationFilter = {
    is?: pessoajuridicaWhereInput | null
    isNot?: pessoajuridicaWhereInput | null
  }

  export type doacaoCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    codigoDeReferencias?: SortOrder
    descricao?: SortOrder
    justificativa?: SortOrder
    nomeOuEmpresa?: SortOrder
    contato?: SortOrder
    data?: SortOrder
    status?: SortOrder
    donatarioId?: SortOrder
    usuariofisicoId?: SortOrder
    usuariojuridicoId?: SortOrder
    createdAt?: SortOrder
  }

  export type doacaoAvgOrderByAggregateInput = {
    id?: SortOrder
    donatarioId?: SortOrder
    usuariofisicoId?: SortOrder
    usuariojuridicoId?: SortOrder
  }

  export type doacaoMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    codigoDeReferencias?: SortOrder
    descricao?: SortOrder
    justificativa?: SortOrder
    nomeOuEmpresa?: SortOrder
    contato?: SortOrder
    data?: SortOrder
    status?: SortOrder
    donatarioId?: SortOrder
    usuariofisicoId?: SortOrder
    usuariojuridicoId?: SortOrder
    createdAt?: SortOrder
  }

  export type doacaoMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    codigoDeReferencias?: SortOrder
    descricao?: SortOrder
    justificativa?: SortOrder
    nomeOuEmpresa?: SortOrder
    contato?: SortOrder
    data?: SortOrder
    status?: SortOrder
    donatarioId?: SortOrder
    usuariofisicoId?: SortOrder
    usuariojuridicoId?: SortOrder
    createdAt?: SortOrder
  }

  export type doacaoSumOrderByAggregateInput = {
    id?: SortOrder
    donatarioId?: SortOrder
    usuariofisicoId?: SortOrder
    usuariojuridicoId?: SortOrder
  }

  export type doacaoUsuarioCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    eletronicos?: SortOrder
    descricao?: SortOrder
    informacoesAdicionais?: SortOrder
    horarioDeEntrega?: SortOrder
    contato?: SortOrder
    data?: SortOrder
    status?: SortOrder
    donatariofisicoId?: SortOrder
    donatariojuridicoId?: SortOrder
    usuarioid?: SortOrder
    createdAt?: SortOrder
  }

  export type doacaoUsuarioAvgOrderByAggregateInput = {
    id?: SortOrder
    donatariofisicoId?: SortOrder
    donatariojuridicoId?: SortOrder
    usuarioid?: SortOrder
  }

  export type doacaoUsuarioMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    eletronicos?: SortOrder
    descricao?: SortOrder
    informacoesAdicionais?: SortOrder
    horarioDeEntrega?: SortOrder
    contato?: SortOrder
    data?: SortOrder
    status?: SortOrder
    donatariofisicoId?: SortOrder
    donatariojuridicoId?: SortOrder
    usuarioid?: SortOrder
    createdAt?: SortOrder
  }

  export type doacaoUsuarioMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    eletronicos?: SortOrder
    descricao?: SortOrder
    informacoesAdicionais?: SortOrder
    horarioDeEntrega?: SortOrder
    contato?: SortOrder
    data?: SortOrder
    status?: SortOrder
    donatariofisicoId?: SortOrder
    donatariojuridicoId?: SortOrder
    usuarioid?: SortOrder
    createdAt?: SortOrder
  }

  export type doacaoUsuarioSumOrderByAggregateInput = {
    id?: SortOrder
    donatariofisicoId?: SortOrder
    donatariojuridicoId?: SortOrder
    usuarioid?: SortOrder
  }

  export type solicitacaoCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    eletronicos?: SortOrder
    descricao?: SortOrder
    informacoes?: SortOrder
    horarioparapegar?: SortOrder
    contato?: SortOrder
    data?: SortOrder
    dataparapegar?: SortOrder
    status?: SortOrder
    solicitacaofisicoId?: SortOrder
    solicitacaojuridicoId?: SortOrder
    usuarioid?: SortOrder
    createdAt?: SortOrder
  }

  export type solicitacaoAvgOrderByAggregateInput = {
    id?: SortOrder
    solicitacaofisicoId?: SortOrder
    solicitacaojuridicoId?: SortOrder
    usuarioid?: SortOrder
  }

  export type solicitacaoMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    eletronicos?: SortOrder
    descricao?: SortOrder
    informacoes?: SortOrder
    horarioparapegar?: SortOrder
    contato?: SortOrder
    data?: SortOrder
    dataparapegar?: SortOrder
    status?: SortOrder
    solicitacaofisicoId?: SortOrder
    solicitacaojuridicoId?: SortOrder
    usuarioid?: SortOrder
    createdAt?: SortOrder
  }

  export type solicitacaoMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    eletronicos?: SortOrder
    descricao?: SortOrder
    informacoes?: SortOrder
    horarioparapegar?: SortOrder
    contato?: SortOrder
    data?: SortOrder
    dataparapegar?: SortOrder
    status?: SortOrder
    solicitacaofisicoId?: SortOrder
    solicitacaojuridicoId?: SortOrder
    usuarioid?: SortOrder
    createdAt?: SortOrder
  }

  export type solicitacaoSumOrderByAggregateInput = {
    id?: SortOrder
    solicitacaofisicoId?: SortOrder
    solicitacaojuridicoId?: SortOrder
    usuarioid?: SortOrder
  }

  export type descarteCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<descarteCreateWithoutUsuarioInput, descarteUncheckedCreateWithoutUsuarioInput> | descarteCreateWithoutUsuarioInput[] | descarteUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: descarteCreateOrConnectWithoutUsuarioInput | descarteCreateOrConnectWithoutUsuarioInput[]
    createMany?: descarteCreateManyUsuarioInputEnvelope
    connect?: descarteWhereUniqueInput | descarteWhereUniqueInput[]
  }

  export type doacaoCreateNestedManyWithoutDonatarioInput = {
    create?: XOR<doacaoCreateWithoutDonatarioInput, doacaoUncheckedCreateWithoutDonatarioInput> | doacaoCreateWithoutDonatarioInput[] | doacaoUncheckedCreateWithoutDonatarioInput[]
    connectOrCreate?: doacaoCreateOrConnectWithoutDonatarioInput | doacaoCreateOrConnectWithoutDonatarioInput[]
    createMany?: doacaoCreateManyDonatarioInputEnvelope
    connect?: doacaoWhereUniqueInput | doacaoWhereUniqueInput[]
  }

  export type doacaoUsuarioCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<doacaoUsuarioCreateWithoutUsuarioInput, doacaoUsuarioUncheckedCreateWithoutUsuarioInput> | doacaoUsuarioCreateWithoutUsuarioInput[] | doacaoUsuarioUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: doacaoUsuarioCreateOrConnectWithoutUsuarioInput | doacaoUsuarioCreateOrConnectWithoutUsuarioInput[]
    createMany?: doacaoUsuarioCreateManyUsuarioInputEnvelope
    connect?: doacaoUsuarioWhereUniqueInput | doacaoUsuarioWhereUniqueInput[]
  }

  export type solicitacaoCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<solicitacaoCreateWithoutUsuarioInput, solicitacaoUncheckedCreateWithoutUsuarioInput> | solicitacaoCreateWithoutUsuarioInput[] | solicitacaoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: solicitacaoCreateOrConnectWithoutUsuarioInput | solicitacaoCreateOrConnectWithoutUsuarioInput[]
    createMany?: solicitacaoCreateManyUsuarioInputEnvelope
    connect?: solicitacaoWhereUniqueInput | solicitacaoWhereUniqueInput[]
  }

  export type tecladoCreateNestedManyWithoutModificadorInput = {
    create?: XOR<tecladoCreateWithoutModificadorInput, tecladoUncheckedCreateWithoutModificadorInput> | tecladoCreateWithoutModificadorInput[] | tecladoUncheckedCreateWithoutModificadorInput[]
    connectOrCreate?: tecladoCreateOrConnectWithoutModificadorInput | tecladoCreateOrConnectWithoutModificadorInput[]
    createMany?: tecladoCreateManyModificadorInputEnvelope
    connect?: tecladoWhereUniqueInput | tecladoWhereUniqueInput[]
  }

  export type tecladoCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<tecladoCreateWithoutUsuarioInput, tecladoUncheckedCreateWithoutUsuarioInput> | tecladoCreateWithoutUsuarioInput[] | tecladoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: tecladoCreateOrConnectWithoutUsuarioInput | tecladoCreateOrConnectWithoutUsuarioInput[]
    createMany?: tecladoCreateManyUsuarioInputEnvelope
    connect?: tecladoWhereUniqueInput | tecladoWhereUniqueInput[]
  }

  export type hdCreateNestedManyWithoutAlunoInput = {
    create?: XOR<hdCreateWithoutAlunoInput, hdUncheckedCreateWithoutAlunoInput> | hdCreateWithoutAlunoInput[] | hdUncheckedCreateWithoutAlunoInput[]
    connectOrCreate?: hdCreateOrConnectWithoutAlunoInput | hdCreateOrConnectWithoutAlunoInput[]
    createMany?: hdCreateManyAlunoInputEnvelope
    connect?: hdWhereUniqueInput | hdWhereUniqueInput[]
  }

  export type hdCreateNestedManyWithoutModificadorInput = {
    create?: XOR<hdCreateWithoutModificadorInput, hdUncheckedCreateWithoutModificadorInput> | hdCreateWithoutModificadorInput[] | hdUncheckedCreateWithoutModificadorInput[]
    connectOrCreate?: hdCreateOrConnectWithoutModificadorInput | hdCreateOrConnectWithoutModificadorInput[]
    createMany?: hdCreateManyModificadorInputEnvelope
    connect?: hdWhereUniqueInput | hdWhereUniqueInput[]
  }

  export type fontedealimentacaoCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<fontedealimentacaoCreateWithoutUsuarioInput, fontedealimentacaoUncheckedCreateWithoutUsuarioInput> | fontedealimentacaoCreateWithoutUsuarioInput[] | fontedealimentacaoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: fontedealimentacaoCreateOrConnectWithoutUsuarioInput | fontedealimentacaoCreateOrConnectWithoutUsuarioInput[]
    createMany?: fontedealimentacaoCreateManyUsuarioInputEnvelope
    connect?: fontedealimentacaoWhereUniqueInput | fontedealimentacaoWhereUniqueInput[]
  }

  export type fontedealimentacaoCreateNestedManyWithoutModificadorInput = {
    create?: XOR<fontedealimentacaoCreateWithoutModificadorInput, fontedealimentacaoUncheckedCreateWithoutModificadorInput> | fontedealimentacaoCreateWithoutModificadorInput[] | fontedealimentacaoUncheckedCreateWithoutModificadorInput[]
    connectOrCreate?: fontedealimentacaoCreateOrConnectWithoutModificadorInput | fontedealimentacaoCreateOrConnectWithoutModificadorInput[]
    createMany?: fontedealimentacaoCreateManyModificadorInputEnvelope
    connect?: fontedealimentacaoWhereUniqueInput | fontedealimentacaoWhereUniqueInput[]
  }

  export type gabineteCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<gabineteCreateWithoutUsuarioInput, gabineteUncheckedCreateWithoutUsuarioInput> | gabineteCreateWithoutUsuarioInput[] | gabineteUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: gabineteCreateOrConnectWithoutUsuarioInput | gabineteCreateOrConnectWithoutUsuarioInput[]
    createMany?: gabineteCreateManyUsuarioInputEnvelope
    connect?: gabineteWhereUniqueInput | gabineteWhereUniqueInput[]
  }

  export type gabineteCreateNestedManyWithoutModificadorInput = {
    create?: XOR<gabineteCreateWithoutModificadorInput, gabineteUncheckedCreateWithoutModificadorInput> | gabineteCreateWithoutModificadorInput[] | gabineteUncheckedCreateWithoutModificadorInput[]
    connectOrCreate?: gabineteCreateOrConnectWithoutModificadorInput | gabineteCreateOrConnectWithoutModificadorInput[]
    createMany?: gabineteCreateManyModificadorInputEnvelope
    connect?: gabineteWhereUniqueInput | gabineteWhereUniqueInput[]
  }

  export type monitorCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<monitorCreateWithoutUsuarioInput, monitorUncheckedCreateWithoutUsuarioInput> | monitorCreateWithoutUsuarioInput[] | monitorUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: monitorCreateOrConnectWithoutUsuarioInput | monitorCreateOrConnectWithoutUsuarioInput[]
    createMany?: monitorCreateManyUsuarioInputEnvelope
    connect?: monitorWhereUniqueInput | monitorWhereUniqueInput[]
  }

  export type monitorCreateNestedManyWithoutModificadorInput = {
    create?: XOR<monitorCreateWithoutModificadorInput, monitorUncheckedCreateWithoutModificadorInput> | monitorCreateWithoutModificadorInput[] | monitorUncheckedCreateWithoutModificadorInput[]
    connectOrCreate?: monitorCreateOrConnectWithoutModificadorInput | monitorCreateOrConnectWithoutModificadorInput[]
    createMany?: monitorCreateManyModificadorInputEnvelope
    connect?: monitorWhereUniqueInput | monitorWhereUniqueInput[]
  }

  export type mouseCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<mouseCreateWithoutUsuarioInput, mouseUncheckedCreateWithoutUsuarioInput> | mouseCreateWithoutUsuarioInput[] | mouseUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: mouseCreateOrConnectWithoutUsuarioInput | mouseCreateOrConnectWithoutUsuarioInput[]
    createMany?: mouseCreateManyUsuarioInputEnvelope
    connect?: mouseWhereUniqueInput | mouseWhereUniqueInput[]
  }

  export type mouseCreateNestedManyWithoutModificadorInput = {
    create?: XOR<mouseCreateWithoutModificadorInput, mouseUncheckedCreateWithoutModificadorInput> | mouseCreateWithoutModificadorInput[] | mouseUncheckedCreateWithoutModificadorInput[]
    connectOrCreate?: mouseCreateOrConnectWithoutModificadorInput | mouseCreateOrConnectWithoutModificadorInput[]
    createMany?: mouseCreateManyModificadorInputEnvelope
    connect?: mouseWhereUniqueInput | mouseWhereUniqueInput[]
  }

  export type estabilizadorCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<estabilizadorCreateWithoutUsuarioInput, estabilizadorUncheckedCreateWithoutUsuarioInput> | estabilizadorCreateWithoutUsuarioInput[] | estabilizadorUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: estabilizadorCreateOrConnectWithoutUsuarioInput | estabilizadorCreateOrConnectWithoutUsuarioInput[]
    createMany?: estabilizadorCreateManyUsuarioInputEnvelope
    connect?: estabilizadorWhereUniqueInput | estabilizadorWhereUniqueInput[]
  }

  export type estabilizadorCreateNestedManyWithoutModificadorInput = {
    create?: XOR<estabilizadorCreateWithoutModificadorInput, estabilizadorUncheckedCreateWithoutModificadorInput> | estabilizadorCreateWithoutModificadorInput[] | estabilizadorUncheckedCreateWithoutModificadorInput[]
    connectOrCreate?: estabilizadorCreateOrConnectWithoutModificadorInput | estabilizadorCreateOrConnectWithoutModificadorInput[]
    createMany?: estabilizadorCreateManyModificadorInputEnvelope
    connect?: estabilizadorWhereUniqueInput | estabilizadorWhereUniqueInput[]
  }

  export type impressoraCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<impressoraCreateWithoutUsuarioInput, impressoraUncheckedCreateWithoutUsuarioInput> | impressoraCreateWithoutUsuarioInput[] | impressoraUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: impressoraCreateOrConnectWithoutUsuarioInput | impressoraCreateOrConnectWithoutUsuarioInput[]
    createMany?: impressoraCreateManyUsuarioInputEnvelope
    connect?: impressoraWhereUniqueInput | impressoraWhereUniqueInput[]
  }

  export type impressoraCreateNestedManyWithoutModificadorInput = {
    create?: XOR<impressoraCreateWithoutModificadorInput, impressoraUncheckedCreateWithoutModificadorInput> | impressoraCreateWithoutModificadorInput[] | impressoraUncheckedCreateWithoutModificadorInput[]
    connectOrCreate?: impressoraCreateOrConnectWithoutModificadorInput | impressoraCreateOrConnectWithoutModificadorInput[]
    createMany?: impressoraCreateManyModificadorInputEnvelope
    connect?: impressoraWhereUniqueInput | impressoraWhereUniqueInput[]
  }

  export type placamaeCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<placamaeCreateWithoutUsuarioInput, placamaeUncheckedCreateWithoutUsuarioInput> | placamaeCreateWithoutUsuarioInput[] | placamaeUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: placamaeCreateOrConnectWithoutUsuarioInput | placamaeCreateOrConnectWithoutUsuarioInput[]
    createMany?: placamaeCreateManyUsuarioInputEnvelope
    connect?: placamaeWhereUniqueInput | placamaeWhereUniqueInput[]
  }

  export type placamaeCreateNestedManyWithoutModificadorInput = {
    create?: XOR<placamaeCreateWithoutModificadorInput, placamaeUncheckedCreateWithoutModificadorInput> | placamaeCreateWithoutModificadorInput[] | placamaeUncheckedCreateWithoutModificadorInput[]
    connectOrCreate?: placamaeCreateOrConnectWithoutModificadorInput | placamaeCreateOrConnectWithoutModificadorInput[]
    createMany?: placamaeCreateManyModificadorInputEnvelope
    connect?: placamaeWhereUniqueInput | placamaeWhereUniqueInput[]
  }

  export type notebookCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<notebookCreateWithoutUsuarioInput, notebookUncheckedCreateWithoutUsuarioInput> | notebookCreateWithoutUsuarioInput[] | notebookUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: notebookCreateOrConnectWithoutUsuarioInput | notebookCreateOrConnectWithoutUsuarioInput[]
    createMany?: notebookCreateManyUsuarioInputEnvelope
    connect?: notebookWhereUniqueInput | notebookWhereUniqueInput[]
  }

  export type notebookCreateNestedManyWithoutModificadorInput = {
    create?: XOR<notebookCreateWithoutModificadorInput, notebookUncheckedCreateWithoutModificadorInput> | notebookCreateWithoutModificadorInput[] | notebookUncheckedCreateWithoutModificadorInput[]
    connectOrCreate?: notebookCreateOrConnectWithoutModificadorInput | notebookCreateOrConnectWithoutModificadorInput[]
    createMany?: notebookCreateManyModificadorInputEnvelope
    connect?: notebookWhereUniqueInput | notebookWhereUniqueInput[]
  }

  export type processadorCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<processadorCreateWithoutUsuarioInput, processadorUncheckedCreateWithoutUsuarioInput> | processadorCreateWithoutUsuarioInput[] | processadorUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: processadorCreateOrConnectWithoutUsuarioInput | processadorCreateOrConnectWithoutUsuarioInput[]
    createMany?: processadorCreateManyUsuarioInputEnvelope
    connect?: processadorWhereUniqueInput | processadorWhereUniqueInput[]
  }

  export type processadorCreateNestedManyWithoutModificadorInput = {
    create?: XOR<processadorCreateWithoutModificadorInput, processadorUncheckedCreateWithoutModificadorInput> | processadorCreateWithoutModificadorInput[] | processadorUncheckedCreateWithoutModificadorInput[]
    connectOrCreate?: processadorCreateOrConnectWithoutModificadorInput | processadorCreateOrConnectWithoutModificadorInput[]
    createMany?: processadorCreateManyModificadorInputEnvelope
    connect?: processadorWhereUniqueInput | processadorWhereUniqueInput[]
  }

  export type descarteUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<descarteCreateWithoutUsuarioInput, descarteUncheckedCreateWithoutUsuarioInput> | descarteCreateWithoutUsuarioInput[] | descarteUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: descarteCreateOrConnectWithoutUsuarioInput | descarteCreateOrConnectWithoutUsuarioInput[]
    createMany?: descarteCreateManyUsuarioInputEnvelope
    connect?: descarteWhereUniqueInput | descarteWhereUniqueInput[]
  }

  export type doacaoUncheckedCreateNestedManyWithoutDonatarioInput = {
    create?: XOR<doacaoCreateWithoutDonatarioInput, doacaoUncheckedCreateWithoutDonatarioInput> | doacaoCreateWithoutDonatarioInput[] | doacaoUncheckedCreateWithoutDonatarioInput[]
    connectOrCreate?: doacaoCreateOrConnectWithoutDonatarioInput | doacaoCreateOrConnectWithoutDonatarioInput[]
    createMany?: doacaoCreateManyDonatarioInputEnvelope
    connect?: doacaoWhereUniqueInput | doacaoWhereUniqueInput[]
  }

  export type doacaoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<doacaoUsuarioCreateWithoutUsuarioInput, doacaoUsuarioUncheckedCreateWithoutUsuarioInput> | doacaoUsuarioCreateWithoutUsuarioInput[] | doacaoUsuarioUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: doacaoUsuarioCreateOrConnectWithoutUsuarioInput | doacaoUsuarioCreateOrConnectWithoutUsuarioInput[]
    createMany?: doacaoUsuarioCreateManyUsuarioInputEnvelope
    connect?: doacaoUsuarioWhereUniqueInput | doacaoUsuarioWhereUniqueInput[]
  }

  export type solicitacaoUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<solicitacaoCreateWithoutUsuarioInput, solicitacaoUncheckedCreateWithoutUsuarioInput> | solicitacaoCreateWithoutUsuarioInput[] | solicitacaoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: solicitacaoCreateOrConnectWithoutUsuarioInput | solicitacaoCreateOrConnectWithoutUsuarioInput[]
    createMany?: solicitacaoCreateManyUsuarioInputEnvelope
    connect?: solicitacaoWhereUniqueInput | solicitacaoWhereUniqueInput[]
  }

  export type tecladoUncheckedCreateNestedManyWithoutModificadorInput = {
    create?: XOR<tecladoCreateWithoutModificadorInput, tecladoUncheckedCreateWithoutModificadorInput> | tecladoCreateWithoutModificadorInput[] | tecladoUncheckedCreateWithoutModificadorInput[]
    connectOrCreate?: tecladoCreateOrConnectWithoutModificadorInput | tecladoCreateOrConnectWithoutModificadorInput[]
    createMany?: tecladoCreateManyModificadorInputEnvelope
    connect?: tecladoWhereUniqueInput | tecladoWhereUniqueInput[]
  }

  export type tecladoUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<tecladoCreateWithoutUsuarioInput, tecladoUncheckedCreateWithoutUsuarioInput> | tecladoCreateWithoutUsuarioInput[] | tecladoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: tecladoCreateOrConnectWithoutUsuarioInput | tecladoCreateOrConnectWithoutUsuarioInput[]
    createMany?: tecladoCreateManyUsuarioInputEnvelope
    connect?: tecladoWhereUniqueInput | tecladoWhereUniqueInput[]
  }

  export type hdUncheckedCreateNestedManyWithoutAlunoInput = {
    create?: XOR<hdCreateWithoutAlunoInput, hdUncheckedCreateWithoutAlunoInput> | hdCreateWithoutAlunoInput[] | hdUncheckedCreateWithoutAlunoInput[]
    connectOrCreate?: hdCreateOrConnectWithoutAlunoInput | hdCreateOrConnectWithoutAlunoInput[]
    createMany?: hdCreateManyAlunoInputEnvelope
    connect?: hdWhereUniqueInput | hdWhereUniqueInput[]
  }

  export type hdUncheckedCreateNestedManyWithoutModificadorInput = {
    create?: XOR<hdCreateWithoutModificadorInput, hdUncheckedCreateWithoutModificadorInput> | hdCreateWithoutModificadorInput[] | hdUncheckedCreateWithoutModificadorInput[]
    connectOrCreate?: hdCreateOrConnectWithoutModificadorInput | hdCreateOrConnectWithoutModificadorInput[]
    createMany?: hdCreateManyModificadorInputEnvelope
    connect?: hdWhereUniqueInput | hdWhereUniqueInput[]
  }

  export type fontedealimentacaoUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<fontedealimentacaoCreateWithoutUsuarioInput, fontedealimentacaoUncheckedCreateWithoutUsuarioInput> | fontedealimentacaoCreateWithoutUsuarioInput[] | fontedealimentacaoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: fontedealimentacaoCreateOrConnectWithoutUsuarioInput | fontedealimentacaoCreateOrConnectWithoutUsuarioInput[]
    createMany?: fontedealimentacaoCreateManyUsuarioInputEnvelope
    connect?: fontedealimentacaoWhereUniqueInput | fontedealimentacaoWhereUniqueInput[]
  }

  export type fontedealimentacaoUncheckedCreateNestedManyWithoutModificadorInput = {
    create?: XOR<fontedealimentacaoCreateWithoutModificadorInput, fontedealimentacaoUncheckedCreateWithoutModificadorInput> | fontedealimentacaoCreateWithoutModificadorInput[] | fontedealimentacaoUncheckedCreateWithoutModificadorInput[]
    connectOrCreate?: fontedealimentacaoCreateOrConnectWithoutModificadorInput | fontedealimentacaoCreateOrConnectWithoutModificadorInput[]
    createMany?: fontedealimentacaoCreateManyModificadorInputEnvelope
    connect?: fontedealimentacaoWhereUniqueInput | fontedealimentacaoWhereUniqueInput[]
  }

  export type gabineteUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<gabineteCreateWithoutUsuarioInput, gabineteUncheckedCreateWithoutUsuarioInput> | gabineteCreateWithoutUsuarioInput[] | gabineteUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: gabineteCreateOrConnectWithoutUsuarioInput | gabineteCreateOrConnectWithoutUsuarioInput[]
    createMany?: gabineteCreateManyUsuarioInputEnvelope
    connect?: gabineteWhereUniqueInput | gabineteWhereUniqueInput[]
  }

  export type gabineteUncheckedCreateNestedManyWithoutModificadorInput = {
    create?: XOR<gabineteCreateWithoutModificadorInput, gabineteUncheckedCreateWithoutModificadorInput> | gabineteCreateWithoutModificadorInput[] | gabineteUncheckedCreateWithoutModificadorInput[]
    connectOrCreate?: gabineteCreateOrConnectWithoutModificadorInput | gabineteCreateOrConnectWithoutModificadorInput[]
    createMany?: gabineteCreateManyModificadorInputEnvelope
    connect?: gabineteWhereUniqueInput | gabineteWhereUniqueInput[]
  }

  export type monitorUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<monitorCreateWithoutUsuarioInput, monitorUncheckedCreateWithoutUsuarioInput> | monitorCreateWithoutUsuarioInput[] | monitorUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: monitorCreateOrConnectWithoutUsuarioInput | monitorCreateOrConnectWithoutUsuarioInput[]
    createMany?: monitorCreateManyUsuarioInputEnvelope
    connect?: monitorWhereUniqueInput | monitorWhereUniqueInput[]
  }

  export type monitorUncheckedCreateNestedManyWithoutModificadorInput = {
    create?: XOR<monitorCreateWithoutModificadorInput, monitorUncheckedCreateWithoutModificadorInput> | monitorCreateWithoutModificadorInput[] | monitorUncheckedCreateWithoutModificadorInput[]
    connectOrCreate?: monitorCreateOrConnectWithoutModificadorInput | monitorCreateOrConnectWithoutModificadorInput[]
    createMany?: monitorCreateManyModificadorInputEnvelope
    connect?: monitorWhereUniqueInput | monitorWhereUniqueInput[]
  }

  export type mouseUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<mouseCreateWithoutUsuarioInput, mouseUncheckedCreateWithoutUsuarioInput> | mouseCreateWithoutUsuarioInput[] | mouseUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: mouseCreateOrConnectWithoutUsuarioInput | mouseCreateOrConnectWithoutUsuarioInput[]
    createMany?: mouseCreateManyUsuarioInputEnvelope
    connect?: mouseWhereUniqueInput | mouseWhereUniqueInput[]
  }

  export type mouseUncheckedCreateNestedManyWithoutModificadorInput = {
    create?: XOR<mouseCreateWithoutModificadorInput, mouseUncheckedCreateWithoutModificadorInput> | mouseCreateWithoutModificadorInput[] | mouseUncheckedCreateWithoutModificadorInput[]
    connectOrCreate?: mouseCreateOrConnectWithoutModificadorInput | mouseCreateOrConnectWithoutModificadorInput[]
    createMany?: mouseCreateManyModificadorInputEnvelope
    connect?: mouseWhereUniqueInput | mouseWhereUniqueInput[]
  }

  export type estabilizadorUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<estabilizadorCreateWithoutUsuarioInput, estabilizadorUncheckedCreateWithoutUsuarioInput> | estabilizadorCreateWithoutUsuarioInput[] | estabilizadorUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: estabilizadorCreateOrConnectWithoutUsuarioInput | estabilizadorCreateOrConnectWithoutUsuarioInput[]
    createMany?: estabilizadorCreateManyUsuarioInputEnvelope
    connect?: estabilizadorWhereUniqueInput | estabilizadorWhereUniqueInput[]
  }

  export type estabilizadorUncheckedCreateNestedManyWithoutModificadorInput = {
    create?: XOR<estabilizadorCreateWithoutModificadorInput, estabilizadorUncheckedCreateWithoutModificadorInput> | estabilizadorCreateWithoutModificadorInput[] | estabilizadorUncheckedCreateWithoutModificadorInput[]
    connectOrCreate?: estabilizadorCreateOrConnectWithoutModificadorInput | estabilizadorCreateOrConnectWithoutModificadorInput[]
    createMany?: estabilizadorCreateManyModificadorInputEnvelope
    connect?: estabilizadorWhereUniqueInput | estabilizadorWhereUniqueInput[]
  }

  export type impressoraUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<impressoraCreateWithoutUsuarioInput, impressoraUncheckedCreateWithoutUsuarioInput> | impressoraCreateWithoutUsuarioInput[] | impressoraUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: impressoraCreateOrConnectWithoutUsuarioInput | impressoraCreateOrConnectWithoutUsuarioInput[]
    createMany?: impressoraCreateManyUsuarioInputEnvelope
    connect?: impressoraWhereUniqueInput | impressoraWhereUniqueInput[]
  }

  export type impressoraUncheckedCreateNestedManyWithoutModificadorInput = {
    create?: XOR<impressoraCreateWithoutModificadorInput, impressoraUncheckedCreateWithoutModificadorInput> | impressoraCreateWithoutModificadorInput[] | impressoraUncheckedCreateWithoutModificadorInput[]
    connectOrCreate?: impressoraCreateOrConnectWithoutModificadorInput | impressoraCreateOrConnectWithoutModificadorInput[]
    createMany?: impressoraCreateManyModificadorInputEnvelope
    connect?: impressoraWhereUniqueInput | impressoraWhereUniqueInput[]
  }

  export type placamaeUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<placamaeCreateWithoutUsuarioInput, placamaeUncheckedCreateWithoutUsuarioInput> | placamaeCreateWithoutUsuarioInput[] | placamaeUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: placamaeCreateOrConnectWithoutUsuarioInput | placamaeCreateOrConnectWithoutUsuarioInput[]
    createMany?: placamaeCreateManyUsuarioInputEnvelope
    connect?: placamaeWhereUniqueInput | placamaeWhereUniqueInput[]
  }

  export type placamaeUncheckedCreateNestedManyWithoutModificadorInput = {
    create?: XOR<placamaeCreateWithoutModificadorInput, placamaeUncheckedCreateWithoutModificadorInput> | placamaeCreateWithoutModificadorInput[] | placamaeUncheckedCreateWithoutModificadorInput[]
    connectOrCreate?: placamaeCreateOrConnectWithoutModificadorInput | placamaeCreateOrConnectWithoutModificadorInput[]
    createMany?: placamaeCreateManyModificadorInputEnvelope
    connect?: placamaeWhereUniqueInput | placamaeWhereUniqueInput[]
  }

  export type notebookUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<notebookCreateWithoutUsuarioInput, notebookUncheckedCreateWithoutUsuarioInput> | notebookCreateWithoutUsuarioInput[] | notebookUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: notebookCreateOrConnectWithoutUsuarioInput | notebookCreateOrConnectWithoutUsuarioInput[]
    createMany?: notebookCreateManyUsuarioInputEnvelope
    connect?: notebookWhereUniqueInput | notebookWhereUniqueInput[]
  }

  export type notebookUncheckedCreateNestedManyWithoutModificadorInput = {
    create?: XOR<notebookCreateWithoutModificadorInput, notebookUncheckedCreateWithoutModificadorInput> | notebookCreateWithoutModificadorInput[] | notebookUncheckedCreateWithoutModificadorInput[]
    connectOrCreate?: notebookCreateOrConnectWithoutModificadorInput | notebookCreateOrConnectWithoutModificadorInput[]
    createMany?: notebookCreateManyModificadorInputEnvelope
    connect?: notebookWhereUniqueInput | notebookWhereUniqueInput[]
  }

  export type processadorUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<processadorCreateWithoutUsuarioInput, processadorUncheckedCreateWithoutUsuarioInput> | processadorCreateWithoutUsuarioInput[] | processadorUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: processadorCreateOrConnectWithoutUsuarioInput | processadorCreateOrConnectWithoutUsuarioInput[]
    createMany?: processadorCreateManyUsuarioInputEnvelope
    connect?: processadorWhereUniqueInput | processadorWhereUniqueInput[]
  }

  export type processadorUncheckedCreateNestedManyWithoutModificadorInput = {
    create?: XOR<processadorCreateWithoutModificadorInput, processadorUncheckedCreateWithoutModificadorInput> | processadorCreateWithoutModificadorInput[] | processadorUncheckedCreateWithoutModificadorInput[]
    connectOrCreate?: processadorCreateOrConnectWithoutModificadorInput | processadorCreateOrConnectWithoutModificadorInput[]
    createMany?: processadorCreateManyModificadorInputEnvelope
    connect?: processadorWhereUniqueInput | processadorWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type descarteUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<descarteCreateWithoutUsuarioInput, descarteUncheckedCreateWithoutUsuarioInput> | descarteCreateWithoutUsuarioInput[] | descarteUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: descarteCreateOrConnectWithoutUsuarioInput | descarteCreateOrConnectWithoutUsuarioInput[]
    upsert?: descarteUpsertWithWhereUniqueWithoutUsuarioInput | descarteUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: descarteCreateManyUsuarioInputEnvelope
    set?: descarteWhereUniqueInput | descarteWhereUniqueInput[]
    disconnect?: descarteWhereUniqueInput | descarteWhereUniqueInput[]
    delete?: descarteWhereUniqueInput | descarteWhereUniqueInput[]
    connect?: descarteWhereUniqueInput | descarteWhereUniqueInput[]
    update?: descarteUpdateWithWhereUniqueWithoutUsuarioInput | descarteUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: descarteUpdateManyWithWhereWithoutUsuarioInput | descarteUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: descarteScalarWhereInput | descarteScalarWhereInput[]
  }

  export type doacaoUpdateManyWithoutDonatarioNestedInput = {
    create?: XOR<doacaoCreateWithoutDonatarioInput, doacaoUncheckedCreateWithoutDonatarioInput> | doacaoCreateWithoutDonatarioInput[] | doacaoUncheckedCreateWithoutDonatarioInput[]
    connectOrCreate?: doacaoCreateOrConnectWithoutDonatarioInput | doacaoCreateOrConnectWithoutDonatarioInput[]
    upsert?: doacaoUpsertWithWhereUniqueWithoutDonatarioInput | doacaoUpsertWithWhereUniqueWithoutDonatarioInput[]
    createMany?: doacaoCreateManyDonatarioInputEnvelope
    set?: doacaoWhereUniqueInput | doacaoWhereUniqueInput[]
    disconnect?: doacaoWhereUniqueInput | doacaoWhereUniqueInput[]
    delete?: doacaoWhereUniqueInput | doacaoWhereUniqueInput[]
    connect?: doacaoWhereUniqueInput | doacaoWhereUniqueInput[]
    update?: doacaoUpdateWithWhereUniqueWithoutDonatarioInput | doacaoUpdateWithWhereUniqueWithoutDonatarioInput[]
    updateMany?: doacaoUpdateManyWithWhereWithoutDonatarioInput | doacaoUpdateManyWithWhereWithoutDonatarioInput[]
    deleteMany?: doacaoScalarWhereInput | doacaoScalarWhereInput[]
  }

  export type doacaoUsuarioUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<doacaoUsuarioCreateWithoutUsuarioInput, doacaoUsuarioUncheckedCreateWithoutUsuarioInput> | doacaoUsuarioCreateWithoutUsuarioInput[] | doacaoUsuarioUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: doacaoUsuarioCreateOrConnectWithoutUsuarioInput | doacaoUsuarioCreateOrConnectWithoutUsuarioInput[]
    upsert?: doacaoUsuarioUpsertWithWhereUniqueWithoutUsuarioInput | doacaoUsuarioUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: doacaoUsuarioCreateManyUsuarioInputEnvelope
    set?: doacaoUsuarioWhereUniqueInput | doacaoUsuarioWhereUniqueInput[]
    disconnect?: doacaoUsuarioWhereUniqueInput | doacaoUsuarioWhereUniqueInput[]
    delete?: doacaoUsuarioWhereUniqueInput | doacaoUsuarioWhereUniqueInput[]
    connect?: doacaoUsuarioWhereUniqueInput | doacaoUsuarioWhereUniqueInput[]
    update?: doacaoUsuarioUpdateWithWhereUniqueWithoutUsuarioInput | doacaoUsuarioUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: doacaoUsuarioUpdateManyWithWhereWithoutUsuarioInput | doacaoUsuarioUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: doacaoUsuarioScalarWhereInput | doacaoUsuarioScalarWhereInput[]
  }

  export type solicitacaoUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<solicitacaoCreateWithoutUsuarioInput, solicitacaoUncheckedCreateWithoutUsuarioInput> | solicitacaoCreateWithoutUsuarioInput[] | solicitacaoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: solicitacaoCreateOrConnectWithoutUsuarioInput | solicitacaoCreateOrConnectWithoutUsuarioInput[]
    upsert?: solicitacaoUpsertWithWhereUniqueWithoutUsuarioInput | solicitacaoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: solicitacaoCreateManyUsuarioInputEnvelope
    set?: solicitacaoWhereUniqueInput | solicitacaoWhereUniqueInput[]
    disconnect?: solicitacaoWhereUniqueInput | solicitacaoWhereUniqueInput[]
    delete?: solicitacaoWhereUniqueInput | solicitacaoWhereUniqueInput[]
    connect?: solicitacaoWhereUniqueInput | solicitacaoWhereUniqueInput[]
    update?: solicitacaoUpdateWithWhereUniqueWithoutUsuarioInput | solicitacaoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: solicitacaoUpdateManyWithWhereWithoutUsuarioInput | solicitacaoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: solicitacaoScalarWhereInput | solicitacaoScalarWhereInput[]
  }

  export type tecladoUpdateManyWithoutModificadorNestedInput = {
    create?: XOR<tecladoCreateWithoutModificadorInput, tecladoUncheckedCreateWithoutModificadorInput> | tecladoCreateWithoutModificadorInput[] | tecladoUncheckedCreateWithoutModificadorInput[]
    connectOrCreate?: tecladoCreateOrConnectWithoutModificadorInput | tecladoCreateOrConnectWithoutModificadorInput[]
    upsert?: tecladoUpsertWithWhereUniqueWithoutModificadorInput | tecladoUpsertWithWhereUniqueWithoutModificadorInput[]
    createMany?: tecladoCreateManyModificadorInputEnvelope
    set?: tecladoWhereUniqueInput | tecladoWhereUniqueInput[]
    disconnect?: tecladoWhereUniqueInput | tecladoWhereUniqueInput[]
    delete?: tecladoWhereUniqueInput | tecladoWhereUniqueInput[]
    connect?: tecladoWhereUniqueInput | tecladoWhereUniqueInput[]
    update?: tecladoUpdateWithWhereUniqueWithoutModificadorInput | tecladoUpdateWithWhereUniqueWithoutModificadorInput[]
    updateMany?: tecladoUpdateManyWithWhereWithoutModificadorInput | tecladoUpdateManyWithWhereWithoutModificadorInput[]
    deleteMany?: tecladoScalarWhereInput | tecladoScalarWhereInput[]
  }

  export type tecladoUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<tecladoCreateWithoutUsuarioInput, tecladoUncheckedCreateWithoutUsuarioInput> | tecladoCreateWithoutUsuarioInput[] | tecladoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: tecladoCreateOrConnectWithoutUsuarioInput | tecladoCreateOrConnectWithoutUsuarioInput[]
    upsert?: tecladoUpsertWithWhereUniqueWithoutUsuarioInput | tecladoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: tecladoCreateManyUsuarioInputEnvelope
    set?: tecladoWhereUniqueInput | tecladoWhereUniqueInput[]
    disconnect?: tecladoWhereUniqueInput | tecladoWhereUniqueInput[]
    delete?: tecladoWhereUniqueInput | tecladoWhereUniqueInput[]
    connect?: tecladoWhereUniqueInput | tecladoWhereUniqueInput[]
    update?: tecladoUpdateWithWhereUniqueWithoutUsuarioInput | tecladoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: tecladoUpdateManyWithWhereWithoutUsuarioInput | tecladoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: tecladoScalarWhereInput | tecladoScalarWhereInput[]
  }

  export type hdUpdateManyWithoutAlunoNestedInput = {
    create?: XOR<hdCreateWithoutAlunoInput, hdUncheckedCreateWithoutAlunoInput> | hdCreateWithoutAlunoInput[] | hdUncheckedCreateWithoutAlunoInput[]
    connectOrCreate?: hdCreateOrConnectWithoutAlunoInput | hdCreateOrConnectWithoutAlunoInput[]
    upsert?: hdUpsertWithWhereUniqueWithoutAlunoInput | hdUpsertWithWhereUniqueWithoutAlunoInput[]
    createMany?: hdCreateManyAlunoInputEnvelope
    set?: hdWhereUniqueInput | hdWhereUniqueInput[]
    disconnect?: hdWhereUniqueInput | hdWhereUniqueInput[]
    delete?: hdWhereUniqueInput | hdWhereUniqueInput[]
    connect?: hdWhereUniqueInput | hdWhereUniqueInput[]
    update?: hdUpdateWithWhereUniqueWithoutAlunoInput | hdUpdateWithWhereUniqueWithoutAlunoInput[]
    updateMany?: hdUpdateManyWithWhereWithoutAlunoInput | hdUpdateManyWithWhereWithoutAlunoInput[]
    deleteMany?: hdScalarWhereInput | hdScalarWhereInput[]
  }

  export type hdUpdateManyWithoutModificadorNestedInput = {
    create?: XOR<hdCreateWithoutModificadorInput, hdUncheckedCreateWithoutModificadorInput> | hdCreateWithoutModificadorInput[] | hdUncheckedCreateWithoutModificadorInput[]
    connectOrCreate?: hdCreateOrConnectWithoutModificadorInput | hdCreateOrConnectWithoutModificadorInput[]
    upsert?: hdUpsertWithWhereUniqueWithoutModificadorInput | hdUpsertWithWhereUniqueWithoutModificadorInput[]
    createMany?: hdCreateManyModificadorInputEnvelope
    set?: hdWhereUniqueInput | hdWhereUniqueInput[]
    disconnect?: hdWhereUniqueInput | hdWhereUniqueInput[]
    delete?: hdWhereUniqueInput | hdWhereUniqueInput[]
    connect?: hdWhereUniqueInput | hdWhereUniqueInput[]
    update?: hdUpdateWithWhereUniqueWithoutModificadorInput | hdUpdateWithWhereUniqueWithoutModificadorInput[]
    updateMany?: hdUpdateManyWithWhereWithoutModificadorInput | hdUpdateManyWithWhereWithoutModificadorInput[]
    deleteMany?: hdScalarWhereInput | hdScalarWhereInput[]
  }

  export type fontedealimentacaoUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<fontedealimentacaoCreateWithoutUsuarioInput, fontedealimentacaoUncheckedCreateWithoutUsuarioInput> | fontedealimentacaoCreateWithoutUsuarioInput[] | fontedealimentacaoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: fontedealimentacaoCreateOrConnectWithoutUsuarioInput | fontedealimentacaoCreateOrConnectWithoutUsuarioInput[]
    upsert?: fontedealimentacaoUpsertWithWhereUniqueWithoutUsuarioInput | fontedealimentacaoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: fontedealimentacaoCreateManyUsuarioInputEnvelope
    set?: fontedealimentacaoWhereUniqueInput | fontedealimentacaoWhereUniqueInput[]
    disconnect?: fontedealimentacaoWhereUniqueInput | fontedealimentacaoWhereUniqueInput[]
    delete?: fontedealimentacaoWhereUniqueInput | fontedealimentacaoWhereUniqueInput[]
    connect?: fontedealimentacaoWhereUniqueInput | fontedealimentacaoWhereUniqueInput[]
    update?: fontedealimentacaoUpdateWithWhereUniqueWithoutUsuarioInput | fontedealimentacaoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: fontedealimentacaoUpdateManyWithWhereWithoutUsuarioInput | fontedealimentacaoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: fontedealimentacaoScalarWhereInput | fontedealimentacaoScalarWhereInput[]
  }

  export type fontedealimentacaoUpdateManyWithoutModificadorNestedInput = {
    create?: XOR<fontedealimentacaoCreateWithoutModificadorInput, fontedealimentacaoUncheckedCreateWithoutModificadorInput> | fontedealimentacaoCreateWithoutModificadorInput[] | fontedealimentacaoUncheckedCreateWithoutModificadorInput[]
    connectOrCreate?: fontedealimentacaoCreateOrConnectWithoutModificadorInput | fontedealimentacaoCreateOrConnectWithoutModificadorInput[]
    upsert?: fontedealimentacaoUpsertWithWhereUniqueWithoutModificadorInput | fontedealimentacaoUpsertWithWhereUniqueWithoutModificadorInput[]
    createMany?: fontedealimentacaoCreateManyModificadorInputEnvelope
    set?: fontedealimentacaoWhereUniqueInput | fontedealimentacaoWhereUniqueInput[]
    disconnect?: fontedealimentacaoWhereUniqueInput | fontedealimentacaoWhereUniqueInput[]
    delete?: fontedealimentacaoWhereUniqueInput | fontedealimentacaoWhereUniqueInput[]
    connect?: fontedealimentacaoWhereUniqueInput | fontedealimentacaoWhereUniqueInput[]
    update?: fontedealimentacaoUpdateWithWhereUniqueWithoutModificadorInput | fontedealimentacaoUpdateWithWhereUniqueWithoutModificadorInput[]
    updateMany?: fontedealimentacaoUpdateManyWithWhereWithoutModificadorInput | fontedealimentacaoUpdateManyWithWhereWithoutModificadorInput[]
    deleteMany?: fontedealimentacaoScalarWhereInput | fontedealimentacaoScalarWhereInput[]
  }

  export type gabineteUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<gabineteCreateWithoutUsuarioInput, gabineteUncheckedCreateWithoutUsuarioInput> | gabineteCreateWithoutUsuarioInput[] | gabineteUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: gabineteCreateOrConnectWithoutUsuarioInput | gabineteCreateOrConnectWithoutUsuarioInput[]
    upsert?: gabineteUpsertWithWhereUniqueWithoutUsuarioInput | gabineteUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: gabineteCreateManyUsuarioInputEnvelope
    set?: gabineteWhereUniqueInput | gabineteWhereUniqueInput[]
    disconnect?: gabineteWhereUniqueInput | gabineteWhereUniqueInput[]
    delete?: gabineteWhereUniqueInput | gabineteWhereUniqueInput[]
    connect?: gabineteWhereUniqueInput | gabineteWhereUniqueInput[]
    update?: gabineteUpdateWithWhereUniqueWithoutUsuarioInput | gabineteUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: gabineteUpdateManyWithWhereWithoutUsuarioInput | gabineteUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: gabineteScalarWhereInput | gabineteScalarWhereInput[]
  }

  export type gabineteUpdateManyWithoutModificadorNestedInput = {
    create?: XOR<gabineteCreateWithoutModificadorInput, gabineteUncheckedCreateWithoutModificadorInput> | gabineteCreateWithoutModificadorInput[] | gabineteUncheckedCreateWithoutModificadorInput[]
    connectOrCreate?: gabineteCreateOrConnectWithoutModificadorInput | gabineteCreateOrConnectWithoutModificadorInput[]
    upsert?: gabineteUpsertWithWhereUniqueWithoutModificadorInput | gabineteUpsertWithWhereUniqueWithoutModificadorInput[]
    createMany?: gabineteCreateManyModificadorInputEnvelope
    set?: gabineteWhereUniqueInput | gabineteWhereUniqueInput[]
    disconnect?: gabineteWhereUniqueInput | gabineteWhereUniqueInput[]
    delete?: gabineteWhereUniqueInput | gabineteWhereUniqueInput[]
    connect?: gabineteWhereUniqueInput | gabineteWhereUniqueInput[]
    update?: gabineteUpdateWithWhereUniqueWithoutModificadorInput | gabineteUpdateWithWhereUniqueWithoutModificadorInput[]
    updateMany?: gabineteUpdateManyWithWhereWithoutModificadorInput | gabineteUpdateManyWithWhereWithoutModificadorInput[]
    deleteMany?: gabineteScalarWhereInput | gabineteScalarWhereInput[]
  }

  export type monitorUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<monitorCreateWithoutUsuarioInput, monitorUncheckedCreateWithoutUsuarioInput> | monitorCreateWithoutUsuarioInput[] | monitorUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: monitorCreateOrConnectWithoutUsuarioInput | monitorCreateOrConnectWithoutUsuarioInput[]
    upsert?: monitorUpsertWithWhereUniqueWithoutUsuarioInput | monitorUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: monitorCreateManyUsuarioInputEnvelope
    set?: monitorWhereUniqueInput | monitorWhereUniqueInput[]
    disconnect?: monitorWhereUniqueInput | monitorWhereUniqueInput[]
    delete?: monitorWhereUniqueInput | monitorWhereUniqueInput[]
    connect?: monitorWhereUniqueInput | monitorWhereUniqueInput[]
    update?: monitorUpdateWithWhereUniqueWithoutUsuarioInput | monitorUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: monitorUpdateManyWithWhereWithoutUsuarioInput | monitorUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: monitorScalarWhereInput | monitorScalarWhereInput[]
  }

  export type monitorUpdateManyWithoutModificadorNestedInput = {
    create?: XOR<monitorCreateWithoutModificadorInput, monitorUncheckedCreateWithoutModificadorInput> | monitorCreateWithoutModificadorInput[] | monitorUncheckedCreateWithoutModificadorInput[]
    connectOrCreate?: monitorCreateOrConnectWithoutModificadorInput | monitorCreateOrConnectWithoutModificadorInput[]
    upsert?: monitorUpsertWithWhereUniqueWithoutModificadorInput | monitorUpsertWithWhereUniqueWithoutModificadorInput[]
    createMany?: monitorCreateManyModificadorInputEnvelope
    set?: monitorWhereUniqueInput | monitorWhereUniqueInput[]
    disconnect?: monitorWhereUniqueInput | monitorWhereUniqueInput[]
    delete?: monitorWhereUniqueInput | monitorWhereUniqueInput[]
    connect?: monitorWhereUniqueInput | monitorWhereUniqueInput[]
    update?: monitorUpdateWithWhereUniqueWithoutModificadorInput | monitorUpdateWithWhereUniqueWithoutModificadorInput[]
    updateMany?: monitorUpdateManyWithWhereWithoutModificadorInput | monitorUpdateManyWithWhereWithoutModificadorInput[]
    deleteMany?: monitorScalarWhereInput | monitorScalarWhereInput[]
  }

  export type mouseUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<mouseCreateWithoutUsuarioInput, mouseUncheckedCreateWithoutUsuarioInput> | mouseCreateWithoutUsuarioInput[] | mouseUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: mouseCreateOrConnectWithoutUsuarioInput | mouseCreateOrConnectWithoutUsuarioInput[]
    upsert?: mouseUpsertWithWhereUniqueWithoutUsuarioInput | mouseUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: mouseCreateManyUsuarioInputEnvelope
    set?: mouseWhereUniqueInput | mouseWhereUniqueInput[]
    disconnect?: mouseWhereUniqueInput | mouseWhereUniqueInput[]
    delete?: mouseWhereUniqueInput | mouseWhereUniqueInput[]
    connect?: mouseWhereUniqueInput | mouseWhereUniqueInput[]
    update?: mouseUpdateWithWhereUniqueWithoutUsuarioInput | mouseUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: mouseUpdateManyWithWhereWithoutUsuarioInput | mouseUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: mouseScalarWhereInput | mouseScalarWhereInput[]
  }

  export type mouseUpdateManyWithoutModificadorNestedInput = {
    create?: XOR<mouseCreateWithoutModificadorInput, mouseUncheckedCreateWithoutModificadorInput> | mouseCreateWithoutModificadorInput[] | mouseUncheckedCreateWithoutModificadorInput[]
    connectOrCreate?: mouseCreateOrConnectWithoutModificadorInput | mouseCreateOrConnectWithoutModificadorInput[]
    upsert?: mouseUpsertWithWhereUniqueWithoutModificadorInput | mouseUpsertWithWhereUniqueWithoutModificadorInput[]
    createMany?: mouseCreateManyModificadorInputEnvelope
    set?: mouseWhereUniqueInput | mouseWhereUniqueInput[]
    disconnect?: mouseWhereUniqueInput | mouseWhereUniqueInput[]
    delete?: mouseWhereUniqueInput | mouseWhereUniqueInput[]
    connect?: mouseWhereUniqueInput | mouseWhereUniqueInput[]
    update?: mouseUpdateWithWhereUniqueWithoutModificadorInput | mouseUpdateWithWhereUniqueWithoutModificadorInput[]
    updateMany?: mouseUpdateManyWithWhereWithoutModificadorInput | mouseUpdateManyWithWhereWithoutModificadorInput[]
    deleteMany?: mouseScalarWhereInput | mouseScalarWhereInput[]
  }

  export type estabilizadorUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<estabilizadorCreateWithoutUsuarioInput, estabilizadorUncheckedCreateWithoutUsuarioInput> | estabilizadorCreateWithoutUsuarioInput[] | estabilizadorUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: estabilizadorCreateOrConnectWithoutUsuarioInput | estabilizadorCreateOrConnectWithoutUsuarioInput[]
    upsert?: estabilizadorUpsertWithWhereUniqueWithoutUsuarioInput | estabilizadorUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: estabilizadorCreateManyUsuarioInputEnvelope
    set?: estabilizadorWhereUniqueInput | estabilizadorWhereUniqueInput[]
    disconnect?: estabilizadorWhereUniqueInput | estabilizadorWhereUniqueInput[]
    delete?: estabilizadorWhereUniqueInput | estabilizadorWhereUniqueInput[]
    connect?: estabilizadorWhereUniqueInput | estabilizadorWhereUniqueInput[]
    update?: estabilizadorUpdateWithWhereUniqueWithoutUsuarioInput | estabilizadorUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: estabilizadorUpdateManyWithWhereWithoutUsuarioInput | estabilizadorUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: estabilizadorScalarWhereInput | estabilizadorScalarWhereInput[]
  }

  export type estabilizadorUpdateManyWithoutModificadorNestedInput = {
    create?: XOR<estabilizadorCreateWithoutModificadorInput, estabilizadorUncheckedCreateWithoutModificadorInput> | estabilizadorCreateWithoutModificadorInput[] | estabilizadorUncheckedCreateWithoutModificadorInput[]
    connectOrCreate?: estabilizadorCreateOrConnectWithoutModificadorInput | estabilizadorCreateOrConnectWithoutModificadorInput[]
    upsert?: estabilizadorUpsertWithWhereUniqueWithoutModificadorInput | estabilizadorUpsertWithWhereUniqueWithoutModificadorInput[]
    createMany?: estabilizadorCreateManyModificadorInputEnvelope
    set?: estabilizadorWhereUniqueInput | estabilizadorWhereUniqueInput[]
    disconnect?: estabilizadorWhereUniqueInput | estabilizadorWhereUniqueInput[]
    delete?: estabilizadorWhereUniqueInput | estabilizadorWhereUniqueInput[]
    connect?: estabilizadorWhereUniqueInput | estabilizadorWhereUniqueInput[]
    update?: estabilizadorUpdateWithWhereUniqueWithoutModificadorInput | estabilizadorUpdateWithWhereUniqueWithoutModificadorInput[]
    updateMany?: estabilizadorUpdateManyWithWhereWithoutModificadorInput | estabilizadorUpdateManyWithWhereWithoutModificadorInput[]
    deleteMany?: estabilizadorScalarWhereInput | estabilizadorScalarWhereInput[]
  }

  export type impressoraUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<impressoraCreateWithoutUsuarioInput, impressoraUncheckedCreateWithoutUsuarioInput> | impressoraCreateWithoutUsuarioInput[] | impressoraUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: impressoraCreateOrConnectWithoutUsuarioInput | impressoraCreateOrConnectWithoutUsuarioInput[]
    upsert?: impressoraUpsertWithWhereUniqueWithoutUsuarioInput | impressoraUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: impressoraCreateManyUsuarioInputEnvelope
    set?: impressoraWhereUniqueInput | impressoraWhereUniqueInput[]
    disconnect?: impressoraWhereUniqueInput | impressoraWhereUniqueInput[]
    delete?: impressoraWhereUniqueInput | impressoraWhereUniqueInput[]
    connect?: impressoraWhereUniqueInput | impressoraWhereUniqueInput[]
    update?: impressoraUpdateWithWhereUniqueWithoutUsuarioInput | impressoraUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: impressoraUpdateManyWithWhereWithoutUsuarioInput | impressoraUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: impressoraScalarWhereInput | impressoraScalarWhereInput[]
  }

  export type impressoraUpdateManyWithoutModificadorNestedInput = {
    create?: XOR<impressoraCreateWithoutModificadorInput, impressoraUncheckedCreateWithoutModificadorInput> | impressoraCreateWithoutModificadorInput[] | impressoraUncheckedCreateWithoutModificadorInput[]
    connectOrCreate?: impressoraCreateOrConnectWithoutModificadorInput | impressoraCreateOrConnectWithoutModificadorInput[]
    upsert?: impressoraUpsertWithWhereUniqueWithoutModificadorInput | impressoraUpsertWithWhereUniqueWithoutModificadorInput[]
    createMany?: impressoraCreateManyModificadorInputEnvelope
    set?: impressoraWhereUniqueInput | impressoraWhereUniqueInput[]
    disconnect?: impressoraWhereUniqueInput | impressoraWhereUniqueInput[]
    delete?: impressoraWhereUniqueInput | impressoraWhereUniqueInput[]
    connect?: impressoraWhereUniqueInput | impressoraWhereUniqueInput[]
    update?: impressoraUpdateWithWhereUniqueWithoutModificadorInput | impressoraUpdateWithWhereUniqueWithoutModificadorInput[]
    updateMany?: impressoraUpdateManyWithWhereWithoutModificadorInput | impressoraUpdateManyWithWhereWithoutModificadorInput[]
    deleteMany?: impressoraScalarWhereInput | impressoraScalarWhereInput[]
  }

  export type placamaeUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<placamaeCreateWithoutUsuarioInput, placamaeUncheckedCreateWithoutUsuarioInput> | placamaeCreateWithoutUsuarioInput[] | placamaeUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: placamaeCreateOrConnectWithoutUsuarioInput | placamaeCreateOrConnectWithoutUsuarioInput[]
    upsert?: placamaeUpsertWithWhereUniqueWithoutUsuarioInput | placamaeUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: placamaeCreateManyUsuarioInputEnvelope
    set?: placamaeWhereUniqueInput | placamaeWhereUniqueInput[]
    disconnect?: placamaeWhereUniqueInput | placamaeWhereUniqueInput[]
    delete?: placamaeWhereUniqueInput | placamaeWhereUniqueInput[]
    connect?: placamaeWhereUniqueInput | placamaeWhereUniqueInput[]
    update?: placamaeUpdateWithWhereUniqueWithoutUsuarioInput | placamaeUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: placamaeUpdateManyWithWhereWithoutUsuarioInput | placamaeUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: placamaeScalarWhereInput | placamaeScalarWhereInput[]
  }

  export type placamaeUpdateManyWithoutModificadorNestedInput = {
    create?: XOR<placamaeCreateWithoutModificadorInput, placamaeUncheckedCreateWithoutModificadorInput> | placamaeCreateWithoutModificadorInput[] | placamaeUncheckedCreateWithoutModificadorInput[]
    connectOrCreate?: placamaeCreateOrConnectWithoutModificadorInput | placamaeCreateOrConnectWithoutModificadorInput[]
    upsert?: placamaeUpsertWithWhereUniqueWithoutModificadorInput | placamaeUpsertWithWhereUniqueWithoutModificadorInput[]
    createMany?: placamaeCreateManyModificadorInputEnvelope
    set?: placamaeWhereUniqueInput | placamaeWhereUniqueInput[]
    disconnect?: placamaeWhereUniqueInput | placamaeWhereUniqueInput[]
    delete?: placamaeWhereUniqueInput | placamaeWhereUniqueInput[]
    connect?: placamaeWhereUniqueInput | placamaeWhereUniqueInput[]
    update?: placamaeUpdateWithWhereUniqueWithoutModificadorInput | placamaeUpdateWithWhereUniqueWithoutModificadorInput[]
    updateMany?: placamaeUpdateManyWithWhereWithoutModificadorInput | placamaeUpdateManyWithWhereWithoutModificadorInput[]
    deleteMany?: placamaeScalarWhereInput | placamaeScalarWhereInput[]
  }

  export type notebookUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<notebookCreateWithoutUsuarioInput, notebookUncheckedCreateWithoutUsuarioInput> | notebookCreateWithoutUsuarioInput[] | notebookUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: notebookCreateOrConnectWithoutUsuarioInput | notebookCreateOrConnectWithoutUsuarioInput[]
    upsert?: notebookUpsertWithWhereUniqueWithoutUsuarioInput | notebookUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: notebookCreateManyUsuarioInputEnvelope
    set?: notebookWhereUniqueInput | notebookWhereUniqueInput[]
    disconnect?: notebookWhereUniqueInput | notebookWhereUniqueInput[]
    delete?: notebookWhereUniqueInput | notebookWhereUniqueInput[]
    connect?: notebookWhereUniqueInput | notebookWhereUniqueInput[]
    update?: notebookUpdateWithWhereUniqueWithoutUsuarioInput | notebookUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: notebookUpdateManyWithWhereWithoutUsuarioInput | notebookUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: notebookScalarWhereInput | notebookScalarWhereInput[]
  }

  export type notebookUpdateManyWithoutModificadorNestedInput = {
    create?: XOR<notebookCreateWithoutModificadorInput, notebookUncheckedCreateWithoutModificadorInput> | notebookCreateWithoutModificadorInput[] | notebookUncheckedCreateWithoutModificadorInput[]
    connectOrCreate?: notebookCreateOrConnectWithoutModificadorInput | notebookCreateOrConnectWithoutModificadorInput[]
    upsert?: notebookUpsertWithWhereUniqueWithoutModificadorInput | notebookUpsertWithWhereUniqueWithoutModificadorInput[]
    createMany?: notebookCreateManyModificadorInputEnvelope
    set?: notebookWhereUniqueInput | notebookWhereUniqueInput[]
    disconnect?: notebookWhereUniqueInput | notebookWhereUniqueInput[]
    delete?: notebookWhereUniqueInput | notebookWhereUniqueInput[]
    connect?: notebookWhereUniqueInput | notebookWhereUniqueInput[]
    update?: notebookUpdateWithWhereUniqueWithoutModificadorInput | notebookUpdateWithWhereUniqueWithoutModificadorInput[]
    updateMany?: notebookUpdateManyWithWhereWithoutModificadorInput | notebookUpdateManyWithWhereWithoutModificadorInput[]
    deleteMany?: notebookScalarWhereInput | notebookScalarWhereInput[]
  }

  export type processadorUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<processadorCreateWithoutUsuarioInput, processadorUncheckedCreateWithoutUsuarioInput> | processadorCreateWithoutUsuarioInput[] | processadorUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: processadorCreateOrConnectWithoutUsuarioInput | processadorCreateOrConnectWithoutUsuarioInput[]
    upsert?: processadorUpsertWithWhereUniqueWithoutUsuarioInput | processadorUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: processadorCreateManyUsuarioInputEnvelope
    set?: processadorWhereUniqueInput | processadorWhereUniqueInput[]
    disconnect?: processadorWhereUniqueInput | processadorWhereUniqueInput[]
    delete?: processadorWhereUniqueInput | processadorWhereUniqueInput[]
    connect?: processadorWhereUniqueInput | processadorWhereUniqueInput[]
    update?: processadorUpdateWithWhereUniqueWithoutUsuarioInput | processadorUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: processadorUpdateManyWithWhereWithoutUsuarioInput | processadorUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: processadorScalarWhereInput | processadorScalarWhereInput[]
  }

  export type processadorUpdateManyWithoutModificadorNestedInput = {
    create?: XOR<processadorCreateWithoutModificadorInput, processadorUncheckedCreateWithoutModificadorInput> | processadorCreateWithoutModificadorInput[] | processadorUncheckedCreateWithoutModificadorInput[]
    connectOrCreate?: processadorCreateOrConnectWithoutModificadorInput | processadorCreateOrConnectWithoutModificadorInput[]
    upsert?: processadorUpsertWithWhereUniqueWithoutModificadorInput | processadorUpsertWithWhereUniqueWithoutModificadorInput[]
    createMany?: processadorCreateManyModificadorInputEnvelope
    set?: processadorWhereUniqueInput | processadorWhereUniqueInput[]
    disconnect?: processadorWhereUniqueInput | processadorWhereUniqueInput[]
    delete?: processadorWhereUniqueInput | processadorWhereUniqueInput[]
    connect?: processadorWhereUniqueInput | processadorWhereUniqueInput[]
    update?: processadorUpdateWithWhereUniqueWithoutModificadorInput | processadorUpdateWithWhereUniqueWithoutModificadorInput[]
    updateMany?: processadorUpdateManyWithWhereWithoutModificadorInput | processadorUpdateManyWithWhereWithoutModificadorInput[]
    deleteMany?: processadorScalarWhereInput | processadorScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type descarteUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<descarteCreateWithoutUsuarioInput, descarteUncheckedCreateWithoutUsuarioInput> | descarteCreateWithoutUsuarioInput[] | descarteUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: descarteCreateOrConnectWithoutUsuarioInput | descarteCreateOrConnectWithoutUsuarioInput[]
    upsert?: descarteUpsertWithWhereUniqueWithoutUsuarioInput | descarteUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: descarteCreateManyUsuarioInputEnvelope
    set?: descarteWhereUniqueInput | descarteWhereUniqueInput[]
    disconnect?: descarteWhereUniqueInput | descarteWhereUniqueInput[]
    delete?: descarteWhereUniqueInput | descarteWhereUniqueInput[]
    connect?: descarteWhereUniqueInput | descarteWhereUniqueInput[]
    update?: descarteUpdateWithWhereUniqueWithoutUsuarioInput | descarteUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: descarteUpdateManyWithWhereWithoutUsuarioInput | descarteUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: descarteScalarWhereInput | descarteScalarWhereInput[]
  }

  export type doacaoUncheckedUpdateManyWithoutDonatarioNestedInput = {
    create?: XOR<doacaoCreateWithoutDonatarioInput, doacaoUncheckedCreateWithoutDonatarioInput> | doacaoCreateWithoutDonatarioInput[] | doacaoUncheckedCreateWithoutDonatarioInput[]
    connectOrCreate?: doacaoCreateOrConnectWithoutDonatarioInput | doacaoCreateOrConnectWithoutDonatarioInput[]
    upsert?: doacaoUpsertWithWhereUniqueWithoutDonatarioInput | doacaoUpsertWithWhereUniqueWithoutDonatarioInput[]
    createMany?: doacaoCreateManyDonatarioInputEnvelope
    set?: doacaoWhereUniqueInput | doacaoWhereUniqueInput[]
    disconnect?: doacaoWhereUniqueInput | doacaoWhereUniqueInput[]
    delete?: doacaoWhereUniqueInput | doacaoWhereUniqueInput[]
    connect?: doacaoWhereUniqueInput | doacaoWhereUniqueInput[]
    update?: doacaoUpdateWithWhereUniqueWithoutDonatarioInput | doacaoUpdateWithWhereUniqueWithoutDonatarioInput[]
    updateMany?: doacaoUpdateManyWithWhereWithoutDonatarioInput | doacaoUpdateManyWithWhereWithoutDonatarioInput[]
    deleteMany?: doacaoScalarWhereInput | doacaoScalarWhereInput[]
  }

  export type doacaoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<doacaoUsuarioCreateWithoutUsuarioInput, doacaoUsuarioUncheckedCreateWithoutUsuarioInput> | doacaoUsuarioCreateWithoutUsuarioInput[] | doacaoUsuarioUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: doacaoUsuarioCreateOrConnectWithoutUsuarioInput | doacaoUsuarioCreateOrConnectWithoutUsuarioInput[]
    upsert?: doacaoUsuarioUpsertWithWhereUniqueWithoutUsuarioInput | doacaoUsuarioUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: doacaoUsuarioCreateManyUsuarioInputEnvelope
    set?: doacaoUsuarioWhereUniqueInput | doacaoUsuarioWhereUniqueInput[]
    disconnect?: doacaoUsuarioWhereUniqueInput | doacaoUsuarioWhereUniqueInput[]
    delete?: doacaoUsuarioWhereUniqueInput | doacaoUsuarioWhereUniqueInput[]
    connect?: doacaoUsuarioWhereUniqueInput | doacaoUsuarioWhereUniqueInput[]
    update?: doacaoUsuarioUpdateWithWhereUniqueWithoutUsuarioInput | doacaoUsuarioUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: doacaoUsuarioUpdateManyWithWhereWithoutUsuarioInput | doacaoUsuarioUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: doacaoUsuarioScalarWhereInput | doacaoUsuarioScalarWhereInput[]
  }

  export type solicitacaoUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<solicitacaoCreateWithoutUsuarioInput, solicitacaoUncheckedCreateWithoutUsuarioInput> | solicitacaoCreateWithoutUsuarioInput[] | solicitacaoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: solicitacaoCreateOrConnectWithoutUsuarioInput | solicitacaoCreateOrConnectWithoutUsuarioInput[]
    upsert?: solicitacaoUpsertWithWhereUniqueWithoutUsuarioInput | solicitacaoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: solicitacaoCreateManyUsuarioInputEnvelope
    set?: solicitacaoWhereUniqueInput | solicitacaoWhereUniqueInput[]
    disconnect?: solicitacaoWhereUniqueInput | solicitacaoWhereUniqueInput[]
    delete?: solicitacaoWhereUniqueInput | solicitacaoWhereUniqueInput[]
    connect?: solicitacaoWhereUniqueInput | solicitacaoWhereUniqueInput[]
    update?: solicitacaoUpdateWithWhereUniqueWithoutUsuarioInput | solicitacaoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: solicitacaoUpdateManyWithWhereWithoutUsuarioInput | solicitacaoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: solicitacaoScalarWhereInput | solicitacaoScalarWhereInput[]
  }

  export type tecladoUncheckedUpdateManyWithoutModificadorNestedInput = {
    create?: XOR<tecladoCreateWithoutModificadorInput, tecladoUncheckedCreateWithoutModificadorInput> | tecladoCreateWithoutModificadorInput[] | tecladoUncheckedCreateWithoutModificadorInput[]
    connectOrCreate?: tecladoCreateOrConnectWithoutModificadorInput | tecladoCreateOrConnectWithoutModificadorInput[]
    upsert?: tecladoUpsertWithWhereUniqueWithoutModificadorInput | tecladoUpsertWithWhereUniqueWithoutModificadorInput[]
    createMany?: tecladoCreateManyModificadorInputEnvelope
    set?: tecladoWhereUniqueInput | tecladoWhereUniqueInput[]
    disconnect?: tecladoWhereUniqueInput | tecladoWhereUniqueInput[]
    delete?: tecladoWhereUniqueInput | tecladoWhereUniqueInput[]
    connect?: tecladoWhereUniqueInput | tecladoWhereUniqueInput[]
    update?: tecladoUpdateWithWhereUniqueWithoutModificadorInput | tecladoUpdateWithWhereUniqueWithoutModificadorInput[]
    updateMany?: tecladoUpdateManyWithWhereWithoutModificadorInput | tecladoUpdateManyWithWhereWithoutModificadorInput[]
    deleteMany?: tecladoScalarWhereInput | tecladoScalarWhereInput[]
  }

  export type tecladoUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<tecladoCreateWithoutUsuarioInput, tecladoUncheckedCreateWithoutUsuarioInput> | tecladoCreateWithoutUsuarioInput[] | tecladoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: tecladoCreateOrConnectWithoutUsuarioInput | tecladoCreateOrConnectWithoutUsuarioInput[]
    upsert?: tecladoUpsertWithWhereUniqueWithoutUsuarioInput | tecladoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: tecladoCreateManyUsuarioInputEnvelope
    set?: tecladoWhereUniqueInput | tecladoWhereUniqueInput[]
    disconnect?: tecladoWhereUniqueInput | tecladoWhereUniqueInput[]
    delete?: tecladoWhereUniqueInput | tecladoWhereUniqueInput[]
    connect?: tecladoWhereUniqueInput | tecladoWhereUniqueInput[]
    update?: tecladoUpdateWithWhereUniqueWithoutUsuarioInput | tecladoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: tecladoUpdateManyWithWhereWithoutUsuarioInput | tecladoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: tecladoScalarWhereInput | tecladoScalarWhereInput[]
  }

  export type hdUncheckedUpdateManyWithoutAlunoNestedInput = {
    create?: XOR<hdCreateWithoutAlunoInput, hdUncheckedCreateWithoutAlunoInput> | hdCreateWithoutAlunoInput[] | hdUncheckedCreateWithoutAlunoInput[]
    connectOrCreate?: hdCreateOrConnectWithoutAlunoInput | hdCreateOrConnectWithoutAlunoInput[]
    upsert?: hdUpsertWithWhereUniqueWithoutAlunoInput | hdUpsertWithWhereUniqueWithoutAlunoInput[]
    createMany?: hdCreateManyAlunoInputEnvelope
    set?: hdWhereUniqueInput | hdWhereUniqueInput[]
    disconnect?: hdWhereUniqueInput | hdWhereUniqueInput[]
    delete?: hdWhereUniqueInput | hdWhereUniqueInput[]
    connect?: hdWhereUniqueInput | hdWhereUniqueInput[]
    update?: hdUpdateWithWhereUniqueWithoutAlunoInput | hdUpdateWithWhereUniqueWithoutAlunoInput[]
    updateMany?: hdUpdateManyWithWhereWithoutAlunoInput | hdUpdateManyWithWhereWithoutAlunoInput[]
    deleteMany?: hdScalarWhereInput | hdScalarWhereInput[]
  }

  export type hdUncheckedUpdateManyWithoutModificadorNestedInput = {
    create?: XOR<hdCreateWithoutModificadorInput, hdUncheckedCreateWithoutModificadorInput> | hdCreateWithoutModificadorInput[] | hdUncheckedCreateWithoutModificadorInput[]
    connectOrCreate?: hdCreateOrConnectWithoutModificadorInput | hdCreateOrConnectWithoutModificadorInput[]
    upsert?: hdUpsertWithWhereUniqueWithoutModificadorInput | hdUpsertWithWhereUniqueWithoutModificadorInput[]
    createMany?: hdCreateManyModificadorInputEnvelope
    set?: hdWhereUniqueInput | hdWhereUniqueInput[]
    disconnect?: hdWhereUniqueInput | hdWhereUniqueInput[]
    delete?: hdWhereUniqueInput | hdWhereUniqueInput[]
    connect?: hdWhereUniqueInput | hdWhereUniqueInput[]
    update?: hdUpdateWithWhereUniqueWithoutModificadorInput | hdUpdateWithWhereUniqueWithoutModificadorInput[]
    updateMany?: hdUpdateManyWithWhereWithoutModificadorInput | hdUpdateManyWithWhereWithoutModificadorInput[]
    deleteMany?: hdScalarWhereInput | hdScalarWhereInput[]
  }

  export type fontedealimentacaoUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<fontedealimentacaoCreateWithoutUsuarioInput, fontedealimentacaoUncheckedCreateWithoutUsuarioInput> | fontedealimentacaoCreateWithoutUsuarioInput[] | fontedealimentacaoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: fontedealimentacaoCreateOrConnectWithoutUsuarioInput | fontedealimentacaoCreateOrConnectWithoutUsuarioInput[]
    upsert?: fontedealimentacaoUpsertWithWhereUniqueWithoutUsuarioInput | fontedealimentacaoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: fontedealimentacaoCreateManyUsuarioInputEnvelope
    set?: fontedealimentacaoWhereUniqueInput | fontedealimentacaoWhereUniqueInput[]
    disconnect?: fontedealimentacaoWhereUniqueInput | fontedealimentacaoWhereUniqueInput[]
    delete?: fontedealimentacaoWhereUniqueInput | fontedealimentacaoWhereUniqueInput[]
    connect?: fontedealimentacaoWhereUniqueInput | fontedealimentacaoWhereUniqueInput[]
    update?: fontedealimentacaoUpdateWithWhereUniqueWithoutUsuarioInput | fontedealimentacaoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: fontedealimentacaoUpdateManyWithWhereWithoutUsuarioInput | fontedealimentacaoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: fontedealimentacaoScalarWhereInput | fontedealimentacaoScalarWhereInput[]
  }

  export type fontedealimentacaoUncheckedUpdateManyWithoutModificadorNestedInput = {
    create?: XOR<fontedealimentacaoCreateWithoutModificadorInput, fontedealimentacaoUncheckedCreateWithoutModificadorInput> | fontedealimentacaoCreateWithoutModificadorInput[] | fontedealimentacaoUncheckedCreateWithoutModificadorInput[]
    connectOrCreate?: fontedealimentacaoCreateOrConnectWithoutModificadorInput | fontedealimentacaoCreateOrConnectWithoutModificadorInput[]
    upsert?: fontedealimentacaoUpsertWithWhereUniqueWithoutModificadorInput | fontedealimentacaoUpsertWithWhereUniqueWithoutModificadorInput[]
    createMany?: fontedealimentacaoCreateManyModificadorInputEnvelope
    set?: fontedealimentacaoWhereUniqueInput | fontedealimentacaoWhereUniqueInput[]
    disconnect?: fontedealimentacaoWhereUniqueInput | fontedealimentacaoWhereUniqueInput[]
    delete?: fontedealimentacaoWhereUniqueInput | fontedealimentacaoWhereUniqueInput[]
    connect?: fontedealimentacaoWhereUniqueInput | fontedealimentacaoWhereUniqueInput[]
    update?: fontedealimentacaoUpdateWithWhereUniqueWithoutModificadorInput | fontedealimentacaoUpdateWithWhereUniqueWithoutModificadorInput[]
    updateMany?: fontedealimentacaoUpdateManyWithWhereWithoutModificadorInput | fontedealimentacaoUpdateManyWithWhereWithoutModificadorInput[]
    deleteMany?: fontedealimentacaoScalarWhereInput | fontedealimentacaoScalarWhereInput[]
  }

  export type gabineteUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<gabineteCreateWithoutUsuarioInput, gabineteUncheckedCreateWithoutUsuarioInput> | gabineteCreateWithoutUsuarioInput[] | gabineteUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: gabineteCreateOrConnectWithoutUsuarioInput | gabineteCreateOrConnectWithoutUsuarioInput[]
    upsert?: gabineteUpsertWithWhereUniqueWithoutUsuarioInput | gabineteUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: gabineteCreateManyUsuarioInputEnvelope
    set?: gabineteWhereUniqueInput | gabineteWhereUniqueInput[]
    disconnect?: gabineteWhereUniqueInput | gabineteWhereUniqueInput[]
    delete?: gabineteWhereUniqueInput | gabineteWhereUniqueInput[]
    connect?: gabineteWhereUniqueInput | gabineteWhereUniqueInput[]
    update?: gabineteUpdateWithWhereUniqueWithoutUsuarioInput | gabineteUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: gabineteUpdateManyWithWhereWithoutUsuarioInput | gabineteUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: gabineteScalarWhereInput | gabineteScalarWhereInput[]
  }

  export type gabineteUncheckedUpdateManyWithoutModificadorNestedInput = {
    create?: XOR<gabineteCreateWithoutModificadorInput, gabineteUncheckedCreateWithoutModificadorInput> | gabineteCreateWithoutModificadorInput[] | gabineteUncheckedCreateWithoutModificadorInput[]
    connectOrCreate?: gabineteCreateOrConnectWithoutModificadorInput | gabineteCreateOrConnectWithoutModificadorInput[]
    upsert?: gabineteUpsertWithWhereUniqueWithoutModificadorInput | gabineteUpsertWithWhereUniqueWithoutModificadorInput[]
    createMany?: gabineteCreateManyModificadorInputEnvelope
    set?: gabineteWhereUniqueInput | gabineteWhereUniqueInput[]
    disconnect?: gabineteWhereUniqueInput | gabineteWhereUniqueInput[]
    delete?: gabineteWhereUniqueInput | gabineteWhereUniqueInput[]
    connect?: gabineteWhereUniqueInput | gabineteWhereUniqueInput[]
    update?: gabineteUpdateWithWhereUniqueWithoutModificadorInput | gabineteUpdateWithWhereUniqueWithoutModificadorInput[]
    updateMany?: gabineteUpdateManyWithWhereWithoutModificadorInput | gabineteUpdateManyWithWhereWithoutModificadorInput[]
    deleteMany?: gabineteScalarWhereInput | gabineteScalarWhereInput[]
  }

  export type monitorUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<monitorCreateWithoutUsuarioInput, monitorUncheckedCreateWithoutUsuarioInput> | monitorCreateWithoutUsuarioInput[] | monitorUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: monitorCreateOrConnectWithoutUsuarioInput | monitorCreateOrConnectWithoutUsuarioInput[]
    upsert?: monitorUpsertWithWhereUniqueWithoutUsuarioInput | monitorUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: monitorCreateManyUsuarioInputEnvelope
    set?: monitorWhereUniqueInput | monitorWhereUniqueInput[]
    disconnect?: monitorWhereUniqueInput | monitorWhereUniqueInput[]
    delete?: monitorWhereUniqueInput | monitorWhereUniqueInput[]
    connect?: monitorWhereUniqueInput | monitorWhereUniqueInput[]
    update?: monitorUpdateWithWhereUniqueWithoutUsuarioInput | monitorUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: monitorUpdateManyWithWhereWithoutUsuarioInput | monitorUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: monitorScalarWhereInput | monitorScalarWhereInput[]
  }

  export type monitorUncheckedUpdateManyWithoutModificadorNestedInput = {
    create?: XOR<monitorCreateWithoutModificadorInput, monitorUncheckedCreateWithoutModificadorInput> | monitorCreateWithoutModificadorInput[] | monitorUncheckedCreateWithoutModificadorInput[]
    connectOrCreate?: monitorCreateOrConnectWithoutModificadorInput | monitorCreateOrConnectWithoutModificadorInput[]
    upsert?: monitorUpsertWithWhereUniqueWithoutModificadorInput | monitorUpsertWithWhereUniqueWithoutModificadorInput[]
    createMany?: monitorCreateManyModificadorInputEnvelope
    set?: monitorWhereUniqueInput | monitorWhereUniqueInput[]
    disconnect?: monitorWhereUniqueInput | monitorWhereUniqueInput[]
    delete?: monitorWhereUniqueInput | monitorWhereUniqueInput[]
    connect?: monitorWhereUniqueInput | monitorWhereUniqueInput[]
    update?: monitorUpdateWithWhereUniqueWithoutModificadorInput | monitorUpdateWithWhereUniqueWithoutModificadorInput[]
    updateMany?: monitorUpdateManyWithWhereWithoutModificadorInput | monitorUpdateManyWithWhereWithoutModificadorInput[]
    deleteMany?: monitorScalarWhereInput | monitorScalarWhereInput[]
  }

  export type mouseUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<mouseCreateWithoutUsuarioInput, mouseUncheckedCreateWithoutUsuarioInput> | mouseCreateWithoutUsuarioInput[] | mouseUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: mouseCreateOrConnectWithoutUsuarioInput | mouseCreateOrConnectWithoutUsuarioInput[]
    upsert?: mouseUpsertWithWhereUniqueWithoutUsuarioInput | mouseUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: mouseCreateManyUsuarioInputEnvelope
    set?: mouseWhereUniqueInput | mouseWhereUniqueInput[]
    disconnect?: mouseWhereUniqueInput | mouseWhereUniqueInput[]
    delete?: mouseWhereUniqueInput | mouseWhereUniqueInput[]
    connect?: mouseWhereUniqueInput | mouseWhereUniqueInput[]
    update?: mouseUpdateWithWhereUniqueWithoutUsuarioInput | mouseUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: mouseUpdateManyWithWhereWithoutUsuarioInput | mouseUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: mouseScalarWhereInput | mouseScalarWhereInput[]
  }

  export type mouseUncheckedUpdateManyWithoutModificadorNestedInput = {
    create?: XOR<mouseCreateWithoutModificadorInput, mouseUncheckedCreateWithoutModificadorInput> | mouseCreateWithoutModificadorInput[] | mouseUncheckedCreateWithoutModificadorInput[]
    connectOrCreate?: mouseCreateOrConnectWithoutModificadorInput | mouseCreateOrConnectWithoutModificadorInput[]
    upsert?: mouseUpsertWithWhereUniqueWithoutModificadorInput | mouseUpsertWithWhereUniqueWithoutModificadorInput[]
    createMany?: mouseCreateManyModificadorInputEnvelope
    set?: mouseWhereUniqueInput | mouseWhereUniqueInput[]
    disconnect?: mouseWhereUniqueInput | mouseWhereUniqueInput[]
    delete?: mouseWhereUniqueInput | mouseWhereUniqueInput[]
    connect?: mouseWhereUniqueInput | mouseWhereUniqueInput[]
    update?: mouseUpdateWithWhereUniqueWithoutModificadorInput | mouseUpdateWithWhereUniqueWithoutModificadorInput[]
    updateMany?: mouseUpdateManyWithWhereWithoutModificadorInput | mouseUpdateManyWithWhereWithoutModificadorInput[]
    deleteMany?: mouseScalarWhereInput | mouseScalarWhereInput[]
  }

  export type estabilizadorUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<estabilizadorCreateWithoutUsuarioInput, estabilizadorUncheckedCreateWithoutUsuarioInput> | estabilizadorCreateWithoutUsuarioInput[] | estabilizadorUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: estabilizadorCreateOrConnectWithoutUsuarioInput | estabilizadorCreateOrConnectWithoutUsuarioInput[]
    upsert?: estabilizadorUpsertWithWhereUniqueWithoutUsuarioInput | estabilizadorUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: estabilizadorCreateManyUsuarioInputEnvelope
    set?: estabilizadorWhereUniqueInput | estabilizadorWhereUniqueInput[]
    disconnect?: estabilizadorWhereUniqueInput | estabilizadorWhereUniqueInput[]
    delete?: estabilizadorWhereUniqueInput | estabilizadorWhereUniqueInput[]
    connect?: estabilizadorWhereUniqueInput | estabilizadorWhereUniqueInput[]
    update?: estabilizadorUpdateWithWhereUniqueWithoutUsuarioInput | estabilizadorUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: estabilizadorUpdateManyWithWhereWithoutUsuarioInput | estabilizadorUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: estabilizadorScalarWhereInput | estabilizadorScalarWhereInput[]
  }

  export type estabilizadorUncheckedUpdateManyWithoutModificadorNestedInput = {
    create?: XOR<estabilizadorCreateWithoutModificadorInput, estabilizadorUncheckedCreateWithoutModificadorInput> | estabilizadorCreateWithoutModificadorInput[] | estabilizadorUncheckedCreateWithoutModificadorInput[]
    connectOrCreate?: estabilizadorCreateOrConnectWithoutModificadorInput | estabilizadorCreateOrConnectWithoutModificadorInput[]
    upsert?: estabilizadorUpsertWithWhereUniqueWithoutModificadorInput | estabilizadorUpsertWithWhereUniqueWithoutModificadorInput[]
    createMany?: estabilizadorCreateManyModificadorInputEnvelope
    set?: estabilizadorWhereUniqueInput | estabilizadorWhereUniqueInput[]
    disconnect?: estabilizadorWhereUniqueInput | estabilizadorWhereUniqueInput[]
    delete?: estabilizadorWhereUniqueInput | estabilizadorWhereUniqueInput[]
    connect?: estabilizadorWhereUniqueInput | estabilizadorWhereUniqueInput[]
    update?: estabilizadorUpdateWithWhereUniqueWithoutModificadorInput | estabilizadorUpdateWithWhereUniqueWithoutModificadorInput[]
    updateMany?: estabilizadorUpdateManyWithWhereWithoutModificadorInput | estabilizadorUpdateManyWithWhereWithoutModificadorInput[]
    deleteMany?: estabilizadorScalarWhereInput | estabilizadorScalarWhereInput[]
  }

  export type impressoraUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<impressoraCreateWithoutUsuarioInput, impressoraUncheckedCreateWithoutUsuarioInput> | impressoraCreateWithoutUsuarioInput[] | impressoraUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: impressoraCreateOrConnectWithoutUsuarioInput | impressoraCreateOrConnectWithoutUsuarioInput[]
    upsert?: impressoraUpsertWithWhereUniqueWithoutUsuarioInput | impressoraUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: impressoraCreateManyUsuarioInputEnvelope
    set?: impressoraWhereUniqueInput | impressoraWhereUniqueInput[]
    disconnect?: impressoraWhereUniqueInput | impressoraWhereUniqueInput[]
    delete?: impressoraWhereUniqueInput | impressoraWhereUniqueInput[]
    connect?: impressoraWhereUniqueInput | impressoraWhereUniqueInput[]
    update?: impressoraUpdateWithWhereUniqueWithoutUsuarioInput | impressoraUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: impressoraUpdateManyWithWhereWithoutUsuarioInput | impressoraUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: impressoraScalarWhereInput | impressoraScalarWhereInput[]
  }

  export type impressoraUncheckedUpdateManyWithoutModificadorNestedInput = {
    create?: XOR<impressoraCreateWithoutModificadorInput, impressoraUncheckedCreateWithoutModificadorInput> | impressoraCreateWithoutModificadorInput[] | impressoraUncheckedCreateWithoutModificadorInput[]
    connectOrCreate?: impressoraCreateOrConnectWithoutModificadorInput | impressoraCreateOrConnectWithoutModificadorInput[]
    upsert?: impressoraUpsertWithWhereUniqueWithoutModificadorInput | impressoraUpsertWithWhereUniqueWithoutModificadorInput[]
    createMany?: impressoraCreateManyModificadorInputEnvelope
    set?: impressoraWhereUniqueInput | impressoraWhereUniqueInput[]
    disconnect?: impressoraWhereUniqueInput | impressoraWhereUniqueInput[]
    delete?: impressoraWhereUniqueInput | impressoraWhereUniqueInput[]
    connect?: impressoraWhereUniqueInput | impressoraWhereUniqueInput[]
    update?: impressoraUpdateWithWhereUniqueWithoutModificadorInput | impressoraUpdateWithWhereUniqueWithoutModificadorInput[]
    updateMany?: impressoraUpdateManyWithWhereWithoutModificadorInput | impressoraUpdateManyWithWhereWithoutModificadorInput[]
    deleteMany?: impressoraScalarWhereInput | impressoraScalarWhereInput[]
  }

  export type placamaeUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<placamaeCreateWithoutUsuarioInput, placamaeUncheckedCreateWithoutUsuarioInput> | placamaeCreateWithoutUsuarioInput[] | placamaeUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: placamaeCreateOrConnectWithoutUsuarioInput | placamaeCreateOrConnectWithoutUsuarioInput[]
    upsert?: placamaeUpsertWithWhereUniqueWithoutUsuarioInput | placamaeUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: placamaeCreateManyUsuarioInputEnvelope
    set?: placamaeWhereUniqueInput | placamaeWhereUniqueInput[]
    disconnect?: placamaeWhereUniqueInput | placamaeWhereUniqueInput[]
    delete?: placamaeWhereUniqueInput | placamaeWhereUniqueInput[]
    connect?: placamaeWhereUniqueInput | placamaeWhereUniqueInput[]
    update?: placamaeUpdateWithWhereUniqueWithoutUsuarioInput | placamaeUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: placamaeUpdateManyWithWhereWithoutUsuarioInput | placamaeUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: placamaeScalarWhereInput | placamaeScalarWhereInput[]
  }

  export type placamaeUncheckedUpdateManyWithoutModificadorNestedInput = {
    create?: XOR<placamaeCreateWithoutModificadorInput, placamaeUncheckedCreateWithoutModificadorInput> | placamaeCreateWithoutModificadorInput[] | placamaeUncheckedCreateWithoutModificadorInput[]
    connectOrCreate?: placamaeCreateOrConnectWithoutModificadorInput | placamaeCreateOrConnectWithoutModificadorInput[]
    upsert?: placamaeUpsertWithWhereUniqueWithoutModificadorInput | placamaeUpsertWithWhereUniqueWithoutModificadorInput[]
    createMany?: placamaeCreateManyModificadorInputEnvelope
    set?: placamaeWhereUniqueInput | placamaeWhereUniqueInput[]
    disconnect?: placamaeWhereUniqueInput | placamaeWhereUniqueInput[]
    delete?: placamaeWhereUniqueInput | placamaeWhereUniqueInput[]
    connect?: placamaeWhereUniqueInput | placamaeWhereUniqueInput[]
    update?: placamaeUpdateWithWhereUniqueWithoutModificadorInput | placamaeUpdateWithWhereUniqueWithoutModificadorInput[]
    updateMany?: placamaeUpdateManyWithWhereWithoutModificadorInput | placamaeUpdateManyWithWhereWithoutModificadorInput[]
    deleteMany?: placamaeScalarWhereInput | placamaeScalarWhereInput[]
  }

  export type notebookUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<notebookCreateWithoutUsuarioInput, notebookUncheckedCreateWithoutUsuarioInput> | notebookCreateWithoutUsuarioInput[] | notebookUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: notebookCreateOrConnectWithoutUsuarioInput | notebookCreateOrConnectWithoutUsuarioInput[]
    upsert?: notebookUpsertWithWhereUniqueWithoutUsuarioInput | notebookUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: notebookCreateManyUsuarioInputEnvelope
    set?: notebookWhereUniqueInput | notebookWhereUniqueInput[]
    disconnect?: notebookWhereUniqueInput | notebookWhereUniqueInput[]
    delete?: notebookWhereUniqueInput | notebookWhereUniqueInput[]
    connect?: notebookWhereUniqueInput | notebookWhereUniqueInput[]
    update?: notebookUpdateWithWhereUniqueWithoutUsuarioInput | notebookUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: notebookUpdateManyWithWhereWithoutUsuarioInput | notebookUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: notebookScalarWhereInput | notebookScalarWhereInput[]
  }

  export type notebookUncheckedUpdateManyWithoutModificadorNestedInput = {
    create?: XOR<notebookCreateWithoutModificadorInput, notebookUncheckedCreateWithoutModificadorInput> | notebookCreateWithoutModificadorInput[] | notebookUncheckedCreateWithoutModificadorInput[]
    connectOrCreate?: notebookCreateOrConnectWithoutModificadorInput | notebookCreateOrConnectWithoutModificadorInput[]
    upsert?: notebookUpsertWithWhereUniqueWithoutModificadorInput | notebookUpsertWithWhereUniqueWithoutModificadorInput[]
    createMany?: notebookCreateManyModificadorInputEnvelope
    set?: notebookWhereUniqueInput | notebookWhereUniqueInput[]
    disconnect?: notebookWhereUniqueInput | notebookWhereUniqueInput[]
    delete?: notebookWhereUniqueInput | notebookWhereUniqueInput[]
    connect?: notebookWhereUniqueInput | notebookWhereUniqueInput[]
    update?: notebookUpdateWithWhereUniqueWithoutModificadorInput | notebookUpdateWithWhereUniqueWithoutModificadorInput[]
    updateMany?: notebookUpdateManyWithWhereWithoutModificadorInput | notebookUpdateManyWithWhereWithoutModificadorInput[]
    deleteMany?: notebookScalarWhereInput | notebookScalarWhereInput[]
  }

  export type processadorUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<processadorCreateWithoutUsuarioInput, processadorUncheckedCreateWithoutUsuarioInput> | processadorCreateWithoutUsuarioInput[] | processadorUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: processadorCreateOrConnectWithoutUsuarioInput | processadorCreateOrConnectWithoutUsuarioInput[]
    upsert?: processadorUpsertWithWhereUniqueWithoutUsuarioInput | processadorUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: processadorCreateManyUsuarioInputEnvelope
    set?: processadorWhereUniqueInput | processadorWhereUniqueInput[]
    disconnect?: processadorWhereUniqueInput | processadorWhereUniqueInput[]
    delete?: processadorWhereUniqueInput | processadorWhereUniqueInput[]
    connect?: processadorWhereUniqueInput | processadorWhereUniqueInput[]
    update?: processadorUpdateWithWhereUniqueWithoutUsuarioInput | processadorUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: processadorUpdateManyWithWhereWithoutUsuarioInput | processadorUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: processadorScalarWhereInput | processadorScalarWhereInput[]
  }

  export type processadorUncheckedUpdateManyWithoutModificadorNestedInput = {
    create?: XOR<processadorCreateWithoutModificadorInput, processadorUncheckedCreateWithoutModificadorInput> | processadorCreateWithoutModificadorInput[] | processadorUncheckedCreateWithoutModificadorInput[]
    connectOrCreate?: processadorCreateOrConnectWithoutModificadorInput | processadorCreateOrConnectWithoutModificadorInput[]
    upsert?: processadorUpsertWithWhereUniqueWithoutModificadorInput | processadorUpsertWithWhereUniqueWithoutModificadorInput[]
    createMany?: processadorCreateManyModificadorInputEnvelope
    set?: processadorWhereUniqueInput | processadorWhereUniqueInput[]
    disconnect?: processadorWhereUniqueInput | processadorWhereUniqueInput[]
    delete?: processadorWhereUniqueInput | processadorWhereUniqueInput[]
    connect?: processadorWhereUniqueInput | processadorWhereUniqueInput[]
    update?: processadorUpdateWithWhereUniqueWithoutModificadorInput | processadorUpdateWithWhereUniqueWithoutModificadorInput[]
    updateMany?: processadorUpdateManyWithWhereWithoutModificadorInput | processadorUpdateManyWithWhereWithoutModificadorInput[]
    deleteMany?: processadorScalarWhereInput | processadorScalarWhereInput[]
  }

  export type doacaoCreateNestedManyWithoutUsuariofisicoInput = {
    create?: XOR<doacaoCreateWithoutUsuariofisicoInput, doacaoUncheckedCreateWithoutUsuariofisicoInput> | doacaoCreateWithoutUsuariofisicoInput[] | doacaoUncheckedCreateWithoutUsuariofisicoInput[]
    connectOrCreate?: doacaoCreateOrConnectWithoutUsuariofisicoInput | doacaoCreateOrConnectWithoutUsuariofisicoInput[]
    createMany?: doacaoCreateManyUsuariofisicoInputEnvelope
    connect?: doacaoWhereUniqueInput | doacaoWhereUniqueInput[]
  }

  export type doacaoUsuarioCreateNestedManyWithoutDonatariofisicoInput = {
    create?: XOR<doacaoUsuarioCreateWithoutDonatariofisicoInput, doacaoUsuarioUncheckedCreateWithoutDonatariofisicoInput> | doacaoUsuarioCreateWithoutDonatariofisicoInput[] | doacaoUsuarioUncheckedCreateWithoutDonatariofisicoInput[]
    connectOrCreate?: doacaoUsuarioCreateOrConnectWithoutDonatariofisicoInput | doacaoUsuarioCreateOrConnectWithoutDonatariofisicoInput[]
    createMany?: doacaoUsuarioCreateManyDonatariofisicoInputEnvelope
    connect?: doacaoUsuarioWhereUniqueInput | doacaoUsuarioWhereUniqueInput[]
  }

  export type solicitacaoCreateNestedManyWithoutUsuariosolicitacaofisicoInput = {
    create?: XOR<solicitacaoCreateWithoutUsuariosolicitacaofisicoInput, solicitacaoUncheckedCreateWithoutUsuariosolicitacaofisicoInput> | solicitacaoCreateWithoutUsuariosolicitacaofisicoInput[] | solicitacaoUncheckedCreateWithoutUsuariosolicitacaofisicoInput[]
    connectOrCreate?: solicitacaoCreateOrConnectWithoutUsuariosolicitacaofisicoInput | solicitacaoCreateOrConnectWithoutUsuariosolicitacaofisicoInput[]
    createMany?: solicitacaoCreateManyUsuariosolicitacaofisicoInputEnvelope
    connect?: solicitacaoWhereUniqueInput | solicitacaoWhereUniqueInput[]
  }

  export type doacaoUncheckedCreateNestedManyWithoutUsuariofisicoInput = {
    create?: XOR<doacaoCreateWithoutUsuariofisicoInput, doacaoUncheckedCreateWithoutUsuariofisicoInput> | doacaoCreateWithoutUsuariofisicoInput[] | doacaoUncheckedCreateWithoutUsuariofisicoInput[]
    connectOrCreate?: doacaoCreateOrConnectWithoutUsuariofisicoInput | doacaoCreateOrConnectWithoutUsuariofisicoInput[]
    createMany?: doacaoCreateManyUsuariofisicoInputEnvelope
    connect?: doacaoWhereUniqueInput | doacaoWhereUniqueInput[]
  }

  export type doacaoUsuarioUncheckedCreateNestedManyWithoutDonatariofisicoInput = {
    create?: XOR<doacaoUsuarioCreateWithoutDonatariofisicoInput, doacaoUsuarioUncheckedCreateWithoutDonatariofisicoInput> | doacaoUsuarioCreateWithoutDonatariofisicoInput[] | doacaoUsuarioUncheckedCreateWithoutDonatariofisicoInput[]
    connectOrCreate?: doacaoUsuarioCreateOrConnectWithoutDonatariofisicoInput | doacaoUsuarioCreateOrConnectWithoutDonatariofisicoInput[]
    createMany?: doacaoUsuarioCreateManyDonatariofisicoInputEnvelope
    connect?: doacaoUsuarioWhereUniqueInput | doacaoUsuarioWhereUniqueInput[]
  }

  export type solicitacaoUncheckedCreateNestedManyWithoutUsuariosolicitacaofisicoInput = {
    create?: XOR<solicitacaoCreateWithoutUsuariosolicitacaofisicoInput, solicitacaoUncheckedCreateWithoutUsuariosolicitacaofisicoInput> | solicitacaoCreateWithoutUsuariosolicitacaofisicoInput[] | solicitacaoUncheckedCreateWithoutUsuariosolicitacaofisicoInput[]
    connectOrCreate?: solicitacaoCreateOrConnectWithoutUsuariosolicitacaofisicoInput | solicitacaoCreateOrConnectWithoutUsuariosolicitacaofisicoInput[]
    createMany?: solicitacaoCreateManyUsuariosolicitacaofisicoInputEnvelope
    connect?: solicitacaoWhereUniqueInput | solicitacaoWhereUniqueInput[]
  }

  export type doacaoUpdateManyWithoutUsuariofisicoNestedInput = {
    create?: XOR<doacaoCreateWithoutUsuariofisicoInput, doacaoUncheckedCreateWithoutUsuariofisicoInput> | doacaoCreateWithoutUsuariofisicoInput[] | doacaoUncheckedCreateWithoutUsuariofisicoInput[]
    connectOrCreate?: doacaoCreateOrConnectWithoutUsuariofisicoInput | doacaoCreateOrConnectWithoutUsuariofisicoInput[]
    upsert?: doacaoUpsertWithWhereUniqueWithoutUsuariofisicoInput | doacaoUpsertWithWhereUniqueWithoutUsuariofisicoInput[]
    createMany?: doacaoCreateManyUsuariofisicoInputEnvelope
    set?: doacaoWhereUniqueInput | doacaoWhereUniqueInput[]
    disconnect?: doacaoWhereUniqueInput | doacaoWhereUniqueInput[]
    delete?: doacaoWhereUniqueInput | doacaoWhereUniqueInput[]
    connect?: doacaoWhereUniqueInput | doacaoWhereUniqueInput[]
    update?: doacaoUpdateWithWhereUniqueWithoutUsuariofisicoInput | doacaoUpdateWithWhereUniqueWithoutUsuariofisicoInput[]
    updateMany?: doacaoUpdateManyWithWhereWithoutUsuariofisicoInput | doacaoUpdateManyWithWhereWithoutUsuariofisicoInput[]
    deleteMany?: doacaoScalarWhereInput | doacaoScalarWhereInput[]
  }

  export type doacaoUsuarioUpdateManyWithoutDonatariofisicoNestedInput = {
    create?: XOR<doacaoUsuarioCreateWithoutDonatariofisicoInput, doacaoUsuarioUncheckedCreateWithoutDonatariofisicoInput> | doacaoUsuarioCreateWithoutDonatariofisicoInput[] | doacaoUsuarioUncheckedCreateWithoutDonatariofisicoInput[]
    connectOrCreate?: doacaoUsuarioCreateOrConnectWithoutDonatariofisicoInput | doacaoUsuarioCreateOrConnectWithoutDonatariofisicoInput[]
    upsert?: doacaoUsuarioUpsertWithWhereUniqueWithoutDonatariofisicoInput | doacaoUsuarioUpsertWithWhereUniqueWithoutDonatariofisicoInput[]
    createMany?: doacaoUsuarioCreateManyDonatariofisicoInputEnvelope
    set?: doacaoUsuarioWhereUniqueInput | doacaoUsuarioWhereUniqueInput[]
    disconnect?: doacaoUsuarioWhereUniqueInput | doacaoUsuarioWhereUniqueInput[]
    delete?: doacaoUsuarioWhereUniqueInput | doacaoUsuarioWhereUniqueInput[]
    connect?: doacaoUsuarioWhereUniqueInput | doacaoUsuarioWhereUniqueInput[]
    update?: doacaoUsuarioUpdateWithWhereUniqueWithoutDonatariofisicoInput | doacaoUsuarioUpdateWithWhereUniqueWithoutDonatariofisicoInput[]
    updateMany?: doacaoUsuarioUpdateManyWithWhereWithoutDonatariofisicoInput | doacaoUsuarioUpdateManyWithWhereWithoutDonatariofisicoInput[]
    deleteMany?: doacaoUsuarioScalarWhereInput | doacaoUsuarioScalarWhereInput[]
  }

  export type solicitacaoUpdateManyWithoutUsuariosolicitacaofisicoNestedInput = {
    create?: XOR<solicitacaoCreateWithoutUsuariosolicitacaofisicoInput, solicitacaoUncheckedCreateWithoutUsuariosolicitacaofisicoInput> | solicitacaoCreateWithoutUsuariosolicitacaofisicoInput[] | solicitacaoUncheckedCreateWithoutUsuariosolicitacaofisicoInput[]
    connectOrCreate?: solicitacaoCreateOrConnectWithoutUsuariosolicitacaofisicoInput | solicitacaoCreateOrConnectWithoutUsuariosolicitacaofisicoInput[]
    upsert?: solicitacaoUpsertWithWhereUniqueWithoutUsuariosolicitacaofisicoInput | solicitacaoUpsertWithWhereUniqueWithoutUsuariosolicitacaofisicoInput[]
    createMany?: solicitacaoCreateManyUsuariosolicitacaofisicoInputEnvelope
    set?: solicitacaoWhereUniqueInput | solicitacaoWhereUniqueInput[]
    disconnect?: solicitacaoWhereUniqueInput | solicitacaoWhereUniqueInput[]
    delete?: solicitacaoWhereUniqueInput | solicitacaoWhereUniqueInput[]
    connect?: solicitacaoWhereUniqueInput | solicitacaoWhereUniqueInput[]
    update?: solicitacaoUpdateWithWhereUniqueWithoutUsuariosolicitacaofisicoInput | solicitacaoUpdateWithWhereUniqueWithoutUsuariosolicitacaofisicoInput[]
    updateMany?: solicitacaoUpdateManyWithWhereWithoutUsuariosolicitacaofisicoInput | solicitacaoUpdateManyWithWhereWithoutUsuariosolicitacaofisicoInput[]
    deleteMany?: solicitacaoScalarWhereInput | solicitacaoScalarWhereInput[]
  }

  export type doacaoUncheckedUpdateManyWithoutUsuariofisicoNestedInput = {
    create?: XOR<doacaoCreateWithoutUsuariofisicoInput, doacaoUncheckedCreateWithoutUsuariofisicoInput> | doacaoCreateWithoutUsuariofisicoInput[] | doacaoUncheckedCreateWithoutUsuariofisicoInput[]
    connectOrCreate?: doacaoCreateOrConnectWithoutUsuariofisicoInput | doacaoCreateOrConnectWithoutUsuariofisicoInput[]
    upsert?: doacaoUpsertWithWhereUniqueWithoutUsuariofisicoInput | doacaoUpsertWithWhereUniqueWithoutUsuariofisicoInput[]
    createMany?: doacaoCreateManyUsuariofisicoInputEnvelope
    set?: doacaoWhereUniqueInput | doacaoWhereUniqueInput[]
    disconnect?: doacaoWhereUniqueInput | doacaoWhereUniqueInput[]
    delete?: doacaoWhereUniqueInput | doacaoWhereUniqueInput[]
    connect?: doacaoWhereUniqueInput | doacaoWhereUniqueInput[]
    update?: doacaoUpdateWithWhereUniqueWithoutUsuariofisicoInput | doacaoUpdateWithWhereUniqueWithoutUsuariofisicoInput[]
    updateMany?: doacaoUpdateManyWithWhereWithoutUsuariofisicoInput | doacaoUpdateManyWithWhereWithoutUsuariofisicoInput[]
    deleteMany?: doacaoScalarWhereInput | doacaoScalarWhereInput[]
  }

  export type doacaoUsuarioUncheckedUpdateManyWithoutDonatariofisicoNestedInput = {
    create?: XOR<doacaoUsuarioCreateWithoutDonatariofisicoInput, doacaoUsuarioUncheckedCreateWithoutDonatariofisicoInput> | doacaoUsuarioCreateWithoutDonatariofisicoInput[] | doacaoUsuarioUncheckedCreateWithoutDonatariofisicoInput[]
    connectOrCreate?: doacaoUsuarioCreateOrConnectWithoutDonatariofisicoInput | doacaoUsuarioCreateOrConnectWithoutDonatariofisicoInput[]
    upsert?: doacaoUsuarioUpsertWithWhereUniqueWithoutDonatariofisicoInput | doacaoUsuarioUpsertWithWhereUniqueWithoutDonatariofisicoInput[]
    createMany?: doacaoUsuarioCreateManyDonatariofisicoInputEnvelope
    set?: doacaoUsuarioWhereUniqueInput | doacaoUsuarioWhereUniqueInput[]
    disconnect?: doacaoUsuarioWhereUniqueInput | doacaoUsuarioWhereUniqueInput[]
    delete?: doacaoUsuarioWhereUniqueInput | doacaoUsuarioWhereUniqueInput[]
    connect?: doacaoUsuarioWhereUniqueInput | doacaoUsuarioWhereUniqueInput[]
    update?: doacaoUsuarioUpdateWithWhereUniqueWithoutDonatariofisicoInput | doacaoUsuarioUpdateWithWhereUniqueWithoutDonatariofisicoInput[]
    updateMany?: doacaoUsuarioUpdateManyWithWhereWithoutDonatariofisicoInput | doacaoUsuarioUpdateManyWithWhereWithoutDonatariofisicoInput[]
    deleteMany?: doacaoUsuarioScalarWhereInput | doacaoUsuarioScalarWhereInput[]
  }

  export type solicitacaoUncheckedUpdateManyWithoutUsuariosolicitacaofisicoNestedInput = {
    create?: XOR<solicitacaoCreateWithoutUsuariosolicitacaofisicoInput, solicitacaoUncheckedCreateWithoutUsuariosolicitacaofisicoInput> | solicitacaoCreateWithoutUsuariosolicitacaofisicoInput[] | solicitacaoUncheckedCreateWithoutUsuariosolicitacaofisicoInput[]
    connectOrCreate?: solicitacaoCreateOrConnectWithoutUsuariosolicitacaofisicoInput | solicitacaoCreateOrConnectWithoutUsuariosolicitacaofisicoInput[]
    upsert?: solicitacaoUpsertWithWhereUniqueWithoutUsuariosolicitacaofisicoInput | solicitacaoUpsertWithWhereUniqueWithoutUsuariosolicitacaofisicoInput[]
    createMany?: solicitacaoCreateManyUsuariosolicitacaofisicoInputEnvelope
    set?: solicitacaoWhereUniqueInput | solicitacaoWhereUniqueInput[]
    disconnect?: solicitacaoWhereUniqueInput | solicitacaoWhereUniqueInput[]
    delete?: solicitacaoWhereUniqueInput | solicitacaoWhereUniqueInput[]
    connect?: solicitacaoWhereUniqueInput | solicitacaoWhereUniqueInput[]
    update?: solicitacaoUpdateWithWhereUniqueWithoutUsuariosolicitacaofisicoInput | solicitacaoUpdateWithWhereUniqueWithoutUsuariosolicitacaofisicoInput[]
    updateMany?: solicitacaoUpdateManyWithWhereWithoutUsuariosolicitacaofisicoInput | solicitacaoUpdateManyWithWhereWithoutUsuariosolicitacaofisicoInput[]
    deleteMany?: solicitacaoScalarWhereInput | solicitacaoScalarWhereInput[]
  }

  export type doacaoCreateNestedManyWithoutUsuariojuridicoInput = {
    create?: XOR<doacaoCreateWithoutUsuariojuridicoInput, doacaoUncheckedCreateWithoutUsuariojuridicoInput> | doacaoCreateWithoutUsuariojuridicoInput[] | doacaoUncheckedCreateWithoutUsuariojuridicoInput[]
    connectOrCreate?: doacaoCreateOrConnectWithoutUsuariojuridicoInput | doacaoCreateOrConnectWithoutUsuariojuridicoInput[]
    createMany?: doacaoCreateManyUsuariojuridicoInputEnvelope
    connect?: doacaoWhereUniqueInput | doacaoWhereUniqueInput[]
  }

  export type doacaoUsuarioCreateNestedManyWithoutDonatariojuridicoInput = {
    create?: XOR<doacaoUsuarioCreateWithoutDonatariojuridicoInput, doacaoUsuarioUncheckedCreateWithoutDonatariojuridicoInput> | doacaoUsuarioCreateWithoutDonatariojuridicoInput[] | doacaoUsuarioUncheckedCreateWithoutDonatariojuridicoInput[]
    connectOrCreate?: doacaoUsuarioCreateOrConnectWithoutDonatariojuridicoInput | doacaoUsuarioCreateOrConnectWithoutDonatariojuridicoInput[]
    createMany?: doacaoUsuarioCreateManyDonatariojuridicoInputEnvelope
    connect?: doacaoUsuarioWhereUniqueInput | doacaoUsuarioWhereUniqueInput[]
  }

  export type solicitacaoCreateNestedManyWithoutDonatariojuridicoInput = {
    create?: XOR<solicitacaoCreateWithoutDonatariojuridicoInput, solicitacaoUncheckedCreateWithoutDonatariojuridicoInput> | solicitacaoCreateWithoutDonatariojuridicoInput[] | solicitacaoUncheckedCreateWithoutDonatariojuridicoInput[]
    connectOrCreate?: solicitacaoCreateOrConnectWithoutDonatariojuridicoInput | solicitacaoCreateOrConnectWithoutDonatariojuridicoInput[]
    createMany?: solicitacaoCreateManyDonatariojuridicoInputEnvelope
    connect?: solicitacaoWhereUniqueInput | solicitacaoWhereUniqueInput[]
  }

  export type doacaoUncheckedCreateNestedManyWithoutUsuariojuridicoInput = {
    create?: XOR<doacaoCreateWithoutUsuariojuridicoInput, doacaoUncheckedCreateWithoutUsuariojuridicoInput> | doacaoCreateWithoutUsuariojuridicoInput[] | doacaoUncheckedCreateWithoutUsuariojuridicoInput[]
    connectOrCreate?: doacaoCreateOrConnectWithoutUsuariojuridicoInput | doacaoCreateOrConnectWithoutUsuariojuridicoInput[]
    createMany?: doacaoCreateManyUsuariojuridicoInputEnvelope
    connect?: doacaoWhereUniqueInput | doacaoWhereUniqueInput[]
  }

  export type doacaoUsuarioUncheckedCreateNestedManyWithoutDonatariojuridicoInput = {
    create?: XOR<doacaoUsuarioCreateWithoutDonatariojuridicoInput, doacaoUsuarioUncheckedCreateWithoutDonatariojuridicoInput> | doacaoUsuarioCreateWithoutDonatariojuridicoInput[] | doacaoUsuarioUncheckedCreateWithoutDonatariojuridicoInput[]
    connectOrCreate?: doacaoUsuarioCreateOrConnectWithoutDonatariojuridicoInput | doacaoUsuarioCreateOrConnectWithoutDonatariojuridicoInput[]
    createMany?: doacaoUsuarioCreateManyDonatariojuridicoInputEnvelope
    connect?: doacaoUsuarioWhereUniqueInput | doacaoUsuarioWhereUniqueInput[]
  }

  export type solicitacaoUncheckedCreateNestedManyWithoutDonatariojuridicoInput = {
    create?: XOR<solicitacaoCreateWithoutDonatariojuridicoInput, solicitacaoUncheckedCreateWithoutDonatariojuridicoInput> | solicitacaoCreateWithoutDonatariojuridicoInput[] | solicitacaoUncheckedCreateWithoutDonatariojuridicoInput[]
    connectOrCreate?: solicitacaoCreateOrConnectWithoutDonatariojuridicoInput | solicitacaoCreateOrConnectWithoutDonatariojuridicoInput[]
    createMany?: solicitacaoCreateManyDonatariojuridicoInputEnvelope
    connect?: solicitacaoWhereUniqueInput | solicitacaoWhereUniqueInput[]
  }

  export type doacaoUpdateManyWithoutUsuariojuridicoNestedInput = {
    create?: XOR<doacaoCreateWithoutUsuariojuridicoInput, doacaoUncheckedCreateWithoutUsuariojuridicoInput> | doacaoCreateWithoutUsuariojuridicoInput[] | doacaoUncheckedCreateWithoutUsuariojuridicoInput[]
    connectOrCreate?: doacaoCreateOrConnectWithoutUsuariojuridicoInput | doacaoCreateOrConnectWithoutUsuariojuridicoInput[]
    upsert?: doacaoUpsertWithWhereUniqueWithoutUsuariojuridicoInput | doacaoUpsertWithWhereUniqueWithoutUsuariojuridicoInput[]
    createMany?: doacaoCreateManyUsuariojuridicoInputEnvelope
    set?: doacaoWhereUniqueInput | doacaoWhereUniqueInput[]
    disconnect?: doacaoWhereUniqueInput | doacaoWhereUniqueInput[]
    delete?: doacaoWhereUniqueInput | doacaoWhereUniqueInput[]
    connect?: doacaoWhereUniqueInput | doacaoWhereUniqueInput[]
    update?: doacaoUpdateWithWhereUniqueWithoutUsuariojuridicoInput | doacaoUpdateWithWhereUniqueWithoutUsuariojuridicoInput[]
    updateMany?: doacaoUpdateManyWithWhereWithoutUsuariojuridicoInput | doacaoUpdateManyWithWhereWithoutUsuariojuridicoInput[]
    deleteMany?: doacaoScalarWhereInput | doacaoScalarWhereInput[]
  }

  export type doacaoUsuarioUpdateManyWithoutDonatariojuridicoNestedInput = {
    create?: XOR<doacaoUsuarioCreateWithoutDonatariojuridicoInput, doacaoUsuarioUncheckedCreateWithoutDonatariojuridicoInput> | doacaoUsuarioCreateWithoutDonatariojuridicoInput[] | doacaoUsuarioUncheckedCreateWithoutDonatariojuridicoInput[]
    connectOrCreate?: doacaoUsuarioCreateOrConnectWithoutDonatariojuridicoInput | doacaoUsuarioCreateOrConnectWithoutDonatariojuridicoInput[]
    upsert?: doacaoUsuarioUpsertWithWhereUniqueWithoutDonatariojuridicoInput | doacaoUsuarioUpsertWithWhereUniqueWithoutDonatariojuridicoInput[]
    createMany?: doacaoUsuarioCreateManyDonatariojuridicoInputEnvelope
    set?: doacaoUsuarioWhereUniqueInput | doacaoUsuarioWhereUniqueInput[]
    disconnect?: doacaoUsuarioWhereUniqueInput | doacaoUsuarioWhereUniqueInput[]
    delete?: doacaoUsuarioWhereUniqueInput | doacaoUsuarioWhereUniqueInput[]
    connect?: doacaoUsuarioWhereUniqueInput | doacaoUsuarioWhereUniqueInput[]
    update?: doacaoUsuarioUpdateWithWhereUniqueWithoutDonatariojuridicoInput | doacaoUsuarioUpdateWithWhereUniqueWithoutDonatariojuridicoInput[]
    updateMany?: doacaoUsuarioUpdateManyWithWhereWithoutDonatariojuridicoInput | doacaoUsuarioUpdateManyWithWhereWithoutDonatariojuridicoInput[]
    deleteMany?: doacaoUsuarioScalarWhereInput | doacaoUsuarioScalarWhereInput[]
  }

  export type solicitacaoUpdateManyWithoutDonatariojuridicoNestedInput = {
    create?: XOR<solicitacaoCreateWithoutDonatariojuridicoInput, solicitacaoUncheckedCreateWithoutDonatariojuridicoInput> | solicitacaoCreateWithoutDonatariojuridicoInput[] | solicitacaoUncheckedCreateWithoutDonatariojuridicoInput[]
    connectOrCreate?: solicitacaoCreateOrConnectWithoutDonatariojuridicoInput | solicitacaoCreateOrConnectWithoutDonatariojuridicoInput[]
    upsert?: solicitacaoUpsertWithWhereUniqueWithoutDonatariojuridicoInput | solicitacaoUpsertWithWhereUniqueWithoutDonatariojuridicoInput[]
    createMany?: solicitacaoCreateManyDonatariojuridicoInputEnvelope
    set?: solicitacaoWhereUniqueInput | solicitacaoWhereUniqueInput[]
    disconnect?: solicitacaoWhereUniqueInput | solicitacaoWhereUniqueInput[]
    delete?: solicitacaoWhereUniqueInput | solicitacaoWhereUniqueInput[]
    connect?: solicitacaoWhereUniqueInput | solicitacaoWhereUniqueInput[]
    update?: solicitacaoUpdateWithWhereUniqueWithoutDonatariojuridicoInput | solicitacaoUpdateWithWhereUniqueWithoutDonatariojuridicoInput[]
    updateMany?: solicitacaoUpdateManyWithWhereWithoutDonatariojuridicoInput | solicitacaoUpdateManyWithWhereWithoutDonatariojuridicoInput[]
    deleteMany?: solicitacaoScalarWhereInput | solicitacaoScalarWhereInput[]
  }

  export type doacaoUncheckedUpdateManyWithoutUsuariojuridicoNestedInput = {
    create?: XOR<doacaoCreateWithoutUsuariojuridicoInput, doacaoUncheckedCreateWithoutUsuariojuridicoInput> | doacaoCreateWithoutUsuariojuridicoInput[] | doacaoUncheckedCreateWithoutUsuariojuridicoInput[]
    connectOrCreate?: doacaoCreateOrConnectWithoutUsuariojuridicoInput | doacaoCreateOrConnectWithoutUsuariojuridicoInput[]
    upsert?: doacaoUpsertWithWhereUniqueWithoutUsuariojuridicoInput | doacaoUpsertWithWhereUniqueWithoutUsuariojuridicoInput[]
    createMany?: doacaoCreateManyUsuariojuridicoInputEnvelope
    set?: doacaoWhereUniqueInput | doacaoWhereUniqueInput[]
    disconnect?: doacaoWhereUniqueInput | doacaoWhereUniqueInput[]
    delete?: doacaoWhereUniqueInput | doacaoWhereUniqueInput[]
    connect?: doacaoWhereUniqueInput | doacaoWhereUniqueInput[]
    update?: doacaoUpdateWithWhereUniqueWithoutUsuariojuridicoInput | doacaoUpdateWithWhereUniqueWithoutUsuariojuridicoInput[]
    updateMany?: doacaoUpdateManyWithWhereWithoutUsuariojuridicoInput | doacaoUpdateManyWithWhereWithoutUsuariojuridicoInput[]
    deleteMany?: doacaoScalarWhereInput | doacaoScalarWhereInput[]
  }

  export type doacaoUsuarioUncheckedUpdateManyWithoutDonatariojuridicoNestedInput = {
    create?: XOR<doacaoUsuarioCreateWithoutDonatariojuridicoInput, doacaoUsuarioUncheckedCreateWithoutDonatariojuridicoInput> | doacaoUsuarioCreateWithoutDonatariojuridicoInput[] | doacaoUsuarioUncheckedCreateWithoutDonatariojuridicoInput[]
    connectOrCreate?: doacaoUsuarioCreateOrConnectWithoutDonatariojuridicoInput | doacaoUsuarioCreateOrConnectWithoutDonatariojuridicoInput[]
    upsert?: doacaoUsuarioUpsertWithWhereUniqueWithoutDonatariojuridicoInput | doacaoUsuarioUpsertWithWhereUniqueWithoutDonatariojuridicoInput[]
    createMany?: doacaoUsuarioCreateManyDonatariojuridicoInputEnvelope
    set?: doacaoUsuarioWhereUniqueInput | doacaoUsuarioWhereUniqueInput[]
    disconnect?: doacaoUsuarioWhereUniqueInput | doacaoUsuarioWhereUniqueInput[]
    delete?: doacaoUsuarioWhereUniqueInput | doacaoUsuarioWhereUniqueInput[]
    connect?: doacaoUsuarioWhereUniqueInput | doacaoUsuarioWhereUniqueInput[]
    update?: doacaoUsuarioUpdateWithWhereUniqueWithoutDonatariojuridicoInput | doacaoUsuarioUpdateWithWhereUniqueWithoutDonatariojuridicoInput[]
    updateMany?: doacaoUsuarioUpdateManyWithWhereWithoutDonatariojuridicoInput | doacaoUsuarioUpdateManyWithWhereWithoutDonatariojuridicoInput[]
    deleteMany?: doacaoUsuarioScalarWhereInput | doacaoUsuarioScalarWhereInput[]
  }

  export type solicitacaoUncheckedUpdateManyWithoutDonatariojuridicoNestedInput = {
    create?: XOR<solicitacaoCreateWithoutDonatariojuridicoInput, solicitacaoUncheckedCreateWithoutDonatariojuridicoInput> | solicitacaoCreateWithoutDonatariojuridicoInput[] | solicitacaoUncheckedCreateWithoutDonatariojuridicoInput[]
    connectOrCreate?: solicitacaoCreateOrConnectWithoutDonatariojuridicoInput | solicitacaoCreateOrConnectWithoutDonatariojuridicoInput[]
    upsert?: solicitacaoUpsertWithWhereUniqueWithoutDonatariojuridicoInput | solicitacaoUpsertWithWhereUniqueWithoutDonatariojuridicoInput[]
    createMany?: solicitacaoCreateManyDonatariojuridicoInputEnvelope
    set?: solicitacaoWhereUniqueInput | solicitacaoWhereUniqueInput[]
    disconnect?: solicitacaoWhereUniqueInput | solicitacaoWhereUniqueInput[]
    delete?: solicitacaoWhereUniqueInput | solicitacaoWhereUniqueInput[]
    connect?: solicitacaoWhereUniqueInput | solicitacaoWhereUniqueInput[]
    update?: solicitacaoUpdateWithWhereUniqueWithoutDonatariojuridicoInput | solicitacaoUpdateWithWhereUniqueWithoutDonatariojuridicoInput[]
    updateMany?: solicitacaoUpdateManyWithWhereWithoutDonatariojuridicoInput | solicitacaoUpdateManyWithWhereWithoutDonatariojuridicoInput[]
    deleteMany?: solicitacaoScalarWhereInput | solicitacaoScalarWhereInput[]
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type descarteCreateNestedOneWithoutTecladosInput = {
    create?: XOR<descarteCreateWithoutTecladosInput, descarteUncheckedCreateWithoutTecladosInput>
    connectOrCreate?: descarteCreateOrConnectWithoutTecladosInput
    connect?: descarteWhereUniqueInput
  }

  export type doacaoCreateNestedOneWithoutTecladosInput = {
    create?: XOR<doacaoCreateWithoutTecladosInput, doacaoUncheckedCreateWithoutTecladosInput>
    connectOrCreate?: doacaoCreateOrConnectWithoutTecladosInput
    connect?: doacaoWhereUniqueInput
  }

  export type alunoCreateNestedOneWithoutUsuarioTecladoInput = {
    create?: XOR<alunoCreateWithoutUsuarioTecladoInput, alunoUncheckedCreateWithoutUsuarioTecladoInput>
    connectOrCreate?: alunoCreateOrConnectWithoutUsuarioTecladoInput
    connect?: alunoWhereUniqueInput
  }

  export type alunoCreateNestedOneWithoutModificadorTecladoInput = {
    create?: XOR<alunoCreateWithoutModificadorTecladoInput, alunoUncheckedCreateWithoutModificadorTecladoInput>
    connectOrCreate?: alunoCreateOrConnectWithoutModificadorTecladoInput
    connect?: alunoWhereUniqueInput
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type descarteUpdateOneWithoutTecladosNestedInput = {
    create?: XOR<descarteCreateWithoutTecladosInput, descarteUncheckedCreateWithoutTecladosInput>
    connectOrCreate?: descarteCreateOrConnectWithoutTecladosInput
    upsert?: descarteUpsertWithoutTecladosInput
    disconnect?: descarteWhereInput | boolean
    delete?: descarteWhereInput | boolean
    connect?: descarteWhereUniqueInput
    update?: XOR<XOR<descarteUpdateToOneWithWhereWithoutTecladosInput, descarteUpdateWithoutTecladosInput>, descarteUncheckedUpdateWithoutTecladosInput>
  }

  export type doacaoUpdateOneWithoutTecladosNestedInput = {
    create?: XOR<doacaoCreateWithoutTecladosInput, doacaoUncheckedCreateWithoutTecladosInput>
    connectOrCreate?: doacaoCreateOrConnectWithoutTecladosInput
    upsert?: doacaoUpsertWithoutTecladosInput
    disconnect?: doacaoWhereInput | boolean
    delete?: doacaoWhereInput | boolean
    connect?: doacaoWhereUniqueInput
    update?: XOR<XOR<doacaoUpdateToOneWithWhereWithoutTecladosInput, doacaoUpdateWithoutTecladosInput>, doacaoUncheckedUpdateWithoutTecladosInput>
  }

  export type alunoUpdateOneWithoutUsuarioTecladoNestedInput = {
    create?: XOR<alunoCreateWithoutUsuarioTecladoInput, alunoUncheckedCreateWithoutUsuarioTecladoInput>
    connectOrCreate?: alunoCreateOrConnectWithoutUsuarioTecladoInput
    upsert?: alunoUpsertWithoutUsuarioTecladoInput
    disconnect?: alunoWhereInput | boolean
    delete?: alunoWhereInput | boolean
    connect?: alunoWhereUniqueInput
    update?: XOR<XOR<alunoUpdateToOneWithWhereWithoutUsuarioTecladoInput, alunoUpdateWithoutUsuarioTecladoInput>, alunoUncheckedUpdateWithoutUsuarioTecladoInput>
  }

  export type alunoUpdateOneWithoutModificadorTecladoNestedInput = {
    create?: XOR<alunoCreateWithoutModificadorTecladoInput, alunoUncheckedCreateWithoutModificadorTecladoInput>
    connectOrCreate?: alunoCreateOrConnectWithoutModificadorTecladoInput
    upsert?: alunoUpsertWithoutModificadorTecladoInput
    disconnect?: alunoWhereInput | boolean
    delete?: alunoWhereInput | boolean
    connect?: alunoWhereUniqueInput
    update?: XOR<XOR<alunoUpdateToOneWithWhereWithoutModificadorTecladoInput, alunoUpdateWithoutModificadorTecladoInput>, alunoUncheckedUpdateWithoutModificadorTecladoInput>
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type doacaoCreateNestedOneWithoutHdsInput = {
    create?: XOR<doacaoCreateWithoutHdsInput, doacaoUncheckedCreateWithoutHdsInput>
    connectOrCreate?: doacaoCreateOrConnectWithoutHdsInput
    connect?: doacaoWhereUniqueInput
  }

  export type descarteCreateNestedOneWithoutHdsInput = {
    create?: XOR<descarteCreateWithoutHdsInput, descarteUncheckedCreateWithoutHdsInput>
    connectOrCreate?: descarteCreateOrConnectWithoutHdsInput
    connect?: descarteWhereUniqueInput
  }

  export type alunoCreateNestedOneWithoutHdInput = {
    create?: XOR<alunoCreateWithoutHdInput, alunoUncheckedCreateWithoutHdInput>
    connectOrCreate?: alunoCreateOrConnectWithoutHdInput
    connect?: alunoWhereUniqueInput
  }

  export type alunoCreateNestedOneWithoutModificadorHdInput = {
    create?: XOR<alunoCreateWithoutModificadorHdInput, alunoUncheckedCreateWithoutModificadorHdInput>
    connectOrCreate?: alunoCreateOrConnectWithoutModificadorHdInput
    connect?: alunoWhereUniqueInput
  }

  export type doacaoUpdateOneWithoutHdsNestedInput = {
    create?: XOR<doacaoCreateWithoutHdsInput, doacaoUncheckedCreateWithoutHdsInput>
    connectOrCreate?: doacaoCreateOrConnectWithoutHdsInput
    upsert?: doacaoUpsertWithoutHdsInput
    disconnect?: doacaoWhereInput | boolean
    delete?: doacaoWhereInput | boolean
    connect?: doacaoWhereUniqueInput
    update?: XOR<XOR<doacaoUpdateToOneWithWhereWithoutHdsInput, doacaoUpdateWithoutHdsInput>, doacaoUncheckedUpdateWithoutHdsInput>
  }

  export type descarteUpdateOneWithoutHdsNestedInput = {
    create?: XOR<descarteCreateWithoutHdsInput, descarteUncheckedCreateWithoutHdsInput>
    connectOrCreate?: descarteCreateOrConnectWithoutHdsInput
    upsert?: descarteUpsertWithoutHdsInput
    disconnect?: descarteWhereInput | boolean
    delete?: descarteWhereInput | boolean
    connect?: descarteWhereUniqueInput
    update?: XOR<XOR<descarteUpdateToOneWithWhereWithoutHdsInput, descarteUpdateWithoutHdsInput>, descarteUncheckedUpdateWithoutHdsInput>
  }

  export type alunoUpdateOneWithoutHdNestedInput = {
    create?: XOR<alunoCreateWithoutHdInput, alunoUncheckedCreateWithoutHdInput>
    connectOrCreate?: alunoCreateOrConnectWithoutHdInput
    upsert?: alunoUpsertWithoutHdInput
    disconnect?: alunoWhereInput | boolean
    delete?: alunoWhereInput | boolean
    connect?: alunoWhereUniqueInput
    update?: XOR<XOR<alunoUpdateToOneWithWhereWithoutHdInput, alunoUpdateWithoutHdInput>, alunoUncheckedUpdateWithoutHdInput>
  }

  export type alunoUpdateOneWithoutModificadorHdNestedInput = {
    create?: XOR<alunoCreateWithoutModificadorHdInput, alunoUncheckedCreateWithoutModificadorHdInput>
    connectOrCreate?: alunoCreateOrConnectWithoutModificadorHdInput
    upsert?: alunoUpsertWithoutModificadorHdInput
    disconnect?: alunoWhereInput | boolean
    delete?: alunoWhereInput | boolean
    connect?: alunoWhereUniqueInput
    update?: XOR<XOR<alunoUpdateToOneWithWhereWithoutModificadorHdInput, alunoUpdateWithoutModificadorHdInput>, alunoUncheckedUpdateWithoutModificadorHdInput>
  }

  export type doacaoCreateNestedOneWithoutFontesDeAlimentacaoInput = {
    create?: XOR<doacaoCreateWithoutFontesDeAlimentacaoInput, doacaoUncheckedCreateWithoutFontesDeAlimentacaoInput>
    connectOrCreate?: doacaoCreateOrConnectWithoutFontesDeAlimentacaoInput
    connect?: doacaoWhereUniqueInput
  }

  export type descarteCreateNestedOneWithoutFontesDeAlimentacaoInput = {
    create?: XOR<descarteCreateWithoutFontesDeAlimentacaoInput, descarteUncheckedCreateWithoutFontesDeAlimentacaoInput>
    connectOrCreate?: descarteCreateOrConnectWithoutFontesDeAlimentacaoInput
    connect?: descarteWhereUniqueInput
  }

  export type alunoCreateNestedOneWithoutFonteDeAlimentacaoInput = {
    create?: XOR<alunoCreateWithoutFonteDeAlimentacaoInput, alunoUncheckedCreateWithoutFonteDeAlimentacaoInput>
    connectOrCreate?: alunoCreateOrConnectWithoutFonteDeAlimentacaoInput
    connect?: alunoWhereUniqueInput
  }

  export type alunoCreateNestedOneWithoutModificadorFonteDeAlimentacaoInput = {
    create?: XOR<alunoCreateWithoutModificadorFonteDeAlimentacaoInput, alunoUncheckedCreateWithoutModificadorFonteDeAlimentacaoInput>
    connectOrCreate?: alunoCreateOrConnectWithoutModificadorFonteDeAlimentacaoInput
    connect?: alunoWhereUniqueInput
  }

  export type doacaoUpdateOneWithoutFontesDeAlimentacaoNestedInput = {
    create?: XOR<doacaoCreateWithoutFontesDeAlimentacaoInput, doacaoUncheckedCreateWithoutFontesDeAlimentacaoInput>
    connectOrCreate?: doacaoCreateOrConnectWithoutFontesDeAlimentacaoInput
    upsert?: doacaoUpsertWithoutFontesDeAlimentacaoInput
    disconnect?: doacaoWhereInput | boolean
    delete?: doacaoWhereInput | boolean
    connect?: doacaoWhereUniqueInput
    update?: XOR<XOR<doacaoUpdateToOneWithWhereWithoutFontesDeAlimentacaoInput, doacaoUpdateWithoutFontesDeAlimentacaoInput>, doacaoUncheckedUpdateWithoutFontesDeAlimentacaoInput>
  }

  export type descarteUpdateOneWithoutFontesDeAlimentacaoNestedInput = {
    create?: XOR<descarteCreateWithoutFontesDeAlimentacaoInput, descarteUncheckedCreateWithoutFontesDeAlimentacaoInput>
    connectOrCreate?: descarteCreateOrConnectWithoutFontesDeAlimentacaoInput
    upsert?: descarteUpsertWithoutFontesDeAlimentacaoInput
    disconnect?: descarteWhereInput | boolean
    delete?: descarteWhereInput | boolean
    connect?: descarteWhereUniqueInput
    update?: XOR<XOR<descarteUpdateToOneWithWhereWithoutFontesDeAlimentacaoInput, descarteUpdateWithoutFontesDeAlimentacaoInput>, descarteUncheckedUpdateWithoutFontesDeAlimentacaoInput>
  }

  export type alunoUpdateOneWithoutFonteDeAlimentacaoNestedInput = {
    create?: XOR<alunoCreateWithoutFonteDeAlimentacaoInput, alunoUncheckedCreateWithoutFonteDeAlimentacaoInput>
    connectOrCreate?: alunoCreateOrConnectWithoutFonteDeAlimentacaoInput
    upsert?: alunoUpsertWithoutFonteDeAlimentacaoInput
    disconnect?: alunoWhereInput | boolean
    delete?: alunoWhereInput | boolean
    connect?: alunoWhereUniqueInput
    update?: XOR<XOR<alunoUpdateToOneWithWhereWithoutFonteDeAlimentacaoInput, alunoUpdateWithoutFonteDeAlimentacaoInput>, alunoUncheckedUpdateWithoutFonteDeAlimentacaoInput>
  }

  export type alunoUpdateOneWithoutModificadorFonteDeAlimentacaoNestedInput = {
    create?: XOR<alunoCreateWithoutModificadorFonteDeAlimentacaoInput, alunoUncheckedCreateWithoutModificadorFonteDeAlimentacaoInput>
    connectOrCreate?: alunoCreateOrConnectWithoutModificadorFonteDeAlimentacaoInput
    upsert?: alunoUpsertWithoutModificadorFonteDeAlimentacaoInput
    disconnect?: alunoWhereInput | boolean
    delete?: alunoWhereInput | boolean
    connect?: alunoWhereUniqueInput
    update?: XOR<XOR<alunoUpdateToOneWithWhereWithoutModificadorFonteDeAlimentacaoInput, alunoUpdateWithoutModificadorFonteDeAlimentacaoInput>, alunoUncheckedUpdateWithoutModificadorFonteDeAlimentacaoInput>
  }

  export type doacaoCreateNestedOneWithoutGabinetesInput = {
    create?: XOR<doacaoCreateWithoutGabinetesInput, doacaoUncheckedCreateWithoutGabinetesInput>
    connectOrCreate?: doacaoCreateOrConnectWithoutGabinetesInput
    connect?: doacaoWhereUniqueInput
  }

  export type descarteCreateNestedOneWithoutGabinetesInput = {
    create?: XOR<descarteCreateWithoutGabinetesInput, descarteUncheckedCreateWithoutGabinetesInput>
    connectOrCreate?: descarteCreateOrConnectWithoutGabinetesInput
    connect?: descarteWhereUniqueInput
  }

  export type alunoCreateNestedOneWithoutGabineteInput = {
    create?: XOR<alunoCreateWithoutGabineteInput, alunoUncheckedCreateWithoutGabineteInput>
    connectOrCreate?: alunoCreateOrConnectWithoutGabineteInput
    connect?: alunoWhereUniqueInput
  }

  export type alunoCreateNestedOneWithoutModificadorGabineteInput = {
    create?: XOR<alunoCreateWithoutModificadorGabineteInput, alunoUncheckedCreateWithoutModificadorGabineteInput>
    connectOrCreate?: alunoCreateOrConnectWithoutModificadorGabineteInput
    connect?: alunoWhereUniqueInput
  }

  export type doacaoUpdateOneWithoutGabinetesNestedInput = {
    create?: XOR<doacaoCreateWithoutGabinetesInput, doacaoUncheckedCreateWithoutGabinetesInput>
    connectOrCreate?: doacaoCreateOrConnectWithoutGabinetesInput
    upsert?: doacaoUpsertWithoutGabinetesInput
    disconnect?: doacaoWhereInput | boolean
    delete?: doacaoWhereInput | boolean
    connect?: doacaoWhereUniqueInput
    update?: XOR<XOR<doacaoUpdateToOneWithWhereWithoutGabinetesInput, doacaoUpdateWithoutGabinetesInput>, doacaoUncheckedUpdateWithoutGabinetesInput>
  }

  export type descarteUpdateOneWithoutGabinetesNestedInput = {
    create?: XOR<descarteCreateWithoutGabinetesInput, descarteUncheckedCreateWithoutGabinetesInput>
    connectOrCreate?: descarteCreateOrConnectWithoutGabinetesInput
    upsert?: descarteUpsertWithoutGabinetesInput
    disconnect?: descarteWhereInput | boolean
    delete?: descarteWhereInput | boolean
    connect?: descarteWhereUniqueInput
    update?: XOR<XOR<descarteUpdateToOneWithWhereWithoutGabinetesInput, descarteUpdateWithoutGabinetesInput>, descarteUncheckedUpdateWithoutGabinetesInput>
  }

  export type alunoUpdateOneWithoutGabineteNestedInput = {
    create?: XOR<alunoCreateWithoutGabineteInput, alunoUncheckedCreateWithoutGabineteInput>
    connectOrCreate?: alunoCreateOrConnectWithoutGabineteInput
    upsert?: alunoUpsertWithoutGabineteInput
    disconnect?: alunoWhereInput | boolean
    delete?: alunoWhereInput | boolean
    connect?: alunoWhereUniqueInput
    update?: XOR<XOR<alunoUpdateToOneWithWhereWithoutGabineteInput, alunoUpdateWithoutGabineteInput>, alunoUncheckedUpdateWithoutGabineteInput>
  }

  export type alunoUpdateOneWithoutModificadorGabineteNestedInput = {
    create?: XOR<alunoCreateWithoutModificadorGabineteInput, alunoUncheckedCreateWithoutModificadorGabineteInput>
    connectOrCreate?: alunoCreateOrConnectWithoutModificadorGabineteInput
    upsert?: alunoUpsertWithoutModificadorGabineteInput
    disconnect?: alunoWhereInput | boolean
    delete?: alunoWhereInput | boolean
    connect?: alunoWhereUniqueInput
    update?: XOR<XOR<alunoUpdateToOneWithWhereWithoutModificadorGabineteInput, alunoUpdateWithoutModificadorGabineteInput>, alunoUncheckedUpdateWithoutModificadorGabineteInput>
  }

  export type doacaoCreateNestedOneWithoutMonitoresInput = {
    create?: XOR<doacaoCreateWithoutMonitoresInput, doacaoUncheckedCreateWithoutMonitoresInput>
    connectOrCreate?: doacaoCreateOrConnectWithoutMonitoresInput
    connect?: doacaoWhereUniqueInput
  }

  export type descarteCreateNestedOneWithoutMonitoresInput = {
    create?: XOR<descarteCreateWithoutMonitoresInput, descarteUncheckedCreateWithoutMonitoresInput>
    connectOrCreate?: descarteCreateOrConnectWithoutMonitoresInput
    connect?: descarteWhereUniqueInput
  }

  export type alunoCreateNestedOneWithoutMonitorInput = {
    create?: XOR<alunoCreateWithoutMonitorInput, alunoUncheckedCreateWithoutMonitorInput>
    connectOrCreate?: alunoCreateOrConnectWithoutMonitorInput
    connect?: alunoWhereUniqueInput
  }

  export type alunoCreateNestedOneWithoutModificadorMonitorInput = {
    create?: XOR<alunoCreateWithoutModificadorMonitorInput, alunoUncheckedCreateWithoutModificadorMonitorInput>
    connectOrCreate?: alunoCreateOrConnectWithoutModificadorMonitorInput
    connect?: alunoWhereUniqueInput
  }

  export type doacaoUpdateOneWithoutMonitoresNestedInput = {
    create?: XOR<doacaoCreateWithoutMonitoresInput, doacaoUncheckedCreateWithoutMonitoresInput>
    connectOrCreate?: doacaoCreateOrConnectWithoutMonitoresInput
    upsert?: doacaoUpsertWithoutMonitoresInput
    disconnect?: doacaoWhereInput | boolean
    delete?: doacaoWhereInput | boolean
    connect?: doacaoWhereUniqueInput
    update?: XOR<XOR<doacaoUpdateToOneWithWhereWithoutMonitoresInput, doacaoUpdateWithoutMonitoresInput>, doacaoUncheckedUpdateWithoutMonitoresInput>
  }

  export type descarteUpdateOneWithoutMonitoresNestedInput = {
    create?: XOR<descarteCreateWithoutMonitoresInput, descarteUncheckedCreateWithoutMonitoresInput>
    connectOrCreate?: descarteCreateOrConnectWithoutMonitoresInput
    upsert?: descarteUpsertWithoutMonitoresInput
    disconnect?: descarteWhereInput | boolean
    delete?: descarteWhereInput | boolean
    connect?: descarteWhereUniqueInput
    update?: XOR<XOR<descarteUpdateToOneWithWhereWithoutMonitoresInput, descarteUpdateWithoutMonitoresInput>, descarteUncheckedUpdateWithoutMonitoresInput>
  }

  export type alunoUpdateOneWithoutMonitorNestedInput = {
    create?: XOR<alunoCreateWithoutMonitorInput, alunoUncheckedCreateWithoutMonitorInput>
    connectOrCreate?: alunoCreateOrConnectWithoutMonitorInput
    upsert?: alunoUpsertWithoutMonitorInput
    disconnect?: alunoWhereInput | boolean
    delete?: alunoWhereInput | boolean
    connect?: alunoWhereUniqueInput
    update?: XOR<XOR<alunoUpdateToOneWithWhereWithoutMonitorInput, alunoUpdateWithoutMonitorInput>, alunoUncheckedUpdateWithoutMonitorInput>
  }

  export type alunoUpdateOneWithoutModificadorMonitorNestedInput = {
    create?: XOR<alunoCreateWithoutModificadorMonitorInput, alunoUncheckedCreateWithoutModificadorMonitorInput>
    connectOrCreate?: alunoCreateOrConnectWithoutModificadorMonitorInput
    upsert?: alunoUpsertWithoutModificadorMonitorInput
    disconnect?: alunoWhereInput | boolean
    delete?: alunoWhereInput | boolean
    connect?: alunoWhereUniqueInput
    update?: XOR<XOR<alunoUpdateToOneWithWhereWithoutModificadorMonitorInput, alunoUpdateWithoutModificadorMonitorInput>, alunoUncheckedUpdateWithoutModificadorMonitorInput>
  }

  export type doacaoCreateNestedOneWithoutMousesInput = {
    create?: XOR<doacaoCreateWithoutMousesInput, doacaoUncheckedCreateWithoutMousesInput>
    connectOrCreate?: doacaoCreateOrConnectWithoutMousesInput
    connect?: doacaoWhereUniqueInput
  }

  export type descarteCreateNestedOneWithoutMousesInput = {
    create?: XOR<descarteCreateWithoutMousesInput, descarteUncheckedCreateWithoutMousesInput>
    connectOrCreate?: descarteCreateOrConnectWithoutMousesInput
    connect?: descarteWhereUniqueInput
  }

  export type alunoCreateNestedOneWithoutUsuarioMouseInput = {
    create?: XOR<alunoCreateWithoutUsuarioMouseInput, alunoUncheckedCreateWithoutUsuarioMouseInput>
    connectOrCreate?: alunoCreateOrConnectWithoutUsuarioMouseInput
    connect?: alunoWhereUniqueInput
  }

  export type alunoCreateNestedOneWithoutModificadorMouseInput = {
    create?: XOR<alunoCreateWithoutModificadorMouseInput, alunoUncheckedCreateWithoutModificadorMouseInput>
    connectOrCreate?: alunoCreateOrConnectWithoutModificadorMouseInput
    connect?: alunoWhereUniqueInput
  }

  export type doacaoUpdateOneWithoutMousesNestedInput = {
    create?: XOR<doacaoCreateWithoutMousesInput, doacaoUncheckedCreateWithoutMousesInput>
    connectOrCreate?: doacaoCreateOrConnectWithoutMousesInput
    upsert?: doacaoUpsertWithoutMousesInput
    disconnect?: doacaoWhereInput | boolean
    delete?: doacaoWhereInput | boolean
    connect?: doacaoWhereUniqueInput
    update?: XOR<XOR<doacaoUpdateToOneWithWhereWithoutMousesInput, doacaoUpdateWithoutMousesInput>, doacaoUncheckedUpdateWithoutMousesInput>
  }

  export type descarteUpdateOneWithoutMousesNestedInput = {
    create?: XOR<descarteCreateWithoutMousesInput, descarteUncheckedCreateWithoutMousesInput>
    connectOrCreate?: descarteCreateOrConnectWithoutMousesInput
    upsert?: descarteUpsertWithoutMousesInput
    disconnect?: descarteWhereInput | boolean
    delete?: descarteWhereInput | boolean
    connect?: descarteWhereUniqueInput
    update?: XOR<XOR<descarteUpdateToOneWithWhereWithoutMousesInput, descarteUpdateWithoutMousesInput>, descarteUncheckedUpdateWithoutMousesInput>
  }

  export type alunoUpdateOneWithoutUsuarioMouseNestedInput = {
    create?: XOR<alunoCreateWithoutUsuarioMouseInput, alunoUncheckedCreateWithoutUsuarioMouseInput>
    connectOrCreate?: alunoCreateOrConnectWithoutUsuarioMouseInput
    upsert?: alunoUpsertWithoutUsuarioMouseInput
    disconnect?: alunoWhereInput | boolean
    delete?: alunoWhereInput | boolean
    connect?: alunoWhereUniqueInput
    update?: XOR<XOR<alunoUpdateToOneWithWhereWithoutUsuarioMouseInput, alunoUpdateWithoutUsuarioMouseInput>, alunoUncheckedUpdateWithoutUsuarioMouseInput>
  }

  export type alunoUpdateOneWithoutModificadorMouseNestedInput = {
    create?: XOR<alunoCreateWithoutModificadorMouseInput, alunoUncheckedCreateWithoutModificadorMouseInput>
    connectOrCreate?: alunoCreateOrConnectWithoutModificadorMouseInput
    upsert?: alunoUpsertWithoutModificadorMouseInput
    disconnect?: alunoWhereInput | boolean
    delete?: alunoWhereInput | boolean
    connect?: alunoWhereUniqueInput
    update?: XOR<XOR<alunoUpdateToOneWithWhereWithoutModificadorMouseInput, alunoUpdateWithoutModificadorMouseInput>, alunoUncheckedUpdateWithoutModificadorMouseInput>
  }

  export type doacaoCreateNestedOneWithoutEstabilizadoresInput = {
    create?: XOR<doacaoCreateWithoutEstabilizadoresInput, doacaoUncheckedCreateWithoutEstabilizadoresInput>
    connectOrCreate?: doacaoCreateOrConnectWithoutEstabilizadoresInput
    connect?: doacaoWhereUniqueInput
  }

  export type descarteCreateNestedOneWithoutEstabilizadoresInput = {
    create?: XOR<descarteCreateWithoutEstabilizadoresInput, descarteUncheckedCreateWithoutEstabilizadoresInput>
    connectOrCreate?: descarteCreateOrConnectWithoutEstabilizadoresInput
    connect?: descarteWhereUniqueInput
  }

  export type alunoCreateNestedOneWithoutUsuarioEstabilizadorInput = {
    create?: XOR<alunoCreateWithoutUsuarioEstabilizadorInput, alunoUncheckedCreateWithoutUsuarioEstabilizadorInput>
    connectOrCreate?: alunoCreateOrConnectWithoutUsuarioEstabilizadorInput
    connect?: alunoWhereUniqueInput
  }

  export type alunoCreateNestedOneWithoutModificadorEstabilizadorInput = {
    create?: XOR<alunoCreateWithoutModificadorEstabilizadorInput, alunoUncheckedCreateWithoutModificadorEstabilizadorInput>
    connectOrCreate?: alunoCreateOrConnectWithoutModificadorEstabilizadorInput
    connect?: alunoWhereUniqueInput
  }

  export type doacaoUpdateOneWithoutEstabilizadoresNestedInput = {
    create?: XOR<doacaoCreateWithoutEstabilizadoresInput, doacaoUncheckedCreateWithoutEstabilizadoresInput>
    connectOrCreate?: doacaoCreateOrConnectWithoutEstabilizadoresInput
    upsert?: doacaoUpsertWithoutEstabilizadoresInput
    disconnect?: doacaoWhereInput | boolean
    delete?: doacaoWhereInput | boolean
    connect?: doacaoWhereUniqueInput
    update?: XOR<XOR<doacaoUpdateToOneWithWhereWithoutEstabilizadoresInput, doacaoUpdateWithoutEstabilizadoresInput>, doacaoUncheckedUpdateWithoutEstabilizadoresInput>
  }

  export type descarteUpdateOneWithoutEstabilizadoresNestedInput = {
    create?: XOR<descarteCreateWithoutEstabilizadoresInput, descarteUncheckedCreateWithoutEstabilizadoresInput>
    connectOrCreate?: descarteCreateOrConnectWithoutEstabilizadoresInput
    upsert?: descarteUpsertWithoutEstabilizadoresInput
    disconnect?: descarteWhereInput | boolean
    delete?: descarteWhereInput | boolean
    connect?: descarteWhereUniqueInput
    update?: XOR<XOR<descarteUpdateToOneWithWhereWithoutEstabilizadoresInput, descarteUpdateWithoutEstabilizadoresInput>, descarteUncheckedUpdateWithoutEstabilizadoresInput>
  }

  export type alunoUpdateOneWithoutUsuarioEstabilizadorNestedInput = {
    create?: XOR<alunoCreateWithoutUsuarioEstabilizadorInput, alunoUncheckedCreateWithoutUsuarioEstabilizadorInput>
    connectOrCreate?: alunoCreateOrConnectWithoutUsuarioEstabilizadorInput
    upsert?: alunoUpsertWithoutUsuarioEstabilizadorInput
    disconnect?: alunoWhereInput | boolean
    delete?: alunoWhereInput | boolean
    connect?: alunoWhereUniqueInput
    update?: XOR<XOR<alunoUpdateToOneWithWhereWithoutUsuarioEstabilizadorInput, alunoUpdateWithoutUsuarioEstabilizadorInput>, alunoUncheckedUpdateWithoutUsuarioEstabilizadorInput>
  }

  export type alunoUpdateOneWithoutModificadorEstabilizadorNestedInput = {
    create?: XOR<alunoCreateWithoutModificadorEstabilizadorInput, alunoUncheckedCreateWithoutModificadorEstabilizadorInput>
    connectOrCreate?: alunoCreateOrConnectWithoutModificadorEstabilizadorInput
    upsert?: alunoUpsertWithoutModificadorEstabilizadorInput
    disconnect?: alunoWhereInput | boolean
    delete?: alunoWhereInput | boolean
    connect?: alunoWhereUniqueInput
    update?: XOR<XOR<alunoUpdateToOneWithWhereWithoutModificadorEstabilizadorInput, alunoUpdateWithoutModificadorEstabilizadorInput>, alunoUncheckedUpdateWithoutModificadorEstabilizadorInput>
  }

  export type doacaoCreateNestedOneWithoutImpressorasInput = {
    create?: XOR<doacaoCreateWithoutImpressorasInput, doacaoUncheckedCreateWithoutImpressorasInput>
    connectOrCreate?: doacaoCreateOrConnectWithoutImpressorasInput
    connect?: doacaoWhereUniqueInput
  }

  export type descarteCreateNestedOneWithoutImpressorasInput = {
    create?: XOR<descarteCreateWithoutImpressorasInput, descarteUncheckedCreateWithoutImpressorasInput>
    connectOrCreate?: descarteCreateOrConnectWithoutImpressorasInput
    connect?: descarteWhereUniqueInput
  }

  export type alunoCreateNestedOneWithoutUsuarioImpressoraInput = {
    create?: XOR<alunoCreateWithoutUsuarioImpressoraInput, alunoUncheckedCreateWithoutUsuarioImpressoraInput>
    connectOrCreate?: alunoCreateOrConnectWithoutUsuarioImpressoraInput
    connect?: alunoWhereUniqueInput
  }

  export type alunoCreateNestedOneWithoutModificadorImpressoraInput = {
    create?: XOR<alunoCreateWithoutModificadorImpressoraInput, alunoUncheckedCreateWithoutModificadorImpressoraInput>
    connectOrCreate?: alunoCreateOrConnectWithoutModificadorImpressoraInput
    connect?: alunoWhereUniqueInput
  }

  export type doacaoUpdateOneWithoutImpressorasNestedInput = {
    create?: XOR<doacaoCreateWithoutImpressorasInput, doacaoUncheckedCreateWithoutImpressorasInput>
    connectOrCreate?: doacaoCreateOrConnectWithoutImpressorasInput
    upsert?: doacaoUpsertWithoutImpressorasInput
    disconnect?: doacaoWhereInput | boolean
    delete?: doacaoWhereInput | boolean
    connect?: doacaoWhereUniqueInput
    update?: XOR<XOR<doacaoUpdateToOneWithWhereWithoutImpressorasInput, doacaoUpdateWithoutImpressorasInput>, doacaoUncheckedUpdateWithoutImpressorasInput>
  }

  export type descarteUpdateOneWithoutImpressorasNestedInput = {
    create?: XOR<descarteCreateWithoutImpressorasInput, descarteUncheckedCreateWithoutImpressorasInput>
    connectOrCreate?: descarteCreateOrConnectWithoutImpressorasInput
    upsert?: descarteUpsertWithoutImpressorasInput
    disconnect?: descarteWhereInput | boolean
    delete?: descarteWhereInput | boolean
    connect?: descarteWhereUniqueInput
    update?: XOR<XOR<descarteUpdateToOneWithWhereWithoutImpressorasInput, descarteUpdateWithoutImpressorasInput>, descarteUncheckedUpdateWithoutImpressorasInput>
  }

  export type alunoUpdateOneWithoutUsuarioImpressoraNestedInput = {
    create?: XOR<alunoCreateWithoutUsuarioImpressoraInput, alunoUncheckedCreateWithoutUsuarioImpressoraInput>
    connectOrCreate?: alunoCreateOrConnectWithoutUsuarioImpressoraInput
    upsert?: alunoUpsertWithoutUsuarioImpressoraInput
    disconnect?: alunoWhereInput | boolean
    delete?: alunoWhereInput | boolean
    connect?: alunoWhereUniqueInput
    update?: XOR<XOR<alunoUpdateToOneWithWhereWithoutUsuarioImpressoraInput, alunoUpdateWithoutUsuarioImpressoraInput>, alunoUncheckedUpdateWithoutUsuarioImpressoraInput>
  }

  export type alunoUpdateOneWithoutModificadorImpressoraNestedInput = {
    create?: XOR<alunoCreateWithoutModificadorImpressoraInput, alunoUncheckedCreateWithoutModificadorImpressoraInput>
    connectOrCreate?: alunoCreateOrConnectWithoutModificadorImpressoraInput
    upsert?: alunoUpsertWithoutModificadorImpressoraInput
    disconnect?: alunoWhereInput | boolean
    delete?: alunoWhereInput | boolean
    connect?: alunoWhereUniqueInput
    update?: XOR<XOR<alunoUpdateToOneWithWhereWithoutModificadorImpressoraInput, alunoUpdateWithoutModificadorImpressoraInput>, alunoUncheckedUpdateWithoutModificadorImpressoraInput>
  }

  export type doacaoCreateNestedOneWithoutPlacasmaeInput = {
    create?: XOR<doacaoCreateWithoutPlacasmaeInput, doacaoUncheckedCreateWithoutPlacasmaeInput>
    connectOrCreate?: doacaoCreateOrConnectWithoutPlacasmaeInput
    connect?: doacaoWhereUniqueInput
  }

  export type descarteCreateNestedOneWithoutPlacasmaeInput = {
    create?: XOR<descarteCreateWithoutPlacasmaeInput, descarteUncheckedCreateWithoutPlacasmaeInput>
    connectOrCreate?: descarteCreateOrConnectWithoutPlacasmaeInput
    connect?: descarteWhereUniqueInput
  }

  export type alunoCreateNestedOneWithoutUsuarioPlacamaeInput = {
    create?: XOR<alunoCreateWithoutUsuarioPlacamaeInput, alunoUncheckedCreateWithoutUsuarioPlacamaeInput>
    connectOrCreate?: alunoCreateOrConnectWithoutUsuarioPlacamaeInput
    connect?: alunoWhereUniqueInput
  }

  export type alunoCreateNestedOneWithoutModificadorPlacamaeInput = {
    create?: XOR<alunoCreateWithoutModificadorPlacamaeInput, alunoUncheckedCreateWithoutModificadorPlacamaeInput>
    connectOrCreate?: alunoCreateOrConnectWithoutModificadorPlacamaeInput
    connect?: alunoWhereUniqueInput
  }

  export type doacaoUpdateOneWithoutPlacasmaeNestedInput = {
    create?: XOR<doacaoCreateWithoutPlacasmaeInput, doacaoUncheckedCreateWithoutPlacasmaeInput>
    connectOrCreate?: doacaoCreateOrConnectWithoutPlacasmaeInput
    upsert?: doacaoUpsertWithoutPlacasmaeInput
    disconnect?: doacaoWhereInput | boolean
    delete?: doacaoWhereInput | boolean
    connect?: doacaoWhereUniqueInput
    update?: XOR<XOR<doacaoUpdateToOneWithWhereWithoutPlacasmaeInput, doacaoUpdateWithoutPlacasmaeInput>, doacaoUncheckedUpdateWithoutPlacasmaeInput>
  }

  export type descarteUpdateOneWithoutPlacasmaeNestedInput = {
    create?: XOR<descarteCreateWithoutPlacasmaeInput, descarteUncheckedCreateWithoutPlacasmaeInput>
    connectOrCreate?: descarteCreateOrConnectWithoutPlacasmaeInput
    upsert?: descarteUpsertWithoutPlacasmaeInput
    disconnect?: descarteWhereInput | boolean
    delete?: descarteWhereInput | boolean
    connect?: descarteWhereUniqueInput
    update?: XOR<XOR<descarteUpdateToOneWithWhereWithoutPlacasmaeInput, descarteUpdateWithoutPlacasmaeInput>, descarteUncheckedUpdateWithoutPlacasmaeInput>
  }

  export type alunoUpdateOneWithoutUsuarioPlacamaeNestedInput = {
    create?: XOR<alunoCreateWithoutUsuarioPlacamaeInput, alunoUncheckedCreateWithoutUsuarioPlacamaeInput>
    connectOrCreate?: alunoCreateOrConnectWithoutUsuarioPlacamaeInput
    upsert?: alunoUpsertWithoutUsuarioPlacamaeInput
    disconnect?: alunoWhereInput | boolean
    delete?: alunoWhereInput | boolean
    connect?: alunoWhereUniqueInput
    update?: XOR<XOR<alunoUpdateToOneWithWhereWithoutUsuarioPlacamaeInput, alunoUpdateWithoutUsuarioPlacamaeInput>, alunoUncheckedUpdateWithoutUsuarioPlacamaeInput>
  }

  export type alunoUpdateOneWithoutModificadorPlacamaeNestedInput = {
    create?: XOR<alunoCreateWithoutModificadorPlacamaeInput, alunoUncheckedCreateWithoutModificadorPlacamaeInput>
    connectOrCreate?: alunoCreateOrConnectWithoutModificadorPlacamaeInput
    upsert?: alunoUpsertWithoutModificadorPlacamaeInput
    disconnect?: alunoWhereInput | boolean
    delete?: alunoWhereInput | boolean
    connect?: alunoWhereUniqueInput
    update?: XOR<XOR<alunoUpdateToOneWithWhereWithoutModificadorPlacamaeInput, alunoUpdateWithoutModificadorPlacamaeInput>, alunoUncheckedUpdateWithoutModificadorPlacamaeInput>
  }

  export type doacaoCreateNestedOneWithoutNotebooksInput = {
    create?: XOR<doacaoCreateWithoutNotebooksInput, doacaoUncheckedCreateWithoutNotebooksInput>
    connectOrCreate?: doacaoCreateOrConnectWithoutNotebooksInput
    connect?: doacaoWhereUniqueInput
  }

  export type descarteCreateNestedOneWithoutNotebooksInput = {
    create?: XOR<descarteCreateWithoutNotebooksInput, descarteUncheckedCreateWithoutNotebooksInput>
    connectOrCreate?: descarteCreateOrConnectWithoutNotebooksInput
    connect?: descarteWhereUniqueInput
  }

  export type alunoCreateNestedOneWithoutUsuarioNotebookInput = {
    create?: XOR<alunoCreateWithoutUsuarioNotebookInput, alunoUncheckedCreateWithoutUsuarioNotebookInput>
    connectOrCreate?: alunoCreateOrConnectWithoutUsuarioNotebookInput
    connect?: alunoWhereUniqueInput
  }

  export type alunoCreateNestedOneWithoutModificadorNotebookInput = {
    create?: XOR<alunoCreateWithoutModificadorNotebookInput, alunoUncheckedCreateWithoutModificadorNotebookInput>
    connectOrCreate?: alunoCreateOrConnectWithoutModificadorNotebookInput
    connect?: alunoWhereUniqueInput
  }

  export type doacaoUpdateOneWithoutNotebooksNestedInput = {
    create?: XOR<doacaoCreateWithoutNotebooksInput, doacaoUncheckedCreateWithoutNotebooksInput>
    connectOrCreate?: doacaoCreateOrConnectWithoutNotebooksInput
    upsert?: doacaoUpsertWithoutNotebooksInput
    disconnect?: doacaoWhereInput | boolean
    delete?: doacaoWhereInput | boolean
    connect?: doacaoWhereUniqueInput
    update?: XOR<XOR<doacaoUpdateToOneWithWhereWithoutNotebooksInput, doacaoUpdateWithoutNotebooksInput>, doacaoUncheckedUpdateWithoutNotebooksInput>
  }

  export type descarteUpdateOneWithoutNotebooksNestedInput = {
    create?: XOR<descarteCreateWithoutNotebooksInput, descarteUncheckedCreateWithoutNotebooksInput>
    connectOrCreate?: descarteCreateOrConnectWithoutNotebooksInput
    upsert?: descarteUpsertWithoutNotebooksInput
    disconnect?: descarteWhereInput | boolean
    delete?: descarteWhereInput | boolean
    connect?: descarteWhereUniqueInput
    update?: XOR<XOR<descarteUpdateToOneWithWhereWithoutNotebooksInput, descarteUpdateWithoutNotebooksInput>, descarteUncheckedUpdateWithoutNotebooksInput>
  }

  export type alunoUpdateOneWithoutUsuarioNotebookNestedInput = {
    create?: XOR<alunoCreateWithoutUsuarioNotebookInput, alunoUncheckedCreateWithoutUsuarioNotebookInput>
    connectOrCreate?: alunoCreateOrConnectWithoutUsuarioNotebookInput
    upsert?: alunoUpsertWithoutUsuarioNotebookInput
    disconnect?: alunoWhereInput | boolean
    delete?: alunoWhereInput | boolean
    connect?: alunoWhereUniqueInput
    update?: XOR<XOR<alunoUpdateToOneWithWhereWithoutUsuarioNotebookInput, alunoUpdateWithoutUsuarioNotebookInput>, alunoUncheckedUpdateWithoutUsuarioNotebookInput>
  }

  export type alunoUpdateOneWithoutModificadorNotebookNestedInput = {
    create?: XOR<alunoCreateWithoutModificadorNotebookInput, alunoUncheckedCreateWithoutModificadorNotebookInput>
    connectOrCreate?: alunoCreateOrConnectWithoutModificadorNotebookInput
    upsert?: alunoUpsertWithoutModificadorNotebookInput
    disconnect?: alunoWhereInput | boolean
    delete?: alunoWhereInput | boolean
    connect?: alunoWhereUniqueInput
    update?: XOR<XOR<alunoUpdateToOneWithWhereWithoutModificadorNotebookInput, alunoUpdateWithoutModificadorNotebookInput>, alunoUncheckedUpdateWithoutModificadorNotebookInput>
  }

  export type doacaoCreateNestedOneWithoutProcessadoresInput = {
    create?: XOR<doacaoCreateWithoutProcessadoresInput, doacaoUncheckedCreateWithoutProcessadoresInput>
    connectOrCreate?: doacaoCreateOrConnectWithoutProcessadoresInput
    connect?: doacaoWhereUniqueInput
  }

  export type descarteCreateNestedOneWithoutProcessadoresInput = {
    create?: XOR<descarteCreateWithoutProcessadoresInput, descarteUncheckedCreateWithoutProcessadoresInput>
    connectOrCreate?: descarteCreateOrConnectWithoutProcessadoresInput
    connect?: descarteWhereUniqueInput
  }

  export type alunoCreateNestedOneWithoutUsuarioProcessadorInput = {
    create?: XOR<alunoCreateWithoutUsuarioProcessadorInput, alunoUncheckedCreateWithoutUsuarioProcessadorInput>
    connectOrCreate?: alunoCreateOrConnectWithoutUsuarioProcessadorInput
    connect?: alunoWhereUniqueInput
  }

  export type alunoCreateNestedOneWithoutModificadorProcessadorInput = {
    create?: XOR<alunoCreateWithoutModificadorProcessadorInput, alunoUncheckedCreateWithoutModificadorProcessadorInput>
    connectOrCreate?: alunoCreateOrConnectWithoutModificadorProcessadorInput
    connect?: alunoWhereUniqueInput
  }

  export type doacaoUpdateOneWithoutProcessadoresNestedInput = {
    create?: XOR<doacaoCreateWithoutProcessadoresInput, doacaoUncheckedCreateWithoutProcessadoresInput>
    connectOrCreate?: doacaoCreateOrConnectWithoutProcessadoresInput
    upsert?: doacaoUpsertWithoutProcessadoresInput
    disconnect?: doacaoWhereInput | boolean
    delete?: doacaoWhereInput | boolean
    connect?: doacaoWhereUniqueInput
    update?: XOR<XOR<doacaoUpdateToOneWithWhereWithoutProcessadoresInput, doacaoUpdateWithoutProcessadoresInput>, doacaoUncheckedUpdateWithoutProcessadoresInput>
  }

  export type descarteUpdateOneWithoutProcessadoresNestedInput = {
    create?: XOR<descarteCreateWithoutProcessadoresInput, descarteUncheckedCreateWithoutProcessadoresInput>
    connectOrCreate?: descarteCreateOrConnectWithoutProcessadoresInput
    upsert?: descarteUpsertWithoutProcessadoresInput
    disconnect?: descarteWhereInput | boolean
    delete?: descarteWhereInput | boolean
    connect?: descarteWhereUniqueInput
    update?: XOR<XOR<descarteUpdateToOneWithWhereWithoutProcessadoresInput, descarteUpdateWithoutProcessadoresInput>, descarteUncheckedUpdateWithoutProcessadoresInput>
  }

  export type alunoUpdateOneWithoutUsuarioProcessadorNestedInput = {
    create?: XOR<alunoCreateWithoutUsuarioProcessadorInput, alunoUncheckedCreateWithoutUsuarioProcessadorInput>
    connectOrCreate?: alunoCreateOrConnectWithoutUsuarioProcessadorInput
    upsert?: alunoUpsertWithoutUsuarioProcessadorInput
    disconnect?: alunoWhereInput | boolean
    delete?: alunoWhereInput | boolean
    connect?: alunoWhereUniqueInput
    update?: XOR<XOR<alunoUpdateToOneWithWhereWithoutUsuarioProcessadorInput, alunoUpdateWithoutUsuarioProcessadorInput>, alunoUncheckedUpdateWithoutUsuarioProcessadorInput>
  }

  export type alunoUpdateOneWithoutModificadorProcessadorNestedInput = {
    create?: XOR<alunoCreateWithoutModificadorProcessadorInput, alunoUncheckedCreateWithoutModificadorProcessadorInput>
    connectOrCreate?: alunoCreateOrConnectWithoutModificadorProcessadorInput
    upsert?: alunoUpsertWithoutModificadorProcessadorInput
    disconnect?: alunoWhereInput | boolean
    delete?: alunoWhereInput | boolean
    connect?: alunoWhereUniqueInput
    update?: XOR<XOR<alunoUpdateToOneWithWhereWithoutModificadorProcessadorInput, alunoUpdateWithoutModificadorProcessadorInput>, alunoUncheckedUpdateWithoutModificadorProcessadorInput>
  }

  export type alunoCreateNestedOneWithoutDescarteInput = {
    create?: XOR<alunoCreateWithoutDescarteInput, alunoUncheckedCreateWithoutDescarteInput>
    connectOrCreate?: alunoCreateOrConnectWithoutDescarteInput
    connect?: alunoWhereUniqueInput
  }

  export type tecladoCreateNestedManyWithoutDescarteInput = {
    create?: XOR<tecladoCreateWithoutDescarteInput, tecladoUncheckedCreateWithoutDescarteInput> | tecladoCreateWithoutDescarteInput[] | tecladoUncheckedCreateWithoutDescarteInput[]
    connectOrCreate?: tecladoCreateOrConnectWithoutDescarteInput | tecladoCreateOrConnectWithoutDescarteInput[]
    createMany?: tecladoCreateManyDescarteInputEnvelope
    connect?: tecladoWhereUniqueInput | tecladoWhereUniqueInput[]
  }

  export type hdCreateNestedManyWithoutDescarteInput = {
    create?: XOR<hdCreateWithoutDescarteInput, hdUncheckedCreateWithoutDescarteInput> | hdCreateWithoutDescarteInput[] | hdUncheckedCreateWithoutDescarteInput[]
    connectOrCreate?: hdCreateOrConnectWithoutDescarteInput | hdCreateOrConnectWithoutDescarteInput[]
    createMany?: hdCreateManyDescarteInputEnvelope
    connect?: hdWhereUniqueInput | hdWhereUniqueInput[]
  }

  export type fontedealimentacaoCreateNestedManyWithoutDescarteInput = {
    create?: XOR<fontedealimentacaoCreateWithoutDescarteInput, fontedealimentacaoUncheckedCreateWithoutDescarteInput> | fontedealimentacaoCreateWithoutDescarteInput[] | fontedealimentacaoUncheckedCreateWithoutDescarteInput[]
    connectOrCreate?: fontedealimentacaoCreateOrConnectWithoutDescarteInput | fontedealimentacaoCreateOrConnectWithoutDescarteInput[]
    createMany?: fontedealimentacaoCreateManyDescarteInputEnvelope
    connect?: fontedealimentacaoWhereUniqueInput | fontedealimentacaoWhereUniqueInput[]
  }

  export type gabineteCreateNestedManyWithoutDescarteInput = {
    create?: XOR<gabineteCreateWithoutDescarteInput, gabineteUncheckedCreateWithoutDescarteInput> | gabineteCreateWithoutDescarteInput[] | gabineteUncheckedCreateWithoutDescarteInput[]
    connectOrCreate?: gabineteCreateOrConnectWithoutDescarteInput | gabineteCreateOrConnectWithoutDescarteInput[]
    createMany?: gabineteCreateManyDescarteInputEnvelope
    connect?: gabineteWhereUniqueInput | gabineteWhereUniqueInput[]
  }

  export type monitorCreateNestedManyWithoutDescarteInput = {
    create?: XOR<monitorCreateWithoutDescarteInput, monitorUncheckedCreateWithoutDescarteInput> | monitorCreateWithoutDescarteInput[] | monitorUncheckedCreateWithoutDescarteInput[]
    connectOrCreate?: monitorCreateOrConnectWithoutDescarteInput | monitorCreateOrConnectWithoutDescarteInput[]
    createMany?: monitorCreateManyDescarteInputEnvelope
    connect?: monitorWhereUniqueInput | monitorWhereUniqueInput[]
  }

  export type mouseCreateNestedManyWithoutDescarteInput = {
    create?: XOR<mouseCreateWithoutDescarteInput, mouseUncheckedCreateWithoutDescarteInput> | mouseCreateWithoutDescarteInput[] | mouseUncheckedCreateWithoutDescarteInput[]
    connectOrCreate?: mouseCreateOrConnectWithoutDescarteInput | mouseCreateOrConnectWithoutDescarteInput[]
    createMany?: mouseCreateManyDescarteInputEnvelope
    connect?: mouseWhereUniqueInput | mouseWhereUniqueInput[]
  }

  export type estabilizadorCreateNestedManyWithoutDescarteInput = {
    create?: XOR<estabilizadorCreateWithoutDescarteInput, estabilizadorUncheckedCreateWithoutDescarteInput> | estabilizadorCreateWithoutDescarteInput[] | estabilizadorUncheckedCreateWithoutDescarteInput[]
    connectOrCreate?: estabilizadorCreateOrConnectWithoutDescarteInput | estabilizadorCreateOrConnectWithoutDescarteInput[]
    createMany?: estabilizadorCreateManyDescarteInputEnvelope
    connect?: estabilizadorWhereUniqueInput | estabilizadorWhereUniqueInput[]
  }

  export type impressoraCreateNestedManyWithoutDescarteInput = {
    create?: XOR<impressoraCreateWithoutDescarteInput, impressoraUncheckedCreateWithoutDescarteInput> | impressoraCreateWithoutDescarteInput[] | impressoraUncheckedCreateWithoutDescarteInput[]
    connectOrCreate?: impressoraCreateOrConnectWithoutDescarteInput | impressoraCreateOrConnectWithoutDescarteInput[]
    createMany?: impressoraCreateManyDescarteInputEnvelope
    connect?: impressoraWhereUniqueInput | impressoraWhereUniqueInput[]
  }

  export type placamaeCreateNestedManyWithoutDescarteInput = {
    create?: XOR<placamaeCreateWithoutDescarteInput, placamaeUncheckedCreateWithoutDescarteInput> | placamaeCreateWithoutDescarteInput[] | placamaeUncheckedCreateWithoutDescarteInput[]
    connectOrCreate?: placamaeCreateOrConnectWithoutDescarteInput | placamaeCreateOrConnectWithoutDescarteInput[]
    createMany?: placamaeCreateManyDescarteInputEnvelope
    connect?: placamaeWhereUniqueInput | placamaeWhereUniqueInput[]
  }

  export type notebookCreateNestedManyWithoutDescarteInput = {
    create?: XOR<notebookCreateWithoutDescarteInput, notebookUncheckedCreateWithoutDescarteInput> | notebookCreateWithoutDescarteInput[] | notebookUncheckedCreateWithoutDescarteInput[]
    connectOrCreate?: notebookCreateOrConnectWithoutDescarteInput | notebookCreateOrConnectWithoutDescarteInput[]
    createMany?: notebookCreateManyDescarteInputEnvelope
    connect?: notebookWhereUniqueInput | notebookWhereUniqueInput[]
  }

  export type processadorCreateNestedManyWithoutDescarteInput = {
    create?: XOR<processadorCreateWithoutDescarteInput, processadorUncheckedCreateWithoutDescarteInput> | processadorCreateWithoutDescarteInput[] | processadorUncheckedCreateWithoutDescarteInput[]
    connectOrCreate?: processadorCreateOrConnectWithoutDescarteInput | processadorCreateOrConnectWithoutDescarteInput[]
    createMany?: processadorCreateManyDescarteInputEnvelope
    connect?: processadorWhereUniqueInput | processadorWhereUniqueInput[]
  }

  export type tecladoUncheckedCreateNestedManyWithoutDescarteInput = {
    create?: XOR<tecladoCreateWithoutDescarteInput, tecladoUncheckedCreateWithoutDescarteInput> | tecladoCreateWithoutDescarteInput[] | tecladoUncheckedCreateWithoutDescarteInput[]
    connectOrCreate?: tecladoCreateOrConnectWithoutDescarteInput | tecladoCreateOrConnectWithoutDescarteInput[]
    createMany?: tecladoCreateManyDescarteInputEnvelope
    connect?: tecladoWhereUniqueInput | tecladoWhereUniqueInput[]
  }

  export type hdUncheckedCreateNestedManyWithoutDescarteInput = {
    create?: XOR<hdCreateWithoutDescarteInput, hdUncheckedCreateWithoutDescarteInput> | hdCreateWithoutDescarteInput[] | hdUncheckedCreateWithoutDescarteInput[]
    connectOrCreate?: hdCreateOrConnectWithoutDescarteInput | hdCreateOrConnectWithoutDescarteInput[]
    createMany?: hdCreateManyDescarteInputEnvelope
    connect?: hdWhereUniqueInput | hdWhereUniqueInput[]
  }

  export type fontedealimentacaoUncheckedCreateNestedManyWithoutDescarteInput = {
    create?: XOR<fontedealimentacaoCreateWithoutDescarteInput, fontedealimentacaoUncheckedCreateWithoutDescarteInput> | fontedealimentacaoCreateWithoutDescarteInput[] | fontedealimentacaoUncheckedCreateWithoutDescarteInput[]
    connectOrCreate?: fontedealimentacaoCreateOrConnectWithoutDescarteInput | fontedealimentacaoCreateOrConnectWithoutDescarteInput[]
    createMany?: fontedealimentacaoCreateManyDescarteInputEnvelope
    connect?: fontedealimentacaoWhereUniqueInput | fontedealimentacaoWhereUniqueInput[]
  }

  export type gabineteUncheckedCreateNestedManyWithoutDescarteInput = {
    create?: XOR<gabineteCreateWithoutDescarteInput, gabineteUncheckedCreateWithoutDescarteInput> | gabineteCreateWithoutDescarteInput[] | gabineteUncheckedCreateWithoutDescarteInput[]
    connectOrCreate?: gabineteCreateOrConnectWithoutDescarteInput | gabineteCreateOrConnectWithoutDescarteInput[]
    createMany?: gabineteCreateManyDescarteInputEnvelope
    connect?: gabineteWhereUniqueInput | gabineteWhereUniqueInput[]
  }

  export type monitorUncheckedCreateNestedManyWithoutDescarteInput = {
    create?: XOR<monitorCreateWithoutDescarteInput, monitorUncheckedCreateWithoutDescarteInput> | monitorCreateWithoutDescarteInput[] | monitorUncheckedCreateWithoutDescarteInput[]
    connectOrCreate?: monitorCreateOrConnectWithoutDescarteInput | monitorCreateOrConnectWithoutDescarteInput[]
    createMany?: monitorCreateManyDescarteInputEnvelope
    connect?: monitorWhereUniqueInput | monitorWhereUniqueInput[]
  }

  export type mouseUncheckedCreateNestedManyWithoutDescarteInput = {
    create?: XOR<mouseCreateWithoutDescarteInput, mouseUncheckedCreateWithoutDescarteInput> | mouseCreateWithoutDescarteInput[] | mouseUncheckedCreateWithoutDescarteInput[]
    connectOrCreate?: mouseCreateOrConnectWithoutDescarteInput | mouseCreateOrConnectWithoutDescarteInput[]
    createMany?: mouseCreateManyDescarteInputEnvelope
    connect?: mouseWhereUniqueInput | mouseWhereUniqueInput[]
  }

  export type estabilizadorUncheckedCreateNestedManyWithoutDescarteInput = {
    create?: XOR<estabilizadorCreateWithoutDescarteInput, estabilizadorUncheckedCreateWithoutDescarteInput> | estabilizadorCreateWithoutDescarteInput[] | estabilizadorUncheckedCreateWithoutDescarteInput[]
    connectOrCreate?: estabilizadorCreateOrConnectWithoutDescarteInput | estabilizadorCreateOrConnectWithoutDescarteInput[]
    createMany?: estabilizadorCreateManyDescarteInputEnvelope
    connect?: estabilizadorWhereUniqueInput | estabilizadorWhereUniqueInput[]
  }

  export type impressoraUncheckedCreateNestedManyWithoutDescarteInput = {
    create?: XOR<impressoraCreateWithoutDescarteInput, impressoraUncheckedCreateWithoutDescarteInput> | impressoraCreateWithoutDescarteInput[] | impressoraUncheckedCreateWithoutDescarteInput[]
    connectOrCreate?: impressoraCreateOrConnectWithoutDescarteInput | impressoraCreateOrConnectWithoutDescarteInput[]
    createMany?: impressoraCreateManyDescarteInputEnvelope
    connect?: impressoraWhereUniqueInput | impressoraWhereUniqueInput[]
  }

  export type placamaeUncheckedCreateNestedManyWithoutDescarteInput = {
    create?: XOR<placamaeCreateWithoutDescarteInput, placamaeUncheckedCreateWithoutDescarteInput> | placamaeCreateWithoutDescarteInput[] | placamaeUncheckedCreateWithoutDescarteInput[]
    connectOrCreate?: placamaeCreateOrConnectWithoutDescarteInput | placamaeCreateOrConnectWithoutDescarteInput[]
    createMany?: placamaeCreateManyDescarteInputEnvelope
    connect?: placamaeWhereUniqueInput | placamaeWhereUniqueInput[]
  }

  export type notebookUncheckedCreateNestedManyWithoutDescarteInput = {
    create?: XOR<notebookCreateWithoutDescarteInput, notebookUncheckedCreateWithoutDescarteInput> | notebookCreateWithoutDescarteInput[] | notebookUncheckedCreateWithoutDescarteInput[]
    connectOrCreate?: notebookCreateOrConnectWithoutDescarteInput | notebookCreateOrConnectWithoutDescarteInput[]
    createMany?: notebookCreateManyDescarteInputEnvelope
    connect?: notebookWhereUniqueInput | notebookWhereUniqueInput[]
  }

  export type processadorUncheckedCreateNestedManyWithoutDescarteInput = {
    create?: XOR<processadorCreateWithoutDescarteInput, processadorUncheckedCreateWithoutDescarteInput> | processadorCreateWithoutDescarteInput[] | processadorUncheckedCreateWithoutDescarteInput[]
    connectOrCreate?: processadorCreateOrConnectWithoutDescarteInput | processadorCreateOrConnectWithoutDescarteInput[]
    createMany?: processadorCreateManyDescarteInputEnvelope
    connect?: processadorWhereUniqueInput | processadorWhereUniqueInput[]
  }

  export type alunoUpdateOneWithoutDescarteNestedInput = {
    create?: XOR<alunoCreateWithoutDescarteInput, alunoUncheckedCreateWithoutDescarteInput>
    connectOrCreate?: alunoCreateOrConnectWithoutDescarteInput
    upsert?: alunoUpsertWithoutDescarteInput
    disconnect?: alunoWhereInput | boolean
    delete?: alunoWhereInput | boolean
    connect?: alunoWhereUniqueInput
    update?: XOR<XOR<alunoUpdateToOneWithWhereWithoutDescarteInput, alunoUpdateWithoutDescarteInput>, alunoUncheckedUpdateWithoutDescarteInput>
  }

  export type tecladoUpdateManyWithoutDescarteNestedInput = {
    create?: XOR<tecladoCreateWithoutDescarteInput, tecladoUncheckedCreateWithoutDescarteInput> | tecladoCreateWithoutDescarteInput[] | tecladoUncheckedCreateWithoutDescarteInput[]
    connectOrCreate?: tecladoCreateOrConnectWithoutDescarteInput | tecladoCreateOrConnectWithoutDescarteInput[]
    upsert?: tecladoUpsertWithWhereUniqueWithoutDescarteInput | tecladoUpsertWithWhereUniqueWithoutDescarteInput[]
    createMany?: tecladoCreateManyDescarteInputEnvelope
    set?: tecladoWhereUniqueInput | tecladoWhereUniqueInput[]
    disconnect?: tecladoWhereUniqueInput | tecladoWhereUniqueInput[]
    delete?: tecladoWhereUniqueInput | tecladoWhereUniqueInput[]
    connect?: tecladoWhereUniqueInput | tecladoWhereUniqueInput[]
    update?: tecladoUpdateWithWhereUniqueWithoutDescarteInput | tecladoUpdateWithWhereUniqueWithoutDescarteInput[]
    updateMany?: tecladoUpdateManyWithWhereWithoutDescarteInput | tecladoUpdateManyWithWhereWithoutDescarteInput[]
    deleteMany?: tecladoScalarWhereInput | tecladoScalarWhereInput[]
  }

  export type hdUpdateManyWithoutDescarteNestedInput = {
    create?: XOR<hdCreateWithoutDescarteInput, hdUncheckedCreateWithoutDescarteInput> | hdCreateWithoutDescarteInput[] | hdUncheckedCreateWithoutDescarteInput[]
    connectOrCreate?: hdCreateOrConnectWithoutDescarteInput | hdCreateOrConnectWithoutDescarteInput[]
    upsert?: hdUpsertWithWhereUniqueWithoutDescarteInput | hdUpsertWithWhereUniqueWithoutDescarteInput[]
    createMany?: hdCreateManyDescarteInputEnvelope
    set?: hdWhereUniqueInput | hdWhereUniqueInput[]
    disconnect?: hdWhereUniqueInput | hdWhereUniqueInput[]
    delete?: hdWhereUniqueInput | hdWhereUniqueInput[]
    connect?: hdWhereUniqueInput | hdWhereUniqueInput[]
    update?: hdUpdateWithWhereUniqueWithoutDescarteInput | hdUpdateWithWhereUniqueWithoutDescarteInput[]
    updateMany?: hdUpdateManyWithWhereWithoutDescarteInput | hdUpdateManyWithWhereWithoutDescarteInput[]
    deleteMany?: hdScalarWhereInput | hdScalarWhereInput[]
  }

  export type fontedealimentacaoUpdateManyWithoutDescarteNestedInput = {
    create?: XOR<fontedealimentacaoCreateWithoutDescarteInput, fontedealimentacaoUncheckedCreateWithoutDescarteInput> | fontedealimentacaoCreateWithoutDescarteInput[] | fontedealimentacaoUncheckedCreateWithoutDescarteInput[]
    connectOrCreate?: fontedealimentacaoCreateOrConnectWithoutDescarteInput | fontedealimentacaoCreateOrConnectWithoutDescarteInput[]
    upsert?: fontedealimentacaoUpsertWithWhereUniqueWithoutDescarteInput | fontedealimentacaoUpsertWithWhereUniqueWithoutDescarteInput[]
    createMany?: fontedealimentacaoCreateManyDescarteInputEnvelope
    set?: fontedealimentacaoWhereUniqueInput | fontedealimentacaoWhereUniqueInput[]
    disconnect?: fontedealimentacaoWhereUniqueInput | fontedealimentacaoWhereUniqueInput[]
    delete?: fontedealimentacaoWhereUniqueInput | fontedealimentacaoWhereUniqueInput[]
    connect?: fontedealimentacaoWhereUniqueInput | fontedealimentacaoWhereUniqueInput[]
    update?: fontedealimentacaoUpdateWithWhereUniqueWithoutDescarteInput | fontedealimentacaoUpdateWithWhereUniqueWithoutDescarteInput[]
    updateMany?: fontedealimentacaoUpdateManyWithWhereWithoutDescarteInput | fontedealimentacaoUpdateManyWithWhereWithoutDescarteInput[]
    deleteMany?: fontedealimentacaoScalarWhereInput | fontedealimentacaoScalarWhereInput[]
  }

  export type gabineteUpdateManyWithoutDescarteNestedInput = {
    create?: XOR<gabineteCreateWithoutDescarteInput, gabineteUncheckedCreateWithoutDescarteInput> | gabineteCreateWithoutDescarteInput[] | gabineteUncheckedCreateWithoutDescarteInput[]
    connectOrCreate?: gabineteCreateOrConnectWithoutDescarteInput | gabineteCreateOrConnectWithoutDescarteInput[]
    upsert?: gabineteUpsertWithWhereUniqueWithoutDescarteInput | gabineteUpsertWithWhereUniqueWithoutDescarteInput[]
    createMany?: gabineteCreateManyDescarteInputEnvelope
    set?: gabineteWhereUniqueInput | gabineteWhereUniqueInput[]
    disconnect?: gabineteWhereUniqueInput | gabineteWhereUniqueInput[]
    delete?: gabineteWhereUniqueInput | gabineteWhereUniqueInput[]
    connect?: gabineteWhereUniqueInput | gabineteWhereUniqueInput[]
    update?: gabineteUpdateWithWhereUniqueWithoutDescarteInput | gabineteUpdateWithWhereUniqueWithoutDescarteInput[]
    updateMany?: gabineteUpdateManyWithWhereWithoutDescarteInput | gabineteUpdateManyWithWhereWithoutDescarteInput[]
    deleteMany?: gabineteScalarWhereInput | gabineteScalarWhereInput[]
  }

  export type monitorUpdateManyWithoutDescarteNestedInput = {
    create?: XOR<monitorCreateWithoutDescarteInput, monitorUncheckedCreateWithoutDescarteInput> | monitorCreateWithoutDescarteInput[] | monitorUncheckedCreateWithoutDescarteInput[]
    connectOrCreate?: monitorCreateOrConnectWithoutDescarteInput | monitorCreateOrConnectWithoutDescarteInput[]
    upsert?: monitorUpsertWithWhereUniqueWithoutDescarteInput | monitorUpsertWithWhereUniqueWithoutDescarteInput[]
    createMany?: monitorCreateManyDescarteInputEnvelope
    set?: monitorWhereUniqueInput | monitorWhereUniqueInput[]
    disconnect?: monitorWhereUniqueInput | monitorWhereUniqueInput[]
    delete?: monitorWhereUniqueInput | monitorWhereUniqueInput[]
    connect?: monitorWhereUniqueInput | monitorWhereUniqueInput[]
    update?: monitorUpdateWithWhereUniqueWithoutDescarteInput | monitorUpdateWithWhereUniqueWithoutDescarteInput[]
    updateMany?: monitorUpdateManyWithWhereWithoutDescarteInput | monitorUpdateManyWithWhereWithoutDescarteInput[]
    deleteMany?: monitorScalarWhereInput | monitorScalarWhereInput[]
  }

  export type mouseUpdateManyWithoutDescarteNestedInput = {
    create?: XOR<mouseCreateWithoutDescarteInput, mouseUncheckedCreateWithoutDescarteInput> | mouseCreateWithoutDescarteInput[] | mouseUncheckedCreateWithoutDescarteInput[]
    connectOrCreate?: mouseCreateOrConnectWithoutDescarteInput | mouseCreateOrConnectWithoutDescarteInput[]
    upsert?: mouseUpsertWithWhereUniqueWithoutDescarteInput | mouseUpsertWithWhereUniqueWithoutDescarteInput[]
    createMany?: mouseCreateManyDescarteInputEnvelope
    set?: mouseWhereUniqueInput | mouseWhereUniqueInput[]
    disconnect?: mouseWhereUniqueInput | mouseWhereUniqueInput[]
    delete?: mouseWhereUniqueInput | mouseWhereUniqueInput[]
    connect?: mouseWhereUniqueInput | mouseWhereUniqueInput[]
    update?: mouseUpdateWithWhereUniqueWithoutDescarteInput | mouseUpdateWithWhereUniqueWithoutDescarteInput[]
    updateMany?: mouseUpdateManyWithWhereWithoutDescarteInput | mouseUpdateManyWithWhereWithoutDescarteInput[]
    deleteMany?: mouseScalarWhereInput | mouseScalarWhereInput[]
  }

  export type estabilizadorUpdateManyWithoutDescarteNestedInput = {
    create?: XOR<estabilizadorCreateWithoutDescarteInput, estabilizadorUncheckedCreateWithoutDescarteInput> | estabilizadorCreateWithoutDescarteInput[] | estabilizadorUncheckedCreateWithoutDescarteInput[]
    connectOrCreate?: estabilizadorCreateOrConnectWithoutDescarteInput | estabilizadorCreateOrConnectWithoutDescarteInput[]
    upsert?: estabilizadorUpsertWithWhereUniqueWithoutDescarteInput | estabilizadorUpsertWithWhereUniqueWithoutDescarteInput[]
    createMany?: estabilizadorCreateManyDescarteInputEnvelope
    set?: estabilizadorWhereUniqueInput | estabilizadorWhereUniqueInput[]
    disconnect?: estabilizadorWhereUniqueInput | estabilizadorWhereUniqueInput[]
    delete?: estabilizadorWhereUniqueInput | estabilizadorWhereUniqueInput[]
    connect?: estabilizadorWhereUniqueInput | estabilizadorWhereUniqueInput[]
    update?: estabilizadorUpdateWithWhereUniqueWithoutDescarteInput | estabilizadorUpdateWithWhereUniqueWithoutDescarteInput[]
    updateMany?: estabilizadorUpdateManyWithWhereWithoutDescarteInput | estabilizadorUpdateManyWithWhereWithoutDescarteInput[]
    deleteMany?: estabilizadorScalarWhereInput | estabilizadorScalarWhereInput[]
  }

  export type impressoraUpdateManyWithoutDescarteNestedInput = {
    create?: XOR<impressoraCreateWithoutDescarteInput, impressoraUncheckedCreateWithoutDescarteInput> | impressoraCreateWithoutDescarteInput[] | impressoraUncheckedCreateWithoutDescarteInput[]
    connectOrCreate?: impressoraCreateOrConnectWithoutDescarteInput | impressoraCreateOrConnectWithoutDescarteInput[]
    upsert?: impressoraUpsertWithWhereUniqueWithoutDescarteInput | impressoraUpsertWithWhereUniqueWithoutDescarteInput[]
    createMany?: impressoraCreateManyDescarteInputEnvelope
    set?: impressoraWhereUniqueInput | impressoraWhereUniqueInput[]
    disconnect?: impressoraWhereUniqueInput | impressoraWhereUniqueInput[]
    delete?: impressoraWhereUniqueInput | impressoraWhereUniqueInput[]
    connect?: impressoraWhereUniqueInput | impressoraWhereUniqueInput[]
    update?: impressoraUpdateWithWhereUniqueWithoutDescarteInput | impressoraUpdateWithWhereUniqueWithoutDescarteInput[]
    updateMany?: impressoraUpdateManyWithWhereWithoutDescarteInput | impressoraUpdateManyWithWhereWithoutDescarteInput[]
    deleteMany?: impressoraScalarWhereInput | impressoraScalarWhereInput[]
  }

  export type placamaeUpdateManyWithoutDescarteNestedInput = {
    create?: XOR<placamaeCreateWithoutDescarteInput, placamaeUncheckedCreateWithoutDescarteInput> | placamaeCreateWithoutDescarteInput[] | placamaeUncheckedCreateWithoutDescarteInput[]
    connectOrCreate?: placamaeCreateOrConnectWithoutDescarteInput | placamaeCreateOrConnectWithoutDescarteInput[]
    upsert?: placamaeUpsertWithWhereUniqueWithoutDescarteInput | placamaeUpsertWithWhereUniqueWithoutDescarteInput[]
    createMany?: placamaeCreateManyDescarteInputEnvelope
    set?: placamaeWhereUniqueInput | placamaeWhereUniqueInput[]
    disconnect?: placamaeWhereUniqueInput | placamaeWhereUniqueInput[]
    delete?: placamaeWhereUniqueInput | placamaeWhereUniqueInput[]
    connect?: placamaeWhereUniqueInput | placamaeWhereUniqueInput[]
    update?: placamaeUpdateWithWhereUniqueWithoutDescarteInput | placamaeUpdateWithWhereUniqueWithoutDescarteInput[]
    updateMany?: placamaeUpdateManyWithWhereWithoutDescarteInput | placamaeUpdateManyWithWhereWithoutDescarteInput[]
    deleteMany?: placamaeScalarWhereInput | placamaeScalarWhereInput[]
  }

  export type notebookUpdateManyWithoutDescarteNestedInput = {
    create?: XOR<notebookCreateWithoutDescarteInput, notebookUncheckedCreateWithoutDescarteInput> | notebookCreateWithoutDescarteInput[] | notebookUncheckedCreateWithoutDescarteInput[]
    connectOrCreate?: notebookCreateOrConnectWithoutDescarteInput | notebookCreateOrConnectWithoutDescarteInput[]
    upsert?: notebookUpsertWithWhereUniqueWithoutDescarteInput | notebookUpsertWithWhereUniqueWithoutDescarteInput[]
    createMany?: notebookCreateManyDescarteInputEnvelope
    set?: notebookWhereUniqueInput | notebookWhereUniqueInput[]
    disconnect?: notebookWhereUniqueInput | notebookWhereUniqueInput[]
    delete?: notebookWhereUniqueInput | notebookWhereUniqueInput[]
    connect?: notebookWhereUniqueInput | notebookWhereUniqueInput[]
    update?: notebookUpdateWithWhereUniqueWithoutDescarteInput | notebookUpdateWithWhereUniqueWithoutDescarteInput[]
    updateMany?: notebookUpdateManyWithWhereWithoutDescarteInput | notebookUpdateManyWithWhereWithoutDescarteInput[]
    deleteMany?: notebookScalarWhereInput | notebookScalarWhereInput[]
  }

  export type processadorUpdateManyWithoutDescarteNestedInput = {
    create?: XOR<processadorCreateWithoutDescarteInput, processadorUncheckedCreateWithoutDescarteInput> | processadorCreateWithoutDescarteInput[] | processadorUncheckedCreateWithoutDescarteInput[]
    connectOrCreate?: processadorCreateOrConnectWithoutDescarteInput | processadorCreateOrConnectWithoutDescarteInput[]
    upsert?: processadorUpsertWithWhereUniqueWithoutDescarteInput | processadorUpsertWithWhereUniqueWithoutDescarteInput[]
    createMany?: processadorCreateManyDescarteInputEnvelope
    set?: processadorWhereUniqueInput | processadorWhereUniqueInput[]
    disconnect?: processadorWhereUniqueInput | processadorWhereUniqueInput[]
    delete?: processadorWhereUniqueInput | processadorWhereUniqueInput[]
    connect?: processadorWhereUniqueInput | processadorWhereUniqueInput[]
    update?: processadorUpdateWithWhereUniqueWithoutDescarteInput | processadorUpdateWithWhereUniqueWithoutDescarteInput[]
    updateMany?: processadorUpdateManyWithWhereWithoutDescarteInput | processadorUpdateManyWithWhereWithoutDescarteInput[]
    deleteMany?: processadorScalarWhereInput | processadorScalarWhereInput[]
  }

  export type tecladoUncheckedUpdateManyWithoutDescarteNestedInput = {
    create?: XOR<tecladoCreateWithoutDescarteInput, tecladoUncheckedCreateWithoutDescarteInput> | tecladoCreateWithoutDescarteInput[] | tecladoUncheckedCreateWithoutDescarteInput[]
    connectOrCreate?: tecladoCreateOrConnectWithoutDescarteInput | tecladoCreateOrConnectWithoutDescarteInput[]
    upsert?: tecladoUpsertWithWhereUniqueWithoutDescarteInput | tecladoUpsertWithWhereUniqueWithoutDescarteInput[]
    createMany?: tecladoCreateManyDescarteInputEnvelope
    set?: tecladoWhereUniqueInput | tecladoWhereUniqueInput[]
    disconnect?: tecladoWhereUniqueInput | tecladoWhereUniqueInput[]
    delete?: tecladoWhereUniqueInput | tecladoWhereUniqueInput[]
    connect?: tecladoWhereUniqueInput | tecladoWhereUniqueInput[]
    update?: tecladoUpdateWithWhereUniqueWithoutDescarteInput | tecladoUpdateWithWhereUniqueWithoutDescarteInput[]
    updateMany?: tecladoUpdateManyWithWhereWithoutDescarteInput | tecladoUpdateManyWithWhereWithoutDescarteInput[]
    deleteMany?: tecladoScalarWhereInput | tecladoScalarWhereInput[]
  }

  export type hdUncheckedUpdateManyWithoutDescarteNestedInput = {
    create?: XOR<hdCreateWithoutDescarteInput, hdUncheckedCreateWithoutDescarteInput> | hdCreateWithoutDescarteInput[] | hdUncheckedCreateWithoutDescarteInput[]
    connectOrCreate?: hdCreateOrConnectWithoutDescarteInput | hdCreateOrConnectWithoutDescarteInput[]
    upsert?: hdUpsertWithWhereUniqueWithoutDescarteInput | hdUpsertWithWhereUniqueWithoutDescarteInput[]
    createMany?: hdCreateManyDescarteInputEnvelope
    set?: hdWhereUniqueInput | hdWhereUniqueInput[]
    disconnect?: hdWhereUniqueInput | hdWhereUniqueInput[]
    delete?: hdWhereUniqueInput | hdWhereUniqueInput[]
    connect?: hdWhereUniqueInput | hdWhereUniqueInput[]
    update?: hdUpdateWithWhereUniqueWithoutDescarteInput | hdUpdateWithWhereUniqueWithoutDescarteInput[]
    updateMany?: hdUpdateManyWithWhereWithoutDescarteInput | hdUpdateManyWithWhereWithoutDescarteInput[]
    deleteMany?: hdScalarWhereInput | hdScalarWhereInput[]
  }

  export type fontedealimentacaoUncheckedUpdateManyWithoutDescarteNestedInput = {
    create?: XOR<fontedealimentacaoCreateWithoutDescarteInput, fontedealimentacaoUncheckedCreateWithoutDescarteInput> | fontedealimentacaoCreateWithoutDescarteInput[] | fontedealimentacaoUncheckedCreateWithoutDescarteInput[]
    connectOrCreate?: fontedealimentacaoCreateOrConnectWithoutDescarteInput | fontedealimentacaoCreateOrConnectWithoutDescarteInput[]
    upsert?: fontedealimentacaoUpsertWithWhereUniqueWithoutDescarteInput | fontedealimentacaoUpsertWithWhereUniqueWithoutDescarteInput[]
    createMany?: fontedealimentacaoCreateManyDescarteInputEnvelope
    set?: fontedealimentacaoWhereUniqueInput | fontedealimentacaoWhereUniqueInput[]
    disconnect?: fontedealimentacaoWhereUniqueInput | fontedealimentacaoWhereUniqueInput[]
    delete?: fontedealimentacaoWhereUniqueInput | fontedealimentacaoWhereUniqueInput[]
    connect?: fontedealimentacaoWhereUniqueInput | fontedealimentacaoWhereUniqueInput[]
    update?: fontedealimentacaoUpdateWithWhereUniqueWithoutDescarteInput | fontedealimentacaoUpdateWithWhereUniqueWithoutDescarteInput[]
    updateMany?: fontedealimentacaoUpdateManyWithWhereWithoutDescarteInput | fontedealimentacaoUpdateManyWithWhereWithoutDescarteInput[]
    deleteMany?: fontedealimentacaoScalarWhereInput | fontedealimentacaoScalarWhereInput[]
  }

  export type gabineteUncheckedUpdateManyWithoutDescarteNestedInput = {
    create?: XOR<gabineteCreateWithoutDescarteInput, gabineteUncheckedCreateWithoutDescarteInput> | gabineteCreateWithoutDescarteInput[] | gabineteUncheckedCreateWithoutDescarteInput[]
    connectOrCreate?: gabineteCreateOrConnectWithoutDescarteInput | gabineteCreateOrConnectWithoutDescarteInput[]
    upsert?: gabineteUpsertWithWhereUniqueWithoutDescarteInput | gabineteUpsertWithWhereUniqueWithoutDescarteInput[]
    createMany?: gabineteCreateManyDescarteInputEnvelope
    set?: gabineteWhereUniqueInput | gabineteWhereUniqueInput[]
    disconnect?: gabineteWhereUniqueInput | gabineteWhereUniqueInput[]
    delete?: gabineteWhereUniqueInput | gabineteWhereUniqueInput[]
    connect?: gabineteWhereUniqueInput | gabineteWhereUniqueInput[]
    update?: gabineteUpdateWithWhereUniqueWithoutDescarteInput | gabineteUpdateWithWhereUniqueWithoutDescarteInput[]
    updateMany?: gabineteUpdateManyWithWhereWithoutDescarteInput | gabineteUpdateManyWithWhereWithoutDescarteInput[]
    deleteMany?: gabineteScalarWhereInput | gabineteScalarWhereInput[]
  }

  export type monitorUncheckedUpdateManyWithoutDescarteNestedInput = {
    create?: XOR<monitorCreateWithoutDescarteInput, monitorUncheckedCreateWithoutDescarteInput> | monitorCreateWithoutDescarteInput[] | monitorUncheckedCreateWithoutDescarteInput[]
    connectOrCreate?: monitorCreateOrConnectWithoutDescarteInput | monitorCreateOrConnectWithoutDescarteInput[]
    upsert?: monitorUpsertWithWhereUniqueWithoutDescarteInput | monitorUpsertWithWhereUniqueWithoutDescarteInput[]
    createMany?: monitorCreateManyDescarteInputEnvelope
    set?: monitorWhereUniqueInput | monitorWhereUniqueInput[]
    disconnect?: monitorWhereUniqueInput | monitorWhereUniqueInput[]
    delete?: monitorWhereUniqueInput | monitorWhereUniqueInput[]
    connect?: monitorWhereUniqueInput | monitorWhereUniqueInput[]
    update?: monitorUpdateWithWhereUniqueWithoutDescarteInput | monitorUpdateWithWhereUniqueWithoutDescarteInput[]
    updateMany?: monitorUpdateManyWithWhereWithoutDescarteInput | monitorUpdateManyWithWhereWithoutDescarteInput[]
    deleteMany?: monitorScalarWhereInput | monitorScalarWhereInput[]
  }

  export type mouseUncheckedUpdateManyWithoutDescarteNestedInput = {
    create?: XOR<mouseCreateWithoutDescarteInput, mouseUncheckedCreateWithoutDescarteInput> | mouseCreateWithoutDescarteInput[] | mouseUncheckedCreateWithoutDescarteInput[]
    connectOrCreate?: mouseCreateOrConnectWithoutDescarteInput | mouseCreateOrConnectWithoutDescarteInput[]
    upsert?: mouseUpsertWithWhereUniqueWithoutDescarteInput | mouseUpsertWithWhereUniqueWithoutDescarteInput[]
    createMany?: mouseCreateManyDescarteInputEnvelope
    set?: mouseWhereUniqueInput | mouseWhereUniqueInput[]
    disconnect?: mouseWhereUniqueInput | mouseWhereUniqueInput[]
    delete?: mouseWhereUniqueInput | mouseWhereUniqueInput[]
    connect?: mouseWhereUniqueInput | mouseWhereUniqueInput[]
    update?: mouseUpdateWithWhereUniqueWithoutDescarteInput | mouseUpdateWithWhereUniqueWithoutDescarteInput[]
    updateMany?: mouseUpdateManyWithWhereWithoutDescarteInput | mouseUpdateManyWithWhereWithoutDescarteInput[]
    deleteMany?: mouseScalarWhereInput | mouseScalarWhereInput[]
  }

  export type estabilizadorUncheckedUpdateManyWithoutDescarteNestedInput = {
    create?: XOR<estabilizadorCreateWithoutDescarteInput, estabilizadorUncheckedCreateWithoutDescarteInput> | estabilizadorCreateWithoutDescarteInput[] | estabilizadorUncheckedCreateWithoutDescarteInput[]
    connectOrCreate?: estabilizadorCreateOrConnectWithoutDescarteInput | estabilizadorCreateOrConnectWithoutDescarteInput[]
    upsert?: estabilizadorUpsertWithWhereUniqueWithoutDescarteInput | estabilizadorUpsertWithWhereUniqueWithoutDescarteInput[]
    createMany?: estabilizadorCreateManyDescarteInputEnvelope
    set?: estabilizadorWhereUniqueInput | estabilizadorWhereUniqueInput[]
    disconnect?: estabilizadorWhereUniqueInput | estabilizadorWhereUniqueInput[]
    delete?: estabilizadorWhereUniqueInput | estabilizadorWhereUniqueInput[]
    connect?: estabilizadorWhereUniqueInput | estabilizadorWhereUniqueInput[]
    update?: estabilizadorUpdateWithWhereUniqueWithoutDescarteInput | estabilizadorUpdateWithWhereUniqueWithoutDescarteInput[]
    updateMany?: estabilizadorUpdateManyWithWhereWithoutDescarteInput | estabilizadorUpdateManyWithWhereWithoutDescarteInput[]
    deleteMany?: estabilizadorScalarWhereInput | estabilizadorScalarWhereInput[]
  }

  export type impressoraUncheckedUpdateManyWithoutDescarteNestedInput = {
    create?: XOR<impressoraCreateWithoutDescarteInput, impressoraUncheckedCreateWithoutDescarteInput> | impressoraCreateWithoutDescarteInput[] | impressoraUncheckedCreateWithoutDescarteInput[]
    connectOrCreate?: impressoraCreateOrConnectWithoutDescarteInput | impressoraCreateOrConnectWithoutDescarteInput[]
    upsert?: impressoraUpsertWithWhereUniqueWithoutDescarteInput | impressoraUpsertWithWhereUniqueWithoutDescarteInput[]
    createMany?: impressoraCreateManyDescarteInputEnvelope
    set?: impressoraWhereUniqueInput | impressoraWhereUniqueInput[]
    disconnect?: impressoraWhereUniqueInput | impressoraWhereUniqueInput[]
    delete?: impressoraWhereUniqueInput | impressoraWhereUniqueInput[]
    connect?: impressoraWhereUniqueInput | impressoraWhereUniqueInput[]
    update?: impressoraUpdateWithWhereUniqueWithoutDescarteInput | impressoraUpdateWithWhereUniqueWithoutDescarteInput[]
    updateMany?: impressoraUpdateManyWithWhereWithoutDescarteInput | impressoraUpdateManyWithWhereWithoutDescarteInput[]
    deleteMany?: impressoraScalarWhereInput | impressoraScalarWhereInput[]
  }

  export type placamaeUncheckedUpdateManyWithoutDescarteNestedInput = {
    create?: XOR<placamaeCreateWithoutDescarteInput, placamaeUncheckedCreateWithoutDescarteInput> | placamaeCreateWithoutDescarteInput[] | placamaeUncheckedCreateWithoutDescarteInput[]
    connectOrCreate?: placamaeCreateOrConnectWithoutDescarteInput | placamaeCreateOrConnectWithoutDescarteInput[]
    upsert?: placamaeUpsertWithWhereUniqueWithoutDescarteInput | placamaeUpsertWithWhereUniqueWithoutDescarteInput[]
    createMany?: placamaeCreateManyDescarteInputEnvelope
    set?: placamaeWhereUniqueInput | placamaeWhereUniqueInput[]
    disconnect?: placamaeWhereUniqueInput | placamaeWhereUniqueInput[]
    delete?: placamaeWhereUniqueInput | placamaeWhereUniqueInput[]
    connect?: placamaeWhereUniqueInput | placamaeWhereUniqueInput[]
    update?: placamaeUpdateWithWhereUniqueWithoutDescarteInput | placamaeUpdateWithWhereUniqueWithoutDescarteInput[]
    updateMany?: placamaeUpdateManyWithWhereWithoutDescarteInput | placamaeUpdateManyWithWhereWithoutDescarteInput[]
    deleteMany?: placamaeScalarWhereInput | placamaeScalarWhereInput[]
  }

  export type notebookUncheckedUpdateManyWithoutDescarteNestedInput = {
    create?: XOR<notebookCreateWithoutDescarteInput, notebookUncheckedCreateWithoutDescarteInput> | notebookCreateWithoutDescarteInput[] | notebookUncheckedCreateWithoutDescarteInput[]
    connectOrCreate?: notebookCreateOrConnectWithoutDescarteInput | notebookCreateOrConnectWithoutDescarteInput[]
    upsert?: notebookUpsertWithWhereUniqueWithoutDescarteInput | notebookUpsertWithWhereUniqueWithoutDescarteInput[]
    createMany?: notebookCreateManyDescarteInputEnvelope
    set?: notebookWhereUniqueInput | notebookWhereUniqueInput[]
    disconnect?: notebookWhereUniqueInput | notebookWhereUniqueInput[]
    delete?: notebookWhereUniqueInput | notebookWhereUniqueInput[]
    connect?: notebookWhereUniqueInput | notebookWhereUniqueInput[]
    update?: notebookUpdateWithWhereUniqueWithoutDescarteInput | notebookUpdateWithWhereUniqueWithoutDescarteInput[]
    updateMany?: notebookUpdateManyWithWhereWithoutDescarteInput | notebookUpdateManyWithWhereWithoutDescarteInput[]
    deleteMany?: notebookScalarWhereInput | notebookScalarWhereInput[]
  }

  export type processadorUncheckedUpdateManyWithoutDescarteNestedInput = {
    create?: XOR<processadorCreateWithoutDescarteInput, processadorUncheckedCreateWithoutDescarteInput> | processadorCreateWithoutDescarteInput[] | processadorUncheckedCreateWithoutDescarteInput[]
    connectOrCreate?: processadorCreateOrConnectWithoutDescarteInput | processadorCreateOrConnectWithoutDescarteInput[]
    upsert?: processadorUpsertWithWhereUniqueWithoutDescarteInput | processadorUpsertWithWhereUniqueWithoutDescarteInput[]
    createMany?: processadorCreateManyDescarteInputEnvelope
    set?: processadorWhereUniqueInput | processadorWhereUniqueInput[]
    disconnect?: processadorWhereUniqueInput | processadorWhereUniqueInput[]
    delete?: processadorWhereUniqueInput | processadorWhereUniqueInput[]
    connect?: processadorWhereUniqueInput | processadorWhereUniqueInput[]
    update?: processadorUpdateWithWhereUniqueWithoutDescarteInput | processadorUpdateWithWhereUniqueWithoutDescarteInput[]
    updateMany?: processadorUpdateManyWithWhereWithoutDescarteInput | processadorUpdateManyWithWhereWithoutDescarteInput[]
    deleteMany?: processadorScalarWhereInput | processadorScalarWhereInput[]
  }

  export type alunoCreateNestedOneWithoutDoacaoInput = {
    create?: XOR<alunoCreateWithoutDoacaoInput, alunoUncheckedCreateWithoutDoacaoInput>
    connectOrCreate?: alunoCreateOrConnectWithoutDoacaoInput
    connect?: alunoWhereUniqueInput
  }

  export type pessoafisicaCreateNestedOneWithoutDoacaoInput = {
    create?: XOR<pessoafisicaCreateWithoutDoacaoInput, pessoafisicaUncheckedCreateWithoutDoacaoInput>
    connectOrCreate?: pessoafisicaCreateOrConnectWithoutDoacaoInput
    connect?: pessoafisicaWhereUniqueInput
  }

  export type pessoajuridicaCreateNestedOneWithoutDoacaoInput = {
    create?: XOR<pessoajuridicaCreateWithoutDoacaoInput, pessoajuridicaUncheckedCreateWithoutDoacaoInput>
    connectOrCreate?: pessoajuridicaCreateOrConnectWithoutDoacaoInput
    connect?: pessoajuridicaWhereUniqueInput
  }

  export type tecladoCreateNestedManyWithoutDoacaoInput = {
    create?: XOR<tecladoCreateWithoutDoacaoInput, tecladoUncheckedCreateWithoutDoacaoInput> | tecladoCreateWithoutDoacaoInput[] | tecladoUncheckedCreateWithoutDoacaoInput[]
    connectOrCreate?: tecladoCreateOrConnectWithoutDoacaoInput | tecladoCreateOrConnectWithoutDoacaoInput[]
    createMany?: tecladoCreateManyDoacaoInputEnvelope
    connect?: tecladoWhereUniqueInput | tecladoWhereUniqueInput[]
  }

  export type hdCreateNestedManyWithoutDoacaoInput = {
    create?: XOR<hdCreateWithoutDoacaoInput, hdUncheckedCreateWithoutDoacaoInput> | hdCreateWithoutDoacaoInput[] | hdUncheckedCreateWithoutDoacaoInput[]
    connectOrCreate?: hdCreateOrConnectWithoutDoacaoInput | hdCreateOrConnectWithoutDoacaoInput[]
    createMany?: hdCreateManyDoacaoInputEnvelope
    connect?: hdWhereUniqueInput | hdWhereUniqueInput[]
  }

  export type fontedealimentacaoCreateNestedManyWithoutDoacaoInput = {
    create?: XOR<fontedealimentacaoCreateWithoutDoacaoInput, fontedealimentacaoUncheckedCreateWithoutDoacaoInput> | fontedealimentacaoCreateWithoutDoacaoInput[] | fontedealimentacaoUncheckedCreateWithoutDoacaoInput[]
    connectOrCreate?: fontedealimentacaoCreateOrConnectWithoutDoacaoInput | fontedealimentacaoCreateOrConnectWithoutDoacaoInput[]
    createMany?: fontedealimentacaoCreateManyDoacaoInputEnvelope
    connect?: fontedealimentacaoWhereUniqueInput | fontedealimentacaoWhereUniqueInput[]
  }

  export type gabineteCreateNestedManyWithoutDoacaoInput = {
    create?: XOR<gabineteCreateWithoutDoacaoInput, gabineteUncheckedCreateWithoutDoacaoInput> | gabineteCreateWithoutDoacaoInput[] | gabineteUncheckedCreateWithoutDoacaoInput[]
    connectOrCreate?: gabineteCreateOrConnectWithoutDoacaoInput | gabineteCreateOrConnectWithoutDoacaoInput[]
    createMany?: gabineteCreateManyDoacaoInputEnvelope
    connect?: gabineteWhereUniqueInput | gabineteWhereUniqueInput[]
  }

  export type monitorCreateNestedManyWithoutDoacaoInput = {
    create?: XOR<monitorCreateWithoutDoacaoInput, monitorUncheckedCreateWithoutDoacaoInput> | monitorCreateWithoutDoacaoInput[] | monitorUncheckedCreateWithoutDoacaoInput[]
    connectOrCreate?: monitorCreateOrConnectWithoutDoacaoInput | monitorCreateOrConnectWithoutDoacaoInput[]
    createMany?: monitorCreateManyDoacaoInputEnvelope
    connect?: monitorWhereUniqueInput | monitorWhereUniqueInput[]
  }

  export type mouseCreateNestedManyWithoutDoacaoInput = {
    create?: XOR<mouseCreateWithoutDoacaoInput, mouseUncheckedCreateWithoutDoacaoInput> | mouseCreateWithoutDoacaoInput[] | mouseUncheckedCreateWithoutDoacaoInput[]
    connectOrCreate?: mouseCreateOrConnectWithoutDoacaoInput | mouseCreateOrConnectWithoutDoacaoInput[]
    createMany?: mouseCreateManyDoacaoInputEnvelope
    connect?: mouseWhereUniqueInput | mouseWhereUniqueInput[]
  }

  export type estabilizadorCreateNestedManyWithoutDoacaoInput = {
    create?: XOR<estabilizadorCreateWithoutDoacaoInput, estabilizadorUncheckedCreateWithoutDoacaoInput> | estabilizadorCreateWithoutDoacaoInput[] | estabilizadorUncheckedCreateWithoutDoacaoInput[]
    connectOrCreate?: estabilizadorCreateOrConnectWithoutDoacaoInput | estabilizadorCreateOrConnectWithoutDoacaoInput[]
    createMany?: estabilizadorCreateManyDoacaoInputEnvelope
    connect?: estabilizadorWhereUniqueInput | estabilizadorWhereUniqueInput[]
  }

  export type impressoraCreateNestedManyWithoutDoacaoInput = {
    create?: XOR<impressoraCreateWithoutDoacaoInput, impressoraUncheckedCreateWithoutDoacaoInput> | impressoraCreateWithoutDoacaoInput[] | impressoraUncheckedCreateWithoutDoacaoInput[]
    connectOrCreate?: impressoraCreateOrConnectWithoutDoacaoInput | impressoraCreateOrConnectWithoutDoacaoInput[]
    createMany?: impressoraCreateManyDoacaoInputEnvelope
    connect?: impressoraWhereUniqueInput | impressoraWhereUniqueInput[]
  }

  export type placamaeCreateNestedManyWithoutDoacaoInput = {
    create?: XOR<placamaeCreateWithoutDoacaoInput, placamaeUncheckedCreateWithoutDoacaoInput> | placamaeCreateWithoutDoacaoInput[] | placamaeUncheckedCreateWithoutDoacaoInput[]
    connectOrCreate?: placamaeCreateOrConnectWithoutDoacaoInput | placamaeCreateOrConnectWithoutDoacaoInput[]
    createMany?: placamaeCreateManyDoacaoInputEnvelope
    connect?: placamaeWhereUniqueInput | placamaeWhereUniqueInput[]
  }

  export type notebookCreateNestedManyWithoutDoacaoInput = {
    create?: XOR<notebookCreateWithoutDoacaoInput, notebookUncheckedCreateWithoutDoacaoInput> | notebookCreateWithoutDoacaoInput[] | notebookUncheckedCreateWithoutDoacaoInput[]
    connectOrCreate?: notebookCreateOrConnectWithoutDoacaoInput | notebookCreateOrConnectWithoutDoacaoInput[]
    createMany?: notebookCreateManyDoacaoInputEnvelope
    connect?: notebookWhereUniqueInput | notebookWhereUniqueInput[]
  }

  export type processadorCreateNestedManyWithoutDoacaoInput = {
    create?: XOR<processadorCreateWithoutDoacaoInput, processadorUncheckedCreateWithoutDoacaoInput> | processadorCreateWithoutDoacaoInput[] | processadorUncheckedCreateWithoutDoacaoInput[]
    connectOrCreate?: processadorCreateOrConnectWithoutDoacaoInput | processadorCreateOrConnectWithoutDoacaoInput[]
    createMany?: processadorCreateManyDoacaoInputEnvelope
    connect?: processadorWhereUniqueInput | processadorWhereUniqueInput[]
  }

  export type tecladoUncheckedCreateNestedManyWithoutDoacaoInput = {
    create?: XOR<tecladoCreateWithoutDoacaoInput, tecladoUncheckedCreateWithoutDoacaoInput> | tecladoCreateWithoutDoacaoInput[] | tecladoUncheckedCreateWithoutDoacaoInput[]
    connectOrCreate?: tecladoCreateOrConnectWithoutDoacaoInput | tecladoCreateOrConnectWithoutDoacaoInput[]
    createMany?: tecladoCreateManyDoacaoInputEnvelope
    connect?: tecladoWhereUniqueInput | tecladoWhereUniqueInput[]
  }

  export type hdUncheckedCreateNestedManyWithoutDoacaoInput = {
    create?: XOR<hdCreateWithoutDoacaoInput, hdUncheckedCreateWithoutDoacaoInput> | hdCreateWithoutDoacaoInput[] | hdUncheckedCreateWithoutDoacaoInput[]
    connectOrCreate?: hdCreateOrConnectWithoutDoacaoInput | hdCreateOrConnectWithoutDoacaoInput[]
    createMany?: hdCreateManyDoacaoInputEnvelope
    connect?: hdWhereUniqueInput | hdWhereUniqueInput[]
  }

  export type fontedealimentacaoUncheckedCreateNestedManyWithoutDoacaoInput = {
    create?: XOR<fontedealimentacaoCreateWithoutDoacaoInput, fontedealimentacaoUncheckedCreateWithoutDoacaoInput> | fontedealimentacaoCreateWithoutDoacaoInput[] | fontedealimentacaoUncheckedCreateWithoutDoacaoInput[]
    connectOrCreate?: fontedealimentacaoCreateOrConnectWithoutDoacaoInput | fontedealimentacaoCreateOrConnectWithoutDoacaoInput[]
    createMany?: fontedealimentacaoCreateManyDoacaoInputEnvelope
    connect?: fontedealimentacaoWhereUniqueInput | fontedealimentacaoWhereUniqueInput[]
  }

  export type gabineteUncheckedCreateNestedManyWithoutDoacaoInput = {
    create?: XOR<gabineteCreateWithoutDoacaoInput, gabineteUncheckedCreateWithoutDoacaoInput> | gabineteCreateWithoutDoacaoInput[] | gabineteUncheckedCreateWithoutDoacaoInput[]
    connectOrCreate?: gabineteCreateOrConnectWithoutDoacaoInput | gabineteCreateOrConnectWithoutDoacaoInput[]
    createMany?: gabineteCreateManyDoacaoInputEnvelope
    connect?: gabineteWhereUniqueInput | gabineteWhereUniqueInput[]
  }

  export type monitorUncheckedCreateNestedManyWithoutDoacaoInput = {
    create?: XOR<monitorCreateWithoutDoacaoInput, monitorUncheckedCreateWithoutDoacaoInput> | monitorCreateWithoutDoacaoInput[] | monitorUncheckedCreateWithoutDoacaoInput[]
    connectOrCreate?: monitorCreateOrConnectWithoutDoacaoInput | monitorCreateOrConnectWithoutDoacaoInput[]
    createMany?: monitorCreateManyDoacaoInputEnvelope
    connect?: monitorWhereUniqueInput | monitorWhereUniqueInput[]
  }

  export type mouseUncheckedCreateNestedManyWithoutDoacaoInput = {
    create?: XOR<mouseCreateWithoutDoacaoInput, mouseUncheckedCreateWithoutDoacaoInput> | mouseCreateWithoutDoacaoInput[] | mouseUncheckedCreateWithoutDoacaoInput[]
    connectOrCreate?: mouseCreateOrConnectWithoutDoacaoInput | mouseCreateOrConnectWithoutDoacaoInput[]
    createMany?: mouseCreateManyDoacaoInputEnvelope
    connect?: mouseWhereUniqueInput | mouseWhereUniqueInput[]
  }

  export type estabilizadorUncheckedCreateNestedManyWithoutDoacaoInput = {
    create?: XOR<estabilizadorCreateWithoutDoacaoInput, estabilizadorUncheckedCreateWithoutDoacaoInput> | estabilizadorCreateWithoutDoacaoInput[] | estabilizadorUncheckedCreateWithoutDoacaoInput[]
    connectOrCreate?: estabilizadorCreateOrConnectWithoutDoacaoInput | estabilizadorCreateOrConnectWithoutDoacaoInput[]
    createMany?: estabilizadorCreateManyDoacaoInputEnvelope
    connect?: estabilizadorWhereUniqueInput | estabilizadorWhereUniqueInput[]
  }

  export type impressoraUncheckedCreateNestedManyWithoutDoacaoInput = {
    create?: XOR<impressoraCreateWithoutDoacaoInput, impressoraUncheckedCreateWithoutDoacaoInput> | impressoraCreateWithoutDoacaoInput[] | impressoraUncheckedCreateWithoutDoacaoInput[]
    connectOrCreate?: impressoraCreateOrConnectWithoutDoacaoInput | impressoraCreateOrConnectWithoutDoacaoInput[]
    createMany?: impressoraCreateManyDoacaoInputEnvelope
    connect?: impressoraWhereUniqueInput | impressoraWhereUniqueInput[]
  }

  export type placamaeUncheckedCreateNestedManyWithoutDoacaoInput = {
    create?: XOR<placamaeCreateWithoutDoacaoInput, placamaeUncheckedCreateWithoutDoacaoInput> | placamaeCreateWithoutDoacaoInput[] | placamaeUncheckedCreateWithoutDoacaoInput[]
    connectOrCreate?: placamaeCreateOrConnectWithoutDoacaoInput | placamaeCreateOrConnectWithoutDoacaoInput[]
    createMany?: placamaeCreateManyDoacaoInputEnvelope
    connect?: placamaeWhereUniqueInput | placamaeWhereUniqueInput[]
  }

  export type notebookUncheckedCreateNestedManyWithoutDoacaoInput = {
    create?: XOR<notebookCreateWithoutDoacaoInput, notebookUncheckedCreateWithoutDoacaoInput> | notebookCreateWithoutDoacaoInput[] | notebookUncheckedCreateWithoutDoacaoInput[]
    connectOrCreate?: notebookCreateOrConnectWithoutDoacaoInput | notebookCreateOrConnectWithoutDoacaoInput[]
    createMany?: notebookCreateManyDoacaoInputEnvelope
    connect?: notebookWhereUniqueInput | notebookWhereUniqueInput[]
  }

  export type processadorUncheckedCreateNestedManyWithoutDoacaoInput = {
    create?: XOR<processadorCreateWithoutDoacaoInput, processadorUncheckedCreateWithoutDoacaoInput> | processadorCreateWithoutDoacaoInput[] | processadorUncheckedCreateWithoutDoacaoInput[]
    connectOrCreate?: processadorCreateOrConnectWithoutDoacaoInput | processadorCreateOrConnectWithoutDoacaoInput[]
    createMany?: processadorCreateManyDoacaoInputEnvelope
    connect?: processadorWhereUniqueInput | processadorWhereUniqueInput[]
  }

  export type alunoUpdateOneWithoutDoacaoNestedInput = {
    create?: XOR<alunoCreateWithoutDoacaoInput, alunoUncheckedCreateWithoutDoacaoInput>
    connectOrCreate?: alunoCreateOrConnectWithoutDoacaoInput
    upsert?: alunoUpsertWithoutDoacaoInput
    disconnect?: alunoWhereInput | boolean
    delete?: alunoWhereInput | boolean
    connect?: alunoWhereUniqueInput
    update?: XOR<XOR<alunoUpdateToOneWithWhereWithoutDoacaoInput, alunoUpdateWithoutDoacaoInput>, alunoUncheckedUpdateWithoutDoacaoInput>
  }

  export type pessoafisicaUpdateOneWithoutDoacaoNestedInput = {
    create?: XOR<pessoafisicaCreateWithoutDoacaoInput, pessoafisicaUncheckedCreateWithoutDoacaoInput>
    connectOrCreate?: pessoafisicaCreateOrConnectWithoutDoacaoInput
    upsert?: pessoafisicaUpsertWithoutDoacaoInput
    disconnect?: pessoafisicaWhereInput | boolean
    delete?: pessoafisicaWhereInput | boolean
    connect?: pessoafisicaWhereUniqueInput
    update?: XOR<XOR<pessoafisicaUpdateToOneWithWhereWithoutDoacaoInput, pessoafisicaUpdateWithoutDoacaoInput>, pessoafisicaUncheckedUpdateWithoutDoacaoInput>
  }

  export type pessoajuridicaUpdateOneWithoutDoacaoNestedInput = {
    create?: XOR<pessoajuridicaCreateWithoutDoacaoInput, pessoajuridicaUncheckedCreateWithoutDoacaoInput>
    connectOrCreate?: pessoajuridicaCreateOrConnectWithoutDoacaoInput
    upsert?: pessoajuridicaUpsertWithoutDoacaoInput
    disconnect?: pessoajuridicaWhereInput | boolean
    delete?: pessoajuridicaWhereInput | boolean
    connect?: pessoajuridicaWhereUniqueInput
    update?: XOR<XOR<pessoajuridicaUpdateToOneWithWhereWithoutDoacaoInput, pessoajuridicaUpdateWithoutDoacaoInput>, pessoajuridicaUncheckedUpdateWithoutDoacaoInput>
  }

  export type tecladoUpdateManyWithoutDoacaoNestedInput = {
    create?: XOR<tecladoCreateWithoutDoacaoInput, tecladoUncheckedCreateWithoutDoacaoInput> | tecladoCreateWithoutDoacaoInput[] | tecladoUncheckedCreateWithoutDoacaoInput[]
    connectOrCreate?: tecladoCreateOrConnectWithoutDoacaoInput | tecladoCreateOrConnectWithoutDoacaoInput[]
    upsert?: tecladoUpsertWithWhereUniqueWithoutDoacaoInput | tecladoUpsertWithWhereUniqueWithoutDoacaoInput[]
    createMany?: tecladoCreateManyDoacaoInputEnvelope
    set?: tecladoWhereUniqueInput | tecladoWhereUniqueInput[]
    disconnect?: tecladoWhereUniqueInput | tecladoWhereUniqueInput[]
    delete?: tecladoWhereUniqueInput | tecladoWhereUniqueInput[]
    connect?: tecladoWhereUniqueInput | tecladoWhereUniqueInput[]
    update?: tecladoUpdateWithWhereUniqueWithoutDoacaoInput | tecladoUpdateWithWhereUniqueWithoutDoacaoInput[]
    updateMany?: tecladoUpdateManyWithWhereWithoutDoacaoInput | tecladoUpdateManyWithWhereWithoutDoacaoInput[]
    deleteMany?: tecladoScalarWhereInput | tecladoScalarWhereInput[]
  }

  export type hdUpdateManyWithoutDoacaoNestedInput = {
    create?: XOR<hdCreateWithoutDoacaoInput, hdUncheckedCreateWithoutDoacaoInput> | hdCreateWithoutDoacaoInput[] | hdUncheckedCreateWithoutDoacaoInput[]
    connectOrCreate?: hdCreateOrConnectWithoutDoacaoInput | hdCreateOrConnectWithoutDoacaoInput[]
    upsert?: hdUpsertWithWhereUniqueWithoutDoacaoInput | hdUpsertWithWhereUniqueWithoutDoacaoInput[]
    createMany?: hdCreateManyDoacaoInputEnvelope
    set?: hdWhereUniqueInput | hdWhereUniqueInput[]
    disconnect?: hdWhereUniqueInput | hdWhereUniqueInput[]
    delete?: hdWhereUniqueInput | hdWhereUniqueInput[]
    connect?: hdWhereUniqueInput | hdWhereUniqueInput[]
    update?: hdUpdateWithWhereUniqueWithoutDoacaoInput | hdUpdateWithWhereUniqueWithoutDoacaoInput[]
    updateMany?: hdUpdateManyWithWhereWithoutDoacaoInput | hdUpdateManyWithWhereWithoutDoacaoInput[]
    deleteMany?: hdScalarWhereInput | hdScalarWhereInput[]
  }

  export type fontedealimentacaoUpdateManyWithoutDoacaoNestedInput = {
    create?: XOR<fontedealimentacaoCreateWithoutDoacaoInput, fontedealimentacaoUncheckedCreateWithoutDoacaoInput> | fontedealimentacaoCreateWithoutDoacaoInput[] | fontedealimentacaoUncheckedCreateWithoutDoacaoInput[]
    connectOrCreate?: fontedealimentacaoCreateOrConnectWithoutDoacaoInput | fontedealimentacaoCreateOrConnectWithoutDoacaoInput[]
    upsert?: fontedealimentacaoUpsertWithWhereUniqueWithoutDoacaoInput | fontedealimentacaoUpsertWithWhereUniqueWithoutDoacaoInput[]
    createMany?: fontedealimentacaoCreateManyDoacaoInputEnvelope
    set?: fontedealimentacaoWhereUniqueInput | fontedealimentacaoWhereUniqueInput[]
    disconnect?: fontedealimentacaoWhereUniqueInput | fontedealimentacaoWhereUniqueInput[]
    delete?: fontedealimentacaoWhereUniqueInput | fontedealimentacaoWhereUniqueInput[]
    connect?: fontedealimentacaoWhereUniqueInput | fontedealimentacaoWhereUniqueInput[]
    update?: fontedealimentacaoUpdateWithWhereUniqueWithoutDoacaoInput | fontedealimentacaoUpdateWithWhereUniqueWithoutDoacaoInput[]
    updateMany?: fontedealimentacaoUpdateManyWithWhereWithoutDoacaoInput | fontedealimentacaoUpdateManyWithWhereWithoutDoacaoInput[]
    deleteMany?: fontedealimentacaoScalarWhereInput | fontedealimentacaoScalarWhereInput[]
  }

  export type gabineteUpdateManyWithoutDoacaoNestedInput = {
    create?: XOR<gabineteCreateWithoutDoacaoInput, gabineteUncheckedCreateWithoutDoacaoInput> | gabineteCreateWithoutDoacaoInput[] | gabineteUncheckedCreateWithoutDoacaoInput[]
    connectOrCreate?: gabineteCreateOrConnectWithoutDoacaoInput | gabineteCreateOrConnectWithoutDoacaoInput[]
    upsert?: gabineteUpsertWithWhereUniqueWithoutDoacaoInput | gabineteUpsertWithWhereUniqueWithoutDoacaoInput[]
    createMany?: gabineteCreateManyDoacaoInputEnvelope
    set?: gabineteWhereUniqueInput | gabineteWhereUniqueInput[]
    disconnect?: gabineteWhereUniqueInput | gabineteWhereUniqueInput[]
    delete?: gabineteWhereUniqueInput | gabineteWhereUniqueInput[]
    connect?: gabineteWhereUniqueInput | gabineteWhereUniqueInput[]
    update?: gabineteUpdateWithWhereUniqueWithoutDoacaoInput | gabineteUpdateWithWhereUniqueWithoutDoacaoInput[]
    updateMany?: gabineteUpdateManyWithWhereWithoutDoacaoInput | gabineteUpdateManyWithWhereWithoutDoacaoInput[]
    deleteMany?: gabineteScalarWhereInput | gabineteScalarWhereInput[]
  }

  export type monitorUpdateManyWithoutDoacaoNestedInput = {
    create?: XOR<monitorCreateWithoutDoacaoInput, monitorUncheckedCreateWithoutDoacaoInput> | monitorCreateWithoutDoacaoInput[] | monitorUncheckedCreateWithoutDoacaoInput[]
    connectOrCreate?: monitorCreateOrConnectWithoutDoacaoInput | monitorCreateOrConnectWithoutDoacaoInput[]
    upsert?: monitorUpsertWithWhereUniqueWithoutDoacaoInput | monitorUpsertWithWhereUniqueWithoutDoacaoInput[]
    createMany?: monitorCreateManyDoacaoInputEnvelope
    set?: monitorWhereUniqueInput | monitorWhereUniqueInput[]
    disconnect?: monitorWhereUniqueInput | monitorWhereUniqueInput[]
    delete?: monitorWhereUniqueInput | monitorWhereUniqueInput[]
    connect?: monitorWhereUniqueInput | monitorWhereUniqueInput[]
    update?: monitorUpdateWithWhereUniqueWithoutDoacaoInput | monitorUpdateWithWhereUniqueWithoutDoacaoInput[]
    updateMany?: monitorUpdateManyWithWhereWithoutDoacaoInput | monitorUpdateManyWithWhereWithoutDoacaoInput[]
    deleteMany?: monitorScalarWhereInput | monitorScalarWhereInput[]
  }

  export type mouseUpdateManyWithoutDoacaoNestedInput = {
    create?: XOR<mouseCreateWithoutDoacaoInput, mouseUncheckedCreateWithoutDoacaoInput> | mouseCreateWithoutDoacaoInput[] | mouseUncheckedCreateWithoutDoacaoInput[]
    connectOrCreate?: mouseCreateOrConnectWithoutDoacaoInput | mouseCreateOrConnectWithoutDoacaoInput[]
    upsert?: mouseUpsertWithWhereUniqueWithoutDoacaoInput | mouseUpsertWithWhereUniqueWithoutDoacaoInput[]
    createMany?: mouseCreateManyDoacaoInputEnvelope
    set?: mouseWhereUniqueInput | mouseWhereUniqueInput[]
    disconnect?: mouseWhereUniqueInput | mouseWhereUniqueInput[]
    delete?: mouseWhereUniqueInput | mouseWhereUniqueInput[]
    connect?: mouseWhereUniqueInput | mouseWhereUniqueInput[]
    update?: mouseUpdateWithWhereUniqueWithoutDoacaoInput | mouseUpdateWithWhereUniqueWithoutDoacaoInput[]
    updateMany?: mouseUpdateManyWithWhereWithoutDoacaoInput | mouseUpdateManyWithWhereWithoutDoacaoInput[]
    deleteMany?: mouseScalarWhereInput | mouseScalarWhereInput[]
  }

  export type estabilizadorUpdateManyWithoutDoacaoNestedInput = {
    create?: XOR<estabilizadorCreateWithoutDoacaoInput, estabilizadorUncheckedCreateWithoutDoacaoInput> | estabilizadorCreateWithoutDoacaoInput[] | estabilizadorUncheckedCreateWithoutDoacaoInput[]
    connectOrCreate?: estabilizadorCreateOrConnectWithoutDoacaoInput | estabilizadorCreateOrConnectWithoutDoacaoInput[]
    upsert?: estabilizadorUpsertWithWhereUniqueWithoutDoacaoInput | estabilizadorUpsertWithWhereUniqueWithoutDoacaoInput[]
    createMany?: estabilizadorCreateManyDoacaoInputEnvelope
    set?: estabilizadorWhereUniqueInput | estabilizadorWhereUniqueInput[]
    disconnect?: estabilizadorWhereUniqueInput | estabilizadorWhereUniqueInput[]
    delete?: estabilizadorWhereUniqueInput | estabilizadorWhereUniqueInput[]
    connect?: estabilizadorWhereUniqueInput | estabilizadorWhereUniqueInput[]
    update?: estabilizadorUpdateWithWhereUniqueWithoutDoacaoInput | estabilizadorUpdateWithWhereUniqueWithoutDoacaoInput[]
    updateMany?: estabilizadorUpdateManyWithWhereWithoutDoacaoInput | estabilizadorUpdateManyWithWhereWithoutDoacaoInput[]
    deleteMany?: estabilizadorScalarWhereInput | estabilizadorScalarWhereInput[]
  }

  export type impressoraUpdateManyWithoutDoacaoNestedInput = {
    create?: XOR<impressoraCreateWithoutDoacaoInput, impressoraUncheckedCreateWithoutDoacaoInput> | impressoraCreateWithoutDoacaoInput[] | impressoraUncheckedCreateWithoutDoacaoInput[]
    connectOrCreate?: impressoraCreateOrConnectWithoutDoacaoInput | impressoraCreateOrConnectWithoutDoacaoInput[]
    upsert?: impressoraUpsertWithWhereUniqueWithoutDoacaoInput | impressoraUpsertWithWhereUniqueWithoutDoacaoInput[]
    createMany?: impressoraCreateManyDoacaoInputEnvelope
    set?: impressoraWhereUniqueInput | impressoraWhereUniqueInput[]
    disconnect?: impressoraWhereUniqueInput | impressoraWhereUniqueInput[]
    delete?: impressoraWhereUniqueInput | impressoraWhereUniqueInput[]
    connect?: impressoraWhereUniqueInput | impressoraWhereUniqueInput[]
    update?: impressoraUpdateWithWhereUniqueWithoutDoacaoInput | impressoraUpdateWithWhereUniqueWithoutDoacaoInput[]
    updateMany?: impressoraUpdateManyWithWhereWithoutDoacaoInput | impressoraUpdateManyWithWhereWithoutDoacaoInput[]
    deleteMany?: impressoraScalarWhereInput | impressoraScalarWhereInput[]
  }

  export type placamaeUpdateManyWithoutDoacaoNestedInput = {
    create?: XOR<placamaeCreateWithoutDoacaoInput, placamaeUncheckedCreateWithoutDoacaoInput> | placamaeCreateWithoutDoacaoInput[] | placamaeUncheckedCreateWithoutDoacaoInput[]
    connectOrCreate?: placamaeCreateOrConnectWithoutDoacaoInput | placamaeCreateOrConnectWithoutDoacaoInput[]
    upsert?: placamaeUpsertWithWhereUniqueWithoutDoacaoInput | placamaeUpsertWithWhereUniqueWithoutDoacaoInput[]
    createMany?: placamaeCreateManyDoacaoInputEnvelope
    set?: placamaeWhereUniqueInput | placamaeWhereUniqueInput[]
    disconnect?: placamaeWhereUniqueInput | placamaeWhereUniqueInput[]
    delete?: placamaeWhereUniqueInput | placamaeWhereUniqueInput[]
    connect?: placamaeWhereUniqueInput | placamaeWhereUniqueInput[]
    update?: placamaeUpdateWithWhereUniqueWithoutDoacaoInput | placamaeUpdateWithWhereUniqueWithoutDoacaoInput[]
    updateMany?: placamaeUpdateManyWithWhereWithoutDoacaoInput | placamaeUpdateManyWithWhereWithoutDoacaoInput[]
    deleteMany?: placamaeScalarWhereInput | placamaeScalarWhereInput[]
  }

  export type notebookUpdateManyWithoutDoacaoNestedInput = {
    create?: XOR<notebookCreateWithoutDoacaoInput, notebookUncheckedCreateWithoutDoacaoInput> | notebookCreateWithoutDoacaoInput[] | notebookUncheckedCreateWithoutDoacaoInput[]
    connectOrCreate?: notebookCreateOrConnectWithoutDoacaoInput | notebookCreateOrConnectWithoutDoacaoInput[]
    upsert?: notebookUpsertWithWhereUniqueWithoutDoacaoInput | notebookUpsertWithWhereUniqueWithoutDoacaoInput[]
    createMany?: notebookCreateManyDoacaoInputEnvelope
    set?: notebookWhereUniqueInput | notebookWhereUniqueInput[]
    disconnect?: notebookWhereUniqueInput | notebookWhereUniqueInput[]
    delete?: notebookWhereUniqueInput | notebookWhereUniqueInput[]
    connect?: notebookWhereUniqueInput | notebookWhereUniqueInput[]
    update?: notebookUpdateWithWhereUniqueWithoutDoacaoInput | notebookUpdateWithWhereUniqueWithoutDoacaoInput[]
    updateMany?: notebookUpdateManyWithWhereWithoutDoacaoInput | notebookUpdateManyWithWhereWithoutDoacaoInput[]
    deleteMany?: notebookScalarWhereInput | notebookScalarWhereInput[]
  }

  export type processadorUpdateManyWithoutDoacaoNestedInput = {
    create?: XOR<processadorCreateWithoutDoacaoInput, processadorUncheckedCreateWithoutDoacaoInput> | processadorCreateWithoutDoacaoInput[] | processadorUncheckedCreateWithoutDoacaoInput[]
    connectOrCreate?: processadorCreateOrConnectWithoutDoacaoInput | processadorCreateOrConnectWithoutDoacaoInput[]
    upsert?: processadorUpsertWithWhereUniqueWithoutDoacaoInput | processadorUpsertWithWhereUniqueWithoutDoacaoInput[]
    createMany?: processadorCreateManyDoacaoInputEnvelope
    set?: processadorWhereUniqueInput | processadorWhereUniqueInput[]
    disconnect?: processadorWhereUniqueInput | processadorWhereUniqueInput[]
    delete?: processadorWhereUniqueInput | processadorWhereUniqueInput[]
    connect?: processadorWhereUniqueInput | processadorWhereUniqueInput[]
    update?: processadorUpdateWithWhereUniqueWithoutDoacaoInput | processadorUpdateWithWhereUniqueWithoutDoacaoInput[]
    updateMany?: processadorUpdateManyWithWhereWithoutDoacaoInput | processadorUpdateManyWithWhereWithoutDoacaoInput[]
    deleteMany?: processadorScalarWhereInput | processadorScalarWhereInput[]
  }

  export type tecladoUncheckedUpdateManyWithoutDoacaoNestedInput = {
    create?: XOR<tecladoCreateWithoutDoacaoInput, tecladoUncheckedCreateWithoutDoacaoInput> | tecladoCreateWithoutDoacaoInput[] | tecladoUncheckedCreateWithoutDoacaoInput[]
    connectOrCreate?: tecladoCreateOrConnectWithoutDoacaoInput | tecladoCreateOrConnectWithoutDoacaoInput[]
    upsert?: tecladoUpsertWithWhereUniqueWithoutDoacaoInput | tecladoUpsertWithWhereUniqueWithoutDoacaoInput[]
    createMany?: tecladoCreateManyDoacaoInputEnvelope
    set?: tecladoWhereUniqueInput | tecladoWhereUniqueInput[]
    disconnect?: tecladoWhereUniqueInput | tecladoWhereUniqueInput[]
    delete?: tecladoWhereUniqueInput | tecladoWhereUniqueInput[]
    connect?: tecladoWhereUniqueInput | tecladoWhereUniqueInput[]
    update?: tecladoUpdateWithWhereUniqueWithoutDoacaoInput | tecladoUpdateWithWhereUniqueWithoutDoacaoInput[]
    updateMany?: tecladoUpdateManyWithWhereWithoutDoacaoInput | tecladoUpdateManyWithWhereWithoutDoacaoInput[]
    deleteMany?: tecladoScalarWhereInput | tecladoScalarWhereInput[]
  }

  export type hdUncheckedUpdateManyWithoutDoacaoNestedInput = {
    create?: XOR<hdCreateWithoutDoacaoInput, hdUncheckedCreateWithoutDoacaoInput> | hdCreateWithoutDoacaoInput[] | hdUncheckedCreateWithoutDoacaoInput[]
    connectOrCreate?: hdCreateOrConnectWithoutDoacaoInput | hdCreateOrConnectWithoutDoacaoInput[]
    upsert?: hdUpsertWithWhereUniqueWithoutDoacaoInput | hdUpsertWithWhereUniqueWithoutDoacaoInput[]
    createMany?: hdCreateManyDoacaoInputEnvelope
    set?: hdWhereUniqueInput | hdWhereUniqueInput[]
    disconnect?: hdWhereUniqueInput | hdWhereUniqueInput[]
    delete?: hdWhereUniqueInput | hdWhereUniqueInput[]
    connect?: hdWhereUniqueInput | hdWhereUniqueInput[]
    update?: hdUpdateWithWhereUniqueWithoutDoacaoInput | hdUpdateWithWhereUniqueWithoutDoacaoInput[]
    updateMany?: hdUpdateManyWithWhereWithoutDoacaoInput | hdUpdateManyWithWhereWithoutDoacaoInput[]
    deleteMany?: hdScalarWhereInput | hdScalarWhereInput[]
  }

  export type fontedealimentacaoUncheckedUpdateManyWithoutDoacaoNestedInput = {
    create?: XOR<fontedealimentacaoCreateWithoutDoacaoInput, fontedealimentacaoUncheckedCreateWithoutDoacaoInput> | fontedealimentacaoCreateWithoutDoacaoInput[] | fontedealimentacaoUncheckedCreateWithoutDoacaoInput[]
    connectOrCreate?: fontedealimentacaoCreateOrConnectWithoutDoacaoInput | fontedealimentacaoCreateOrConnectWithoutDoacaoInput[]
    upsert?: fontedealimentacaoUpsertWithWhereUniqueWithoutDoacaoInput | fontedealimentacaoUpsertWithWhereUniqueWithoutDoacaoInput[]
    createMany?: fontedealimentacaoCreateManyDoacaoInputEnvelope
    set?: fontedealimentacaoWhereUniqueInput | fontedealimentacaoWhereUniqueInput[]
    disconnect?: fontedealimentacaoWhereUniqueInput | fontedealimentacaoWhereUniqueInput[]
    delete?: fontedealimentacaoWhereUniqueInput | fontedealimentacaoWhereUniqueInput[]
    connect?: fontedealimentacaoWhereUniqueInput | fontedealimentacaoWhereUniqueInput[]
    update?: fontedealimentacaoUpdateWithWhereUniqueWithoutDoacaoInput | fontedealimentacaoUpdateWithWhereUniqueWithoutDoacaoInput[]
    updateMany?: fontedealimentacaoUpdateManyWithWhereWithoutDoacaoInput | fontedealimentacaoUpdateManyWithWhereWithoutDoacaoInput[]
    deleteMany?: fontedealimentacaoScalarWhereInput | fontedealimentacaoScalarWhereInput[]
  }

  export type gabineteUncheckedUpdateManyWithoutDoacaoNestedInput = {
    create?: XOR<gabineteCreateWithoutDoacaoInput, gabineteUncheckedCreateWithoutDoacaoInput> | gabineteCreateWithoutDoacaoInput[] | gabineteUncheckedCreateWithoutDoacaoInput[]
    connectOrCreate?: gabineteCreateOrConnectWithoutDoacaoInput | gabineteCreateOrConnectWithoutDoacaoInput[]
    upsert?: gabineteUpsertWithWhereUniqueWithoutDoacaoInput | gabineteUpsertWithWhereUniqueWithoutDoacaoInput[]
    createMany?: gabineteCreateManyDoacaoInputEnvelope
    set?: gabineteWhereUniqueInput | gabineteWhereUniqueInput[]
    disconnect?: gabineteWhereUniqueInput | gabineteWhereUniqueInput[]
    delete?: gabineteWhereUniqueInput | gabineteWhereUniqueInput[]
    connect?: gabineteWhereUniqueInput | gabineteWhereUniqueInput[]
    update?: gabineteUpdateWithWhereUniqueWithoutDoacaoInput | gabineteUpdateWithWhereUniqueWithoutDoacaoInput[]
    updateMany?: gabineteUpdateManyWithWhereWithoutDoacaoInput | gabineteUpdateManyWithWhereWithoutDoacaoInput[]
    deleteMany?: gabineteScalarWhereInput | gabineteScalarWhereInput[]
  }

  export type monitorUncheckedUpdateManyWithoutDoacaoNestedInput = {
    create?: XOR<monitorCreateWithoutDoacaoInput, monitorUncheckedCreateWithoutDoacaoInput> | monitorCreateWithoutDoacaoInput[] | monitorUncheckedCreateWithoutDoacaoInput[]
    connectOrCreate?: monitorCreateOrConnectWithoutDoacaoInput | monitorCreateOrConnectWithoutDoacaoInput[]
    upsert?: monitorUpsertWithWhereUniqueWithoutDoacaoInput | monitorUpsertWithWhereUniqueWithoutDoacaoInput[]
    createMany?: monitorCreateManyDoacaoInputEnvelope
    set?: monitorWhereUniqueInput | monitorWhereUniqueInput[]
    disconnect?: monitorWhereUniqueInput | monitorWhereUniqueInput[]
    delete?: monitorWhereUniqueInput | monitorWhereUniqueInput[]
    connect?: monitorWhereUniqueInput | monitorWhereUniqueInput[]
    update?: monitorUpdateWithWhereUniqueWithoutDoacaoInput | monitorUpdateWithWhereUniqueWithoutDoacaoInput[]
    updateMany?: monitorUpdateManyWithWhereWithoutDoacaoInput | monitorUpdateManyWithWhereWithoutDoacaoInput[]
    deleteMany?: monitorScalarWhereInput | monitorScalarWhereInput[]
  }

  export type mouseUncheckedUpdateManyWithoutDoacaoNestedInput = {
    create?: XOR<mouseCreateWithoutDoacaoInput, mouseUncheckedCreateWithoutDoacaoInput> | mouseCreateWithoutDoacaoInput[] | mouseUncheckedCreateWithoutDoacaoInput[]
    connectOrCreate?: mouseCreateOrConnectWithoutDoacaoInput | mouseCreateOrConnectWithoutDoacaoInput[]
    upsert?: mouseUpsertWithWhereUniqueWithoutDoacaoInput | mouseUpsertWithWhereUniqueWithoutDoacaoInput[]
    createMany?: mouseCreateManyDoacaoInputEnvelope
    set?: mouseWhereUniqueInput | mouseWhereUniqueInput[]
    disconnect?: mouseWhereUniqueInput | mouseWhereUniqueInput[]
    delete?: mouseWhereUniqueInput | mouseWhereUniqueInput[]
    connect?: mouseWhereUniqueInput | mouseWhereUniqueInput[]
    update?: mouseUpdateWithWhereUniqueWithoutDoacaoInput | mouseUpdateWithWhereUniqueWithoutDoacaoInput[]
    updateMany?: mouseUpdateManyWithWhereWithoutDoacaoInput | mouseUpdateManyWithWhereWithoutDoacaoInput[]
    deleteMany?: mouseScalarWhereInput | mouseScalarWhereInput[]
  }

  export type estabilizadorUncheckedUpdateManyWithoutDoacaoNestedInput = {
    create?: XOR<estabilizadorCreateWithoutDoacaoInput, estabilizadorUncheckedCreateWithoutDoacaoInput> | estabilizadorCreateWithoutDoacaoInput[] | estabilizadorUncheckedCreateWithoutDoacaoInput[]
    connectOrCreate?: estabilizadorCreateOrConnectWithoutDoacaoInput | estabilizadorCreateOrConnectWithoutDoacaoInput[]
    upsert?: estabilizadorUpsertWithWhereUniqueWithoutDoacaoInput | estabilizadorUpsertWithWhereUniqueWithoutDoacaoInput[]
    createMany?: estabilizadorCreateManyDoacaoInputEnvelope
    set?: estabilizadorWhereUniqueInput | estabilizadorWhereUniqueInput[]
    disconnect?: estabilizadorWhereUniqueInput | estabilizadorWhereUniqueInput[]
    delete?: estabilizadorWhereUniqueInput | estabilizadorWhereUniqueInput[]
    connect?: estabilizadorWhereUniqueInput | estabilizadorWhereUniqueInput[]
    update?: estabilizadorUpdateWithWhereUniqueWithoutDoacaoInput | estabilizadorUpdateWithWhereUniqueWithoutDoacaoInput[]
    updateMany?: estabilizadorUpdateManyWithWhereWithoutDoacaoInput | estabilizadorUpdateManyWithWhereWithoutDoacaoInput[]
    deleteMany?: estabilizadorScalarWhereInput | estabilizadorScalarWhereInput[]
  }

  export type impressoraUncheckedUpdateManyWithoutDoacaoNestedInput = {
    create?: XOR<impressoraCreateWithoutDoacaoInput, impressoraUncheckedCreateWithoutDoacaoInput> | impressoraCreateWithoutDoacaoInput[] | impressoraUncheckedCreateWithoutDoacaoInput[]
    connectOrCreate?: impressoraCreateOrConnectWithoutDoacaoInput | impressoraCreateOrConnectWithoutDoacaoInput[]
    upsert?: impressoraUpsertWithWhereUniqueWithoutDoacaoInput | impressoraUpsertWithWhereUniqueWithoutDoacaoInput[]
    createMany?: impressoraCreateManyDoacaoInputEnvelope
    set?: impressoraWhereUniqueInput | impressoraWhereUniqueInput[]
    disconnect?: impressoraWhereUniqueInput | impressoraWhereUniqueInput[]
    delete?: impressoraWhereUniqueInput | impressoraWhereUniqueInput[]
    connect?: impressoraWhereUniqueInput | impressoraWhereUniqueInput[]
    update?: impressoraUpdateWithWhereUniqueWithoutDoacaoInput | impressoraUpdateWithWhereUniqueWithoutDoacaoInput[]
    updateMany?: impressoraUpdateManyWithWhereWithoutDoacaoInput | impressoraUpdateManyWithWhereWithoutDoacaoInput[]
    deleteMany?: impressoraScalarWhereInput | impressoraScalarWhereInput[]
  }

  export type placamaeUncheckedUpdateManyWithoutDoacaoNestedInput = {
    create?: XOR<placamaeCreateWithoutDoacaoInput, placamaeUncheckedCreateWithoutDoacaoInput> | placamaeCreateWithoutDoacaoInput[] | placamaeUncheckedCreateWithoutDoacaoInput[]
    connectOrCreate?: placamaeCreateOrConnectWithoutDoacaoInput | placamaeCreateOrConnectWithoutDoacaoInput[]
    upsert?: placamaeUpsertWithWhereUniqueWithoutDoacaoInput | placamaeUpsertWithWhereUniqueWithoutDoacaoInput[]
    createMany?: placamaeCreateManyDoacaoInputEnvelope
    set?: placamaeWhereUniqueInput | placamaeWhereUniqueInput[]
    disconnect?: placamaeWhereUniqueInput | placamaeWhereUniqueInput[]
    delete?: placamaeWhereUniqueInput | placamaeWhereUniqueInput[]
    connect?: placamaeWhereUniqueInput | placamaeWhereUniqueInput[]
    update?: placamaeUpdateWithWhereUniqueWithoutDoacaoInput | placamaeUpdateWithWhereUniqueWithoutDoacaoInput[]
    updateMany?: placamaeUpdateManyWithWhereWithoutDoacaoInput | placamaeUpdateManyWithWhereWithoutDoacaoInput[]
    deleteMany?: placamaeScalarWhereInput | placamaeScalarWhereInput[]
  }

  export type notebookUncheckedUpdateManyWithoutDoacaoNestedInput = {
    create?: XOR<notebookCreateWithoutDoacaoInput, notebookUncheckedCreateWithoutDoacaoInput> | notebookCreateWithoutDoacaoInput[] | notebookUncheckedCreateWithoutDoacaoInput[]
    connectOrCreate?: notebookCreateOrConnectWithoutDoacaoInput | notebookCreateOrConnectWithoutDoacaoInput[]
    upsert?: notebookUpsertWithWhereUniqueWithoutDoacaoInput | notebookUpsertWithWhereUniqueWithoutDoacaoInput[]
    createMany?: notebookCreateManyDoacaoInputEnvelope
    set?: notebookWhereUniqueInput | notebookWhereUniqueInput[]
    disconnect?: notebookWhereUniqueInput | notebookWhereUniqueInput[]
    delete?: notebookWhereUniqueInput | notebookWhereUniqueInput[]
    connect?: notebookWhereUniqueInput | notebookWhereUniqueInput[]
    update?: notebookUpdateWithWhereUniqueWithoutDoacaoInput | notebookUpdateWithWhereUniqueWithoutDoacaoInput[]
    updateMany?: notebookUpdateManyWithWhereWithoutDoacaoInput | notebookUpdateManyWithWhereWithoutDoacaoInput[]
    deleteMany?: notebookScalarWhereInput | notebookScalarWhereInput[]
  }

  export type processadorUncheckedUpdateManyWithoutDoacaoNestedInput = {
    create?: XOR<processadorCreateWithoutDoacaoInput, processadorUncheckedCreateWithoutDoacaoInput> | processadorCreateWithoutDoacaoInput[] | processadorUncheckedCreateWithoutDoacaoInput[]
    connectOrCreate?: processadorCreateOrConnectWithoutDoacaoInput | processadorCreateOrConnectWithoutDoacaoInput[]
    upsert?: processadorUpsertWithWhereUniqueWithoutDoacaoInput | processadorUpsertWithWhereUniqueWithoutDoacaoInput[]
    createMany?: processadorCreateManyDoacaoInputEnvelope
    set?: processadorWhereUniqueInput | processadorWhereUniqueInput[]
    disconnect?: processadorWhereUniqueInput | processadorWhereUniqueInput[]
    delete?: processadorWhereUniqueInput | processadorWhereUniqueInput[]
    connect?: processadorWhereUniqueInput | processadorWhereUniqueInput[]
    update?: processadorUpdateWithWhereUniqueWithoutDoacaoInput | processadorUpdateWithWhereUniqueWithoutDoacaoInput[]
    updateMany?: processadorUpdateManyWithWhereWithoutDoacaoInput | processadorUpdateManyWithWhereWithoutDoacaoInput[]
    deleteMany?: processadorScalarWhereInput | processadorScalarWhereInput[]
  }

  export type pessoafisicaCreateNestedOneWithoutDoacaoUsuarioInput = {
    create?: XOR<pessoafisicaCreateWithoutDoacaoUsuarioInput, pessoafisicaUncheckedCreateWithoutDoacaoUsuarioInput>
    connectOrCreate?: pessoafisicaCreateOrConnectWithoutDoacaoUsuarioInput
    connect?: pessoafisicaWhereUniqueInput
  }

  export type pessoajuridicaCreateNestedOneWithoutDoacaoUsuarioInput = {
    create?: XOR<pessoajuridicaCreateWithoutDoacaoUsuarioInput, pessoajuridicaUncheckedCreateWithoutDoacaoUsuarioInput>
    connectOrCreate?: pessoajuridicaCreateOrConnectWithoutDoacaoUsuarioInput
    connect?: pessoajuridicaWhereUniqueInput
  }

  export type alunoCreateNestedOneWithoutDoacaoUsuarioInput = {
    create?: XOR<alunoCreateWithoutDoacaoUsuarioInput, alunoUncheckedCreateWithoutDoacaoUsuarioInput>
    connectOrCreate?: alunoCreateOrConnectWithoutDoacaoUsuarioInput
    connect?: alunoWhereUniqueInput
  }

  export type pessoafisicaUpdateOneWithoutDoacaoUsuarioNestedInput = {
    create?: XOR<pessoafisicaCreateWithoutDoacaoUsuarioInput, pessoafisicaUncheckedCreateWithoutDoacaoUsuarioInput>
    connectOrCreate?: pessoafisicaCreateOrConnectWithoutDoacaoUsuarioInput
    upsert?: pessoafisicaUpsertWithoutDoacaoUsuarioInput
    disconnect?: pessoafisicaWhereInput | boolean
    delete?: pessoafisicaWhereInput | boolean
    connect?: pessoafisicaWhereUniqueInput
    update?: XOR<XOR<pessoafisicaUpdateToOneWithWhereWithoutDoacaoUsuarioInput, pessoafisicaUpdateWithoutDoacaoUsuarioInput>, pessoafisicaUncheckedUpdateWithoutDoacaoUsuarioInput>
  }

  export type pessoajuridicaUpdateOneWithoutDoacaoUsuarioNestedInput = {
    create?: XOR<pessoajuridicaCreateWithoutDoacaoUsuarioInput, pessoajuridicaUncheckedCreateWithoutDoacaoUsuarioInput>
    connectOrCreate?: pessoajuridicaCreateOrConnectWithoutDoacaoUsuarioInput
    upsert?: pessoajuridicaUpsertWithoutDoacaoUsuarioInput
    disconnect?: pessoajuridicaWhereInput | boolean
    delete?: pessoajuridicaWhereInput | boolean
    connect?: pessoajuridicaWhereUniqueInput
    update?: XOR<XOR<pessoajuridicaUpdateToOneWithWhereWithoutDoacaoUsuarioInput, pessoajuridicaUpdateWithoutDoacaoUsuarioInput>, pessoajuridicaUncheckedUpdateWithoutDoacaoUsuarioInput>
  }

  export type alunoUpdateOneWithoutDoacaoUsuarioNestedInput = {
    create?: XOR<alunoCreateWithoutDoacaoUsuarioInput, alunoUncheckedCreateWithoutDoacaoUsuarioInput>
    connectOrCreate?: alunoCreateOrConnectWithoutDoacaoUsuarioInput
    upsert?: alunoUpsertWithoutDoacaoUsuarioInput
    disconnect?: alunoWhereInput | boolean
    delete?: alunoWhereInput | boolean
    connect?: alunoWhereUniqueInput
    update?: XOR<XOR<alunoUpdateToOneWithWhereWithoutDoacaoUsuarioInput, alunoUpdateWithoutDoacaoUsuarioInput>, alunoUncheckedUpdateWithoutDoacaoUsuarioInput>
  }

  export type pessoafisicaCreateNestedOneWithoutSolicitacaoInput = {
    create?: XOR<pessoafisicaCreateWithoutSolicitacaoInput, pessoafisicaUncheckedCreateWithoutSolicitacaoInput>
    connectOrCreate?: pessoafisicaCreateOrConnectWithoutSolicitacaoInput
    connect?: pessoafisicaWhereUniqueInput
  }

  export type pessoajuridicaCreateNestedOneWithoutSolicitacaoInput = {
    create?: XOR<pessoajuridicaCreateWithoutSolicitacaoInput, pessoajuridicaUncheckedCreateWithoutSolicitacaoInput>
    connectOrCreate?: pessoajuridicaCreateOrConnectWithoutSolicitacaoInput
    connect?: pessoajuridicaWhereUniqueInput
  }

  export type alunoCreateNestedOneWithoutSolicitacaoInput = {
    create?: XOR<alunoCreateWithoutSolicitacaoInput, alunoUncheckedCreateWithoutSolicitacaoInput>
    connectOrCreate?: alunoCreateOrConnectWithoutSolicitacaoInput
    connect?: alunoWhereUniqueInput
  }

  export type pessoafisicaUpdateOneWithoutSolicitacaoNestedInput = {
    create?: XOR<pessoafisicaCreateWithoutSolicitacaoInput, pessoafisicaUncheckedCreateWithoutSolicitacaoInput>
    connectOrCreate?: pessoafisicaCreateOrConnectWithoutSolicitacaoInput
    upsert?: pessoafisicaUpsertWithoutSolicitacaoInput
    disconnect?: pessoafisicaWhereInput | boolean
    delete?: pessoafisicaWhereInput | boolean
    connect?: pessoafisicaWhereUniqueInput
    update?: XOR<XOR<pessoafisicaUpdateToOneWithWhereWithoutSolicitacaoInput, pessoafisicaUpdateWithoutSolicitacaoInput>, pessoafisicaUncheckedUpdateWithoutSolicitacaoInput>
  }

  export type pessoajuridicaUpdateOneWithoutSolicitacaoNestedInput = {
    create?: XOR<pessoajuridicaCreateWithoutSolicitacaoInput, pessoajuridicaUncheckedCreateWithoutSolicitacaoInput>
    connectOrCreate?: pessoajuridicaCreateOrConnectWithoutSolicitacaoInput
    upsert?: pessoajuridicaUpsertWithoutSolicitacaoInput
    disconnect?: pessoajuridicaWhereInput | boolean
    delete?: pessoajuridicaWhereInput | boolean
    connect?: pessoajuridicaWhereUniqueInput
    update?: XOR<XOR<pessoajuridicaUpdateToOneWithWhereWithoutSolicitacaoInput, pessoajuridicaUpdateWithoutSolicitacaoInput>, pessoajuridicaUncheckedUpdateWithoutSolicitacaoInput>
  }

  export type alunoUpdateOneWithoutSolicitacaoNestedInput = {
    create?: XOR<alunoCreateWithoutSolicitacaoInput, alunoUncheckedCreateWithoutSolicitacaoInput>
    connectOrCreate?: alunoCreateOrConnectWithoutSolicitacaoInput
    upsert?: alunoUpsertWithoutSolicitacaoInput
    disconnect?: alunoWhereInput | boolean
    delete?: alunoWhereInput | boolean
    connect?: alunoWhereUniqueInput
    update?: XOR<XOR<alunoUpdateToOneWithWhereWithoutSolicitacaoInput, alunoUpdateWithoutSolicitacaoInput>, alunoUncheckedUpdateWithoutSolicitacaoInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type descarteCreateWithoutUsuarioInput = {
    name: string
    descricao: string
    data: Date | string
    codigoDeReferencias: string
    createdAt?: Date | string
    teclados?: tecladoCreateNestedManyWithoutDescarteInput
    hds?: hdCreateNestedManyWithoutDescarteInput
    fontesDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutDescarteInput
    gabinetes?: gabineteCreateNestedManyWithoutDescarteInput
    monitores?: monitorCreateNestedManyWithoutDescarteInput
    mouses?: mouseCreateNestedManyWithoutDescarteInput
    estabilizadores?: estabilizadorCreateNestedManyWithoutDescarteInput
    impressoras?: impressoraCreateNestedManyWithoutDescarteInput
    placasmae?: placamaeCreateNestedManyWithoutDescarteInput
    notebooks?: notebookCreateNestedManyWithoutDescarteInput
    processadores?: processadorCreateNestedManyWithoutDescarteInput
  }

  export type descarteUncheckedCreateWithoutUsuarioInput = {
    id?: number
    name: string
    descricao: string
    data: Date | string
    codigoDeReferencias: string
    createdAt?: Date | string
    teclados?: tecladoUncheckedCreateNestedManyWithoutDescarteInput
    hds?: hdUncheckedCreateNestedManyWithoutDescarteInput
    fontesDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutDescarteInput
    gabinetes?: gabineteUncheckedCreateNestedManyWithoutDescarteInput
    monitores?: monitorUncheckedCreateNestedManyWithoutDescarteInput
    mouses?: mouseUncheckedCreateNestedManyWithoutDescarteInput
    estabilizadores?: estabilizadorUncheckedCreateNestedManyWithoutDescarteInput
    impressoras?: impressoraUncheckedCreateNestedManyWithoutDescarteInput
    placasmae?: placamaeUncheckedCreateNestedManyWithoutDescarteInput
    notebooks?: notebookUncheckedCreateNestedManyWithoutDescarteInput
    processadores?: processadorUncheckedCreateNestedManyWithoutDescarteInput
  }

  export type descarteCreateOrConnectWithoutUsuarioInput = {
    where: descarteWhereUniqueInput
    create: XOR<descarteCreateWithoutUsuarioInput, descarteUncheckedCreateWithoutUsuarioInput>
  }

  export type descarteCreateManyUsuarioInputEnvelope = {
    data: descarteCreateManyUsuarioInput | descarteCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type doacaoCreateWithoutDonatarioInput = {
    name: string
    codigoDeReferencias: string
    descricao: string
    justificativa: string
    nomeOuEmpresa: string
    contato: string
    data: Date | string
    status: string
    createdAt?: Date | string
    usuariofisico?: pessoafisicaCreateNestedOneWithoutDoacaoInput
    usuariojuridico?: pessoajuridicaCreateNestedOneWithoutDoacaoInput
    teclados?: tecladoCreateNestedManyWithoutDoacaoInput
    hds?: hdCreateNestedManyWithoutDoacaoInput
    fontesDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutDoacaoInput
    gabinetes?: gabineteCreateNestedManyWithoutDoacaoInput
    monitores?: monitorCreateNestedManyWithoutDoacaoInput
    mouses?: mouseCreateNestedManyWithoutDoacaoInput
    estabilizadores?: estabilizadorCreateNestedManyWithoutDoacaoInput
    impressoras?: impressoraCreateNestedManyWithoutDoacaoInput
    placasmae?: placamaeCreateNestedManyWithoutDoacaoInput
    notebooks?: notebookCreateNestedManyWithoutDoacaoInput
    processadores?: processadorCreateNestedManyWithoutDoacaoInput
  }

  export type doacaoUncheckedCreateWithoutDonatarioInput = {
    id?: number
    name: string
    codigoDeReferencias: string
    descricao: string
    justificativa: string
    nomeOuEmpresa: string
    contato: string
    data: Date | string
    status: string
    usuariofisicoId?: number | null
    usuariojuridicoId?: number | null
    createdAt?: Date | string
    teclados?: tecladoUncheckedCreateNestedManyWithoutDoacaoInput
    hds?: hdUncheckedCreateNestedManyWithoutDoacaoInput
    fontesDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutDoacaoInput
    gabinetes?: gabineteUncheckedCreateNestedManyWithoutDoacaoInput
    monitores?: monitorUncheckedCreateNestedManyWithoutDoacaoInput
    mouses?: mouseUncheckedCreateNestedManyWithoutDoacaoInput
    estabilizadores?: estabilizadorUncheckedCreateNestedManyWithoutDoacaoInput
    impressoras?: impressoraUncheckedCreateNestedManyWithoutDoacaoInput
    placasmae?: placamaeUncheckedCreateNestedManyWithoutDoacaoInput
    notebooks?: notebookUncheckedCreateNestedManyWithoutDoacaoInput
    processadores?: processadorUncheckedCreateNestedManyWithoutDoacaoInput
  }

  export type doacaoCreateOrConnectWithoutDonatarioInput = {
    where: doacaoWhereUniqueInput
    create: XOR<doacaoCreateWithoutDonatarioInput, doacaoUncheckedCreateWithoutDonatarioInput>
  }

  export type doacaoCreateManyDonatarioInputEnvelope = {
    data: doacaoCreateManyDonatarioInput | doacaoCreateManyDonatarioInput[]
    skipDuplicates?: boolean
  }

  export type doacaoUsuarioCreateWithoutUsuarioInput = {
    name: string
    eletronicos: string
    descricao: string
    informacoesAdicionais: string
    horarioDeEntrega: string
    contato: string
    data: Date | string
    status: string
    createdAt?: Date | string
    donatariofisico?: pessoafisicaCreateNestedOneWithoutDoacaoUsuarioInput
    donatariojuridico?: pessoajuridicaCreateNestedOneWithoutDoacaoUsuarioInput
  }

  export type doacaoUsuarioUncheckedCreateWithoutUsuarioInput = {
    id?: number
    name: string
    eletronicos: string
    descricao: string
    informacoesAdicionais: string
    horarioDeEntrega: string
    contato: string
    data: Date | string
    status: string
    donatariofisicoId?: number | null
    donatariojuridicoId?: number | null
    createdAt?: Date | string
  }

  export type doacaoUsuarioCreateOrConnectWithoutUsuarioInput = {
    where: doacaoUsuarioWhereUniqueInput
    create: XOR<doacaoUsuarioCreateWithoutUsuarioInput, doacaoUsuarioUncheckedCreateWithoutUsuarioInput>
  }

  export type doacaoUsuarioCreateManyUsuarioInputEnvelope = {
    data: doacaoUsuarioCreateManyUsuarioInput | doacaoUsuarioCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type solicitacaoCreateWithoutUsuarioInput = {
    name: string
    eletronicos: string
    descricao: string
    informacoes: string
    horarioparapegar: string
    contato: string
    data: Date | string
    dataparapegar: Date | string
    status: string
    createdAt?: Date | string
    usuariosolicitacaofisico?: pessoafisicaCreateNestedOneWithoutSolicitacaoInput
    donatariojuridico?: pessoajuridicaCreateNestedOneWithoutSolicitacaoInput
  }

  export type solicitacaoUncheckedCreateWithoutUsuarioInput = {
    id?: number
    name: string
    eletronicos: string
    descricao: string
    informacoes: string
    horarioparapegar: string
    contato: string
    data: Date | string
    dataparapegar: Date | string
    status: string
    solicitacaofisicoId?: number | null
    solicitacaojuridicoId?: number | null
    createdAt?: Date | string
  }

  export type solicitacaoCreateOrConnectWithoutUsuarioInput = {
    where: solicitacaoWhereUniqueInput
    create: XOR<solicitacaoCreateWithoutUsuarioInput, solicitacaoUncheckedCreateWithoutUsuarioInput>
  }

  export type solicitacaoCreateManyUsuarioInputEnvelope = {
    data: solicitacaoCreateManyUsuarioInput | solicitacaoCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type tecladoCreateWithoutModificadorInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    createdAt?: Date | string
    updatedAt?: Date | string
    nome: string
    imagem: string
    situacao: string
    tipoDeConexao: string
    descarte?: descarteCreateNestedOneWithoutTecladosInput
    doacao?: doacaoCreateNestedOneWithoutTecladosInput
    usuario?: alunoCreateNestedOneWithoutUsuarioTecladoInput
  }

  export type tecladoUncheckedCreateWithoutModificadorInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    createdAt?: Date | string
    updatedAt?: Date | string
    nome: string
    imagem: string
    situacao: string
    tipoDeConexao: string
    usuarioId?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type tecladoCreateOrConnectWithoutModificadorInput = {
    where: tecladoWhereUniqueInput
    create: XOR<tecladoCreateWithoutModificadorInput, tecladoUncheckedCreateWithoutModificadorInput>
  }

  export type tecladoCreateManyModificadorInputEnvelope = {
    data: tecladoCreateManyModificadorInput | tecladoCreateManyModificadorInput[]
    skipDuplicates?: boolean
  }

  export type tecladoCreateWithoutUsuarioInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    createdAt?: Date | string
    updatedAt?: Date | string
    nome: string
    imagem: string
    situacao: string
    tipoDeConexao: string
    descarte?: descarteCreateNestedOneWithoutTecladosInput
    doacao?: doacaoCreateNestedOneWithoutTecladosInput
    modificador?: alunoCreateNestedOneWithoutModificadorTecladoInput
  }

  export type tecladoUncheckedCreateWithoutUsuarioInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    createdAt?: Date | string
    updatedAt?: Date | string
    nome: string
    imagem: string
    situacao: string
    tipoDeConexao: string
    modificadorid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type tecladoCreateOrConnectWithoutUsuarioInput = {
    where: tecladoWhereUniqueInput
    create: XOR<tecladoCreateWithoutUsuarioInput, tecladoUncheckedCreateWithoutUsuarioInput>
  }

  export type tecladoCreateManyUsuarioInputEnvelope = {
    data: tecladoCreateManyUsuarioInput | tecladoCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type hdCreateWithoutAlunoInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    createdAt?: Date | string
    updatedAt?: Date | string
    nome: string
    imagem: string
    situacao: string
    tipoDeCapacidade: string
    capacidade: number
    doacao?: doacaoCreateNestedOneWithoutHdsInput
    descarte?: descarteCreateNestedOneWithoutHdsInput
    modificador?: alunoCreateNestedOneWithoutModificadorHdInput
  }

  export type hdUncheckedCreateWithoutAlunoInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    createdAt?: Date | string
    updatedAt?: Date | string
    nome: string
    imagem: string
    situacao: string
    tipoDeCapacidade: string
    capacidade: number
    modificadorid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type hdCreateOrConnectWithoutAlunoInput = {
    where: hdWhereUniqueInput
    create: XOR<hdCreateWithoutAlunoInput, hdUncheckedCreateWithoutAlunoInput>
  }

  export type hdCreateManyAlunoInputEnvelope = {
    data: hdCreateManyAlunoInput | hdCreateManyAlunoInput[]
    skipDuplicates?: boolean
  }

  export type hdCreateWithoutModificadorInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    createdAt?: Date | string
    updatedAt?: Date | string
    nome: string
    imagem: string
    situacao: string
    tipoDeCapacidade: string
    capacidade: number
    doacao?: doacaoCreateNestedOneWithoutHdsInput
    descarte?: descarteCreateNestedOneWithoutHdsInput
    aluno?: alunoCreateNestedOneWithoutHdInput
  }

  export type hdUncheckedCreateWithoutModificadorInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    createdAt?: Date | string
    updatedAt?: Date | string
    nome: string
    imagem: string
    situacao: string
    tipoDeCapacidade: string
    capacidade: number
    usuarioId?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type hdCreateOrConnectWithoutModificadorInput = {
    where: hdWhereUniqueInput
    create: XOR<hdCreateWithoutModificadorInput, hdUncheckedCreateWithoutModificadorInput>
  }

  export type hdCreateManyModificadorInputEnvelope = {
    data: hdCreateManyModificadorInput | hdCreateManyModificadorInput[]
    skipDuplicates?: boolean
  }

  export type fontedealimentacaoCreateWithoutUsuarioInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    potencia: number
    updatedAt?: Date | string
    doacao?: doacaoCreateNestedOneWithoutFontesDeAlimentacaoInput
    descarte?: descarteCreateNestedOneWithoutFontesDeAlimentacaoInput
    modificador?: alunoCreateNestedOneWithoutModificadorFonteDeAlimentacaoInput
  }

  export type fontedealimentacaoUncheckedCreateWithoutUsuarioInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    potencia: number
    updatedAt?: Date | string
    modificadorid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type fontedealimentacaoCreateOrConnectWithoutUsuarioInput = {
    where: fontedealimentacaoWhereUniqueInput
    create: XOR<fontedealimentacaoCreateWithoutUsuarioInput, fontedealimentacaoUncheckedCreateWithoutUsuarioInput>
  }

  export type fontedealimentacaoCreateManyUsuarioInputEnvelope = {
    data: fontedealimentacaoCreateManyUsuarioInput | fontedealimentacaoCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type fontedealimentacaoCreateWithoutModificadorInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    potencia: number
    updatedAt?: Date | string
    doacao?: doacaoCreateNestedOneWithoutFontesDeAlimentacaoInput
    descarte?: descarteCreateNestedOneWithoutFontesDeAlimentacaoInput
    usuario?: alunoCreateNestedOneWithoutFonteDeAlimentacaoInput
  }

  export type fontedealimentacaoUncheckedCreateWithoutModificadorInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    potencia: number
    updatedAt?: Date | string
    alunoid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type fontedealimentacaoCreateOrConnectWithoutModificadorInput = {
    where: fontedealimentacaoWhereUniqueInput
    create: XOR<fontedealimentacaoCreateWithoutModificadorInput, fontedealimentacaoUncheckedCreateWithoutModificadorInput>
  }

  export type fontedealimentacaoCreateManyModificadorInputEnvelope = {
    data: fontedealimentacaoCreateManyModificadorInput | fontedealimentacaoCreateManyModificadorInput[]
    skipDuplicates?: boolean
  }

  export type gabineteCreateWithoutUsuarioInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    doacao?: doacaoCreateNestedOneWithoutGabinetesInput
    descarte?: descarteCreateNestedOneWithoutGabinetesInput
    modificador?: alunoCreateNestedOneWithoutModificadorGabineteInput
  }

  export type gabineteUncheckedCreateWithoutUsuarioInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    modificadorid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type gabineteCreateOrConnectWithoutUsuarioInput = {
    where: gabineteWhereUniqueInput
    create: XOR<gabineteCreateWithoutUsuarioInput, gabineteUncheckedCreateWithoutUsuarioInput>
  }

  export type gabineteCreateManyUsuarioInputEnvelope = {
    data: gabineteCreateManyUsuarioInput | gabineteCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type gabineteCreateWithoutModificadorInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    doacao?: doacaoCreateNestedOneWithoutGabinetesInput
    descarte?: descarteCreateNestedOneWithoutGabinetesInput
    usuario?: alunoCreateNestedOneWithoutGabineteInput
  }

  export type gabineteUncheckedCreateWithoutModificadorInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    alunoid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type gabineteCreateOrConnectWithoutModificadorInput = {
    where: gabineteWhereUniqueInput
    create: XOR<gabineteCreateWithoutModificadorInput, gabineteUncheckedCreateWithoutModificadorInput>
  }

  export type gabineteCreateManyModificadorInputEnvelope = {
    data: gabineteCreateManyModificadorInput | gabineteCreateManyModificadorInput[]
    skipDuplicates?: boolean
  }

  export type monitorCreateWithoutUsuarioInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    polegadas: number
    updatedAt?: Date | string
    doacao?: doacaoCreateNestedOneWithoutMonitoresInput
    descarte?: descarteCreateNestedOneWithoutMonitoresInput
    modificador?: alunoCreateNestedOneWithoutModificadorMonitorInput
  }

  export type monitorUncheckedCreateWithoutUsuarioInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    polegadas: number
    updatedAt?: Date | string
    modificadorid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type monitorCreateOrConnectWithoutUsuarioInput = {
    where: monitorWhereUniqueInput
    create: XOR<monitorCreateWithoutUsuarioInput, monitorUncheckedCreateWithoutUsuarioInput>
  }

  export type monitorCreateManyUsuarioInputEnvelope = {
    data: monitorCreateManyUsuarioInput | monitorCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type monitorCreateWithoutModificadorInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    polegadas: number
    updatedAt?: Date | string
    doacao?: doacaoCreateNestedOneWithoutMonitoresInput
    descarte?: descarteCreateNestedOneWithoutMonitoresInput
    usuario?: alunoCreateNestedOneWithoutMonitorInput
  }

  export type monitorUncheckedCreateWithoutModificadorInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    polegadas: number
    updatedAt?: Date | string
    alunoid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type monitorCreateOrConnectWithoutModificadorInput = {
    where: monitorWhereUniqueInput
    create: XOR<monitorCreateWithoutModificadorInput, monitorUncheckedCreateWithoutModificadorInput>
  }

  export type monitorCreateManyModificadorInputEnvelope = {
    data: monitorCreateManyModificadorInput | monitorCreateManyModificadorInput[]
    skipDuplicates?: boolean
  }

  export type mouseCreateWithoutUsuarioInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    tipoDeConexao: string
    updatedAt?: Date | string
    doacao?: doacaoCreateNestedOneWithoutMousesInput
    descarte?: descarteCreateNestedOneWithoutMousesInput
    modificador?: alunoCreateNestedOneWithoutModificadorMouseInput
  }

  export type mouseUncheckedCreateWithoutUsuarioInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    tipoDeConexao: string
    updatedAt?: Date | string
    modificadorid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type mouseCreateOrConnectWithoutUsuarioInput = {
    where: mouseWhereUniqueInput
    create: XOR<mouseCreateWithoutUsuarioInput, mouseUncheckedCreateWithoutUsuarioInput>
  }

  export type mouseCreateManyUsuarioInputEnvelope = {
    data: mouseCreateManyUsuarioInput | mouseCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type mouseCreateWithoutModificadorInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    tipoDeConexao: string
    updatedAt?: Date | string
    doacao?: doacaoCreateNestedOneWithoutMousesInput
    descarte?: descarteCreateNestedOneWithoutMousesInput
    usuario?: alunoCreateNestedOneWithoutUsuarioMouseInput
  }

  export type mouseUncheckedCreateWithoutModificadorInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    tipoDeConexao: string
    updatedAt?: Date | string
    alunoid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type mouseCreateOrConnectWithoutModificadorInput = {
    where: mouseWhereUniqueInput
    create: XOR<mouseCreateWithoutModificadorInput, mouseUncheckedCreateWithoutModificadorInput>
  }

  export type mouseCreateManyModificadorInputEnvelope = {
    data: mouseCreateManyModificadorInput | mouseCreateManyModificadorInput[]
    skipDuplicates?: boolean
  }

  export type estabilizadorCreateWithoutUsuarioInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    potencia: number
    updatedAt?: Date | string
    doacao?: doacaoCreateNestedOneWithoutEstabilizadoresInput
    descarte?: descarteCreateNestedOneWithoutEstabilizadoresInput
    modificador?: alunoCreateNestedOneWithoutModificadorEstabilizadorInput
  }

  export type estabilizadorUncheckedCreateWithoutUsuarioInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    potencia: number
    updatedAt?: Date | string
    modificadorid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type estabilizadorCreateOrConnectWithoutUsuarioInput = {
    where: estabilizadorWhereUniqueInput
    create: XOR<estabilizadorCreateWithoutUsuarioInput, estabilizadorUncheckedCreateWithoutUsuarioInput>
  }

  export type estabilizadorCreateManyUsuarioInputEnvelope = {
    data: estabilizadorCreateManyUsuarioInput | estabilizadorCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type estabilizadorCreateWithoutModificadorInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    potencia: number
    updatedAt?: Date | string
    doacao?: doacaoCreateNestedOneWithoutEstabilizadoresInput
    descarte?: descarteCreateNestedOneWithoutEstabilizadoresInput
    usuario?: alunoCreateNestedOneWithoutUsuarioEstabilizadorInput
  }

  export type estabilizadorUncheckedCreateWithoutModificadorInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    potencia: number
    updatedAt?: Date | string
    alunoid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type estabilizadorCreateOrConnectWithoutModificadorInput = {
    where: estabilizadorWhereUniqueInput
    create: XOR<estabilizadorCreateWithoutModificadorInput, estabilizadorUncheckedCreateWithoutModificadorInput>
  }

  export type estabilizadorCreateManyModificadorInputEnvelope = {
    data: estabilizadorCreateManyModificadorInput | estabilizadorCreateManyModificadorInput[]
    skipDuplicates?: boolean
  }

  export type impressoraCreateWithoutUsuarioInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    tipoDeTinta: string
    updatedAt?: Date | string
    doacao?: doacaoCreateNestedOneWithoutImpressorasInput
    descarte?: descarteCreateNestedOneWithoutImpressorasInput
    modificador?: alunoCreateNestedOneWithoutModificadorImpressoraInput
  }

  export type impressoraUncheckedCreateWithoutUsuarioInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    tipoDeTinta: string
    updatedAt?: Date | string
    modificadorid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type impressoraCreateOrConnectWithoutUsuarioInput = {
    where: impressoraWhereUniqueInput
    create: XOR<impressoraCreateWithoutUsuarioInput, impressoraUncheckedCreateWithoutUsuarioInput>
  }

  export type impressoraCreateManyUsuarioInputEnvelope = {
    data: impressoraCreateManyUsuarioInput | impressoraCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type impressoraCreateWithoutModificadorInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    tipoDeTinta: string
    updatedAt?: Date | string
    doacao?: doacaoCreateNestedOneWithoutImpressorasInput
    descarte?: descarteCreateNestedOneWithoutImpressorasInput
    usuario?: alunoCreateNestedOneWithoutUsuarioImpressoraInput
  }

  export type impressoraUncheckedCreateWithoutModificadorInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    tipoDeTinta: string
    updatedAt?: Date | string
    alunoid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type impressoraCreateOrConnectWithoutModificadorInput = {
    where: impressoraWhereUniqueInput
    create: XOR<impressoraCreateWithoutModificadorInput, impressoraUncheckedCreateWithoutModificadorInput>
  }

  export type impressoraCreateManyModificadorInputEnvelope = {
    data: impressoraCreateManyModificadorInput | impressoraCreateManyModificadorInput[]
    skipDuplicates?: boolean
  }

  export type placamaeCreateWithoutUsuarioInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    doacao?: doacaoCreateNestedOneWithoutPlacasmaeInput
    descarte?: descarteCreateNestedOneWithoutPlacasmaeInput
    modificador?: alunoCreateNestedOneWithoutModificadorPlacamaeInput
  }

  export type placamaeUncheckedCreateWithoutUsuarioInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    modificadorid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type placamaeCreateOrConnectWithoutUsuarioInput = {
    where: placamaeWhereUniqueInput
    create: XOR<placamaeCreateWithoutUsuarioInput, placamaeUncheckedCreateWithoutUsuarioInput>
  }

  export type placamaeCreateManyUsuarioInputEnvelope = {
    data: placamaeCreateManyUsuarioInput | placamaeCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type placamaeCreateWithoutModificadorInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    doacao?: doacaoCreateNestedOneWithoutPlacasmaeInput
    descarte?: descarteCreateNestedOneWithoutPlacasmaeInput
    usuario?: alunoCreateNestedOneWithoutUsuarioPlacamaeInput
  }

  export type placamaeUncheckedCreateWithoutModificadorInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    alunoid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type placamaeCreateOrConnectWithoutModificadorInput = {
    where: placamaeWhereUniqueInput
    create: XOR<placamaeCreateWithoutModificadorInput, placamaeUncheckedCreateWithoutModificadorInput>
  }

  export type placamaeCreateManyModificadorInputEnvelope = {
    data: placamaeCreateManyModificadorInput | placamaeCreateManyModificadorInput[]
    skipDuplicates?: boolean
  }

  export type notebookCreateWithoutUsuarioInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    doacao?: doacaoCreateNestedOneWithoutNotebooksInput
    descarte?: descarteCreateNestedOneWithoutNotebooksInput
    modificador?: alunoCreateNestedOneWithoutModificadorNotebookInput
  }

  export type notebookUncheckedCreateWithoutUsuarioInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    modificadorid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type notebookCreateOrConnectWithoutUsuarioInput = {
    where: notebookWhereUniqueInput
    create: XOR<notebookCreateWithoutUsuarioInput, notebookUncheckedCreateWithoutUsuarioInput>
  }

  export type notebookCreateManyUsuarioInputEnvelope = {
    data: notebookCreateManyUsuarioInput | notebookCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type notebookCreateWithoutModificadorInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    doacao?: doacaoCreateNestedOneWithoutNotebooksInput
    descarte?: descarteCreateNestedOneWithoutNotebooksInput
    usuario?: alunoCreateNestedOneWithoutUsuarioNotebookInput
  }

  export type notebookUncheckedCreateWithoutModificadorInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    alunoid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type notebookCreateOrConnectWithoutModificadorInput = {
    where: notebookWhereUniqueInput
    create: XOR<notebookCreateWithoutModificadorInput, notebookUncheckedCreateWithoutModificadorInput>
  }

  export type notebookCreateManyModificadorInputEnvelope = {
    data: notebookCreateManyModificadorInput | notebookCreateManyModificadorInput[]
    skipDuplicates?: boolean
  }

  export type processadorCreateWithoutUsuarioInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    doacao?: doacaoCreateNestedOneWithoutProcessadoresInput
    descarte?: descarteCreateNestedOneWithoutProcessadoresInput
    modificador?: alunoCreateNestedOneWithoutModificadorProcessadorInput
  }

  export type processadorUncheckedCreateWithoutUsuarioInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    modificadorid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type processadorCreateOrConnectWithoutUsuarioInput = {
    where: processadorWhereUniqueInput
    create: XOR<processadorCreateWithoutUsuarioInput, processadorUncheckedCreateWithoutUsuarioInput>
  }

  export type processadorCreateManyUsuarioInputEnvelope = {
    data: processadorCreateManyUsuarioInput | processadorCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type processadorCreateWithoutModificadorInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    doacao?: doacaoCreateNestedOneWithoutProcessadoresInput
    descarte?: descarteCreateNestedOneWithoutProcessadoresInput
    usuario?: alunoCreateNestedOneWithoutUsuarioProcessadorInput
  }

  export type processadorUncheckedCreateWithoutModificadorInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    alunoid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type processadorCreateOrConnectWithoutModificadorInput = {
    where: processadorWhereUniqueInput
    create: XOR<processadorCreateWithoutModificadorInput, processadorUncheckedCreateWithoutModificadorInput>
  }

  export type processadorCreateManyModificadorInputEnvelope = {
    data: processadorCreateManyModificadorInput | processadorCreateManyModificadorInput[]
    skipDuplicates?: boolean
  }

  export type descarteUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: descarteWhereUniqueInput
    update: XOR<descarteUpdateWithoutUsuarioInput, descarteUncheckedUpdateWithoutUsuarioInput>
    create: XOR<descarteCreateWithoutUsuarioInput, descarteUncheckedCreateWithoutUsuarioInput>
  }

  export type descarteUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: descarteWhereUniqueInput
    data: XOR<descarteUpdateWithoutUsuarioInput, descarteUncheckedUpdateWithoutUsuarioInput>
  }

  export type descarteUpdateManyWithWhereWithoutUsuarioInput = {
    where: descarteScalarWhereInput
    data: XOR<descarteUpdateManyMutationInput, descarteUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type descarteScalarWhereInput = {
    AND?: descarteScalarWhereInput | descarteScalarWhereInput[]
    OR?: descarteScalarWhereInput[]
    NOT?: descarteScalarWhereInput | descarteScalarWhereInput[]
    id?: IntFilter<"descarte"> | number
    name?: StringFilter<"descarte"> | string
    descricao?: StringFilter<"descarte"> | string
    data?: DateTimeFilter<"descarte"> | Date | string
    codigoDeReferencias?: StringFilter<"descarte"> | string
    usuarioId?: IntNullableFilter<"descarte"> | number | null
    createdAt?: DateTimeFilter<"descarte"> | Date | string
  }

  export type doacaoUpsertWithWhereUniqueWithoutDonatarioInput = {
    where: doacaoWhereUniqueInput
    update: XOR<doacaoUpdateWithoutDonatarioInput, doacaoUncheckedUpdateWithoutDonatarioInput>
    create: XOR<doacaoCreateWithoutDonatarioInput, doacaoUncheckedCreateWithoutDonatarioInput>
  }

  export type doacaoUpdateWithWhereUniqueWithoutDonatarioInput = {
    where: doacaoWhereUniqueInput
    data: XOR<doacaoUpdateWithoutDonatarioInput, doacaoUncheckedUpdateWithoutDonatarioInput>
  }

  export type doacaoUpdateManyWithWhereWithoutDonatarioInput = {
    where: doacaoScalarWhereInput
    data: XOR<doacaoUpdateManyMutationInput, doacaoUncheckedUpdateManyWithoutDonatarioInput>
  }

  export type doacaoScalarWhereInput = {
    AND?: doacaoScalarWhereInput | doacaoScalarWhereInput[]
    OR?: doacaoScalarWhereInput[]
    NOT?: doacaoScalarWhereInput | doacaoScalarWhereInput[]
    id?: IntFilter<"doacao"> | number
    name?: StringFilter<"doacao"> | string
    codigoDeReferencias?: StringFilter<"doacao"> | string
    descricao?: StringFilter<"doacao"> | string
    justificativa?: StringFilter<"doacao"> | string
    nomeOuEmpresa?: StringFilter<"doacao"> | string
    contato?: StringFilter<"doacao"> | string
    data?: DateTimeFilter<"doacao"> | Date | string
    status?: StringFilter<"doacao"> | string
    donatarioId?: IntNullableFilter<"doacao"> | number | null
    usuariofisicoId?: IntNullableFilter<"doacao"> | number | null
    usuariojuridicoId?: IntNullableFilter<"doacao"> | number | null
    createdAt?: DateTimeFilter<"doacao"> | Date | string
  }

  export type doacaoUsuarioUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: doacaoUsuarioWhereUniqueInput
    update: XOR<doacaoUsuarioUpdateWithoutUsuarioInput, doacaoUsuarioUncheckedUpdateWithoutUsuarioInput>
    create: XOR<doacaoUsuarioCreateWithoutUsuarioInput, doacaoUsuarioUncheckedCreateWithoutUsuarioInput>
  }

  export type doacaoUsuarioUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: doacaoUsuarioWhereUniqueInput
    data: XOR<doacaoUsuarioUpdateWithoutUsuarioInput, doacaoUsuarioUncheckedUpdateWithoutUsuarioInput>
  }

  export type doacaoUsuarioUpdateManyWithWhereWithoutUsuarioInput = {
    where: doacaoUsuarioScalarWhereInput
    data: XOR<doacaoUsuarioUpdateManyMutationInput, doacaoUsuarioUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type doacaoUsuarioScalarWhereInput = {
    AND?: doacaoUsuarioScalarWhereInput | doacaoUsuarioScalarWhereInput[]
    OR?: doacaoUsuarioScalarWhereInput[]
    NOT?: doacaoUsuarioScalarWhereInput | doacaoUsuarioScalarWhereInput[]
    id?: IntFilter<"doacaoUsuario"> | number
    name?: StringFilter<"doacaoUsuario"> | string
    eletronicos?: StringFilter<"doacaoUsuario"> | string
    descricao?: StringFilter<"doacaoUsuario"> | string
    informacoesAdicionais?: StringFilter<"doacaoUsuario"> | string
    horarioDeEntrega?: StringFilter<"doacaoUsuario"> | string
    contato?: StringFilter<"doacaoUsuario"> | string
    data?: DateTimeFilter<"doacaoUsuario"> | Date | string
    status?: StringFilter<"doacaoUsuario"> | string
    donatariofisicoId?: IntNullableFilter<"doacaoUsuario"> | number | null
    donatariojuridicoId?: IntNullableFilter<"doacaoUsuario"> | number | null
    usuarioid?: IntNullableFilter<"doacaoUsuario"> | number | null
    createdAt?: DateTimeFilter<"doacaoUsuario"> | Date | string
  }

  export type solicitacaoUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: solicitacaoWhereUniqueInput
    update: XOR<solicitacaoUpdateWithoutUsuarioInput, solicitacaoUncheckedUpdateWithoutUsuarioInput>
    create: XOR<solicitacaoCreateWithoutUsuarioInput, solicitacaoUncheckedCreateWithoutUsuarioInput>
  }

  export type solicitacaoUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: solicitacaoWhereUniqueInput
    data: XOR<solicitacaoUpdateWithoutUsuarioInput, solicitacaoUncheckedUpdateWithoutUsuarioInput>
  }

  export type solicitacaoUpdateManyWithWhereWithoutUsuarioInput = {
    where: solicitacaoScalarWhereInput
    data: XOR<solicitacaoUpdateManyMutationInput, solicitacaoUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type solicitacaoScalarWhereInput = {
    AND?: solicitacaoScalarWhereInput | solicitacaoScalarWhereInput[]
    OR?: solicitacaoScalarWhereInput[]
    NOT?: solicitacaoScalarWhereInput | solicitacaoScalarWhereInput[]
    id?: IntFilter<"solicitacao"> | number
    name?: StringFilter<"solicitacao"> | string
    eletronicos?: StringFilter<"solicitacao"> | string
    descricao?: StringFilter<"solicitacao"> | string
    informacoes?: StringFilter<"solicitacao"> | string
    horarioparapegar?: StringFilter<"solicitacao"> | string
    contato?: StringFilter<"solicitacao"> | string
    data?: DateTimeFilter<"solicitacao"> | Date | string
    dataparapegar?: DateTimeFilter<"solicitacao"> | Date | string
    status?: StringFilter<"solicitacao"> | string
    solicitacaofisicoId?: IntNullableFilter<"solicitacao"> | number | null
    solicitacaojuridicoId?: IntNullableFilter<"solicitacao"> | number | null
    usuarioid?: IntNullableFilter<"solicitacao"> | number | null
    createdAt?: DateTimeFilter<"solicitacao"> | Date | string
  }

  export type tecladoUpsertWithWhereUniqueWithoutModificadorInput = {
    where: tecladoWhereUniqueInput
    update: XOR<tecladoUpdateWithoutModificadorInput, tecladoUncheckedUpdateWithoutModificadorInput>
    create: XOR<tecladoCreateWithoutModificadorInput, tecladoUncheckedCreateWithoutModificadorInput>
  }

  export type tecladoUpdateWithWhereUniqueWithoutModificadorInput = {
    where: tecladoWhereUniqueInput
    data: XOR<tecladoUpdateWithoutModificadorInput, tecladoUncheckedUpdateWithoutModificadorInput>
  }

  export type tecladoUpdateManyWithWhereWithoutModificadorInput = {
    where: tecladoScalarWhereInput
    data: XOR<tecladoUpdateManyMutationInput, tecladoUncheckedUpdateManyWithoutModificadorInput>
  }

  export type tecladoScalarWhereInput = {
    AND?: tecladoScalarWhereInput | tecladoScalarWhereInput[]
    OR?: tecladoScalarWhereInput[]
    NOT?: tecladoScalarWhereInput | tecladoScalarWhereInput[]
    id?: IntFilter<"teclado"> | number
    codigoDereferencia?: StringFilter<"teclado"> | string
    descricao?: StringFilter<"teclado"> | string
    status?: StringFilter<"teclado"> | string
    dataDeChegada?: DateTimeFilter<"teclado"> | Date | string
    dataDeSaida?: DateTimeNullableFilter<"teclado"> | Date | string | null
    marca?: StringFilter<"teclado"> | string
    modelo?: StringFilter<"teclado"> | string
    createdAt?: DateTimeFilter<"teclado"> | Date | string
    updatedAt?: DateTimeFilter<"teclado"> | Date | string
    nome?: StringFilter<"teclado"> | string
    imagem?: StringFilter<"teclado"> | string
    situacao?: StringFilter<"teclado"> | string
    tipoDeConexao?: StringFilter<"teclado"> | string
    usuarioId?: IntNullableFilter<"teclado"> | number | null
    modificadorid?: IntNullableFilter<"teclado"> | number | null
    descarteId?: IntNullableFilter<"teclado"> | number | null
    doacaoId?: IntNullableFilter<"teclado"> | number | null
  }

  export type tecladoUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: tecladoWhereUniqueInput
    update: XOR<tecladoUpdateWithoutUsuarioInput, tecladoUncheckedUpdateWithoutUsuarioInput>
    create: XOR<tecladoCreateWithoutUsuarioInput, tecladoUncheckedCreateWithoutUsuarioInput>
  }

  export type tecladoUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: tecladoWhereUniqueInput
    data: XOR<tecladoUpdateWithoutUsuarioInput, tecladoUncheckedUpdateWithoutUsuarioInput>
  }

  export type tecladoUpdateManyWithWhereWithoutUsuarioInput = {
    where: tecladoScalarWhereInput
    data: XOR<tecladoUpdateManyMutationInput, tecladoUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type hdUpsertWithWhereUniqueWithoutAlunoInput = {
    where: hdWhereUniqueInput
    update: XOR<hdUpdateWithoutAlunoInput, hdUncheckedUpdateWithoutAlunoInput>
    create: XOR<hdCreateWithoutAlunoInput, hdUncheckedCreateWithoutAlunoInput>
  }

  export type hdUpdateWithWhereUniqueWithoutAlunoInput = {
    where: hdWhereUniqueInput
    data: XOR<hdUpdateWithoutAlunoInput, hdUncheckedUpdateWithoutAlunoInput>
  }

  export type hdUpdateManyWithWhereWithoutAlunoInput = {
    where: hdScalarWhereInput
    data: XOR<hdUpdateManyMutationInput, hdUncheckedUpdateManyWithoutAlunoInput>
  }

  export type hdScalarWhereInput = {
    AND?: hdScalarWhereInput | hdScalarWhereInput[]
    OR?: hdScalarWhereInput[]
    NOT?: hdScalarWhereInput | hdScalarWhereInput[]
    id?: IntFilter<"hd"> | number
    codigoDereferencia?: StringFilter<"hd"> | string
    descricao?: StringFilter<"hd"> | string
    status?: StringFilter<"hd"> | string
    dataDeChegada?: DateTimeFilter<"hd"> | Date | string
    dataDeSaida?: DateTimeNullableFilter<"hd"> | Date | string | null
    marca?: StringFilter<"hd"> | string
    modelo?: StringFilter<"hd"> | string
    createdAt?: DateTimeFilter<"hd"> | Date | string
    updatedAt?: DateTimeFilter<"hd"> | Date | string
    nome?: StringFilter<"hd"> | string
    imagem?: StringFilter<"hd"> | string
    situacao?: StringFilter<"hd"> | string
    tipoDeCapacidade?: StringFilter<"hd"> | string
    capacidade?: IntFilter<"hd"> | number
    usuarioId?: IntNullableFilter<"hd"> | number | null
    modificadorid?: IntNullableFilter<"hd"> | number | null
    descarteId?: IntNullableFilter<"hd"> | number | null
    doacaoId?: IntNullableFilter<"hd"> | number | null
  }

  export type hdUpsertWithWhereUniqueWithoutModificadorInput = {
    where: hdWhereUniqueInput
    update: XOR<hdUpdateWithoutModificadorInput, hdUncheckedUpdateWithoutModificadorInput>
    create: XOR<hdCreateWithoutModificadorInput, hdUncheckedCreateWithoutModificadorInput>
  }

  export type hdUpdateWithWhereUniqueWithoutModificadorInput = {
    where: hdWhereUniqueInput
    data: XOR<hdUpdateWithoutModificadorInput, hdUncheckedUpdateWithoutModificadorInput>
  }

  export type hdUpdateManyWithWhereWithoutModificadorInput = {
    where: hdScalarWhereInput
    data: XOR<hdUpdateManyMutationInput, hdUncheckedUpdateManyWithoutModificadorInput>
  }

  export type fontedealimentacaoUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: fontedealimentacaoWhereUniqueInput
    update: XOR<fontedealimentacaoUpdateWithoutUsuarioInput, fontedealimentacaoUncheckedUpdateWithoutUsuarioInput>
    create: XOR<fontedealimentacaoCreateWithoutUsuarioInput, fontedealimentacaoUncheckedCreateWithoutUsuarioInput>
  }

  export type fontedealimentacaoUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: fontedealimentacaoWhereUniqueInput
    data: XOR<fontedealimentacaoUpdateWithoutUsuarioInput, fontedealimentacaoUncheckedUpdateWithoutUsuarioInput>
  }

  export type fontedealimentacaoUpdateManyWithWhereWithoutUsuarioInput = {
    where: fontedealimentacaoScalarWhereInput
    data: XOR<fontedealimentacaoUpdateManyMutationInput, fontedealimentacaoUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type fontedealimentacaoScalarWhereInput = {
    AND?: fontedealimentacaoScalarWhereInput | fontedealimentacaoScalarWhereInput[]
    OR?: fontedealimentacaoScalarWhereInput[]
    NOT?: fontedealimentacaoScalarWhereInput | fontedealimentacaoScalarWhereInput[]
    id?: IntFilter<"fontedealimentacao"> | number
    codigoDereferencia?: StringFilter<"fontedealimentacao"> | string
    descricao?: StringFilter<"fontedealimentacao"> | string
    status?: StringFilter<"fontedealimentacao"> | string
    dataDeChegada?: DateTimeFilter<"fontedealimentacao"> | Date | string
    dataDeSaida?: DateTimeNullableFilter<"fontedealimentacao"> | Date | string | null
    marca?: StringFilter<"fontedealimentacao"> | string
    modelo?: StringFilter<"fontedealimentacao"> | string
    nome?: StringFilter<"fontedealimentacao"> | string
    imagem?: StringFilter<"fontedealimentacao"> | string
    situacao?: StringFilter<"fontedealimentacao"> | string
    potencia?: IntFilter<"fontedealimentacao"> | number
    updatedAt?: DateTimeFilter<"fontedealimentacao"> | Date | string
    alunoid?: IntNullableFilter<"fontedealimentacao"> | number | null
    modificadorid?: IntNullableFilter<"fontedealimentacao"> | number | null
    descarteId?: IntNullableFilter<"fontedealimentacao"> | number | null
    doacaoId?: IntNullableFilter<"fontedealimentacao"> | number | null
  }

  export type fontedealimentacaoUpsertWithWhereUniqueWithoutModificadorInput = {
    where: fontedealimentacaoWhereUniqueInput
    update: XOR<fontedealimentacaoUpdateWithoutModificadorInput, fontedealimentacaoUncheckedUpdateWithoutModificadorInput>
    create: XOR<fontedealimentacaoCreateWithoutModificadorInput, fontedealimentacaoUncheckedCreateWithoutModificadorInput>
  }

  export type fontedealimentacaoUpdateWithWhereUniqueWithoutModificadorInput = {
    where: fontedealimentacaoWhereUniqueInput
    data: XOR<fontedealimentacaoUpdateWithoutModificadorInput, fontedealimentacaoUncheckedUpdateWithoutModificadorInput>
  }

  export type fontedealimentacaoUpdateManyWithWhereWithoutModificadorInput = {
    where: fontedealimentacaoScalarWhereInput
    data: XOR<fontedealimentacaoUpdateManyMutationInput, fontedealimentacaoUncheckedUpdateManyWithoutModificadorInput>
  }

  export type gabineteUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: gabineteWhereUniqueInput
    update: XOR<gabineteUpdateWithoutUsuarioInput, gabineteUncheckedUpdateWithoutUsuarioInput>
    create: XOR<gabineteCreateWithoutUsuarioInput, gabineteUncheckedCreateWithoutUsuarioInput>
  }

  export type gabineteUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: gabineteWhereUniqueInput
    data: XOR<gabineteUpdateWithoutUsuarioInput, gabineteUncheckedUpdateWithoutUsuarioInput>
  }

  export type gabineteUpdateManyWithWhereWithoutUsuarioInput = {
    where: gabineteScalarWhereInput
    data: XOR<gabineteUpdateManyMutationInput, gabineteUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type gabineteScalarWhereInput = {
    AND?: gabineteScalarWhereInput | gabineteScalarWhereInput[]
    OR?: gabineteScalarWhereInput[]
    NOT?: gabineteScalarWhereInput | gabineteScalarWhereInput[]
    id?: IntFilter<"gabinete"> | number
    codigoDereferencia?: StringFilter<"gabinete"> | string
    descricao?: StringFilter<"gabinete"> | string
    status?: StringFilter<"gabinete"> | string
    dataDeChegada?: DateTimeFilter<"gabinete"> | Date | string
    dataDeSaida?: DateTimeNullableFilter<"gabinete"> | Date | string | null
    marca?: StringFilter<"gabinete"> | string
    modelo?: StringFilter<"gabinete"> | string
    nome?: StringFilter<"gabinete"> | string
    imagem?: StringFilter<"gabinete"> | string
    situacao?: StringFilter<"gabinete"> | string
    updatedAt?: DateTimeFilter<"gabinete"> | Date | string
    alunoid?: IntNullableFilter<"gabinete"> | number | null
    modificadorid?: IntNullableFilter<"gabinete"> | number | null
    descarteId?: IntNullableFilter<"gabinete"> | number | null
    doacaoId?: IntNullableFilter<"gabinete"> | number | null
  }

  export type gabineteUpsertWithWhereUniqueWithoutModificadorInput = {
    where: gabineteWhereUniqueInput
    update: XOR<gabineteUpdateWithoutModificadorInput, gabineteUncheckedUpdateWithoutModificadorInput>
    create: XOR<gabineteCreateWithoutModificadorInput, gabineteUncheckedCreateWithoutModificadorInput>
  }

  export type gabineteUpdateWithWhereUniqueWithoutModificadorInput = {
    where: gabineteWhereUniqueInput
    data: XOR<gabineteUpdateWithoutModificadorInput, gabineteUncheckedUpdateWithoutModificadorInput>
  }

  export type gabineteUpdateManyWithWhereWithoutModificadorInput = {
    where: gabineteScalarWhereInput
    data: XOR<gabineteUpdateManyMutationInput, gabineteUncheckedUpdateManyWithoutModificadorInput>
  }

  export type monitorUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: monitorWhereUniqueInput
    update: XOR<monitorUpdateWithoutUsuarioInput, monitorUncheckedUpdateWithoutUsuarioInput>
    create: XOR<monitorCreateWithoutUsuarioInput, monitorUncheckedCreateWithoutUsuarioInput>
  }

  export type monitorUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: monitorWhereUniqueInput
    data: XOR<monitorUpdateWithoutUsuarioInput, monitorUncheckedUpdateWithoutUsuarioInput>
  }

  export type monitorUpdateManyWithWhereWithoutUsuarioInput = {
    where: monitorScalarWhereInput
    data: XOR<monitorUpdateManyMutationInput, monitorUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type monitorScalarWhereInput = {
    AND?: monitorScalarWhereInput | monitorScalarWhereInput[]
    OR?: monitorScalarWhereInput[]
    NOT?: monitorScalarWhereInput | monitorScalarWhereInput[]
    id?: IntFilter<"monitor"> | number
    codigoDereferencia?: StringFilter<"monitor"> | string
    descricao?: StringFilter<"monitor"> | string
    status?: StringFilter<"monitor"> | string
    dataDeChegada?: DateTimeFilter<"monitor"> | Date | string
    dataDeSaida?: DateTimeNullableFilter<"monitor"> | Date | string | null
    marca?: StringFilter<"monitor"> | string
    modelo?: StringFilter<"monitor"> | string
    nome?: StringFilter<"monitor"> | string
    imagem?: StringFilter<"monitor"> | string
    situacao?: StringFilter<"monitor"> | string
    polegadas?: IntFilter<"monitor"> | number
    updatedAt?: DateTimeFilter<"monitor"> | Date | string
    alunoid?: IntNullableFilter<"monitor"> | number | null
    modificadorid?: IntNullableFilter<"monitor"> | number | null
    descarteId?: IntNullableFilter<"monitor"> | number | null
    doacaoId?: IntNullableFilter<"monitor"> | number | null
  }

  export type monitorUpsertWithWhereUniqueWithoutModificadorInput = {
    where: monitorWhereUniqueInput
    update: XOR<monitorUpdateWithoutModificadorInput, monitorUncheckedUpdateWithoutModificadorInput>
    create: XOR<monitorCreateWithoutModificadorInput, monitorUncheckedCreateWithoutModificadorInput>
  }

  export type monitorUpdateWithWhereUniqueWithoutModificadorInput = {
    where: monitorWhereUniqueInput
    data: XOR<monitorUpdateWithoutModificadorInput, monitorUncheckedUpdateWithoutModificadorInput>
  }

  export type monitorUpdateManyWithWhereWithoutModificadorInput = {
    where: monitorScalarWhereInput
    data: XOR<monitorUpdateManyMutationInput, monitorUncheckedUpdateManyWithoutModificadorInput>
  }

  export type mouseUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: mouseWhereUniqueInput
    update: XOR<mouseUpdateWithoutUsuarioInput, mouseUncheckedUpdateWithoutUsuarioInput>
    create: XOR<mouseCreateWithoutUsuarioInput, mouseUncheckedCreateWithoutUsuarioInput>
  }

  export type mouseUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: mouseWhereUniqueInput
    data: XOR<mouseUpdateWithoutUsuarioInput, mouseUncheckedUpdateWithoutUsuarioInput>
  }

  export type mouseUpdateManyWithWhereWithoutUsuarioInput = {
    where: mouseScalarWhereInput
    data: XOR<mouseUpdateManyMutationInput, mouseUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type mouseScalarWhereInput = {
    AND?: mouseScalarWhereInput | mouseScalarWhereInput[]
    OR?: mouseScalarWhereInput[]
    NOT?: mouseScalarWhereInput | mouseScalarWhereInput[]
    id?: IntFilter<"mouse"> | number
    codigoDereferencia?: StringFilter<"mouse"> | string
    descricao?: StringFilter<"mouse"> | string
    status?: StringFilter<"mouse"> | string
    dataDeChegada?: DateTimeFilter<"mouse"> | Date | string
    dataDeSaida?: DateTimeNullableFilter<"mouse"> | Date | string | null
    marca?: StringFilter<"mouse"> | string
    modelo?: StringFilter<"mouse"> | string
    nome?: StringFilter<"mouse"> | string
    imagem?: StringFilter<"mouse"> | string
    situacao?: StringFilter<"mouse"> | string
    tipoDeConexao?: StringFilter<"mouse"> | string
    updatedAt?: DateTimeFilter<"mouse"> | Date | string
    alunoid?: IntNullableFilter<"mouse"> | number | null
    modificadorid?: IntNullableFilter<"mouse"> | number | null
    descarteId?: IntNullableFilter<"mouse"> | number | null
    doacaoId?: IntNullableFilter<"mouse"> | number | null
  }

  export type mouseUpsertWithWhereUniqueWithoutModificadorInput = {
    where: mouseWhereUniqueInput
    update: XOR<mouseUpdateWithoutModificadorInput, mouseUncheckedUpdateWithoutModificadorInput>
    create: XOR<mouseCreateWithoutModificadorInput, mouseUncheckedCreateWithoutModificadorInput>
  }

  export type mouseUpdateWithWhereUniqueWithoutModificadorInput = {
    where: mouseWhereUniqueInput
    data: XOR<mouseUpdateWithoutModificadorInput, mouseUncheckedUpdateWithoutModificadorInput>
  }

  export type mouseUpdateManyWithWhereWithoutModificadorInput = {
    where: mouseScalarWhereInput
    data: XOR<mouseUpdateManyMutationInput, mouseUncheckedUpdateManyWithoutModificadorInput>
  }

  export type estabilizadorUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: estabilizadorWhereUniqueInput
    update: XOR<estabilizadorUpdateWithoutUsuarioInput, estabilizadorUncheckedUpdateWithoutUsuarioInput>
    create: XOR<estabilizadorCreateWithoutUsuarioInput, estabilizadorUncheckedCreateWithoutUsuarioInput>
  }

  export type estabilizadorUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: estabilizadorWhereUniqueInput
    data: XOR<estabilizadorUpdateWithoutUsuarioInput, estabilizadorUncheckedUpdateWithoutUsuarioInput>
  }

  export type estabilizadorUpdateManyWithWhereWithoutUsuarioInput = {
    where: estabilizadorScalarWhereInput
    data: XOR<estabilizadorUpdateManyMutationInput, estabilizadorUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type estabilizadorScalarWhereInput = {
    AND?: estabilizadorScalarWhereInput | estabilizadorScalarWhereInput[]
    OR?: estabilizadorScalarWhereInput[]
    NOT?: estabilizadorScalarWhereInput | estabilizadorScalarWhereInput[]
    id?: IntFilter<"estabilizador"> | number
    codigoDereferencia?: StringFilter<"estabilizador"> | string
    descricao?: StringFilter<"estabilizador"> | string
    status?: StringFilter<"estabilizador"> | string
    dataDeChegada?: DateTimeFilter<"estabilizador"> | Date | string
    dataDeSaida?: DateTimeNullableFilter<"estabilizador"> | Date | string | null
    marca?: StringFilter<"estabilizador"> | string
    modelo?: StringFilter<"estabilizador"> | string
    nome?: StringFilter<"estabilizador"> | string
    imagem?: StringFilter<"estabilizador"> | string
    situacao?: StringFilter<"estabilizador"> | string
    potencia?: IntFilter<"estabilizador"> | number
    updatedAt?: DateTimeFilter<"estabilizador"> | Date | string
    alunoid?: IntNullableFilter<"estabilizador"> | number | null
    modificadorid?: IntNullableFilter<"estabilizador"> | number | null
    descarteId?: IntNullableFilter<"estabilizador"> | number | null
    doacaoId?: IntNullableFilter<"estabilizador"> | number | null
  }

  export type estabilizadorUpsertWithWhereUniqueWithoutModificadorInput = {
    where: estabilizadorWhereUniqueInput
    update: XOR<estabilizadorUpdateWithoutModificadorInput, estabilizadorUncheckedUpdateWithoutModificadorInput>
    create: XOR<estabilizadorCreateWithoutModificadorInput, estabilizadorUncheckedCreateWithoutModificadorInput>
  }

  export type estabilizadorUpdateWithWhereUniqueWithoutModificadorInput = {
    where: estabilizadorWhereUniqueInput
    data: XOR<estabilizadorUpdateWithoutModificadorInput, estabilizadorUncheckedUpdateWithoutModificadorInput>
  }

  export type estabilizadorUpdateManyWithWhereWithoutModificadorInput = {
    where: estabilizadorScalarWhereInput
    data: XOR<estabilizadorUpdateManyMutationInput, estabilizadorUncheckedUpdateManyWithoutModificadorInput>
  }

  export type impressoraUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: impressoraWhereUniqueInput
    update: XOR<impressoraUpdateWithoutUsuarioInput, impressoraUncheckedUpdateWithoutUsuarioInput>
    create: XOR<impressoraCreateWithoutUsuarioInput, impressoraUncheckedCreateWithoutUsuarioInput>
  }

  export type impressoraUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: impressoraWhereUniqueInput
    data: XOR<impressoraUpdateWithoutUsuarioInput, impressoraUncheckedUpdateWithoutUsuarioInput>
  }

  export type impressoraUpdateManyWithWhereWithoutUsuarioInput = {
    where: impressoraScalarWhereInput
    data: XOR<impressoraUpdateManyMutationInput, impressoraUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type impressoraScalarWhereInput = {
    AND?: impressoraScalarWhereInput | impressoraScalarWhereInput[]
    OR?: impressoraScalarWhereInput[]
    NOT?: impressoraScalarWhereInput | impressoraScalarWhereInput[]
    id?: IntFilter<"impressora"> | number
    codigoDereferencia?: StringFilter<"impressora"> | string
    descricao?: StringFilter<"impressora"> | string
    status?: StringFilter<"impressora"> | string
    dataDeChegada?: DateTimeFilter<"impressora"> | Date | string
    dataDeSaida?: DateTimeNullableFilter<"impressora"> | Date | string | null
    marca?: StringFilter<"impressora"> | string
    modelo?: StringFilter<"impressora"> | string
    nome?: StringFilter<"impressora"> | string
    imagem?: StringFilter<"impressora"> | string
    situacao?: StringFilter<"impressora"> | string
    tipoDeTinta?: StringFilter<"impressora"> | string
    updatedAt?: DateTimeFilter<"impressora"> | Date | string
    alunoid?: IntNullableFilter<"impressora"> | number | null
    modificadorid?: IntNullableFilter<"impressora"> | number | null
    descarteId?: IntNullableFilter<"impressora"> | number | null
    doacaoId?: IntNullableFilter<"impressora"> | number | null
  }

  export type impressoraUpsertWithWhereUniqueWithoutModificadorInput = {
    where: impressoraWhereUniqueInput
    update: XOR<impressoraUpdateWithoutModificadorInput, impressoraUncheckedUpdateWithoutModificadorInput>
    create: XOR<impressoraCreateWithoutModificadorInput, impressoraUncheckedCreateWithoutModificadorInput>
  }

  export type impressoraUpdateWithWhereUniqueWithoutModificadorInput = {
    where: impressoraWhereUniqueInput
    data: XOR<impressoraUpdateWithoutModificadorInput, impressoraUncheckedUpdateWithoutModificadorInput>
  }

  export type impressoraUpdateManyWithWhereWithoutModificadorInput = {
    where: impressoraScalarWhereInput
    data: XOR<impressoraUpdateManyMutationInput, impressoraUncheckedUpdateManyWithoutModificadorInput>
  }

  export type placamaeUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: placamaeWhereUniqueInput
    update: XOR<placamaeUpdateWithoutUsuarioInput, placamaeUncheckedUpdateWithoutUsuarioInput>
    create: XOR<placamaeCreateWithoutUsuarioInput, placamaeUncheckedCreateWithoutUsuarioInput>
  }

  export type placamaeUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: placamaeWhereUniqueInput
    data: XOR<placamaeUpdateWithoutUsuarioInput, placamaeUncheckedUpdateWithoutUsuarioInput>
  }

  export type placamaeUpdateManyWithWhereWithoutUsuarioInput = {
    where: placamaeScalarWhereInput
    data: XOR<placamaeUpdateManyMutationInput, placamaeUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type placamaeScalarWhereInput = {
    AND?: placamaeScalarWhereInput | placamaeScalarWhereInput[]
    OR?: placamaeScalarWhereInput[]
    NOT?: placamaeScalarWhereInput | placamaeScalarWhereInput[]
    id?: IntFilter<"placamae"> | number
    codigoDereferencia?: StringFilter<"placamae"> | string
    descricao?: StringFilter<"placamae"> | string
    status?: StringFilter<"placamae"> | string
    dataDeChegada?: DateTimeFilter<"placamae"> | Date | string
    dataDeSaida?: DateTimeNullableFilter<"placamae"> | Date | string | null
    marca?: StringFilter<"placamae"> | string
    modelo?: StringFilter<"placamae"> | string
    nome?: StringFilter<"placamae"> | string
    imagem?: StringFilter<"placamae"> | string
    situacao?: StringFilter<"placamae"> | string
    updatedAt?: DateTimeFilter<"placamae"> | Date | string
    alunoid?: IntNullableFilter<"placamae"> | number | null
    modificadorid?: IntNullableFilter<"placamae"> | number | null
    descarteId?: IntNullableFilter<"placamae"> | number | null
    doacaoId?: IntNullableFilter<"placamae"> | number | null
  }

  export type placamaeUpsertWithWhereUniqueWithoutModificadorInput = {
    where: placamaeWhereUniqueInput
    update: XOR<placamaeUpdateWithoutModificadorInput, placamaeUncheckedUpdateWithoutModificadorInput>
    create: XOR<placamaeCreateWithoutModificadorInput, placamaeUncheckedCreateWithoutModificadorInput>
  }

  export type placamaeUpdateWithWhereUniqueWithoutModificadorInput = {
    where: placamaeWhereUniqueInput
    data: XOR<placamaeUpdateWithoutModificadorInput, placamaeUncheckedUpdateWithoutModificadorInput>
  }

  export type placamaeUpdateManyWithWhereWithoutModificadorInput = {
    where: placamaeScalarWhereInput
    data: XOR<placamaeUpdateManyMutationInput, placamaeUncheckedUpdateManyWithoutModificadorInput>
  }

  export type notebookUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: notebookWhereUniqueInput
    update: XOR<notebookUpdateWithoutUsuarioInput, notebookUncheckedUpdateWithoutUsuarioInput>
    create: XOR<notebookCreateWithoutUsuarioInput, notebookUncheckedCreateWithoutUsuarioInput>
  }

  export type notebookUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: notebookWhereUniqueInput
    data: XOR<notebookUpdateWithoutUsuarioInput, notebookUncheckedUpdateWithoutUsuarioInput>
  }

  export type notebookUpdateManyWithWhereWithoutUsuarioInput = {
    where: notebookScalarWhereInput
    data: XOR<notebookUpdateManyMutationInput, notebookUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type notebookScalarWhereInput = {
    AND?: notebookScalarWhereInput | notebookScalarWhereInput[]
    OR?: notebookScalarWhereInput[]
    NOT?: notebookScalarWhereInput | notebookScalarWhereInput[]
    id?: IntFilter<"notebook"> | number
    codigoDereferencia?: StringFilter<"notebook"> | string
    descricao?: StringFilter<"notebook"> | string
    status?: StringFilter<"notebook"> | string
    dataDeChegada?: DateTimeFilter<"notebook"> | Date | string
    dataDeSaida?: DateTimeNullableFilter<"notebook"> | Date | string | null
    marca?: StringFilter<"notebook"> | string
    modelo?: StringFilter<"notebook"> | string
    nome?: StringFilter<"notebook"> | string
    imagem?: StringFilter<"notebook"> | string
    situacao?: StringFilter<"notebook"> | string
    updatedAt?: DateTimeFilter<"notebook"> | Date | string
    alunoid?: IntNullableFilter<"notebook"> | number | null
    modificadorid?: IntNullableFilter<"notebook"> | number | null
    descarteId?: IntNullableFilter<"notebook"> | number | null
    doacaoId?: IntNullableFilter<"notebook"> | number | null
  }

  export type notebookUpsertWithWhereUniqueWithoutModificadorInput = {
    where: notebookWhereUniqueInput
    update: XOR<notebookUpdateWithoutModificadorInput, notebookUncheckedUpdateWithoutModificadorInput>
    create: XOR<notebookCreateWithoutModificadorInput, notebookUncheckedCreateWithoutModificadorInput>
  }

  export type notebookUpdateWithWhereUniqueWithoutModificadorInput = {
    where: notebookWhereUniqueInput
    data: XOR<notebookUpdateWithoutModificadorInput, notebookUncheckedUpdateWithoutModificadorInput>
  }

  export type notebookUpdateManyWithWhereWithoutModificadorInput = {
    where: notebookScalarWhereInput
    data: XOR<notebookUpdateManyMutationInput, notebookUncheckedUpdateManyWithoutModificadorInput>
  }

  export type processadorUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: processadorWhereUniqueInput
    update: XOR<processadorUpdateWithoutUsuarioInput, processadorUncheckedUpdateWithoutUsuarioInput>
    create: XOR<processadorCreateWithoutUsuarioInput, processadorUncheckedCreateWithoutUsuarioInput>
  }

  export type processadorUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: processadorWhereUniqueInput
    data: XOR<processadorUpdateWithoutUsuarioInput, processadorUncheckedUpdateWithoutUsuarioInput>
  }

  export type processadorUpdateManyWithWhereWithoutUsuarioInput = {
    where: processadorScalarWhereInput
    data: XOR<processadorUpdateManyMutationInput, processadorUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type processadorScalarWhereInput = {
    AND?: processadorScalarWhereInput | processadorScalarWhereInput[]
    OR?: processadorScalarWhereInput[]
    NOT?: processadorScalarWhereInput | processadorScalarWhereInput[]
    id?: IntFilter<"processador"> | number
    codigoDereferencia?: StringFilter<"processador"> | string
    descricao?: StringFilter<"processador"> | string
    status?: StringFilter<"processador"> | string
    dataDeChegada?: DateTimeFilter<"processador"> | Date | string
    dataDeSaida?: DateTimeNullableFilter<"processador"> | Date | string | null
    marca?: StringFilter<"processador"> | string
    modelo?: StringFilter<"processador"> | string
    nome?: StringFilter<"processador"> | string
    imagem?: StringFilter<"processador"> | string
    situacao?: StringFilter<"processador"> | string
    updatedAt?: DateTimeFilter<"processador"> | Date | string
    alunoid?: IntNullableFilter<"processador"> | number | null
    modificadorid?: IntNullableFilter<"processador"> | number | null
    descarteId?: IntNullableFilter<"processador"> | number | null
    doacaoId?: IntNullableFilter<"processador"> | number | null
  }

  export type processadorUpsertWithWhereUniqueWithoutModificadorInput = {
    where: processadorWhereUniqueInput
    update: XOR<processadorUpdateWithoutModificadorInput, processadorUncheckedUpdateWithoutModificadorInput>
    create: XOR<processadorCreateWithoutModificadorInput, processadorUncheckedCreateWithoutModificadorInput>
  }

  export type processadorUpdateWithWhereUniqueWithoutModificadorInput = {
    where: processadorWhereUniqueInput
    data: XOR<processadorUpdateWithoutModificadorInput, processadorUncheckedUpdateWithoutModificadorInput>
  }

  export type processadorUpdateManyWithWhereWithoutModificadorInput = {
    where: processadorScalarWhereInput
    data: XOR<processadorUpdateManyMutationInput, processadorUncheckedUpdateManyWithoutModificadorInput>
  }

  export type doacaoCreateWithoutUsuariofisicoInput = {
    name: string
    codigoDeReferencias: string
    descricao: string
    justificativa: string
    nomeOuEmpresa: string
    contato: string
    data: Date | string
    status: string
    createdAt?: Date | string
    donatario?: alunoCreateNestedOneWithoutDoacaoInput
    usuariojuridico?: pessoajuridicaCreateNestedOneWithoutDoacaoInput
    teclados?: tecladoCreateNestedManyWithoutDoacaoInput
    hds?: hdCreateNestedManyWithoutDoacaoInput
    fontesDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutDoacaoInput
    gabinetes?: gabineteCreateNestedManyWithoutDoacaoInput
    monitores?: monitorCreateNestedManyWithoutDoacaoInput
    mouses?: mouseCreateNestedManyWithoutDoacaoInput
    estabilizadores?: estabilizadorCreateNestedManyWithoutDoacaoInput
    impressoras?: impressoraCreateNestedManyWithoutDoacaoInput
    placasmae?: placamaeCreateNestedManyWithoutDoacaoInput
    notebooks?: notebookCreateNestedManyWithoutDoacaoInput
    processadores?: processadorCreateNestedManyWithoutDoacaoInput
  }

  export type doacaoUncheckedCreateWithoutUsuariofisicoInput = {
    id?: number
    name: string
    codigoDeReferencias: string
    descricao: string
    justificativa: string
    nomeOuEmpresa: string
    contato: string
    data: Date | string
    status: string
    donatarioId?: number | null
    usuariojuridicoId?: number | null
    createdAt?: Date | string
    teclados?: tecladoUncheckedCreateNestedManyWithoutDoacaoInput
    hds?: hdUncheckedCreateNestedManyWithoutDoacaoInput
    fontesDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutDoacaoInput
    gabinetes?: gabineteUncheckedCreateNestedManyWithoutDoacaoInput
    monitores?: monitorUncheckedCreateNestedManyWithoutDoacaoInput
    mouses?: mouseUncheckedCreateNestedManyWithoutDoacaoInput
    estabilizadores?: estabilizadorUncheckedCreateNestedManyWithoutDoacaoInput
    impressoras?: impressoraUncheckedCreateNestedManyWithoutDoacaoInput
    placasmae?: placamaeUncheckedCreateNestedManyWithoutDoacaoInput
    notebooks?: notebookUncheckedCreateNestedManyWithoutDoacaoInput
    processadores?: processadorUncheckedCreateNestedManyWithoutDoacaoInput
  }

  export type doacaoCreateOrConnectWithoutUsuariofisicoInput = {
    where: doacaoWhereUniqueInput
    create: XOR<doacaoCreateWithoutUsuariofisicoInput, doacaoUncheckedCreateWithoutUsuariofisicoInput>
  }

  export type doacaoCreateManyUsuariofisicoInputEnvelope = {
    data: doacaoCreateManyUsuariofisicoInput | doacaoCreateManyUsuariofisicoInput[]
    skipDuplicates?: boolean
  }

  export type doacaoUsuarioCreateWithoutDonatariofisicoInput = {
    name: string
    eletronicos: string
    descricao: string
    informacoesAdicionais: string
    horarioDeEntrega: string
    contato: string
    data: Date | string
    status: string
    createdAt?: Date | string
    donatariojuridico?: pessoajuridicaCreateNestedOneWithoutDoacaoUsuarioInput
    usuario?: alunoCreateNestedOneWithoutDoacaoUsuarioInput
  }

  export type doacaoUsuarioUncheckedCreateWithoutDonatariofisicoInput = {
    id?: number
    name: string
    eletronicos: string
    descricao: string
    informacoesAdicionais: string
    horarioDeEntrega: string
    contato: string
    data: Date | string
    status: string
    donatariojuridicoId?: number | null
    usuarioid?: number | null
    createdAt?: Date | string
  }

  export type doacaoUsuarioCreateOrConnectWithoutDonatariofisicoInput = {
    where: doacaoUsuarioWhereUniqueInput
    create: XOR<doacaoUsuarioCreateWithoutDonatariofisicoInput, doacaoUsuarioUncheckedCreateWithoutDonatariofisicoInput>
  }

  export type doacaoUsuarioCreateManyDonatariofisicoInputEnvelope = {
    data: doacaoUsuarioCreateManyDonatariofisicoInput | doacaoUsuarioCreateManyDonatariofisicoInput[]
    skipDuplicates?: boolean
  }

  export type solicitacaoCreateWithoutUsuariosolicitacaofisicoInput = {
    name: string
    eletronicos: string
    descricao: string
    informacoes: string
    horarioparapegar: string
    contato: string
    data: Date | string
    dataparapegar: Date | string
    status: string
    createdAt?: Date | string
    donatariojuridico?: pessoajuridicaCreateNestedOneWithoutSolicitacaoInput
    usuario?: alunoCreateNestedOneWithoutSolicitacaoInput
  }

  export type solicitacaoUncheckedCreateWithoutUsuariosolicitacaofisicoInput = {
    id?: number
    name: string
    eletronicos: string
    descricao: string
    informacoes: string
    horarioparapegar: string
    contato: string
    data: Date | string
    dataparapegar: Date | string
    status: string
    solicitacaojuridicoId?: number | null
    usuarioid?: number | null
    createdAt?: Date | string
  }

  export type solicitacaoCreateOrConnectWithoutUsuariosolicitacaofisicoInput = {
    where: solicitacaoWhereUniqueInput
    create: XOR<solicitacaoCreateWithoutUsuariosolicitacaofisicoInput, solicitacaoUncheckedCreateWithoutUsuariosolicitacaofisicoInput>
  }

  export type solicitacaoCreateManyUsuariosolicitacaofisicoInputEnvelope = {
    data: solicitacaoCreateManyUsuariosolicitacaofisicoInput | solicitacaoCreateManyUsuariosolicitacaofisicoInput[]
    skipDuplicates?: boolean
  }

  export type doacaoUpsertWithWhereUniqueWithoutUsuariofisicoInput = {
    where: doacaoWhereUniqueInput
    update: XOR<doacaoUpdateWithoutUsuariofisicoInput, doacaoUncheckedUpdateWithoutUsuariofisicoInput>
    create: XOR<doacaoCreateWithoutUsuariofisicoInput, doacaoUncheckedCreateWithoutUsuariofisicoInput>
  }

  export type doacaoUpdateWithWhereUniqueWithoutUsuariofisicoInput = {
    where: doacaoWhereUniqueInput
    data: XOR<doacaoUpdateWithoutUsuariofisicoInput, doacaoUncheckedUpdateWithoutUsuariofisicoInput>
  }

  export type doacaoUpdateManyWithWhereWithoutUsuariofisicoInput = {
    where: doacaoScalarWhereInput
    data: XOR<doacaoUpdateManyMutationInput, doacaoUncheckedUpdateManyWithoutUsuariofisicoInput>
  }

  export type doacaoUsuarioUpsertWithWhereUniqueWithoutDonatariofisicoInput = {
    where: doacaoUsuarioWhereUniqueInput
    update: XOR<doacaoUsuarioUpdateWithoutDonatariofisicoInput, doacaoUsuarioUncheckedUpdateWithoutDonatariofisicoInput>
    create: XOR<doacaoUsuarioCreateWithoutDonatariofisicoInput, doacaoUsuarioUncheckedCreateWithoutDonatariofisicoInput>
  }

  export type doacaoUsuarioUpdateWithWhereUniqueWithoutDonatariofisicoInput = {
    where: doacaoUsuarioWhereUniqueInput
    data: XOR<doacaoUsuarioUpdateWithoutDonatariofisicoInput, doacaoUsuarioUncheckedUpdateWithoutDonatariofisicoInput>
  }

  export type doacaoUsuarioUpdateManyWithWhereWithoutDonatariofisicoInput = {
    where: doacaoUsuarioScalarWhereInput
    data: XOR<doacaoUsuarioUpdateManyMutationInput, doacaoUsuarioUncheckedUpdateManyWithoutDonatariofisicoInput>
  }

  export type solicitacaoUpsertWithWhereUniqueWithoutUsuariosolicitacaofisicoInput = {
    where: solicitacaoWhereUniqueInput
    update: XOR<solicitacaoUpdateWithoutUsuariosolicitacaofisicoInput, solicitacaoUncheckedUpdateWithoutUsuariosolicitacaofisicoInput>
    create: XOR<solicitacaoCreateWithoutUsuariosolicitacaofisicoInput, solicitacaoUncheckedCreateWithoutUsuariosolicitacaofisicoInput>
  }

  export type solicitacaoUpdateWithWhereUniqueWithoutUsuariosolicitacaofisicoInput = {
    where: solicitacaoWhereUniqueInput
    data: XOR<solicitacaoUpdateWithoutUsuariosolicitacaofisicoInput, solicitacaoUncheckedUpdateWithoutUsuariosolicitacaofisicoInput>
  }

  export type solicitacaoUpdateManyWithWhereWithoutUsuariosolicitacaofisicoInput = {
    where: solicitacaoScalarWhereInput
    data: XOR<solicitacaoUpdateManyMutationInput, solicitacaoUncheckedUpdateManyWithoutUsuariosolicitacaofisicoInput>
  }

  export type doacaoCreateWithoutUsuariojuridicoInput = {
    name: string
    codigoDeReferencias: string
    descricao: string
    justificativa: string
    nomeOuEmpresa: string
    contato: string
    data: Date | string
    status: string
    createdAt?: Date | string
    donatario?: alunoCreateNestedOneWithoutDoacaoInput
    usuariofisico?: pessoafisicaCreateNestedOneWithoutDoacaoInput
    teclados?: tecladoCreateNestedManyWithoutDoacaoInput
    hds?: hdCreateNestedManyWithoutDoacaoInput
    fontesDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutDoacaoInput
    gabinetes?: gabineteCreateNestedManyWithoutDoacaoInput
    monitores?: monitorCreateNestedManyWithoutDoacaoInput
    mouses?: mouseCreateNestedManyWithoutDoacaoInput
    estabilizadores?: estabilizadorCreateNestedManyWithoutDoacaoInput
    impressoras?: impressoraCreateNestedManyWithoutDoacaoInput
    placasmae?: placamaeCreateNestedManyWithoutDoacaoInput
    notebooks?: notebookCreateNestedManyWithoutDoacaoInput
    processadores?: processadorCreateNestedManyWithoutDoacaoInput
  }

  export type doacaoUncheckedCreateWithoutUsuariojuridicoInput = {
    id?: number
    name: string
    codigoDeReferencias: string
    descricao: string
    justificativa: string
    nomeOuEmpresa: string
    contato: string
    data: Date | string
    status: string
    donatarioId?: number | null
    usuariofisicoId?: number | null
    createdAt?: Date | string
    teclados?: tecladoUncheckedCreateNestedManyWithoutDoacaoInput
    hds?: hdUncheckedCreateNestedManyWithoutDoacaoInput
    fontesDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutDoacaoInput
    gabinetes?: gabineteUncheckedCreateNestedManyWithoutDoacaoInput
    monitores?: monitorUncheckedCreateNestedManyWithoutDoacaoInput
    mouses?: mouseUncheckedCreateNestedManyWithoutDoacaoInput
    estabilizadores?: estabilizadorUncheckedCreateNestedManyWithoutDoacaoInput
    impressoras?: impressoraUncheckedCreateNestedManyWithoutDoacaoInput
    placasmae?: placamaeUncheckedCreateNestedManyWithoutDoacaoInput
    notebooks?: notebookUncheckedCreateNestedManyWithoutDoacaoInput
    processadores?: processadorUncheckedCreateNestedManyWithoutDoacaoInput
  }

  export type doacaoCreateOrConnectWithoutUsuariojuridicoInput = {
    where: doacaoWhereUniqueInput
    create: XOR<doacaoCreateWithoutUsuariojuridicoInput, doacaoUncheckedCreateWithoutUsuariojuridicoInput>
  }

  export type doacaoCreateManyUsuariojuridicoInputEnvelope = {
    data: doacaoCreateManyUsuariojuridicoInput | doacaoCreateManyUsuariojuridicoInput[]
    skipDuplicates?: boolean
  }

  export type doacaoUsuarioCreateWithoutDonatariojuridicoInput = {
    name: string
    eletronicos: string
    descricao: string
    informacoesAdicionais: string
    horarioDeEntrega: string
    contato: string
    data: Date | string
    status: string
    createdAt?: Date | string
    donatariofisico?: pessoafisicaCreateNestedOneWithoutDoacaoUsuarioInput
    usuario?: alunoCreateNestedOneWithoutDoacaoUsuarioInput
  }

  export type doacaoUsuarioUncheckedCreateWithoutDonatariojuridicoInput = {
    id?: number
    name: string
    eletronicos: string
    descricao: string
    informacoesAdicionais: string
    horarioDeEntrega: string
    contato: string
    data: Date | string
    status: string
    donatariofisicoId?: number | null
    usuarioid?: number | null
    createdAt?: Date | string
  }

  export type doacaoUsuarioCreateOrConnectWithoutDonatariojuridicoInput = {
    where: doacaoUsuarioWhereUniqueInput
    create: XOR<doacaoUsuarioCreateWithoutDonatariojuridicoInput, doacaoUsuarioUncheckedCreateWithoutDonatariojuridicoInput>
  }

  export type doacaoUsuarioCreateManyDonatariojuridicoInputEnvelope = {
    data: doacaoUsuarioCreateManyDonatariojuridicoInput | doacaoUsuarioCreateManyDonatariojuridicoInput[]
    skipDuplicates?: boolean
  }

  export type solicitacaoCreateWithoutDonatariojuridicoInput = {
    name: string
    eletronicos: string
    descricao: string
    informacoes: string
    horarioparapegar: string
    contato: string
    data: Date | string
    dataparapegar: Date | string
    status: string
    createdAt?: Date | string
    usuariosolicitacaofisico?: pessoafisicaCreateNestedOneWithoutSolicitacaoInput
    usuario?: alunoCreateNestedOneWithoutSolicitacaoInput
  }

  export type solicitacaoUncheckedCreateWithoutDonatariojuridicoInput = {
    id?: number
    name: string
    eletronicos: string
    descricao: string
    informacoes: string
    horarioparapegar: string
    contato: string
    data: Date | string
    dataparapegar: Date | string
    status: string
    solicitacaofisicoId?: number | null
    usuarioid?: number | null
    createdAt?: Date | string
  }

  export type solicitacaoCreateOrConnectWithoutDonatariojuridicoInput = {
    where: solicitacaoWhereUniqueInput
    create: XOR<solicitacaoCreateWithoutDonatariojuridicoInput, solicitacaoUncheckedCreateWithoutDonatariojuridicoInput>
  }

  export type solicitacaoCreateManyDonatariojuridicoInputEnvelope = {
    data: solicitacaoCreateManyDonatariojuridicoInput | solicitacaoCreateManyDonatariojuridicoInput[]
    skipDuplicates?: boolean
  }

  export type doacaoUpsertWithWhereUniqueWithoutUsuariojuridicoInput = {
    where: doacaoWhereUniqueInput
    update: XOR<doacaoUpdateWithoutUsuariojuridicoInput, doacaoUncheckedUpdateWithoutUsuariojuridicoInput>
    create: XOR<doacaoCreateWithoutUsuariojuridicoInput, doacaoUncheckedCreateWithoutUsuariojuridicoInput>
  }

  export type doacaoUpdateWithWhereUniqueWithoutUsuariojuridicoInput = {
    where: doacaoWhereUniqueInput
    data: XOR<doacaoUpdateWithoutUsuariojuridicoInput, doacaoUncheckedUpdateWithoutUsuariojuridicoInput>
  }

  export type doacaoUpdateManyWithWhereWithoutUsuariojuridicoInput = {
    where: doacaoScalarWhereInput
    data: XOR<doacaoUpdateManyMutationInput, doacaoUncheckedUpdateManyWithoutUsuariojuridicoInput>
  }

  export type doacaoUsuarioUpsertWithWhereUniqueWithoutDonatariojuridicoInput = {
    where: doacaoUsuarioWhereUniqueInput
    update: XOR<doacaoUsuarioUpdateWithoutDonatariojuridicoInput, doacaoUsuarioUncheckedUpdateWithoutDonatariojuridicoInput>
    create: XOR<doacaoUsuarioCreateWithoutDonatariojuridicoInput, doacaoUsuarioUncheckedCreateWithoutDonatariojuridicoInput>
  }

  export type doacaoUsuarioUpdateWithWhereUniqueWithoutDonatariojuridicoInput = {
    where: doacaoUsuarioWhereUniqueInput
    data: XOR<doacaoUsuarioUpdateWithoutDonatariojuridicoInput, doacaoUsuarioUncheckedUpdateWithoutDonatariojuridicoInput>
  }

  export type doacaoUsuarioUpdateManyWithWhereWithoutDonatariojuridicoInput = {
    where: doacaoUsuarioScalarWhereInput
    data: XOR<doacaoUsuarioUpdateManyMutationInput, doacaoUsuarioUncheckedUpdateManyWithoutDonatariojuridicoInput>
  }

  export type solicitacaoUpsertWithWhereUniqueWithoutDonatariojuridicoInput = {
    where: solicitacaoWhereUniqueInput
    update: XOR<solicitacaoUpdateWithoutDonatariojuridicoInput, solicitacaoUncheckedUpdateWithoutDonatariojuridicoInput>
    create: XOR<solicitacaoCreateWithoutDonatariojuridicoInput, solicitacaoUncheckedCreateWithoutDonatariojuridicoInput>
  }

  export type solicitacaoUpdateWithWhereUniqueWithoutDonatariojuridicoInput = {
    where: solicitacaoWhereUniqueInput
    data: XOR<solicitacaoUpdateWithoutDonatariojuridicoInput, solicitacaoUncheckedUpdateWithoutDonatariojuridicoInput>
  }

  export type solicitacaoUpdateManyWithWhereWithoutDonatariojuridicoInput = {
    where: solicitacaoScalarWhereInput
    data: XOR<solicitacaoUpdateManyMutationInput, solicitacaoUncheckedUpdateManyWithoutDonatariojuridicoInput>
  }

  export type descarteCreateWithoutTecladosInput = {
    name: string
    descricao: string
    data: Date | string
    codigoDeReferencias: string
    createdAt?: Date | string
    usuario?: alunoCreateNestedOneWithoutDescarteInput
    hds?: hdCreateNestedManyWithoutDescarteInput
    fontesDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutDescarteInput
    gabinetes?: gabineteCreateNestedManyWithoutDescarteInput
    monitores?: monitorCreateNestedManyWithoutDescarteInput
    mouses?: mouseCreateNestedManyWithoutDescarteInput
    estabilizadores?: estabilizadorCreateNestedManyWithoutDescarteInput
    impressoras?: impressoraCreateNestedManyWithoutDescarteInput
    placasmae?: placamaeCreateNestedManyWithoutDescarteInput
    notebooks?: notebookCreateNestedManyWithoutDescarteInput
    processadores?: processadorCreateNestedManyWithoutDescarteInput
  }

  export type descarteUncheckedCreateWithoutTecladosInput = {
    id?: number
    name: string
    descricao: string
    data: Date | string
    codigoDeReferencias: string
    usuarioId?: number | null
    createdAt?: Date | string
    hds?: hdUncheckedCreateNestedManyWithoutDescarteInput
    fontesDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutDescarteInput
    gabinetes?: gabineteUncheckedCreateNestedManyWithoutDescarteInput
    monitores?: monitorUncheckedCreateNestedManyWithoutDescarteInput
    mouses?: mouseUncheckedCreateNestedManyWithoutDescarteInput
    estabilizadores?: estabilizadorUncheckedCreateNestedManyWithoutDescarteInput
    impressoras?: impressoraUncheckedCreateNestedManyWithoutDescarteInput
    placasmae?: placamaeUncheckedCreateNestedManyWithoutDescarteInput
    notebooks?: notebookUncheckedCreateNestedManyWithoutDescarteInput
    processadores?: processadorUncheckedCreateNestedManyWithoutDescarteInput
  }

  export type descarteCreateOrConnectWithoutTecladosInput = {
    where: descarteWhereUniqueInput
    create: XOR<descarteCreateWithoutTecladosInput, descarteUncheckedCreateWithoutTecladosInput>
  }

  export type doacaoCreateWithoutTecladosInput = {
    name: string
    codigoDeReferencias: string
    descricao: string
    justificativa: string
    nomeOuEmpresa: string
    contato: string
    data: Date | string
    status: string
    createdAt?: Date | string
    donatario?: alunoCreateNestedOneWithoutDoacaoInput
    usuariofisico?: pessoafisicaCreateNestedOneWithoutDoacaoInput
    usuariojuridico?: pessoajuridicaCreateNestedOneWithoutDoacaoInput
    hds?: hdCreateNestedManyWithoutDoacaoInput
    fontesDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutDoacaoInput
    gabinetes?: gabineteCreateNestedManyWithoutDoacaoInput
    monitores?: monitorCreateNestedManyWithoutDoacaoInput
    mouses?: mouseCreateNestedManyWithoutDoacaoInput
    estabilizadores?: estabilizadorCreateNestedManyWithoutDoacaoInput
    impressoras?: impressoraCreateNestedManyWithoutDoacaoInput
    placasmae?: placamaeCreateNestedManyWithoutDoacaoInput
    notebooks?: notebookCreateNestedManyWithoutDoacaoInput
    processadores?: processadorCreateNestedManyWithoutDoacaoInput
  }

  export type doacaoUncheckedCreateWithoutTecladosInput = {
    id?: number
    name: string
    codigoDeReferencias: string
    descricao: string
    justificativa: string
    nomeOuEmpresa: string
    contato: string
    data: Date | string
    status: string
    donatarioId?: number | null
    usuariofisicoId?: number | null
    usuariojuridicoId?: number | null
    createdAt?: Date | string
    hds?: hdUncheckedCreateNestedManyWithoutDoacaoInput
    fontesDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutDoacaoInput
    gabinetes?: gabineteUncheckedCreateNestedManyWithoutDoacaoInput
    monitores?: monitorUncheckedCreateNestedManyWithoutDoacaoInput
    mouses?: mouseUncheckedCreateNestedManyWithoutDoacaoInput
    estabilizadores?: estabilizadorUncheckedCreateNestedManyWithoutDoacaoInput
    impressoras?: impressoraUncheckedCreateNestedManyWithoutDoacaoInput
    placasmae?: placamaeUncheckedCreateNestedManyWithoutDoacaoInput
    notebooks?: notebookUncheckedCreateNestedManyWithoutDoacaoInput
    processadores?: processadorUncheckedCreateNestedManyWithoutDoacaoInput
  }

  export type doacaoCreateOrConnectWithoutTecladosInput = {
    where: doacaoWhereUniqueInput
    create: XOR<doacaoCreateWithoutTecladosInput, doacaoUncheckedCreateWithoutTecladosInput>
  }

  export type alunoCreateWithoutUsuarioTecladoInput = {
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    descarte?: descarteCreateNestedManyWithoutUsuarioInput
    doacao?: doacaoCreateNestedManyWithoutDonatarioInput
    doacaoUsuario?: doacaoUsuarioCreateNestedManyWithoutUsuarioInput
    solicitacao?: solicitacaoCreateNestedManyWithoutUsuarioInput
    modificadorTeclado?: tecladoCreateNestedManyWithoutModificadorInput
    hd?: hdCreateNestedManyWithoutAlunoInput
    modificadorHd?: hdCreateNestedManyWithoutModificadorInput
    fonteDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutUsuarioInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutModificadorInput
    gabinete?: gabineteCreateNestedManyWithoutUsuarioInput
    modificadorGabinete?: gabineteCreateNestedManyWithoutModificadorInput
    monitor?: monitorCreateNestedManyWithoutUsuarioInput
    modificadorMonitor?: monitorCreateNestedManyWithoutModificadorInput
    usuarioMouse?: mouseCreateNestedManyWithoutUsuarioInput
    modificadorMouse?: mouseCreateNestedManyWithoutModificadorInput
    usuarioEstabilizador?: estabilizadorCreateNestedManyWithoutUsuarioInput
    modificadorEstabilizador?: estabilizadorCreateNestedManyWithoutModificadorInput
    usuarioImpressora?: impressoraCreateNestedManyWithoutUsuarioInput
    modificadorImpressora?: impressoraCreateNestedManyWithoutModificadorInput
    usuarioPlacamae?: placamaeCreateNestedManyWithoutUsuarioInput
    modificadorPlacamae?: placamaeCreateNestedManyWithoutModificadorInput
    usuarioNotebook?: notebookCreateNestedManyWithoutUsuarioInput
    modificadorNotebook?: notebookCreateNestedManyWithoutModificadorInput
    usuarioProcessador?: processadorCreateNestedManyWithoutUsuarioInput
    modificadorProcessador?: processadorCreateNestedManyWithoutModificadorInput
  }

  export type alunoUncheckedCreateWithoutUsuarioTecladoInput = {
    id?: number
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    descarte?: descarteUncheckedCreateNestedManyWithoutUsuarioInput
    doacao?: doacaoUncheckedCreateNestedManyWithoutDonatarioInput
    doacaoUsuario?: doacaoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    solicitacao?: solicitacaoUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorTeclado?: tecladoUncheckedCreateNestedManyWithoutModificadorInput
    hd?: hdUncheckedCreateNestedManyWithoutAlunoInput
    modificadorHd?: hdUncheckedCreateNestedManyWithoutModificadorInput
    fonteDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutModificadorInput
    gabinete?: gabineteUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorGabinete?: gabineteUncheckedCreateNestedManyWithoutModificadorInput
    monitor?: monitorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorMonitor?: monitorUncheckedCreateNestedManyWithoutModificadorInput
    usuarioMouse?: mouseUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorMouse?: mouseUncheckedCreateNestedManyWithoutModificadorInput
    usuarioEstabilizador?: estabilizadorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorEstabilizador?: estabilizadorUncheckedCreateNestedManyWithoutModificadorInput
    usuarioImpressora?: impressoraUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorImpressora?: impressoraUncheckedCreateNestedManyWithoutModificadorInput
    usuarioPlacamae?: placamaeUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorPlacamae?: placamaeUncheckedCreateNestedManyWithoutModificadorInput
    usuarioNotebook?: notebookUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorNotebook?: notebookUncheckedCreateNestedManyWithoutModificadorInput
    usuarioProcessador?: processadorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorProcessador?: processadorUncheckedCreateNestedManyWithoutModificadorInput
  }

  export type alunoCreateOrConnectWithoutUsuarioTecladoInput = {
    where: alunoWhereUniqueInput
    create: XOR<alunoCreateWithoutUsuarioTecladoInput, alunoUncheckedCreateWithoutUsuarioTecladoInput>
  }

  export type alunoCreateWithoutModificadorTecladoInput = {
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    descarte?: descarteCreateNestedManyWithoutUsuarioInput
    doacao?: doacaoCreateNestedManyWithoutDonatarioInput
    doacaoUsuario?: doacaoUsuarioCreateNestedManyWithoutUsuarioInput
    solicitacao?: solicitacaoCreateNestedManyWithoutUsuarioInput
    usuarioTeclado?: tecladoCreateNestedManyWithoutUsuarioInput
    hd?: hdCreateNestedManyWithoutAlunoInput
    modificadorHd?: hdCreateNestedManyWithoutModificadorInput
    fonteDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutUsuarioInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutModificadorInput
    gabinete?: gabineteCreateNestedManyWithoutUsuarioInput
    modificadorGabinete?: gabineteCreateNestedManyWithoutModificadorInput
    monitor?: monitorCreateNestedManyWithoutUsuarioInput
    modificadorMonitor?: monitorCreateNestedManyWithoutModificadorInput
    usuarioMouse?: mouseCreateNestedManyWithoutUsuarioInput
    modificadorMouse?: mouseCreateNestedManyWithoutModificadorInput
    usuarioEstabilizador?: estabilizadorCreateNestedManyWithoutUsuarioInput
    modificadorEstabilizador?: estabilizadorCreateNestedManyWithoutModificadorInput
    usuarioImpressora?: impressoraCreateNestedManyWithoutUsuarioInput
    modificadorImpressora?: impressoraCreateNestedManyWithoutModificadorInput
    usuarioPlacamae?: placamaeCreateNestedManyWithoutUsuarioInput
    modificadorPlacamae?: placamaeCreateNestedManyWithoutModificadorInput
    usuarioNotebook?: notebookCreateNestedManyWithoutUsuarioInput
    modificadorNotebook?: notebookCreateNestedManyWithoutModificadorInput
    usuarioProcessador?: processadorCreateNestedManyWithoutUsuarioInput
    modificadorProcessador?: processadorCreateNestedManyWithoutModificadorInput
  }

  export type alunoUncheckedCreateWithoutModificadorTecladoInput = {
    id?: number
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    descarte?: descarteUncheckedCreateNestedManyWithoutUsuarioInput
    doacao?: doacaoUncheckedCreateNestedManyWithoutDonatarioInput
    doacaoUsuario?: doacaoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    solicitacao?: solicitacaoUncheckedCreateNestedManyWithoutUsuarioInput
    usuarioTeclado?: tecladoUncheckedCreateNestedManyWithoutUsuarioInput
    hd?: hdUncheckedCreateNestedManyWithoutAlunoInput
    modificadorHd?: hdUncheckedCreateNestedManyWithoutModificadorInput
    fonteDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutModificadorInput
    gabinete?: gabineteUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorGabinete?: gabineteUncheckedCreateNestedManyWithoutModificadorInput
    monitor?: monitorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorMonitor?: monitorUncheckedCreateNestedManyWithoutModificadorInput
    usuarioMouse?: mouseUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorMouse?: mouseUncheckedCreateNestedManyWithoutModificadorInput
    usuarioEstabilizador?: estabilizadorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorEstabilizador?: estabilizadorUncheckedCreateNestedManyWithoutModificadorInput
    usuarioImpressora?: impressoraUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorImpressora?: impressoraUncheckedCreateNestedManyWithoutModificadorInput
    usuarioPlacamae?: placamaeUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorPlacamae?: placamaeUncheckedCreateNestedManyWithoutModificadorInput
    usuarioNotebook?: notebookUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorNotebook?: notebookUncheckedCreateNestedManyWithoutModificadorInput
    usuarioProcessador?: processadorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorProcessador?: processadorUncheckedCreateNestedManyWithoutModificadorInput
  }

  export type alunoCreateOrConnectWithoutModificadorTecladoInput = {
    where: alunoWhereUniqueInput
    create: XOR<alunoCreateWithoutModificadorTecladoInput, alunoUncheckedCreateWithoutModificadorTecladoInput>
  }

  export type descarteUpsertWithoutTecladosInput = {
    update: XOR<descarteUpdateWithoutTecladosInput, descarteUncheckedUpdateWithoutTecladosInput>
    create: XOR<descarteCreateWithoutTecladosInput, descarteUncheckedCreateWithoutTecladosInput>
    where?: descarteWhereInput
  }

  export type descarteUpdateToOneWithWhereWithoutTecladosInput = {
    where?: descarteWhereInput
    data: XOR<descarteUpdateWithoutTecladosInput, descarteUncheckedUpdateWithoutTecladosInput>
  }

  export type descarteUpdateWithoutTecladosInput = {
    name?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: alunoUpdateOneWithoutDescarteNestedInput
    hds?: hdUpdateManyWithoutDescarteNestedInput
    fontesDeAlimentacao?: fontedealimentacaoUpdateManyWithoutDescarteNestedInput
    gabinetes?: gabineteUpdateManyWithoutDescarteNestedInput
    monitores?: monitorUpdateManyWithoutDescarteNestedInput
    mouses?: mouseUpdateManyWithoutDescarteNestedInput
    estabilizadores?: estabilizadorUpdateManyWithoutDescarteNestedInput
    impressoras?: impressoraUpdateManyWithoutDescarteNestedInput
    placasmae?: placamaeUpdateManyWithoutDescarteNestedInput
    notebooks?: notebookUpdateManyWithoutDescarteNestedInput
    processadores?: processadorUpdateManyWithoutDescarteNestedInput
  }

  export type descarteUncheckedUpdateWithoutTecladosInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hds?: hdUncheckedUpdateManyWithoutDescarteNestedInput
    fontesDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutDescarteNestedInput
    gabinetes?: gabineteUncheckedUpdateManyWithoutDescarteNestedInput
    monitores?: monitorUncheckedUpdateManyWithoutDescarteNestedInput
    mouses?: mouseUncheckedUpdateManyWithoutDescarteNestedInput
    estabilizadores?: estabilizadorUncheckedUpdateManyWithoutDescarteNestedInput
    impressoras?: impressoraUncheckedUpdateManyWithoutDescarteNestedInput
    placasmae?: placamaeUncheckedUpdateManyWithoutDescarteNestedInput
    notebooks?: notebookUncheckedUpdateManyWithoutDescarteNestedInput
    processadores?: processadorUncheckedUpdateManyWithoutDescarteNestedInput
  }

  export type doacaoUpsertWithoutTecladosInput = {
    update: XOR<doacaoUpdateWithoutTecladosInput, doacaoUncheckedUpdateWithoutTecladosInput>
    create: XOR<doacaoCreateWithoutTecladosInput, doacaoUncheckedCreateWithoutTecladosInput>
    where?: doacaoWhereInput
  }

  export type doacaoUpdateToOneWithWhereWithoutTecladosInput = {
    where?: doacaoWhereInput
    data: XOR<doacaoUpdateWithoutTecladosInput, doacaoUncheckedUpdateWithoutTecladosInput>
  }

  export type doacaoUpdateWithoutTecladosInput = {
    name?: StringFieldUpdateOperationsInput | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    justificativa?: StringFieldUpdateOperationsInput | string
    nomeOuEmpresa?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    donatario?: alunoUpdateOneWithoutDoacaoNestedInput
    usuariofisico?: pessoafisicaUpdateOneWithoutDoacaoNestedInput
    usuariojuridico?: pessoajuridicaUpdateOneWithoutDoacaoNestedInput
    hds?: hdUpdateManyWithoutDoacaoNestedInput
    fontesDeAlimentacao?: fontedealimentacaoUpdateManyWithoutDoacaoNestedInput
    gabinetes?: gabineteUpdateManyWithoutDoacaoNestedInput
    monitores?: monitorUpdateManyWithoutDoacaoNestedInput
    mouses?: mouseUpdateManyWithoutDoacaoNestedInput
    estabilizadores?: estabilizadorUpdateManyWithoutDoacaoNestedInput
    impressoras?: impressoraUpdateManyWithoutDoacaoNestedInput
    placasmae?: placamaeUpdateManyWithoutDoacaoNestedInput
    notebooks?: notebookUpdateManyWithoutDoacaoNestedInput
    processadores?: processadorUpdateManyWithoutDoacaoNestedInput
  }

  export type doacaoUncheckedUpdateWithoutTecladosInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    justificativa?: StringFieldUpdateOperationsInput | string
    nomeOuEmpresa?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    donatarioId?: NullableIntFieldUpdateOperationsInput | number | null
    usuariofisicoId?: NullableIntFieldUpdateOperationsInput | number | null
    usuariojuridicoId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hds?: hdUncheckedUpdateManyWithoutDoacaoNestedInput
    fontesDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutDoacaoNestedInput
    gabinetes?: gabineteUncheckedUpdateManyWithoutDoacaoNestedInput
    monitores?: monitorUncheckedUpdateManyWithoutDoacaoNestedInput
    mouses?: mouseUncheckedUpdateManyWithoutDoacaoNestedInput
    estabilizadores?: estabilizadorUncheckedUpdateManyWithoutDoacaoNestedInput
    impressoras?: impressoraUncheckedUpdateManyWithoutDoacaoNestedInput
    placasmae?: placamaeUncheckedUpdateManyWithoutDoacaoNestedInput
    notebooks?: notebookUncheckedUpdateManyWithoutDoacaoNestedInput
    processadores?: processadorUncheckedUpdateManyWithoutDoacaoNestedInput
  }

  export type alunoUpsertWithoutUsuarioTecladoInput = {
    update: XOR<alunoUpdateWithoutUsuarioTecladoInput, alunoUncheckedUpdateWithoutUsuarioTecladoInput>
    create: XOR<alunoCreateWithoutUsuarioTecladoInput, alunoUncheckedCreateWithoutUsuarioTecladoInput>
    where?: alunoWhereInput
  }

  export type alunoUpdateToOneWithWhereWithoutUsuarioTecladoInput = {
    where?: alunoWhereInput
    data: XOR<alunoUpdateWithoutUsuarioTecladoInput, alunoUncheckedUpdateWithoutUsuarioTecladoInput>
  }

  export type alunoUpdateWithoutUsuarioTecladoInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUpdateManyWithoutUsuarioNestedInput
    doacao?: doacaoUpdateManyWithoutDonatarioNestedInput
    doacaoUsuario?: doacaoUsuarioUpdateManyWithoutUsuarioNestedInput
    solicitacao?: solicitacaoUpdateManyWithoutUsuarioNestedInput
    modificadorTeclado?: tecladoUpdateManyWithoutModificadorNestedInput
    hd?: hdUpdateManyWithoutAlunoNestedInput
    modificadorHd?: hdUpdateManyWithoutModificadorNestedInput
    fonteDeAlimentacao?: fontedealimentacaoUpdateManyWithoutUsuarioNestedInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUpdateManyWithoutModificadorNestedInput
    gabinete?: gabineteUpdateManyWithoutUsuarioNestedInput
    modificadorGabinete?: gabineteUpdateManyWithoutModificadorNestedInput
    monitor?: monitorUpdateManyWithoutUsuarioNestedInput
    modificadorMonitor?: monitorUpdateManyWithoutModificadorNestedInput
    usuarioMouse?: mouseUpdateManyWithoutUsuarioNestedInput
    modificadorMouse?: mouseUpdateManyWithoutModificadorNestedInput
    usuarioEstabilizador?: estabilizadorUpdateManyWithoutUsuarioNestedInput
    modificadorEstabilizador?: estabilizadorUpdateManyWithoutModificadorNestedInput
    usuarioImpressora?: impressoraUpdateManyWithoutUsuarioNestedInput
    modificadorImpressora?: impressoraUpdateManyWithoutModificadorNestedInput
    usuarioPlacamae?: placamaeUpdateManyWithoutUsuarioNestedInput
    modificadorPlacamae?: placamaeUpdateManyWithoutModificadorNestedInput
    usuarioNotebook?: notebookUpdateManyWithoutUsuarioNestedInput
    modificadorNotebook?: notebookUpdateManyWithoutModificadorNestedInput
    usuarioProcessador?: processadorUpdateManyWithoutUsuarioNestedInput
    modificadorProcessador?: processadorUpdateManyWithoutModificadorNestedInput
  }

  export type alunoUncheckedUpdateWithoutUsuarioTecladoInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUncheckedUpdateManyWithoutUsuarioNestedInput
    doacao?: doacaoUncheckedUpdateManyWithoutDonatarioNestedInput
    doacaoUsuario?: doacaoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitacao?: solicitacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorTeclado?: tecladoUncheckedUpdateManyWithoutModificadorNestedInput
    hd?: hdUncheckedUpdateManyWithoutAlunoNestedInput
    modificadorHd?: hdUncheckedUpdateManyWithoutModificadorNestedInput
    fonteDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutModificadorNestedInput
    gabinete?: gabineteUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorGabinete?: gabineteUncheckedUpdateManyWithoutModificadorNestedInput
    monitor?: monitorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorMonitor?: monitorUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioMouse?: mouseUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorMouse?: mouseUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioEstabilizador?: estabilizadorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorEstabilizador?: estabilizadorUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioImpressora?: impressoraUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorImpressora?: impressoraUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioPlacamae?: placamaeUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorPlacamae?: placamaeUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioNotebook?: notebookUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorNotebook?: notebookUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioProcessador?: processadorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorProcessador?: processadorUncheckedUpdateManyWithoutModificadorNestedInput
  }

  export type alunoUpsertWithoutModificadorTecladoInput = {
    update: XOR<alunoUpdateWithoutModificadorTecladoInput, alunoUncheckedUpdateWithoutModificadorTecladoInput>
    create: XOR<alunoCreateWithoutModificadorTecladoInput, alunoUncheckedCreateWithoutModificadorTecladoInput>
    where?: alunoWhereInput
  }

  export type alunoUpdateToOneWithWhereWithoutModificadorTecladoInput = {
    where?: alunoWhereInput
    data: XOR<alunoUpdateWithoutModificadorTecladoInput, alunoUncheckedUpdateWithoutModificadorTecladoInput>
  }

  export type alunoUpdateWithoutModificadorTecladoInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUpdateManyWithoutUsuarioNestedInput
    doacao?: doacaoUpdateManyWithoutDonatarioNestedInput
    doacaoUsuario?: doacaoUsuarioUpdateManyWithoutUsuarioNestedInput
    solicitacao?: solicitacaoUpdateManyWithoutUsuarioNestedInput
    usuarioTeclado?: tecladoUpdateManyWithoutUsuarioNestedInput
    hd?: hdUpdateManyWithoutAlunoNestedInput
    modificadorHd?: hdUpdateManyWithoutModificadorNestedInput
    fonteDeAlimentacao?: fontedealimentacaoUpdateManyWithoutUsuarioNestedInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUpdateManyWithoutModificadorNestedInput
    gabinete?: gabineteUpdateManyWithoutUsuarioNestedInput
    modificadorGabinete?: gabineteUpdateManyWithoutModificadorNestedInput
    monitor?: monitorUpdateManyWithoutUsuarioNestedInput
    modificadorMonitor?: monitorUpdateManyWithoutModificadorNestedInput
    usuarioMouse?: mouseUpdateManyWithoutUsuarioNestedInput
    modificadorMouse?: mouseUpdateManyWithoutModificadorNestedInput
    usuarioEstabilizador?: estabilizadorUpdateManyWithoutUsuarioNestedInput
    modificadorEstabilizador?: estabilizadorUpdateManyWithoutModificadorNestedInput
    usuarioImpressora?: impressoraUpdateManyWithoutUsuarioNestedInput
    modificadorImpressora?: impressoraUpdateManyWithoutModificadorNestedInput
    usuarioPlacamae?: placamaeUpdateManyWithoutUsuarioNestedInput
    modificadorPlacamae?: placamaeUpdateManyWithoutModificadorNestedInput
    usuarioNotebook?: notebookUpdateManyWithoutUsuarioNestedInput
    modificadorNotebook?: notebookUpdateManyWithoutModificadorNestedInput
    usuarioProcessador?: processadorUpdateManyWithoutUsuarioNestedInput
    modificadorProcessador?: processadorUpdateManyWithoutModificadorNestedInput
  }

  export type alunoUncheckedUpdateWithoutModificadorTecladoInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUncheckedUpdateManyWithoutUsuarioNestedInput
    doacao?: doacaoUncheckedUpdateManyWithoutDonatarioNestedInput
    doacaoUsuario?: doacaoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitacao?: solicitacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    usuarioTeclado?: tecladoUncheckedUpdateManyWithoutUsuarioNestedInput
    hd?: hdUncheckedUpdateManyWithoutAlunoNestedInput
    modificadorHd?: hdUncheckedUpdateManyWithoutModificadorNestedInput
    fonteDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutModificadorNestedInput
    gabinete?: gabineteUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorGabinete?: gabineteUncheckedUpdateManyWithoutModificadorNestedInput
    monitor?: monitorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorMonitor?: monitorUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioMouse?: mouseUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorMouse?: mouseUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioEstabilizador?: estabilizadorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorEstabilizador?: estabilizadorUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioImpressora?: impressoraUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorImpressora?: impressoraUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioPlacamae?: placamaeUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorPlacamae?: placamaeUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioNotebook?: notebookUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorNotebook?: notebookUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioProcessador?: processadorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorProcessador?: processadorUncheckedUpdateManyWithoutModificadorNestedInput
  }

  export type doacaoCreateWithoutHdsInput = {
    name: string
    codigoDeReferencias: string
    descricao: string
    justificativa: string
    nomeOuEmpresa: string
    contato: string
    data: Date | string
    status: string
    createdAt?: Date | string
    donatario?: alunoCreateNestedOneWithoutDoacaoInput
    usuariofisico?: pessoafisicaCreateNestedOneWithoutDoacaoInput
    usuariojuridico?: pessoajuridicaCreateNestedOneWithoutDoacaoInput
    teclados?: tecladoCreateNestedManyWithoutDoacaoInput
    fontesDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutDoacaoInput
    gabinetes?: gabineteCreateNestedManyWithoutDoacaoInput
    monitores?: monitorCreateNestedManyWithoutDoacaoInput
    mouses?: mouseCreateNestedManyWithoutDoacaoInput
    estabilizadores?: estabilizadorCreateNestedManyWithoutDoacaoInput
    impressoras?: impressoraCreateNestedManyWithoutDoacaoInput
    placasmae?: placamaeCreateNestedManyWithoutDoacaoInput
    notebooks?: notebookCreateNestedManyWithoutDoacaoInput
    processadores?: processadorCreateNestedManyWithoutDoacaoInput
  }

  export type doacaoUncheckedCreateWithoutHdsInput = {
    id?: number
    name: string
    codigoDeReferencias: string
    descricao: string
    justificativa: string
    nomeOuEmpresa: string
    contato: string
    data: Date | string
    status: string
    donatarioId?: number | null
    usuariofisicoId?: number | null
    usuariojuridicoId?: number | null
    createdAt?: Date | string
    teclados?: tecladoUncheckedCreateNestedManyWithoutDoacaoInput
    fontesDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutDoacaoInput
    gabinetes?: gabineteUncheckedCreateNestedManyWithoutDoacaoInput
    monitores?: monitorUncheckedCreateNestedManyWithoutDoacaoInput
    mouses?: mouseUncheckedCreateNestedManyWithoutDoacaoInput
    estabilizadores?: estabilizadorUncheckedCreateNestedManyWithoutDoacaoInput
    impressoras?: impressoraUncheckedCreateNestedManyWithoutDoacaoInput
    placasmae?: placamaeUncheckedCreateNestedManyWithoutDoacaoInput
    notebooks?: notebookUncheckedCreateNestedManyWithoutDoacaoInput
    processadores?: processadorUncheckedCreateNestedManyWithoutDoacaoInput
  }

  export type doacaoCreateOrConnectWithoutHdsInput = {
    where: doacaoWhereUniqueInput
    create: XOR<doacaoCreateWithoutHdsInput, doacaoUncheckedCreateWithoutHdsInput>
  }

  export type descarteCreateWithoutHdsInput = {
    name: string
    descricao: string
    data: Date | string
    codigoDeReferencias: string
    createdAt?: Date | string
    usuario?: alunoCreateNestedOneWithoutDescarteInput
    teclados?: tecladoCreateNestedManyWithoutDescarteInput
    fontesDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutDescarteInput
    gabinetes?: gabineteCreateNestedManyWithoutDescarteInput
    monitores?: monitorCreateNestedManyWithoutDescarteInput
    mouses?: mouseCreateNestedManyWithoutDescarteInput
    estabilizadores?: estabilizadorCreateNestedManyWithoutDescarteInput
    impressoras?: impressoraCreateNestedManyWithoutDescarteInput
    placasmae?: placamaeCreateNestedManyWithoutDescarteInput
    notebooks?: notebookCreateNestedManyWithoutDescarteInput
    processadores?: processadorCreateNestedManyWithoutDescarteInput
  }

  export type descarteUncheckedCreateWithoutHdsInput = {
    id?: number
    name: string
    descricao: string
    data: Date | string
    codigoDeReferencias: string
    usuarioId?: number | null
    createdAt?: Date | string
    teclados?: tecladoUncheckedCreateNestedManyWithoutDescarteInput
    fontesDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutDescarteInput
    gabinetes?: gabineteUncheckedCreateNestedManyWithoutDescarteInput
    monitores?: monitorUncheckedCreateNestedManyWithoutDescarteInput
    mouses?: mouseUncheckedCreateNestedManyWithoutDescarteInput
    estabilizadores?: estabilizadorUncheckedCreateNestedManyWithoutDescarteInput
    impressoras?: impressoraUncheckedCreateNestedManyWithoutDescarteInput
    placasmae?: placamaeUncheckedCreateNestedManyWithoutDescarteInput
    notebooks?: notebookUncheckedCreateNestedManyWithoutDescarteInput
    processadores?: processadorUncheckedCreateNestedManyWithoutDescarteInput
  }

  export type descarteCreateOrConnectWithoutHdsInput = {
    where: descarteWhereUniqueInput
    create: XOR<descarteCreateWithoutHdsInput, descarteUncheckedCreateWithoutHdsInput>
  }

  export type alunoCreateWithoutHdInput = {
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    descarte?: descarteCreateNestedManyWithoutUsuarioInput
    doacao?: doacaoCreateNestedManyWithoutDonatarioInput
    doacaoUsuario?: doacaoUsuarioCreateNestedManyWithoutUsuarioInput
    solicitacao?: solicitacaoCreateNestedManyWithoutUsuarioInput
    modificadorTeclado?: tecladoCreateNestedManyWithoutModificadorInput
    usuarioTeclado?: tecladoCreateNestedManyWithoutUsuarioInput
    modificadorHd?: hdCreateNestedManyWithoutModificadorInput
    fonteDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutUsuarioInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutModificadorInput
    gabinete?: gabineteCreateNestedManyWithoutUsuarioInput
    modificadorGabinete?: gabineteCreateNestedManyWithoutModificadorInput
    monitor?: monitorCreateNestedManyWithoutUsuarioInput
    modificadorMonitor?: monitorCreateNestedManyWithoutModificadorInput
    usuarioMouse?: mouseCreateNestedManyWithoutUsuarioInput
    modificadorMouse?: mouseCreateNestedManyWithoutModificadorInput
    usuarioEstabilizador?: estabilizadorCreateNestedManyWithoutUsuarioInput
    modificadorEstabilizador?: estabilizadorCreateNestedManyWithoutModificadorInput
    usuarioImpressora?: impressoraCreateNestedManyWithoutUsuarioInput
    modificadorImpressora?: impressoraCreateNestedManyWithoutModificadorInput
    usuarioPlacamae?: placamaeCreateNestedManyWithoutUsuarioInput
    modificadorPlacamae?: placamaeCreateNestedManyWithoutModificadorInput
    usuarioNotebook?: notebookCreateNestedManyWithoutUsuarioInput
    modificadorNotebook?: notebookCreateNestedManyWithoutModificadorInput
    usuarioProcessador?: processadorCreateNestedManyWithoutUsuarioInput
    modificadorProcessador?: processadorCreateNestedManyWithoutModificadorInput
  }

  export type alunoUncheckedCreateWithoutHdInput = {
    id?: number
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    descarte?: descarteUncheckedCreateNestedManyWithoutUsuarioInput
    doacao?: doacaoUncheckedCreateNestedManyWithoutDonatarioInput
    doacaoUsuario?: doacaoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    solicitacao?: solicitacaoUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorTeclado?: tecladoUncheckedCreateNestedManyWithoutModificadorInput
    usuarioTeclado?: tecladoUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorHd?: hdUncheckedCreateNestedManyWithoutModificadorInput
    fonteDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutModificadorInput
    gabinete?: gabineteUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorGabinete?: gabineteUncheckedCreateNestedManyWithoutModificadorInput
    monitor?: monitorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorMonitor?: monitorUncheckedCreateNestedManyWithoutModificadorInput
    usuarioMouse?: mouseUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorMouse?: mouseUncheckedCreateNestedManyWithoutModificadorInput
    usuarioEstabilizador?: estabilizadorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorEstabilizador?: estabilizadorUncheckedCreateNestedManyWithoutModificadorInput
    usuarioImpressora?: impressoraUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorImpressora?: impressoraUncheckedCreateNestedManyWithoutModificadorInput
    usuarioPlacamae?: placamaeUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorPlacamae?: placamaeUncheckedCreateNestedManyWithoutModificadorInput
    usuarioNotebook?: notebookUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorNotebook?: notebookUncheckedCreateNestedManyWithoutModificadorInput
    usuarioProcessador?: processadorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorProcessador?: processadorUncheckedCreateNestedManyWithoutModificadorInput
  }

  export type alunoCreateOrConnectWithoutHdInput = {
    where: alunoWhereUniqueInput
    create: XOR<alunoCreateWithoutHdInput, alunoUncheckedCreateWithoutHdInput>
  }

  export type alunoCreateWithoutModificadorHdInput = {
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    descarte?: descarteCreateNestedManyWithoutUsuarioInput
    doacao?: doacaoCreateNestedManyWithoutDonatarioInput
    doacaoUsuario?: doacaoUsuarioCreateNestedManyWithoutUsuarioInput
    solicitacao?: solicitacaoCreateNestedManyWithoutUsuarioInput
    modificadorTeclado?: tecladoCreateNestedManyWithoutModificadorInput
    usuarioTeclado?: tecladoCreateNestedManyWithoutUsuarioInput
    hd?: hdCreateNestedManyWithoutAlunoInput
    fonteDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutUsuarioInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutModificadorInput
    gabinete?: gabineteCreateNestedManyWithoutUsuarioInput
    modificadorGabinete?: gabineteCreateNestedManyWithoutModificadorInput
    monitor?: monitorCreateNestedManyWithoutUsuarioInput
    modificadorMonitor?: monitorCreateNestedManyWithoutModificadorInput
    usuarioMouse?: mouseCreateNestedManyWithoutUsuarioInput
    modificadorMouse?: mouseCreateNestedManyWithoutModificadorInput
    usuarioEstabilizador?: estabilizadorCreateNestedManyWithoutUsuarioInput
    modificadorEstabilizador?: estabilizadorCreateNestedManyWithoutModificadorInput
    usuarioImpressora?: impressoraCreateNestedManyWithoutUsuarioInput
    modificadorImpressora?: impressoraCreateNestedManyWithoutModificadorInput
    usuarioPlacamae?: placamaeCreateNestedManyWithoutUsuarioInput
    modificadorPlacamae?: placamaeCreateNestedManyWithoutModificadorInput
    usuarioNotebook?: notebookCreateNestedManyWithoutUsuarioInput
    modificadorNotebook?: notebookCreateNestedManyWithoutModificadorInput
    usuarioProcessador?: processadorCreateNestedManyWithoutUsuarioInput
    modificadorProcessador?: processadorCreateNestedManyWithoutModificadorInput
  }

  export type alunoUncheckedCreateWithoutModificadorHdInput = {
    id?: number
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    descarte?: descarteUncheckedCreateNestedManyWithoutUsuarioInput
    doacao?: doacaoUncheckedCreateNestedManyWithoutDonatarioInput
    doacaoUsuario?: doacaoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    solicitacao?: solicitacaoUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorTeclado?: tecladoUncheckedCreateNestedManyWithoutModificadorInput
    usuarioTeclado?: tecladoUncheckedCreateNestedManyWithoutUsuarioInput
    hd?: hdUncheckedCreateNestedManyWithoutAlunoInput
    fonteDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutModificadorInput
    gabinete?: gabineteUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorGabinete?: gabineteUncheckedCreateNestedManyWithoutModificadorInput
    monitor?: monitorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorMonitor?: monitorUncheckedCreateNestedManyWithoutModificadorInput
    usuarioMouse?: mouseUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorMouse?: mouseUncheckedCreateNestedManyWithoutModificadorInput
    usuarioEstabilizador?: estabilizadorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorEstabilizador?: estabilizadorUncheckedCreateNestedManyWithoutModificadorInput
    usuarioImpressora?: impressoraUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorImpressora?: impressoraUncheckedCreateNestedManyWithoutModificadorInput
    usuarioPlacamae?: placamaeUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorPlacamae?: placamaeUncheckedCreateNestedManyWithoutModificadorInput
    usuarioNotebook?: notebookUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorNotebook?: notebookUncheckedCreateNestedManyWithoutModificadorInput
    usuarioProcessador?: processadorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorProcessador?: processadorUncheckedCreateNestedManyWithoutModificadorInput
  }

  export type alunoCreateOrConnectWithoutModificadorHdInput = {
    where: alunoWhereUniqueInput
    create: XOR<alunoCreateWithoutModificadorHdInput, alunoUncheckedCreateWithoutModificadorHdInput>
  }

  export type doacaoUpsertWithoutHdsInput = {
    update: XOR<doacaoUpdateWithoutHdsInput, doacaoUncheckedUpdateWithoutHdsInput>
    create: XOR<doacaoCreateWithoutHdsInput, doacaoUncheckedCreateWithoutHdsInput>
    where?: doacaoWhereInput
  }

  export type doacaoUpdateToOneWithWhereWithoutHdsInput = {
    where?: doacaoWhereInput
    data: XOR<doacaoUpdateWithoutHdsInput, doacaoUncheckedUpdateWithoutHdsInput>
  }

  export type doacaoUpdateWithoutHdsInput = {
    name?: StringFieldUpdateOperationsInput | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    justificativa?: StringFieldUpdateOperationsInput | string
    nomeOuEmpresa?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    donatario?: alunoUpdateOneWithoutDoacaoNestedInput
    usuariofisico?: pessoafisicaUpdateOneWithoutDoacaoNestedInput
    usuariojuridico?: pessoajuridicaUpdateOneWithoutDoacaoNestedInput
    teclados?: tecladoUpdateManyWithoutDoacaoNestedInput
    fontesDeAlimentacao?: fontedealimentacaoUpdateManyWithoutDoacaoNestedInput
    gabinetes?: gabineteUpdateManyWithoutDoacaoNestedInput
    monitores?: monitorUpdateManyWithoutDoacaoNestedInput
    mouses?: mouseUpdateManyWithoutDoacaoNestedInput
    estabilizadores?: estabilizadorUpdateManyWithoutDoacaoNestedInput
    impressoras?: impressoraUpdateManyWithoutDoacaoNestedInput
    placasmae?: placamaeUpdateManyWithoutDoacaoNestedInput
    notebooks?: notebookUpdateManyWithoutDoacaoNestedInput
    processadores?: processadorUpdateManyWithoutDoacaoNestedInput
  }

  export type doacaoUncheckedUpdateWithoutHdsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    justificativa?: StringFieldUpdateOperationsInput | string
    nomeOuEmpresa?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    donatarioId?: NullableIntFieldUpdateOperationsInput | number | null
    usuariofisicoId?: NullableIntFieldUpdateOperationsInput | number | null
    usuariojuridicoId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    teclados?: tecladoUncheckedUpdateManyWithoutDoacaoNestedInput
    fontesDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutDoacaoNestedInput
    gabinetes?: gabineteUncheckedUpdateManyWithoutDoacaoNestedInput
    monitores?: monitorUncheckedUpdateManyWithoutDoacaoNestedInput
    mouses?: mouseUncheckedUpdateManyWithoutDoacaoNestedInput
    estabilizadores?: estabilizadorUncheckedUpdateManyWithoutDoacaoNestedInput
    impressoras?: impressoraUncheckedUpdateManyWithoutDoacaoNestedInput
    placasmae?: placamaeUncheckedUpdateManyWithoutDoacaoNestedInput
    notebooks?: notebookUncheckedUpdateManyWithoutDoacaoNestedInput
    processadores?: processadorUncheckedUpdateManyWithoutDoacaoNestedInput
  }

  export type descarteUpsertWithoutHdsInput = {
    update: XOR<descarteUpdateWithoutHdsInput, descarteUncheckedUpdateWithoutHdsInput>
    create: XOR<descarteCreateWithoutHdsInput, descarteUncheckedCreateWithoutHdsInput>
    where?: descarteWhereInput
  }

  export type descarteUpdateToOneWithWhereWithoutHdsInput = {
    where?: descarteWhereInput
    data: XOR<descarteUpdateWithoutHdsInput, descarteUncheckedUpdateWithoutHdsInput>
  }

  export type descarteUpdateWithoutHdsInput = {
    name?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: alunoUpdateOneWithoutDescarteNestedInput
    teclados?: tecladoUpdateManyWithoutDescarteNestedInput
    fontesDeAlimentacao?: fontedealimentacaoUpdateManyWithoutDescarteNestedInput
    gabinetes?: gabineteUpdateManyWithoutDescarteNestedInput
    monitores?: monitorUpdateManyWithoutDescarteNestedInput
    mouses?: mouseUpdateManyWithoutDescarteNestedInput
    estabilizadores?: estabilizadorUpdateManyWithoutDescarteNestedInput
    impressoras?: impressoraUpdateManyWithoutDescarteNestedInput
    placasmae?: placamaeUpdateManyWithoutDescarteNestedInput
    notebooks?: notebookUpdateManyWithoutDescarteNestedInput
    processadores?: processadorUpdateManyWithoutDescarteNestedInput
  }

  export type descarteUncheckedUpdateWithoutHdsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    teclados?: tecladoUncheckedUpdateManyWithoutDescarteNestedInput
    fontesDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutDescarteNestedInput
    gabinetes?: gabineteUncheckedUpdateManyWithoutDescarteNestedInput
    monitores?: monitorUncheckedUpdateManyWithoutDescarteNestedInput
    mouses?: mouseUncheckedUpdateManyWithoutDescarteNestedInput
    estabilizadores?: estabilizadorUncheckedUpdateManyWithoutDescarteNestedInput
    impressoras?: impressoraUncheckedUpdateManyWithoutDescarteNestedInput
    placasmae?: placamaeUncheckedUpdateManyWithoutDescarteNestedInput
    notebooks?: notebookUncheckedUpdateManyWithoutDescarteNestedInput
    processadores?: processadorUncheckedUpdateManyWithoutDescarteNestedInput
  }

  export type alunoUpsertWithoutHdInput = {
    update: XOR<alunoUpdateWithoutHdInput, alunoUncheckedUpdateWithoutHdInput>
    create: XOR<alunoCreateWithoutHdInput, alunoUncheckedCreateWithoutHdInput>
    where?: alunoWhereInput
  }

  export type alunoUpdateToOneWithWhereWithoutHdInput = {
    where?: alunoWhereInput
    data: XOR<alunoUpdateWithoutHdInput, alunoUncheckedUpdateWithoutHdInput>
  }

  export type alunoUpdateWithoutHdInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUpdateManyWithoutUsuarioNestedInput
    doacao?: doacaoUpdateManyWithoutDonatarioNestedInput
    doacaoUsuario?: doacaoUsuarioUpdateManyWithoutUsuarioNestedInput
    solicitacao?: solicitacaoUpdateManyWithoutUsuarioNestedInput
    modificadorTeclado?: tecladoUpdateManyWithoutModificadorNestedInput
    usuarioTeclado?: tecladoUpdateManyWithoutUsuarioNestedInput
    modificadorHd?: hdUpdateManyWithoutModificadorNestedInput
    fonteDeAlimentacao?: fontedealimentacaoUpdateManyWithoutUsuarioNestedInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUpdateManyWithoutModificadorNestedInput
    gabinete?: gabineteUpdateManyWithoutUsuarioNestedInput
    modificadorGabinete?: gabineteUpdateManyWithoutModificadorNestedInput
    monitor?: monitorUpdateManyWithoutUsuarioNestedInput
    modificadorMonitor?: monitorUpdateManyWithoutModificadorNestedInput
    usuarioMouse?: mouseUpdateManyWithoutUsuarioNestedInput
    modificadorMouse?: mouseUpdateManyWithoutModificadorNestedInput
    usuarioEstabilizador?: estabilizadorUpdateManyWithoutUsuarioNestedInput
    modificadorEstabilizador?: estabilizadorUpdateManyWithoutModificadorNestedInput
    usuarioImpressora?: impressoraUpdateManyWithoutUsuarioNestedInput
    modificadorImpressora?: impressoraUpdateManyWithoutModificadorNestedInput
    usuarioPlacamae?: placamaeUpdateManyWithoutUsuarioNestedInput
    modificadorPlacamae?: placamaeUpdateManyWithoutModificadorNestedInput
    usuarioNotebook?: notebookUpdateManyWithoutUsuarioNestedInput
    modificadorNotebook?: notebookUpdateManyWithoutModificadorNestedInput
    usuarioProcessador?: processadorUpdateManyWithoutUsuarioNestedInput
    modificadorProcessador?: processadorUpdateManyWithoutModificadorNestedInput
  }

  export type alunoUncheckedUpdateWithoutHdInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUncheckedUpdateManyWithoutUsuarioNestedInput
    doacao?: doacaoUncheckedUpdateManyWithoutDonatarioNestedInput
    doacaoUsuario?: doacaoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitacao?: solicitacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorTeclado?: tecladoUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioTeclado?: tecladoUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorHd?: hdUncheckedUpdateManyWithoutModificadorNestedInput
    fonteDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutModificadorNestedInput
    gabinete?: gabineteUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorGabinete?: gabineteUncheckedUpdateManyWithoutModificadorNestedInput
    monitor?: monitorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorMonitor?: monitorUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioMouse?: mouseUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorMouse?: mouseUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioEstabilizador?: estabilizadorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorEstabilizador?: estabilizadorUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioImpressora?: impressoraUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorImpressora?: impressoraUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioPlacamae?: placamaeUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorPlacamae?: placamaeUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioNotebook?: notebookUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorNotebook?: notebookUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioProcessador?: processadorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorProcessador?: processadorUncheckedUpdateManyWithoutModificadorNestedInput
  }

  export type alunoUpsertWithoutModificadorHdInput = {
    update: XOR<alunoUpdateWithoutModificadorHdInput, alunoUncheckedUpdateWithoutModificadorHdInput>
    create: XOR<alunoCreateWithoutModificadorHdInput, alunoUncheckedCreateWithoutModificadorHdInput>
    where?: alunoWhereInput
  }

  export type alunoUpdateToOneWithWhereWithoutModificadorHdInput = {
    where?: alunoWhereInput
    data: XOR<alunoUpdateWithoutModificadorHdInput, alunoUncheckedUpdateWithoutModificadorHdInput>
  }

  export type alunoUpdateWithoutModificadorHdInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUpdateManyWithoutUsuarioNestedInput
    doacao?: doacaoUpdateManyWithoutDonatarioNestedInput
    doacaoUsuario?: doacaoUsuarioUpdateManyWithoutUsuarioNestedInput
    solicitacao?: solicitacaoUpdateManyWithoutUsuarioNestedInput
    modificadorTeclado?: tecladoUpdateManyWithoutModificadorNestedInput
    usuarioTeclado?: tecladoUpdateManyWithoutUsuarioNestedInput
    hd?: hdUpdateManyWithoutAlunoNestedInput
    fonteDeAlimentacao?: fontedealimentacaoUpdateManyWithoutUsuarioNestedInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUpdateManyWithoutModificadorNestedInput
    gabinete?: gabineteUpdateManyWithoutUsuarioNestedInput
    modificadorGabinete?: gabineteUpdateManyWithoutModificadorNestedInput
    monitor?: monitorUpdateManyWithoutUsuarioNestedInput
    modificadorMonitor?: monitorUpdateManyWithoutModificadorNestedInput
    usuarioMouse?: mouseUpdateManyWithoutUsuarioNestedInput
    modificadorMouse?: mouseUpdateManyWithoutModificadorNestedInput
    usuarioEstabilizador?: estabilizadorUpdateManyWithoutUsuarioNestedInput
    modificadorEstabilizador?: estabilizadorUpdateManyWithoutModificadorNestedInput
    usuarioImpressora?: impressoraUpdateManyWithoutUsuarioNestedInput
    modificadorImpressora?: impressoraUpdateManyWithoutModificadorNestedInput
    usuarioPlacamae?: placamaeUpdateManyWithoutUsuarioNestedInput
    modificadorPlacamae?: placamaeUpdateManyWithoutModificadorNestedInput
    usuarioNotebook?: notebookUpdateManyWithoutUsuarioNestedInput
    modificadorNotebook?: notebookUpdateManyWithoutModificadorNestedInput
    usuarioProcessador?: processadorUpdateManyWithoutUsuarioNestedInput
    modificadorProcessador?: processadorUpdateManyWithoutModificadorNestedInput
  }

  export type alunoUncheckedUpdateWithoutModificadorHdInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUncheckedUpdateManyWithoutUsuarioNestedInput
    doacao?: doacaoUncheckedUpdateManyWithoutDonatarioNestedInput
    doacaoUsuario?: doacaoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitacao?: solicitacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorTeclado?: tecladoUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioTeclado?: tecladoUncheckedUpdateManyWithoutUsuarioNestedInput
    hd?: hdUncheckedUpdateManyWithoutAlunoNestedInput
    fonteDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutModificadorNestedInput
    gabinete?: gabineteUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorGabinete?: gabineteUncheckedUpdateManyWithoutModificadorNestedInput
    monitor?: monitorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorMonitor?: monitorUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioMouse?: mouseUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorMouse?: mouseUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioEstabilizador?: estabilizadorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorEstabilizador?: estabilizadorUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioImpressora?: impressoraUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorImpressora?: impressoraUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioPlacamae?: placamaeUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorPlacamae?: placamaeUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioNotebook?: notebookUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorNotebook?: notebookUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioProcessador?: processadorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorProcessador?: processadorUncheckedUpdateManyWithoutModificadorNestedInput
  }

  export type doacaoCreateWithoutFontesDeAlimentacaoInput = {
    name: string
    codigoDeReferencias: string
    descricao: string
    justificativa: string
    nomeOuEmpresa: string
    contato: string
    data: Date | string
    status: string
    createdAt?: Date | string
    donatario?: alunoCreateNestedOneWithoutDoacaoInput
    usuariofisico?: pessoafisicaCreateNestedOneWithoutDoacaoInput
    usuariojuridico?: pessoajuridicaCreateNestedOneWithoutDoacaoInput
    teclados?: tecladoCreateNestedManyWithoutDoacaoInput
    hds?: hdCreateNestedManyWithoutDoacaoInput
    gabinetes?: gabineteCreateNestedManyWithoutDoacaoInput
    monitores?: monitorCreateNestedManyWithoutDoacaoInput
    mouses?: mouseCreateNestedManyWithoutDoacaoInput
    estabilizadores?: estabilizadorCreateNestedManyWithoutDoacaoInput
    impressoras?: impressoraCreateNestedManyWithoutDoacaoInput
    placasmae?: placamaeCreateNestedManyWithoutDoacaoInput
    notebooks?: notebookCreateNestedManyWithoutDoacaoInput
    processadores?: processadorCreateNestedManyWithoutDoacaoInput
  }

  export type doacaoUncheckedCreateWithoutFontesDeAlimentacaoInput = {
    id?: number
    name: string
    codigoDeReferencias: string
    descricao: string
    justificativa: string
    nomeOuEmpresa: string
    contato: string
    data: Date | string
    status: string
    donatarioId?: number | null
    usuariofisicoId?: number | null
    usuariojuridicoId?: number | null
    createdAt?: Date | string
    teclados?: tecladoUncheckedCreateNestedManyWithoutDoacaoInput
    hds?: hdUncheckedCreateNestedManyWithoutDoacaoInput
    gabinetes?: gabineteUncheckedCreateNestedManyWithoutDoacaoInput
    monitores?: monitorUncheckedCreateNestedManyWithoutDoacaoInput
    mouses?: mouseUncheckedCreateNestedManyWithoutDoacaoInput
    estabilizadores?: estabilizadorUncheckedCreateNestedManyWithoutDoacaoInput
    impressoras?: impressoraUncheckedCreateNestedManyWithoutDoacaoInput
    placasmae?: placamaeUncheckedCreateNestedManyWithoutDoacaoInput
    notebooks?: notebookUncheckedCreateNestedManyWithoutDoacaoInput
    processadores?: processadorUncheckedCreateNestedManyWithoutDoacaoInput
  }

  export type doacaoCreateOrConnectWithoutFontesDeAlimentacaoInput = {
    where: doacaoWhereUniqueInput
    create: XOR<doacaoCreateWithoutFontesDeAlimentacaoInput, doacaoUncheckedCreateWithoutFontesDeAlimentacaoInput>
  }

  export type descarteCreateWithoutFontesDeAlimentacaoInput = {
    name: string
    descricao: string
    data: Date | string
    codigoDeReferencias: string
    createdAt?: Date | string
    usuario?: alunoCreateNestedOneWithoutDescarteInput
    teclados?: tecladoCreateNestedManyWithoutDescarteInput
    hds?: hdCreateNestedManyWithoutDescarteInput
    gabinetes?: gabineteCreateNestedManyWithoutDescarteInput
    monitores?: monitorCreateNestedManyWithoutDescarteInput
    mouses?: mouseCreateNestedManyWithoutDescarteInput
    estabilizadores?: estabilizadorCreateNestedManyWithoutDescarteInput
    impressoras?: impressoraCreateNestedManyWithoutDescarteInput
    placasmae?: placamaeCreateNestedManyWithoutDescarteInput
    notebooks?: notebookCreateNestedManyWithoutDescarteInput
    processadores?: processadorCreateNestedManyWithoutDescarteInput
  }

  export type descarteUncheckedCreateWithoutFontesDeAlimentacaoInput = {
    id?: number
    name: string
    descricao: string
    data: Date | string
    codigoDeReferencias: string
    usuarioId?: number | null
    createdAt?: Date | string
    teclados?: tecladoUncheckedCreateNestedManyWithoutDescarteInput
    hds?: hdUncheckedCreateNestedManyWithoutDescarteInput
    gabinetes?: gabineteUncheckedCreateNestedManyWithoutDescarteInput
    monitores?: monitorUncheckedCreateNestedManyWithoutDescarteInput
    mouses?: mouseUncheckedCreateNestedManyWithoutDescarteInput
    estabilizadores?: estabilizadorUncheckedCreateNestedManyWithoutDescarteInput
    impressoras?: impressoraUncheckedCreateNestedManyWithoutDescarteInput
    placasmae?: placamaeUncheckedCreateNestedManyWithoutDescarteInput
    notebooks?: notebookUncheckedCreateNestedManyWithoutDescarteInput
    processadores?: processadorUncheckedCreateNestedManyWithoutDescarteInput
  }

  export type descarteCreateOrConnectWithoutFontesDeAlimentacaoInput = {
    where: descarteWhereUniqueInput
    create: XOR<descarteCreateWithoutFontesDeAlimentacaoInput, descarteUncheckedCreateWithoutFontesDeAlimentacaoInput>
  }

  export type alunoCreateWithoutFonteDeAlimentacaoInput = {
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    descarte?: descarteCreateNestedManyWithoutUsuarioInput
    doacao?: doacaoCreateNestedManyWithoutDonatarioInput
    doacaoUsuario?: doacaoUsuarioCreateNestedManyWithoutUsuarioInput
    solicitacao?: solicitacaoCreateNestedManyWithoutUsuarioInput
    modificadorTeclado?: tecladoCreateNestedManyWithoutModificadorInput
    usuarioTeclado?: tecladoCreateNestedManyWithoutUsuarioInput
    hd?: hdCreateNestedManyWithoutAlunoInput
    modificadorHd?: hdCreateNestedManyWithoutModificadorInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutModificadorInput
    gabinete?: gabineteCreateNestedManyWithoutUsuarioInput
    modificadorGabinete?: gabineteCreateNestedManyWithoutModificadorInput
    monitor?: monitorCreateNestedManyWithoutUsuarioInput
    modificadorMonitor?: monitorCreateNestedManyWithoutModificadorInput
    usuarioMouse?: mouseCreateNestedManyWithoutUsuarioInput
    modificadorMouse?: mouseCreateNestedManyWithoutModificadorInput
    usuarioEstabilizador?: estabilizadorCreateNestedManyWithoutUsuarioInput
    modificadorEstabilizador?: estabilizadorCreateNestedManyWithoutModificadorInput
    usuarioImpressora?: impressoraCreateNestedManyWithoutUsuarioInput
    modificadorImpressora?: impressoraCreateNestedManyWithoutModificadorInput
    usuarioPlacamae?: placamaeCreateNestedManyWithoutUsuarioInput
    modificadorPlacamae?: placamaeCreateNestedManyWithoutModificadorInput
    usuarioNotebook?: notebookCreateNestedManyWithoutUsuarioInput
    modificadorNotebook?: notebookCreateNestedManyWithoutModificadorInput
    usuarioProcessador?: processadorCreateNestedManyWithoutUsuarioInput
    modificadorProcessador?: processadorCreateNestedManyWithoutModificadorInput
  }

  export type alunoUncheckedCreateWithoutFonteDeAlimentacaoInput = {
    id?: number
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    descarte?: descarteUncheckedCreateNestedManyWithoutUsuarioInput
    doacao?: doacaoUncheckedCreateNestedManyWithoutDonatarioInput
    doacaoUsuario?: doacaoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    solicitacao?: solicitacaoUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorTeclado?: tecladoUncheckedCreateNestedManyWithoutModificadorInput
    usuarioTeclado?: tecladoUncheckedCreateNestedManyWithoutUsuarioInput
    hd?: hdUncheckedCreateNestedManyWithoutAlunoInput
    modificadorHd?: hdUncheckedCreateNestedManyWithoutModificadorInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutModificadorInput
    gabinete?: gabineteUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorGabinete?: gabineteUncheckedCreateNestedManyWithoutModificadorInput
    monitor?: monitorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorMonitor?: monitorUncheckedCreateNestedManyWithoutModificadorInput
    usuarioMouse?: mouseUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorMouse?: mouseUncheckedCreateNestedManyWithoutModificadorInput
    usuarioEstabilizador?: estabilizadorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorEstabilizador?: estabilizadorUncheckedCreateNestedManyWithoutModificadorInput
    usuarioImpressora?: impressoraUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorImpressora?: impressoraUncheckedCreateNestedManyWithoutModificadorInput
    usuarioPlacamae?: placamaeUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorPlacamae?: placamaeUncheckedCreateNestedManyWithoutModificadorInput
    usuarioNotebook?: notebookUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorNotebook?: notebookUncheckedCreateNestedManyWithoutModificadorInput
    usuarioProcessador?: processadorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorProcessador?: processadorUncheckedCreateNestedManyWithoutModificadorInput
  }

  export type alunoCreateOrConnectWithoutFonteDeAlimentacaoInput = {
    where: alunoWhereUniqueInput
    create: XOR<alunoCreateWithoutFonteDeAlimentacaoInput, alunoUncheckedCreateWithoutFonteDeAlimentacaoInput>
  }

  export type alunoCreateWithoutModificadorFonteDeAlimentacaoInput = {
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    descarte?: descarteCreateNestedManyWithoutUsuarioInput
    doacao?: doacaoCreateNestedManyWithoutDonatarioInput
    doacaoUsuario?: doacaoUsuarioCreateNestedManyWithoutUsuarioInput
    solicitacao?: solicitacaoCreateNestedManyWithoutUsuarioInput
    modificadorTeclado?: tecladoCreateNestedManyWithoutModificadorInput
    usuarioTeclado?: tecladoCreateNestedManyWithoutUsuarioInput
    hd?: hdCreateNestedManyWithoutAlunoInput
    modificadorHd?: hdCreateNestedManyWithoutModificadorInput
    fonteDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutUsuarioInput
    gabinete?: gabineteCreateNestedManyWithoutUsuarioInput
    modificadorGabinete?: gabineteCreateNestedManyWithoutModificadorInput
    monitor?: monitorCreateNestedManyWithoutUsuarioInput
    modificadorMonitor?: monitorCreateNestedManyWithoutModificadorInput
    usuarioMouse?: mouseCreateNestedManyWithoutUsuarioInput
    modificadorMouse?: mouseCreateNestedManyWithoutModificadorInput
    usuarioEstabilizador?: estabilizadorCreateNestedManyWithoutUsuarioInput
    modificadorEstabilizador?: estabilizadorCreateNestedManyWithoutModificadorInput
    usuarioImpressora?: impressoraCreateNestedManyWithoutUsuarioInput
    modificadorImpressora?: impressoraCreateNestedManyWithoutModificadorInput
    usuarioPlacamae?: placamaeCreateNestedManyWithoutUsuarioInput
    modificadorPlacamae?: placamaeCreateNestedManyWithoutModificadorInput
    usuarioNotebook?: notebookCreateNestedManyWithoutUsuarioInput
    modificadorNotebook?: notebookCreateNestedManyWithoutModificadorInput
    usuarioProcessador?: processadorCreateNestedManyWithoutUsuarioInput
    modificadorProcessador?: processadorCreateNestedManyWithoutModificadorInput
  }

  export type alunoUncheckedCreateWithoutModificadorFonteDeAlimentacaoInput = {
    id?: number
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    descarte?: descarteUncheckedCreateNestedManyWithoutUsuarioInput
    doacao?: doacaoUncheckedCreateNestedManyWithoutDonatarioInput
    doacaoUsuario?: doacaoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    solicitacao?: solicitacaoUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorTeclado?: tecladoUncheckedCreateNestedManyWithoutModificadorInput
    usuarioTeclado?: tecladoUncheckedCreateNestedManyWithoutUsuarioInput
    hd?: hdUncheckedCreateNestedManyWithoutAlunoInput
    modificadorHd?: hdUncheckedCreateNestedManyWithoutModificadorInput
    fonteDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutUsuarioInput
    gabinete?: gabineteUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorGabinete?: gabineteUncheckedCreateNestedManyWithoutModificadorInput
    monitor?: monitorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorMonitor?: monitorUncheckedCreateNestedManyWithoutModificadorInput
    usuarioMouse?: mouseUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorMouse?: mouseUncheckedCreateNestedManyWithoutModificadorInput
    usuarioEstabilizador?: estabilizadorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorEstabilizador?: estabilizadorUncheckedCreateNestedManyWithoutModificadorInput
    usuarioImpressora?: impressoraUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorImpressora?: impressoraUncheckedCreateNestedManyWithoutModificadorInput
    usuarioPlacamae?: placamaeUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorPlacamae?: placamaeUncheckedCreateNestedManyWithoutModificadorInput
    usuarioNotebook?: notebookUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorNotebook?: notebookUncheckedCreateNestedManyWithoutModificadorInput
    usuarioProcessador?: processadorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorProcessador?: processadorUncheckedCreateNestedManyWithoutModificadorInput
  }

  export type alunoCreateOrConnectWithoutModificadorFonteDeAlimentacaoInput = {
    where: alunoWhereUniqueInput
    create: XOR<alunoCreateWithoutModificadorFonteDeAlimentacaoInput, alunoUncheckedCreateWithoutModificadorFonteDeAlimentacaoInput>
  }

  export type doacaoUpsertWithoutFontesDeAlimentacaoInput = {
    update: XOR<doacaoUpdateWithoutFontesDeAlimentacaoInput, doacaoUncheckedUpdateWithoutFontesDeAlimentacaoInput>
    create: XOR<doacaoCreateWithoutFontesDeAlimentacaoInput, doacaoUncheckedCreateWithoutFontesDeAlimentacaoInput>
    where?: doacaoWhereInput
  }

  export type doacaoUpdateToOneWithWhereWithoutFontesDeAlimentacaoInput = {
    where?: doacaoWhereInput
    data: XOR<doacaoUpdateWithoutFontesDeAlimentacaoInput, doacaoUncheckedUpdateWithoutFontesDeAlimentacaoInput>
  }

  export type doacaoUpdateWithoutFontesDeAlimentacaoInput = {
    name?: StringFieldUpdateOperationsInput | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    justificativa?: StringFieldUpdateOperationsInput | string
    nomeOuEmpresa?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    donatario?: alunoUpdateOneWithoutDoacaoNestedInput
    usuariofisico?: pessoafisicaUpdateOneWithoutDoacaoNestedInput
    usuariojuridico?: pessoajuridicaUpdateOneWithoutDoacaoNestedInput
    teclados?: tecladoUpdateManyWithoutDoacaoNestedInput
    hds?: hdUpdateManyWithoutDoacaoNestedInput
    gabinetes?: gabineteUpdateManyWithoutDoacaoNestedInput
    monitores?: monitorUpdateManyWithoutDoacaoNestedInput
    mouses?: mouseUpdateManyWithoutDoacaoNestedInput
    estabilizadores?: estabilizadorUpdateManyWithoutDoacaoNestedInput
    impressoras?: impressoraUpdateManyWithoutDoacaoNestedInput
    placasmae?: placamaeUpdateManyWithoutDoacaoNestedInput
    notebooks?: notebookUpdateManyWithoutDoacaoNestedInput
    processadores?: processadorUpdateManyWithoutDoacaoNestedInput
  }

  export type doacaoUncheckedUpdateWithoutFontesDeAlimentacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    justificativa?: StringFieldUpdateOperationsInput | string
    nomeOuEmpresa?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    donatarioId?: NullableIntFieldUpdateOperationsInput | number | null
    usuariofisicoId?: NullableIntFieldUpdateOperationsInput | number | null
    usuariojuridicoId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    teclados?: tecladoUncheckedUpdateManyWithoutDoacaoNestedInput
    hds?: hdUncheckedUpdateManyWithoutDoacaoNestedInput
    gabinetes?: gabineteUncheckedUpdateManyWithoutDoacaoNestedInput
    monitores?: monitorUncheckedUpdateManyWithoutDoacaoNestedInput
    mouses?: mouseUncheckedUpdateManyWithoutDoacaoNestedInput
    estabilizadores?: estabilizadorUncheckedUpdateManyWithoutDoacaoNestedInput
    impressoras?: impressoraUncheckedUpdateManyWithoutDoacaoNestedInput
    placasmae?: placamaeUncheckedUpdateManyWithoutDoacaoNestedInput
    notebooks?: notebookUncheckedUpdateManyWithoutDoacaoNestedInput
    processadores?: processadorUncheckedUpdateManyWithoutDoacaoNestedInput
  }

  export type descarteUpsertWithoutFontesDeAlimentacaoInput = {
    update: XOR<descarteUpdateWithoutFontesDeAlimentacaoInput, descarteUncheckedUpdateWithoutFontesDeAlimentacaoInput>
    create: XOR<descarteCreateWithoutFontesDeAlimentacaoInput, descarteUncheckedCreateWithoutFontesDeAlimentacaoInput>
    where?: descarteWhereInput
  }

  export type descarteUpdateToOneWithWhereWithoutFontesDeAlimentacaoInput = {
    where?: descarteWhereInput
    data: XOR<descarteUpdateWithoutFontesDeAlimentacaoInput, descarteUncheckedUpdateWithoutFontesDeAlimentacaoInput>
  }

  export type descarteUpdateWithoutFontesDeAlimentacaoInput = {
    name?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: alunoUpdateOneWithoutDescarteNestedInput
    teclados?: tecladoUpdateManyWithoutDescarteNestedInput
    hds?: hdUpdateManyWithoutDescarteNestedInput
    gabinetes?: gabineteUpdateManyWithoutDescarteNestedInput
    monitores?: monitorUpdateManyWithoutDescarteNestedInput
    mouses?: mouseUpdateManyWithoutDescarteNestedInput
    estabilizadores?: estabilizadorUpdateManyWithoutDescarteNestedInput
    impressoras?: impressoraUpdateManyWithoutDescarteNestedInput
    placasmae?: placamaeUpdateManyWithoutDescarteNestedInput
    notebooks?: notebookUpdateManyWithoutDescarteNestedInput
    processadores?: processadorUpdateManyWithoutDescarteNestedInput
  }

  export type descarteUncheckedUpdateWithoutFontesDeAlimentacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    teclados?: tecladoUncheckedUpdateManyWithoutDescarteNestedInput
    hds?: hdUncheckedUpdateManyWithoutDescarteNestedInput
    gabinetes?: gabineteUncheckedUpdateManyWithoutDescarteNestedInput
    monitores?: monitorUncheckedUpdateManyWithoutDescarteNestedInput
    mouses?: mouseUncheckedUpdateManyWithoutDescarteNestedInput
    estabilizadores?: estabilizadorUncheckedUpdateManyWithoutDescarteNestedInput
    impressoras?: impressoraUncheckedUpdateManyWithoutDescarteNestedInput
    placasmae?: placamaeUncheckedUpdateManyWithoutDescarteNestedInput
    notebooks?: notebookUncheckedUpdateManyWithoutDescarteNestedInput
    processadores?: processadorUncheckedUpdateManyWithoutDescarteNestedInput
  }

  export type alunoUpsertWithoutFonteDeAlimentacaoInput = {
    update: XOR<alunoUpdateWithoutFonteDeAlimentacaoInput, alunoUncheckedUpdateWithoutFonteDeAlimentacaoInput>
    create: XOR<alunoCreateWithoutFonteDeAlimentacaoInput, alunoUncheckedCreateWithoutFonteDeAlimentacaoInput>
    where?: alunoWhereInput
  }

  export type alunoUpdateToOneWithWhereWithoutFonteDeAlimentacaoInput = {
    where?: alunoWhereInput
    data: XOR<alunoUpdateWithoutFonteDeAlimentacaoInput, alunoUncheckedUpdateWithoutFonteDeAlimentacaoInput>
  }

  export type alunoUpdateWithoutFonteDeAlimentacaoInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUpdateManyWithoutUsuarioNestedInput
    doacao?: doacaoUpdateManyWithoutDonatarioNestedInput
    doacaoUsuario?: doacaoUsuarioUpdateManyWithoutUsuarioNestedInput
    solicitacao?: solicitacaoUpdateManyWithoutUsuarioNestedInput
    modificadorTeclado?: tecladoUpdateManyWithoutModificadorNestedInput
    usuarioTeclado?: tecladoUpdateManyWithoutUsuarioNestedInput
    hd?: hdUpdateManyWithoutAlunoNestedInput
    modificadorHd?: hdUpdateManyWithoutModificadorNestedInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUpdateManyWithoutModificadorNestedInput
    gabinete?: gabineteUpdateManyWithoutUsuarioNestedInput
    modificadorGabinete?: gabineteUpdateManyWithoutModificadorNestedInput
    monitor?: monitorUpdateManyWithoutUsuarioNestedInput
    modificadorMonitor?: monitorUpdateManyWithoutModificadorNestedInput
    usuarioMouse?: mouseUpdateManyWithoutUsuarioNestedInput
    modificadorMouse?: mouseUpdateManyWithoutModificadorNestedInput
    usuarioEstabilizador?: estabilizadorUpdateManyWithoutUsuarioNestedInput
    modificadorEstabilizador?: estabilizadorUpdateManyWithoutModificadorNestedInput
    usuarioImpressora?: impressoraUpdateManyWithoutUsuarioNestedInput
    modificadorImpressora?: impressoraUpdateManyWithoutModificadorNestedInput
    usuarioPlacamae?: placamaeUpdateManyWithoutUsuarioNestedInput
    modificadorPlacamae?: placamaeUpdateManyWithoutModificadorNestedInput
    usuarioNotebook?: notebookUpdateManyWithoutUsuarioNestedInput
    modificadorNotebook?: notebookUpdateManyWithoutModificadorNestedInput
    usuarioProcessador?: processadorUpdateManyWithoutUsuarioNestedInput
    modificadorProcessador?: processadorUpdateManyWithoutModificadorNestedInput
  }

  export type alunoUncheckedUpdateWithoutFonteDeAlimentacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUncheckedUpdateManyWithoutUsuarioNestedInput
    doacao?: doacaoUncheckedUpdateManyWithoutDonatarioNestedInput
    doacaoUsuario?: doacaoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitacao?: solicitacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorTeclado?: tecladoUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioTeclado?: tecladoUncheckedUpdateManyWithoutUsuarioNestedInput
    hd?: hdUncheckedUpdateManyWithoutAlunoNestedInput
    modificadorHd?: hdUncheckedUpdateManyWithoutModificadorNestedInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutModificadorNestedInput
    gabinete?: gabineteUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorGabinete?: gabineteUncheckedUpdateManyWithoutModificadorNestedInput
    monitor?: monitorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorMonitor?: monitorUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioMouse?: mouseUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorMouse?: mouseUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioEstabilizador?: estabilizadorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorEstabilizador?: estabilizadorUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioImpressora?: impressoraUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorImpressora?: impressoraUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioPlacamae?: placamaeUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorPlacamae?: placamaeUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioNotebook?: notebookUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorNotebook?: notebookUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioProcessador?: processadorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorProcessador?: processadorUncheckedUpdateManyWithoutModificadorNestedInput
  }

  export type alunoUpsertWithoutModificadorFonteDeAlimentacaoInput = {
    update: XOR<alunoUpdateWithoutModificadorFonteDeAlimentacaoInput, alunoUncheckedUpdateWithoutModificadorFonteDeAlimentacaoInput>
    create: XOR<alunoCreateWithoutModificadorFonteDeAlimentacaoInput, alunoUncheckedCreateWithoutModificadorFonteDeAlimentacaoInput>
    where?: alunoWhereInput
  }

  export type alunoUpdateToOneWithWhereWithoutModificadorFonteDeAlimentacaoInput = {
    where?: alunoWhereInput
    data: XOR<alunoUpdateWithoutModificadorFonteDeAlimentacaoInput, alunoUncheckedUpdateWithoutModificadorFonteDeAlimentacaoInput>
  }

  export type alunoUpdateWithoutModificadorFonteDeAlimentacaoInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUpdateManyWithoutUsuarioNestedInput
    doacao?: doacaoUpdateManyWithoutDonatarioNestedInput
    doacaoUsuario?: doacaoUsuarioUpdateManyWithoutUsuarioNestedInput
    solicitacao?: solicitacaoUpdateManyWithoutUsuarioNestedInput
    modificadorTeclado?: tecladoUpdateManyWithoutModificadorNestedInput
    usuarioTeclado?: tecladoUpdateManyWithoutUsuarioNestedInput
    hd?: hdUpdateManyWithoutAlunoNestedInput
    modificadorHd?: hdUpdateManyWithoutModificadorNestedInput
    fonteDeAlimentacao?: fontedealimentacaoUpdateManyWithoutUsuarioNestedInput
    gabinete?: gabineteUpdateManyWithoutUsuarioNestedInput
    modificadorGabinete?: gabineteUpdateManyWithoutModificadorNestedInput
    monitor?: monitorUpdateManyWithoutUsuarioNestedInput
    modificadorMonitor?: monitorUpdateManyWithoutModificadorNestedInput
    usuarioMouse?: mouseUpdateManyWithoutUsuarioNestedInput
    modificadorMouse?: mouseUpdateManyWithoutModificadorNestedInput
    usuarioEstabilizador?: estabilizadorUpdateManyWithoutUsuarioNestedInput
    modificadorEstabilizador?: estabilizadorUpdateManyWithoutModificadorNestedInput
    usuarioImpressora?: impressoraUpdateManyWithoutUsuarioNestedInput
    modificadorImpressora?: impressoraUpdateManyWithoutModificadorNestedInput
    usuarioPlacamae?: placamaeUpdateManyWithoutUsuarioNestedInput
    modificadorPlacamae?: placamaeUpdateManyWithoutModificadorNestedInput
    usuarioNotebook?: notebookUpdateManyWithoutUsuarioNestedInput
    modificadorNotebook?: notebookUpdateManyWithoutModificadorNestedInput
    usuarioProcessador?: processadorUpdateManyWithoutUsuarioNestedInput
    modificadorProcessador?: processadorUpdateManyWithoutModificadorNestedInput
  }

  export type alunoUncheckedUpdateWithoutModificadorFonteDeAlimentacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUncheckedUpdateManyWithoutUsuarioNestedInput
    doacao?: doacaoUncheckedUpdateManyWithoutDonatarioNestedInput
    doacaoUsuario?: doacaoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitacao?: solicitacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorTeclado?: tecladoUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioTeclado?: tecladoUncheckedUpdateManyWithoutUsuarioNestedInput
    hd?: hdUncheckedUpdateManyWithoutAlunoNestedInput
    modificadorHd?: hdUncheckedUpdateManyWithoutModificadorNestedInput
    fonteDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    gabinete?: gabineteUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorGabinete?: gabineteUncheckedUpdateManyWithoutModificadorNestedInput
    monitor?: monitorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorMonitor?: monitorUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioMouse?: mouseUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorMouse?: mouseUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioEstabilizador?: estabilizadorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorEstabilizador?: estabilizadorUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioImpressora?: impressoraUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorImpressora?: impressoraUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioPlacamae?: placamaeUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorPlacamae?: placamaeUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioNotebook?: notebookUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorNotebook?: notebookUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioProcessador?: processadorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorProcessador?: processadorUncheckedUpdateManyWithoutModificadorNestedInput
  }

  export type doacaoCreateWithoutGabinetesInput = {
    name: string
    codigoDeReferencias: string
    descricao: string
    justificativa: string
    nomeOuEmpresa: string
    contato: string
    data: Date | string
    status: string
    createdAt?: Date | string
    donatario?: alunoCreateNestedOneWithoutDoacaoInput
    usuariofisico?: pessoafisicaCreateNestedOneWithoutDoacaoInput
    usuariojuridico?: pessoajuridicaCreateNestedOneWithoutDoacaoInput
    teclados?: tecladoCreateNestedManyWithoutDoacaoInput
    hds?: hdCreateNestedManyWithoutDoacaoInput
    fontesDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutDoacaoInput
    monitores?: monitorCreateNestedManyWithoutDoacaoInput
    mouses?: mouseCreateNestedManyWithoutDoacaoInput
    estabilizadores?: estabilizadorCreateNestedManyWithoutDoacaoInput
    impressoras?: impressoraCreateNestedManyWithoutDoacaoInput
    placasmae?: placamaeCreateNestedManyWithoutDoacaoInput
    notebooks?: notebookCreateNestedManyWithoutDoacaoInput
    processadores?: processadorCreateNestedManyWithoutDoacaoInput
  }

  export type doacaoUncheckedCreateWithoutGabinetesInput = {
    id?: number
    name: string
    codigoDeReferencias: string
    descricao: string
    justificativa: string
    nomeOuEmpresa: string
    contato: string
    data: Date | string
    status: string
    donatarioId?: number | null
    usuariofisicoId?: number | null
    usuariojuridicoId?: number | null
    createdAt?: Date | string
    teclados?: tecladoUncheckedCreateNestedManyWithoutDoacaoInput
    hds?: hdUncheckedCreateNestedManyWithoutDoacaoInput
    fontesDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutDoacaoInput
    monitores?: monitorUncheckedCreateNestedManyWithoutDoacaoInput
    mouses?: mouseUncheckedCreateNestedManyWithoutDoacaoInput
    estabilizadores?: estabilizadorUncheckedCreateNestedManyWithoutDoacaoInput
    impressoras?: impressoraUncheckedCreateNestedManyWithoutDoacaoInput
    placasmae?: placamaeUncheckedCreateNestedManyWithoutDoacaoInput
    notebooks?: notebookUncheckedCreateNestedManyWithoutDoacaoInput
    processadores?: processadorUncheckedCreateNestedManyWithoutDoacaoInput
  }

  export type doacaoCreateOrConnectWithoutGabinetesInput = {
    where: doacaoWhereUniqueInput
    create: XOR<doacaoCreateWithoutGabinetesInput, doacaoUncheckedCreateWithoutGabinetesInput>
  }

  export type descarteCreateWithoutGabinetesInput = {
    name: string
    descricao: string
    data: Date | string
    codigoDeReferencias: string
    createdAt?: Date | string
    usuario?: alunoCreateNestedOneWithoutDescarteInput
    teclados?: tecladoCreateNestedManyWithoutDescarteInput
    hds?: hdCreateNestedManyWithoutDescarteInput
    fontesDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutDescarteInput
    monitores?: monitorCreateNestedManyWithoutDescarteInput
    mouses?: mouseCreateNestedManyWithoutDescarteInput
    estabilizadores?: estabilizadorCreateNestedManyWithoutDescarteInput
    impressoras?: impressoraCreateNestedManyWithoutDescarteInput
    placasmae?: placamaeCreateNestedManyWithoutDescarteInput
    notebooks?: notebookCreateNestedManyWithoutDescarteInput
    processadores?: processadorCreateNestedManyWithoutDescarteInput
  }

  export type descarteUncheckedCreateWithoutGabinetesInput = {
    id?: number
    name: string
    descricao: string
    data: Date | string
    codigoDeReferencias: string
    usuarioId?: number | null
    createdAt?: Date | string
    teclados?: tecladoUncheckedCreateNestedManyWithoutDescarteInput
    hds?: hdUncheckedCreateNestedManyWithoutDescarteInput
    fontesDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutDescarteInput
    monitores?: monitorUncheckedCreateNestedManyWithoutDescarteInput
    mouses?: mouseUncheckedCreateNestedManyWithoutDescarteInput
    estabilizadores?: estabilizadorUncheckedCreateNestedManyWithoutDescarteInput
    impressoras?: impressoraUncheckedCreateNestedManyWithoutDescarteInput
    placasmae?: placamaeUncheckedCreateNestedManyWithoutDescarteInput
    notebooks?: notebookUncheckedCreateNestedManyWithoutDescarteInput
    processadores?: processadorUncheckedCreateNestedManyWithoutDescarteInput
  }

  export type descarteCreateOrConnectWithoutGabinetesInput = {
    where: descarteWhereUniqueInput
    create: XOR<descarteCreateWithoutGabinetesInput, descarteUncheckedCreateWithoutGabinetesInput>
  }

  export type alunoCreateWithoutGabineteInput = {
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    descarte?: descarteCreateNestedManyWithoutUsuarioInput
    doacao?: doacaoCreateNestedManyWithoutDonatarioInput
    doacaoUsuario?: doacaoUsuarioCreateNestedManyWithoutUsuarioInput
    solicitacao?: solicitacaoCreateNestedManyWithoutUsuarioInput
    modificadorTeclado?: tecladoCreateNestedManyWithoutModificadorInput
    usuarioTeclado?: tecladoCreateNestedManyWithoutUsuarioInput
    hd?: hdCreateNestedManyWithoutAlunoInput
    modificadorHd?: hdCreateNestedManyWithoutModificadorInput
    fonteDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutUsuarioInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutModificadorInput
    modificadorGabinete?: gabineteCreateNestedManyWithoutModificadorInput
    monitor?: monitorCreateNestedManyWithoutUsuarioInput
    modificadorMonitor?: monitorCreateNestedManyWithoutModificadorInput
    usuarioMouse?: mouseCreateNestedManyWithoutUsuarioInput
    modificadorMouse?: mouseCreateNestedManyWithoutModificadorInput
    usuarioEstabilizador?: estabilizadorCreateNestedManyWithoutUsuarioInput
    modificadorEstabilizador?: estabilizadorCreateNestedManyWithoutModificadorInput
    usuarioImpressora?: impressoraCreateNestedManyWithoutUsuarioInput
    modificadorImpressora?: impressoraCreateNestedManyWithoutModificadorInput
    usuarioPlacamae?: placamaeCreateNestedManyWithoutUsuarioInput
    modificadorPlacamae?: placamaeCreateNestedManyWithoutModificadorInput
    usuarioNotebook?: notebookCreateNestedManyWithoutUsuarioInput
    modificadorNotebook?: notebookCreateNestedManyWithoutModificadorInput
    usuarioProcessador?: processadorCreateNestedManyWithoutUsuarioInput
    modificadorProcessador?: processadorCreateNestedManyWithoutModificadorInput
  }

  export type alunoUncheckedCreateWithoutGabineteInput = {
    id?: number
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    descarte?: descarteUncheckedCreateNestedManyWithoutUsuarioInput
    doacao?: doacaoUncheckedCreateNestedManyWithoutDonatarioInput
    doacaoUsuario?: doacaoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    solicitacao?: solicitacaoUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorTeclado?: tecladoUncheckedCreateNestedManyWithoutModificadorInput
    usuarioTeclado?: tecladoUncheckedCreateNestedManyWithoutUsuarioInput
    hd?: hdUncheckedCreateNestedManyWithoutAlunoInput
    modificadorHd?: hdUncheckedCreateNestedManyWithoutModificadorInput
    fonteDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutModificadorInput
    modificadorGabinete?: gabineteUncheckedCreateNestedManyWithoutModificadorInput
    monitor?: monitorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorMonitor?: monitorUncheckedCreateNestedManyWithoutModificadorInput
    usuarioMouse?: mouseUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorMouse?: mouseUncheckedCreateNestedManyWithoutModificadorInput
    usuarioEstabilizador?: estabilizadorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorEstabilizador?: estabilizadorUncheckedCreateNestedManyWithoutModificadorInput
    usuarioImpressora?: impressoraUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorImpressora?: impressoraUncheckedCreateNestedManyWithoutModificadorInput
    usuarioPlacamae?: placamaeUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorPlacamae?: placamaeUncheckedCreateNestedManyWithoutModificadorInput
    usuarioNotebook?: notebookUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorNotebook?: notebookUncheckedCreateNestedManyWithoutModificadorInput
    usuarioProcessador?: processadorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorProcessador?: processadorUncheckedCreateNestedManyWithoutModificadorInput
  }

  export type alunoCreateOrConnectWithoutGabineteInput = {
    where: alunoWhereUniqueInput
    create: XOR<alunoCreateWithoutGabineteInput, alunoUncheckedCreateWithoutGabineteInput>
  }

  export type alunoCreateWithoutModificadorGabineteInput = {
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    descarte?: descarteCreateNestedManyWithoutUsuarioInput
    doacao?: doacaoCreateNestedManyWithoutDonatarioInput
    doacaoUsuario?: doacaoUsuarioCreateNestedManyWithoutUsuarioInput
    solicitacao?: solicitacaoCreateNestedManyWithoutUsuarioInput
    modificadorTeclado?: tecladoCreateNestedManyWithoutModificadorInput
    usuarioTeclado?: tecladoCreateNestedManyWithoutUsuarioInput
    hd?: hdCreateNestedManyWithoutAlunoInput
    modificadorHd?: hdCreateNestedManyWithoutModificadorInput
    fonteDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutUsuarioInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutModificadorInput
    gabinete?: gabineteCreateNestedManyWithoutUsuarioInput
    monitor?: monitorCreateNestedManyWithoutUsuarioInput
    modificadorMonitor?: monitorCreateNestedManyWithoutModificadorInput
    usuarioMouse?: mouseCreateNestedManyWithoutUsuarioInput
    modificadorMouse?: mouseCreateNestedManyWithoutModificadorInput
    usuarioEstabilizador?: estabilizadorCreateNestedManyWithoutUsuarioInput
    modificadorEstabilizador?: estabilizadorCreateNestedManyWithoutModificadorInput
    usuarioImpressora?: impressoraCreateNestedManyWithoutUsuarioInput
    modificadorImpressora?: impressoraCreateNestedManyWithoutModificadorInput
    usuarioPlacamae?: placamaeCreateNestedManyWithoutUsuarioInput
    modificadorPlacamae?: placamaeCreateNestedManyWithoutModificadorInput
    usuarioNotebook?: notebookCreateNestedManyWithoutUsuarioInput
    modificadorNotebook?: notebookCreateNestedManyWithoutModificadorInput
    usuarioProcessador?: processadorCreateNestedManyWithoutUsuarioInput
    modificadorProcessador?: processadorCreateNestedManyWithoutModificadorInput
  }

  export type alunoUncheckedCreateWithoutModificadorGabineteInput = {
    id?: number
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    descarte?: descarteUncheckedCreateNestedManyWithoutUsuarioInput
    doacao?: doacaoUncheckedCreateNestedManyWithoutDonatarioInput
    doacaoUsuario?: doacaoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    solicitacao?: solicitacaoUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorTeclado?: tecladoUncheckedCreateNestedManyWithoutModificadorInput
    usuarioTeclado?: tecladoUncheckedCreateNestedManyWithoutUsuarioInput
    hd?: hdUncheckedCreateNestedManyWithoutAlunoInput
    modificadorHd?: hdUncheckedCreateNestedManyWithoutModificadorInput
    fonteDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutModificadorInput
    gabinete?: gabineteUncheckedCreateNestedManyWithoutUsuarioInput
    monitor?: monitorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorMonitor?: monitorUncheckedCreateNestedManyWithoutModificadorInput
    usuarioMouse?: mouseUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorMouse?: mouseUncheckedCreateNestedManyWithoutModificadorInput
    usuarioEstabilizador?: estabilizadorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorEstabilizador?: estabilizadorUncheckedCreateNestedManyWithoutModificadorInput
    usuarioImpressora?: impressoraUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorImpressora?: impressoraUncheckedCreateNestedManyWithoutModificadorInput
    usuarioPlacamae?: placamaeUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorPlacamae?: placamaeUncheckedCreateNestedManyWithoutModificadorInput
    usuarioNotebook?: notebookUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorNotebook?: notebookUncheckedCreateNestedManyWithoutModificadorInput
    usuarioProcessador?: processadorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorProcessador?: processadorUncheckedCreateNestedManyWithoutModificadorInput
  }

  export type alunoCreateOrConnectWithoutModificadorGabineteInput = {
    where: alunoWhereUniqueInput
    create: XOR<alunoCreateWithoutModificadorGabineteInput, alunoUncheckedCreateWithoutModificadorGabineteInput>
  }

  export type doacaoUpsertWithoutGabinetesInput = {
    update: XOR<doacaoUpdateWithoutGabinetesInput, doacaoUncheckedUpdateWithoutGabinetesInput>
    create: XOR<doacaoCreateWithoutGabinetesInput, doacaoUncheckedCreateWithoutGabinetesInput>
    where?: doacaoWhereInput
  }

  export type doacaoUpdateToOneWithWhereWithoutGabinetesInput = {
    where?: doacaoWhereInput
    data: XOR<doacaoUpdateWithoutGabinetesInput, doacaoUncheckedUpdateWithoutGabinetesInput>
  }

  export type doacaoUpdateWithoutGabinetesInput = {
    name?: StringFieldUpdateOperationsInput | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    justificativa?: StringFieldUpdateOperationsInput | string
    nomeOuEmpresa?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    donatario?: alunoUpdateOneWithoutDoacaoNestedInput
    usuariofisico?: pessoafisicaUpdateOneWithoutDoacaoNestedInput
    usuariojuridico?: pessoajuridicaUpdateOneWithoutDoacaoNestedInput
    teclados?: tecladoUpdateManyWithoutDoacaoNestedInput
    hds?: hdUpdateManyWithoutDoacaoNestedInput
    fontesDeAlimentacao?: fontedealimentacaoUpdateManyWithoutDoacaoNestedInput
    monitores?: monitorUpdateManyWithoutDoacaoNestedInput
    mouses?: mouseUpdateManyWithoutDoacaoNestedInput
    estabilizadores?: estabilizadorUpdateManyWithoutDoacaoNestedInput
    impressoras?: impressoraUpdateManyWithoutDoacaoNestedInput
    placasmae?: placamaeUpdateManyWithoutDoacaoNestedInput
    notebooks?: notebookUpdateManyWithoutDoacaoNestedInput
    processadores?: processadorUpdateManyWithoutDoacaoNestedInput
  }

  export type doacaoUncheckedUpdateWithoutGabinetesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    justificativa?: StringFieldUpdateOperationsInput | string
    nomeOuEmpresa?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    donatarioId?: NullableIntFieldUpdateOperationsInput | number | null
    usuariofisicoId?: NullableIntFieldUpdateOperationsInput | number | null
    usuariojuridicoId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    teclados?: tecladoUncheckedUpdateManyWithoutDoacaoNestedInput
    hds?: hdUncheckedUpdateManyWithoutDoacaoNestedInput
    fontesDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutDoacaoNestedInput
    monitores?: monitorUncheckedUpdateManyWithoutDoacaoNestedInput
    mouses?: mouseUncheckedUpdateManyWithoutDoacaoNestedInput
    estabilizadores?: estabilizadorUncheckedUpdateManyWithoutDoacaoNestedInput
    impressoras?: impressoraUncheckedUpdateManyWithoutDoacaoNestedInput
    placasmae?: placamaeUncheckedUpdateManyWithoutDoacaoNestedInput
    notebooks?: notebookUncheckedUpdateManyWithoutDoacaoNestedInput
    processadores?: processadorUncheckedUpdateManyWithoutDoacaoNestedInput
  }

  export type descarteUpsertWithoutGabinetesInput = {
    update: XOR<descarteUpdateWithoutGabinetesInput, descarteUncheckedUpdateWithoutGabinetesInput>
    create: XOR<descarteCreateWithoutGabinetesInput, descarteUncheckedCreateWithoutGabinetesInput>
    where?: descarteWhereInput
  }

  export type descarteUpdateToOneWithWhereWithoutGabinetesInput = {
    where?: descarteWhereInput
    data: XOR<descarteUpdateWithoutGabinetesInput, descarteUncheckedUpdateWithoutGabinetesInput>
  }

  export type descarteUpdateWithoutGabinetesInput = {
    name?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: alunoUpdateOneWithoutDescarteNestedInput
    teclados?: tecladoUpdateManyWithoutDescarteNestedInput
    hds?: hdUpdateManyWithoutDescarteNestedInput
    fontesDeAlimentacao?: fontedealimentacaoUpdateManyWithoutDescarteNestedInput
    monitores?: monitorUpdateManyWithoutDescarteNestedInput
    mouses?: mouseUpdateManyWithoutDescarteNestedInput
    estabilizadores?: estabilizadorUpdateManyWithoutDescarteNestedInput
    impressoras?: impressoraUpdateManyWithoutDescarteNestedInput
    placasmae?: placamaeUpdateManyWithoutDescarteNestedInput
    notebooks?: notebookUpdateManyWithoutDescarteNestedInput
    processadores?: processadorUpdateManyWithoutDescarteNestedInput
  }

  export type descarteUncheckedUpdateWithoutGabinetesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    teclados?: tecladoUncheckedUpdateManyWithoutDescarteNestedInput
    hds?: hdUncheckedUpdateManyWithoutDescarteNestedInput
    fontesDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutDescarteNestedInput
    monitores?: monitorUncheckedUpdateManyWithoutDescarteNestedInput
    mouses?: mouseUncheckedUpdateManyWithoutDescarteNestedInput
    estabilizadores?: estabilizadorUncheckedUpdateManyWithoutDescarteNestedInput
    impressoras?: impressoraUncheckedUpdateManyWithoutDescarteNestedInput
    placasmae?: placamaeUncheckedUpdateManyWithoutDescarteNestedInput
    notebooks?: notebookUncheckedUpdateManyWithoutDescarteNestedInput
    processadores?: processadorUncheckedUpdateManyWithoutDescarteNestedInput
  }

  export type alunoUpsertWithoutGabineteInput = {
    update: XOR<alunoUpdateWithoutGabineteInput, alunoUncheckedUpdateWithoutGabineteInput>
    create: XOR<alunoCreateWithoutGabineteInput, alunoUncheckedCreateWithoutGabineteInput>
    where?: alunoWhereInput
  }

  export type alunoUpdateToOneWithWhereWithoutGabineteInput = {
    where?: alunoWhereInput
    data: XOR<alunoUpdateWithoutGabineteInput, alunoUncheckedUpdateWithoutGabineteInput>
  }

  export type alunoUpdateWithoutGabineteInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUpdateManyWithoutUsuarioNestedInput
    doacao?: doacaoUpdateManyWithoutDonatarioNestedInput
    doacaoUsuario?: doacaoUsuarioUpdateManyWithoutUsuarioNestedInput
    solicitacao?: solicitacaoUpdateManyWithoutUsuarioNestedInput
    modificadorTeclado?: tecladoUpdateManyWithoutModificadorNestedInput
    usuarioTeclado?: tecladoUpdateManyWithoutUsuarioNestedInput
    hd?: hdUpdateManyWithoutAlunoNestedInput
    modificadorHd?: hdUpdateManyWithoutModificadorNestedInput
    fonteDeAlimentacao?: fontedealimentacaoUpdateManyWithoutUsuarioNestedInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUpdateManyWithoutModificadorNestedInput
    modificadorGabinete?: gabineteUpdateManyWithoutModificadorNestedInput
    monitor?: monitorUpdateManyWithoutUsuarioNestedInput
    modificadorMonitor?: monitorUpdateManyWithoutModificadorNestedInput
    usuarioMouse?: mouseUpdateManyWithoutUsuarioNestedInput
    modificadorMouse?: mouseUpdateManyWithoutModificadorNestedInput
    usuarioEstabilizador?: estabilizadorUpdateManyWithoutUsuarioNestedInput
    modificadorEstabilizador?: estabilizadorUpdateManyWithoutModificadorNestedInput
    usuarioImpressora?: impressoraUpdateManyWithoutUsuarioNestedInput
    modificadorImpressora?: impressoraUpdateManyWithoutModificadorNestedInput
    usuarioPlacamae?: placamaeUpdateManyWithoutUsuarioNestedInput
    modificadorPlacamae?: placamaeUpdateManyWithoutModificadorNestedInput
    usuarioNotebook?: notebookUpdateManyWithoutUsuarioNestedInput
    modificadorNotebook?: notebookUpdateManyWithoutModificadorNestedInput
    usuarioProcessador?: processadorUpdateManyWithoutUsuarioNestedInput
    modificadorProcessador?: processadorUpdateManyWithoutModificadorNestedInput
  }

  export type alunoUncheckedUpdateWithoutGabineteInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUncheckedUpdateManyWithoutUsuarioNestedInput
    doacao?: doacaoUncheckedUpdateManyWithoutDonatarioNestedInput
    doacaoUsuario?: doacaoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitacao?: solicitacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorTeclado?: tecladoUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioTeclado?: tecladoUncheckedUpdateManyWithoutUsuarioNestedInput
    hd?: hdUncheckedUpdateManyWithoutAlunoNestedInput
    modificadorHd?: hdUncheckedUpdateManyWithoutModificadorNestedInput
    fonteDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutModificadorNestedInput
    modificadorGabinete?: gabineteUncheckedUpdateManyWithoutModificadorNestedInput
    monitor?: monitorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorMonitor?: monitorUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioMouse?: mouseUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorMouse?: mouseUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioEstabilizador?: estabilizadorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorEstabilizador?: estabilizadorUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioImpressora?: impressoraUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorImpressora?: impressoraUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioPlacamae?: placamaeUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorPlacamae?: placamaeUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioNotebook?: notebookUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorNotebook?: notebookUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioProcessador?: processadorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorProcessador?: processadorUncheckedUpdateManyWithoutModificadorNestedInput
  }

  export type alunoUpsertWithoutModificadorGabineteInput = {
    update: XOR<alunoUpdateWithoutModificadorGabineteInput, alunoUncheckedUpdateWithoutModificadorGabineteInput>
    create: XOR<alunoCreateWithoutModificadorGabineteInput, alunoUncheckedCreateWithoutModificadorGabineteInput>
    where?: alunoWhereInput
  }

  export type alunoUpdateToOneWithWhereWithoutModificadorGabineteInput = {
    where?: alunoWhereInput
    data: XOR<alunoUpdateWithoutModificadorGabineteInput, alunoUncheckedUpdateWithoutModificadorGabineteInput>
  }

  export type alunoUpdateWithoutModificadorGabineteInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUpdateManyWithoutUsuarioNestedInput
    doacao?: doacaoUpdateManyWithoutDonatarioNestedInput
    doacaoUsuario?: doacaoUsuarioUpdateManyWithoutUsuarioNestedInput
    solicitacao?: solicitacaoUpdateManyWithoutUsuarioNestedInput
    modificadorTeclado?: tecladoUpdateManyWithoutModificadorNestedInput
    usuarioTeclado?: tecladoUpdateManyWithoutUsuarioNestedInput
    hd?: hdUpdateManyWithoutAlunoNestedInput
    modificadorHd?: hdUpdateManyWithoutModificadorNestedInput
    fonteDeAlimentacao?: fontedealimentacaoUpdateManyWithoutUsuarioNestedInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUpdateManyWithoutModificadorNestedInput
    gabinete?: gabineteUpdateManyWithoutUsuarioNestedInput
    monitor?: monitorUpdateManyWithoutUsuarioNestedInput
    modificadorMonitor?: monitorUpdateManyWithoutModificadorNestedInput
    usuarioMouse?: mouseUpdateManyWithoutUsuarioNestedInput
    modificadorMouse?: mouseUpdateManyWithoutModificadorNestedInput
    usuarioEstabilizador?: estabilizadorUpdateManyWithoutUsuarioNestedInput
    modificadorEstabilizador?: estabilizadorUpdateManyWithoutModificadorNestedInput
    usuarioImpressora?: impressoraUpdateManyWithoutUsuarioNestedInput
    modificadorImpressora?: impressoraUpdateManyWithoutModificadorNestedInput
    usuarioPlacamae?: placamaeUpdateManyWithoutUsuarioNestedInput
    modificadorPlacamae?: placamaeUpdateManyWithoutModificadorNestedInput
    usuarioNotebook?: notebookUpdateManyWithoutUsuarioNestedInput
    modificadorNotebook?: notebookUpdateManyWithoutModificadorNestedInput
    usuarioProcessador?: processadorUpdateManyWithoutUsuarioNestedInput
    modificadorProcessador?: processadorUpdateManyWithoutModificadorNestedInput
  }

  export type alunoUncheckedUpdateWithoutModificadorGabineteInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUncheckedUpdateManyWithoutUsuarioNestedInput
    doacao?: doacaoUncheckedUpdateManyWithoutDonatarioNestedInput
    doacaoUsuario?: doacaoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitacao?: solicitacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorTeclado?: tecladoUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioTeclado?: tecladoUncheckedUpdateManyWithoutUsuarioNestedInput
    hd?: hdUncheckedUpdateManyWithoutAlunoNestedInput
    modificadorHd?: hdUncheckedUpdateManyWithoutModificadorNestedInput
    fonteDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutModificadorNestedInput
    gabinete?: gabineteUncheckedUpdateManyWithoutUsuarioNestedInput
    monitor?: monitorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorMonitor?: monitorUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioMouse?: mouseUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorMouse?: mouseUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioEstabilizador?: estabilizadorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorEstabilizador?: estabilizadorUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioImpressora?: impressoraUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorImpressora?: impressoraUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioPlacamae?: placamaeUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorPlacamae?: placamaeUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioNotebook?: notebookUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorNotebook?: notebookUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioProcessador?: processadorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorProcessador?: processadorUncheckedUpdateManyWithoutModificadorNestedInput
  }

  export type doacaoCreateWithoutMonitoresInput = {
    name: string
    codigoDeReferencias: string
    descricao: string
    justificativa: string
    nomeOuEmpresa: string
    contato: string
    data: Date | string
    status: string
    createdAt?: Date | string
    donatario?: alunoCreateNestedOneWithoutDoacaoInput
    usuariofisico?: pessoafisicaCreateNestedOneWithoutDoacaoInput
    usuariojuridico?: pessoajuridicaCreateNestedOneWithoutDoacaoInput
    teclados?: tecladoCreateNestedManyWithoutDoacaoInput
    hds?: hdCreateNestedManyWithoutDoacaoInput
    fontesDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutDoacaoInput
    gabinetes?: gabineteCreateNestedManyWithoutDoacaoInput
    mouses?: mouseCreateNestedManyWithoutDoacaoInput
    estabilizadores?: estabilizadorCreateNestedManyWithoutDoacaoInput
    impressoras?: impressoraCreateNestedManyWithoutDoacaoInput
    placasmae?: placamaeCreateNestedManyWithoutDoacaoInput
    notebooks?: notebookCreateNestedManyWithoutDoacaoInput
    processadores?: processadorCreateNestedManyWithoutDoacaoInput
  }

  export type doacaoUncheckedCreateWithoutMonitoresInput = {
    id?: number
    name: string
    codigoDeReferencias: string
    descricao: string
    justificativa: string
    nomeOuEmpresa: string
    contato: string
    data: Date | string
    status: string
    donatarioId?: number | null
    usuariofisicoId?: number | null
    usuariojuridicoId?: number | null
    createdAt?: Date | string
    teclados?: tecladoUncheckedCreateNestedManyWithoutDoacaoInput
    hds?: hdUncheckedCreateNestedManyWithoutDoacaoInput
    fontesDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutDoacaoInput
    gabinetes?: gabineteUncheckedCreateNestedManyWithoutDoacaoInput
    mouses?: mouseUncheckedCreateNestedManyWithoutDoacaoInput
    estabilizadores?: estabilizadorUncheckedCreateNestedManyWithoutDoacaoInput
    impressoras?: impressoraUncheckedCreateNestedManyWithoutDoacaoInput
    placasmae?: placamaeUncheckedCreateNestedManyWithoutDoacaoInput
    notebooks?: notebookUncheckedCreateNestedManyWithoutDoacaoInput
    processadores?: processadorUncheckedCreateNestedManyWithoutDoacaoInput
  }

  export type doacaoCreateOrConnectWithoutMonitoresInput = {
    where: doacaoWhereUniqueInput
    create: XOR<doacaoCreateWithoutMonitoresInput, doacaoUncheckedCreateWithoutMonitoresInput>
  }

  export type descarteCreateWithoutMonitoresInput = {
    name: string
    descricao: string
    data: Date | string
    codigoDeReferencias: string
    createdAt?: Date | string
    usuario?: alunoCreateNestedOneWithoutDescarteInput
    teclados?: tecladoCreateNestedManyWithoutDescarteInput
    hds?: hdCreateNestedManyWithoutDescarteInput
    fontesDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutDescarteInput
    gabinetes?: gabineteCreateNestedManyWithoutDescarteInput
    mouses?: mouseCreateNestedManyWithoutDescarteInput
    estabilizadores?: estabilizadorCreateNestedManyWithoutDescarteInput
    impressoras?: impressoraCreateNestedManyWithoutDescarteInput
    placasmae?: placamaeCreateNestedManyWithoutDescarteInput
    notebooks?: notebookCreateNestedManyWithoutDescarteInput
    processadores?: processadorCreateNestedManyWithoutDescarteInput
  }

  export type descarteUncheckedCreateWithoutMonitoresInput = {
    id?: number
    name: string
    descricao: string
    data: Date | string
    codigoDeReferencias: string
    usuarioId?: number | null
    createdAt?: Date | string
    teclados?: tecladoUncheckedCreateNestedManyWithoutDescarteInput
    hds?: hdUncheckedCreateNestedManyWithoutDescarteInput
    fontesDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutDescarteInput
    gabinetes?: gabineteUncheckedCreateNestedManyWithoutDescarteInput
    mouses?: mouseUncheckedCreateNestedManyWithoutDescarteInput
    estabilizadores?: estabilizadorUncheckedCreateNestedManyWithoutDescarteInput
    impressoras?: impressoraUncheckedCreateNestedManyWithoutDescarteInput
    placasmae?: placamaeUncheckedCreateNestedManyWithoutDescarteInput
    notebooks?: notebookUncheckedCreateNestedManyWithoutDescarteInput
    processadores?: processadorUncheckedCreateNestedManyWithoutDescarteInput
  }

  export type descarteCreateOrConnectWithoutMonitoresInput = {
    where: descarteWhereUniqueInput
    create: XOR<descarteCreateWithoutMonitoresInput, descarteUncheckedCreateWithoutMonitoresInput>
  }

  export type alunoCreateWithoutMonitorInput = {
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    descarte?: descarteCreateNestedManyWithoutUsuarioInput
    doacao?: doacaoCreateNestedManyWithoutDonatarioInput
    doacaoUsuario?: doacaoUsuarioCreateNestedManyWithoutUsuarioInput
    solicitacao?: solicitacaoCreateNestedManyWithoutUsuarioInput
    modificadorTeclado?: tecladoCreateNestedManyWithoutModificadorInput
    usuarioTeclado?: tecladoCreateNestedManyWithoutUsuarioInput
    hd?: hdCreateNestedManyWithoutAlunoInput
    modificadorHd?: hdCreateNestedManyWithoutModificadorInput
    fonteDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutUsuarioInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutModificadorInput
    gabinete?: gabineteCreateNestedManyWithoutUsuarioInput
    modificadorGabinete?: gabineteCreateNestedManyWithoutModificadorInput
    modificadorMonitor?: monitorCreateNestedManyWithoutModificadorInput
    usuarioMouse?: mouseCreateNestedManyWithoutUsuarioInput
    modificadorMouse?: mouseCreateNestedManyWithoutModificadorInput
    usuarioEstabilizador?: estabilizadorCreateNestedManyWithoutUsuarioInput
    modificadorEstabilizador?: estabilizadorCreateNestedManyWithoutModificadorInput
    usuarioImpressora?: impressoraCreateNestedManyWithoutUsuarioInput
    modificadorImpressora?: impressoraCreateNestedManyWithoutModificadorInput
    usuarioPlacamae?: placamaeCreateNestedManyWithoutUsuarioInput
    modificadorPlacamae?: placamaeCreateNestedManyWithoutModificadorInput
    usuarioNotebook?: notebookCreateNestedManyWithoutUsuarioInput
    modificadorNotebook?: notebookCreateNestedManyWithoutModificadorInput
    usuarioProcessador?: processadorCreateNestedManyWithoutUsuarioInput
    modificadorProcessador?: processadorCreateNestedManyWithoutModificadorInput
  }

  export type alunoUncheckedCreateWithoutMonitorInput = {
    id?: number
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    descarte?: descarteUncheckedCreateNestedManyWithoutUsuarioInput
    doacao?: doacaoUncheckedCreateNestedManyWithoutDonatarioInput
    doacaoUsuario?: doacaoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    solicitacao?: solicitacaoUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorTeclado?: tecladoUncheckedCreateNestedManyWithoutModificadorInput
    usuarioTeclado?: tecladoUncheckedCreateNestedManyWithoutUsuarioInput
    hd?: hdUncheckedCreateNestedManyWithoutAlunoInput
    modificadorHd?: hdUncheckedCreateNestedManyWithoutModificadorInput
    fonteDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutModificadorInput
    gabinete?: gabineteUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorGabinete?: gabineteUncheckedCreateNestedManyWithoutModificadorInput
    modificadorMonitor?: monitorUncheckedCreateNestedManyWithoutModificadorInput
    usuarioMouse?: mouseUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorMouse?: mouseUncheckedCreateNestedManyWithoutModificadorInput
    usuarioEstabilizador?: estabilizadorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorEstabilizador?: estabilizadorUncheckedCreateNestedManyWithoutModificadorInput
    usuarioImpressora?: impressoraUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorImpressora?: impressoraUncheckedCreateNestedManyWithoutModificadorInput
    usuarioPlacamae?: placamaeUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorPlacamae?: placamaeUncheckedCreateNestedManyWithoutModificadorInput
    usuarioNotebook?: notebookUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorNotebook?: notebookUncheckedCreateNestedManyWithoutModificadorInput
    usuarioProcessador?: processadorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorProcessador?: processadorUncheckedCreateNestedManyWithoutModificadorInput
  }

  export type alunoCreateOrConnectWithoutMonitorInput = {
    where: alunoWhereUniqueInput
    create: XOR<alunoCreateWithoutMonitorInput, alunoUncheckedCreateWithoutMonitorInput>
  }

  export type alunoCreateWithoutModificadorMonitorInput = {
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    descarte?: descarteCreateNestedManyWithoutUsuarioInput
    doacao?: doacaoCreateNestedManyWithoutDonatarioInput
    doacaoUsuario?: doacaoUsuarioCreateNestedManyWithoutUsuarioInput
    solicitacao?: solicitacaoCreateNestedManyWithoutUsuarioInput
    modificadorTeclado?: tecladoCreateNestedManyWithoutModificadorInput
    usuarioTeclado?: tecladoCreateNestedManyWithoutUsuarioInput
    hd?: hdCreateNestedManyWithoutAlunoInput
    modificadorHd?: hdCreateNestedManyWithoutModificadorInput
    fonteDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutUsuarioInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutModificadorInput
    gabinete?: gabineteCreateNestedManyWithoutUsuarioInput
    modificadorGabinete?: gabineteCreateNestedManyWithoutModificadorInput
    monitor?: monitorCreateNestedManyWithoutUsuarioInput
    usuarioMouse?: mouseCreateNestedManyWithoutUsuarioInput
    modificadorMouse?: mouseCreateNestedManyWithoutModificadorInput
    usuarioEstabilizador?: estabilizadorCreateNestedManyWithoutUsuarioInput
    modificadorEstabilizador?: estabilizadorCreateNestedManyWithoutModificadorInput
    usuarioImpressora?: impressoraCreateNestedManyWithoutUsuarioInput
    modificadorImpressora?: impressoraCreateNestedManyWithoutModificadorInput
    usuarioPlacamae?: placamaeCreateNestedManyWithoutUsuarioInput
    modificadorPlacamae?: placamaeCreateNestedManyWithoutModificadorInput
    usuarioNotebook?: notebookCreateNestedManyWithoutUsuarioInput
    modificadorNotebook?: notebookCreateNestedManyWithoutModificadorInput
    usuarioProcessador?: processadorCreateNestedManyWithoutUsuarioInput
    modificadorProcessador?: processadorCreateNestedManyWithoutModificadorInput
  }

  export type alunoUncheckedCreateWithoutModificadorMonitorInput = {
    id?: number
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    descarte?: descarteUncheckedCreateNestedManyWithoutUsuarioInput
    doacao?: doacaoUncheckedCreateNestedManyWithoutDonatarioInput
    doacaoUsuario?: doacaoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    solicitacao?: solicitacaoUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorTeclado?: tecladoUncheckedCreateNestedManyWithoutModificadorInput
    usuarioTeclado?: tecladoUncheckedCreateNestedManyWithoutUsuarioInput
    hd?: hdUncheckedCreateNestedManyWithoutAlunoInput
    modificadorHd?: hdUncheckedCreateNestedManyWithoutModificadorInput
    fonteDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutModificadorInput
    gabinete?: gabineteUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorGabinete?: gabineteUncheckedCreateNestedManyWithoutModificadorInput
    monitor?: monitorUncheckedCreateNestedManyWithoutUsuarioInput
    usuarioMouse?: mouseUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorMouse?: mouseUncheckedCreateNestedManyWithoutModificadorInput
    usuarioEstabilizador?: estabilizadorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorEstabilizador?: estabilizadorUncheckedCreateNestedManyWithoutModificadorInput
    usuarioImpressora?: impressoraUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorImpressora?: impressoraUncheckedCreateNestedManyWithoutModificadorInput
    usuarioPlacamae?: placamaeUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorPlacamae?: placamaeUncheckedCreateNestedManyWithoutModificadorInput
    usuarioNotebook?: notebookUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorNotebook?: notebookUncheckedCreateNestedManyWithoutModificadorInput
    usuarioProcessador?: processadorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorProcessador?: processadorUncheckedCreateNestedManyWithoutModificadorInput
  }

  export type alunoCreateOrConnectWithoutModificadorMonitorInput = {
    where: alunoWhereUniqueInput
    create: XOR<alunoCreateWithoutModificadorMonitorInput, alunoUncheckedCreateWithoutModificadorMonitorInput>
  }

  export type doacaoUpsertWithoutMonitoresInput = {
    update: XOR<doacaoUpdateWithoutMonitoresInput, doacaoUncheckedUpdateWithoutMonitoresInput>
    create: XOR<doacaoCreateWithoutMonitoresInput, doacaoUncheckedCreateWithoutMonitoresInput>
    where?: doacaoWhereInput
  }

  export type doacaoUpdateToOneWithWhereWithoutMonitoresInput = {
    where?: doacaoWhereInput
    data: XOR<doacaoUpdateWithoutMonitoresInput, doacaoUncheckedUpdateWithoutMonitoresInput>
  }

  export type doacaoUpdateWithoutMonitoresInput = {
    name?: StringFieldUpdateOperationsInput | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    justificativa?: StringFieldUpdateOperationsInput | string
    nomeOuEmpresa?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    donatario?: alunoUpdateOneWithoutDoacaoNestedInput
    usuariofisico?: pessoafisicaUpdateOneWithoutDoacaoNestedInput
    usuariojuridico?: pessoajuridicaUpdateOneWithoutDoacaoNestedInput
    teclados?: tecladoUpdateManyWithoutDoacaoNestedInput
    hds?: hdUpdateManyWithoutDoacaoNestedInput
    fontesDeAlimentacao?: fontedealimentacaoUpdateManyWithoutDoacaoNestedInput
    gabinetes?: gabineteUpdateManyWithoutDoacaoNestedInput
    mouses?: mouseUpdateManyWithoutDoacaoNestedInput
    estabilizadores?: estabilizadorUpdateManyWithoutDoacaoNestedInput
    impressoras?: impressoraUpdateManyWithoutDoacaoNestedInput
    placasmae?: placamaeUpdateManyWithoutDoacaoNestedInput
    notebooks?: notebookUpdateManyWithoutDoacaoNestedInput
    processadores?: processadorUpdateManyWithoutDoacaoNestedInput
  }

  export type doacaoUncheckedUpdateWithoutMonitoresInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    justificativa?: StringFieldUpdateOperationsInput | string
    nomeOuEmpresa?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    donatarioId?: NullableIntFieldUpdateOperationsInput | number | null
    usuariofisicoId?: NullableIntFieldUpdateOperationsInput | number | null
    usuariojuridicoId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    teclados?: tecladoUncheckedUpdateManyWithoutDoacaoNestedInput
    hds?: hdUncheckedUpdateManyWithoutDoacaoNestedInput
    fontesDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutDoacaoNestedInput
    gabinetes?: gabineteUncheckedUpdateManyWithoutDoacaoNestedInput
    mouses?: mouseUncheckedUpdateManyWithoutDoacaoNestedInput
    estabilizadores?: estabilizadorUncheckedUpdateManyWithoutDoacaoNestedInput
    impressoras?: impressoraUncheckedUpdateManyWithoutDoacaoNestedInput
    placasmae?: placamaeUncheckedUpdateManyWithoutDoacaoNestedInput
    notebooks?: notebookUncheckedUpdateManyWithoutDoacaoNestedInput
    processadores?: processadorUncheckedUpdateManyWithoutDoacaoNestedInput
  }

  export type descarteUpsertWithoutMonitoresInput = {
    update: XOR<descarteUpdateWithoutMonitoresInput, descarteUncheckedUpdateWithoutMonitoresInput>
    create: XOR<descarteCreateWithoutMonitoresInput, descarteUncheckedCreateWithoutMonitoresInput>
    where?: descarteWhereInput
  }

  export type descarteUpdateToOneWithWhereWithoutMonitoresInput = {
    where?: descarteWhereInput
    data: XOR<descarteUpdateWithoutMonitoresInput, descarteUncheckedUpdateWithoutMonitoresInput>
  }

  export type descarteUpdateWithoutMonitoresInput = {
    name?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: alunoUpdateOneWithoutDescarteNestedInput
    teclados?: tecladoUpdateManyWithoutDescarteNestedInput
    hds?: hdUpdateManyWithoutDescarteNestedInput
    fontesDeAlimentacao?: fontedealimentacaoUpdateManyWithoutDescarteNestedInput
    gabinetes?: gabineteUpdateManyWithoutDescarteNestedInput
    mouses?: mouseUpdateManyWithoutDescarteNestedInput
    estabilizadores?: estabilizadorUpdateManyWithoutDescarteNestedInput
    impressoras?: impressoraUpdateManyWithoutDescarteNestedInput
    placasmae?: placamaeUpdateManyWithoutDescarteNestedInput
    notebooks?: notebookUpdateManyWithoutDescarteNestedInput
    processadores?: processadorUpdateManyWithoutDescarteNestedInput
  }

  export type descarteUncheckedUpdateWithoutMonitoresInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    teclados?: tecladoUncheckedUpdateManyWithoutDescarteNestedInput
    hds?: hdUncheckedUpdateManyWithoutDescarteNestedInput
    fontesDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutDescarteNestedInput
    gabinetes?: gabineteUncheckedUpdateManyWithoutDescarteNestedInput
    mouses?: mouseUncheckedUpdateManyWithoutDescarteNestedInput
    estabilizadores?: estabilizadorUncheckedUpdateManyWithoutDescarteNestedInput
    impressoras?: impressoraUncheckedUpdateManyWithoutDescarteNestedInput
    placasmae?: placamaeUncheckedUpdateManyWithoutDescarteNestedInput
    notebooks?: notebookUncheckedUpdateManyWithoutDescarteNestedInput
    processadores?: processadorUncheckedUpdateManyWithoutDescarteNestedInput
  }

  export type alunoUpsertWithoutMonitorInput = {
    update: XOR<alunoUpdateWithoutMonitorInput, alunoUncheckedUpdateWithoutMonitorInput>
    create: XOR<alunoCreateWithoutMonitorInput, alunoUncheckedCreateWithoutMonitorInput>
    where?: alunoWhereInput
  }

  export type alunoUpdateToOneWithWhereWithoutMonitorInput = {
    where?: alunoWhereInput
    data: XOR<alunoUpdateWithoutMonitorInput, alunoUncheckedUpdateWithoutMonitorInput>
  }

  export type alunoUpdateWithoutMonitorInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUpdateManyWithoutUsuarioNestedInput
    doacao?: doacaoUpdateManyWithoutDonatarioNestedInput
    doacaoUsuario?: doacaoUsuarioUpdateManyWithoutUsuarioNestedInput
    solicitacao?: solicitacaoUpdateManyWithoutUsuarioNestedInput
    modificadorTeclado?: tecladoUpdateManyWithoutModificadorNestedInput
    usuarioTeclado?: tecladoUpdateManyWithoutUsuarioNestedInput
    hd?: hdUpdateManyWithoutAlunoNestedInput
    modificadorHd?: hdUpdateManyWithoutModificadorNestedInput
    fonteDeAlimentacao?: fontedealimentacaoUpdateManyWithoutUsuarioNestedInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUpdateManyWithoutModificadorNestedInput
    gabinete?: gabineteUpdateManyWithoutUsuarioNestedInput
    modificadorGabinete?: gabineteUpdateManyWithoutModificadorNestedInput
    modificadorMonitor?: monitorUpdateManyWithoutModificadorNestedInput
    usuarioMouse?: mouseUpdateManyWithoutUsuarioNestedInput
    modificadorMouse?: mouseUpdateManyWithoutModificadorNestedInput
    usuarioEstabilizador?: estabilizadorUpdateManyWithoutUsuarioNestedInput
    modificadorEstabilizador?: estabilizadorUpdateManyWithoutModificadorNestedInput
    usuarioImpressora?: impressoraUpdateManyWithoutUsuarioNestedInput
    modificadorImpressora?: impressoraUpdateManyWithoutModificadorNestedInput
    usuarioPlacamae?: placamaeUpdateManyWithoutUsuarioNestedInput
    modificadorPlacamae?: placamaeUpdateManyWithoutModificadorNestedInput
    usuarioNotebook?: notebookUpdateManyWithoutUsuarioNestedInput
    modificadorNotebook?: notebookUpdateManyWithoutModificadorNestedInput
    usuarioProcessador?: processadorUpdateManyWithoutUsuarioNestedInput
    modificadorProcessador?: processadorUpdateManyWithoutModificadorNestedInput
  }

  export type alunoUncheckedUpdateWithoutMonitorInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUncheckedUpdateManyWithoutUsuarioNestedInput
    doacao?: doacaoUncheckedUpdateManyWithoutDonatarioNestedInput
    doacaoUsuario?: doacaoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitacao?: solicitacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorTeclado?: tecladoUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioTeclado?: tecladoUncheckedUpdateManyWithoutUsuarioNestedInput
    hd?: hdUncheckedUpdateManyWithoutAlunoNestedInput
    modificadorHd?: hdUncheckedUpdateManyWithoutModificadorNestedInput
    fonteDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutModificadorNestedInput
    gabinete?: gabineteUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorGabinete?: gabineteUncheckedUpdateManyWithoutModificadorNestedInput
    modificadorMonitor?: monitorUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioMouse?: mouseUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorMouse?: mouseUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioEstabilizador?: estabilizadorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorEstabilizador?: estabilizadorUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioImpressora?: impressoraUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorImpressora?: impressoraUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioPlacamae?: placamaeUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorPlacamae?: placamaeUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioNotebook?: notebookUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorNotebook?: notebookUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioProcessador?: processadorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorProcessador?: processadorUncheckedUpdateManyWithoutModificadorNestedInput
  }

  export type alunoUpsertWithoutModificadorMonitorInput = {
    update: XOR<alunoUpdateWithoutModificadorMonitorInput, alunoUncheckedUpdateWithoutModificadorMonitorInput>
    create: XOR<alunoCreateWithoutModificadorMonitorInput, alunoUncheckedCreateWithoutModificadorMonitorInput>
    where?: alunoWhereInput
  }

  export type alunoUpdateToOneWithWhereWithoutModificadorMonitorInput = {
    where?: alunoWhereInput
    data: XOR<alunoUpdateWithoutModificadorMonitorInput, alunoUncheckedUpdateWithoutModificadorMonitorInput>
  }

  export type alunoUpdateWithoutModificadorMonitorInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUpdateManyWithoutUsuarioNestedInput
    doacao?: doacaoUpdateManyWithoutDonatarioNestedInput
    doacaoUsuario?: doacaoUsuarioUpdateManyWithoutUsuarioNestedInput
    solicitacao?: solicitacaoUpdateManyWithoutUsuarioNestedInput
    modificadorTeclado?: tecladoUpdateManyWithoutModificadorNestedInput
    usuarioTeclado?: tecladoUpdateManyWithoutUsuarioNestedInput
    hd?: hdUpdateManyWithoutAlunoNestedInput
    modificadorHd?: hdUpdateManyWithoutModificadorNestedInput
    fonteDeAlimentacao?: fontedealimentacaoUpdateManyWithoutUsuarioNestedInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUpdateManyWithoutModificadorNestedInput
    gabinete?: gabineteUpdateManyWithoutUsuarioNestedInput
    modificadorGabinete?: gabineteUpdateManyWithoutModificadorNestedInput
    monitor?: monitorUpdateManyWithoutUsuarioNestedInput
    usuarioMouse?: mouseUpdateManyWithoutUsuarioNestedInput
    modificadorMouse?: mouseUpdateManyWithoutModificadorNestedInput
    usuarioEstabilizador?: estabilizadorUpdateManyWithoutUsuarioNestedInput
    modificadorEstabilizador?: estabilizadorUpdateManyWithoutModificadorNestedInput
    usuarioImpressora?: impressoraUpdateManyWithoutUsuarioNestedInput
    modificadorImpressora?: impressoraUpdateManyWithoutModificadorNestedInput
    usuarioPlacamae?: placamaeUpdateManyWithoutUsuarioNestedInput
    modificadorPlacamae?: placamaeUpdateManyWithoutModificadorNestedInput
    usuarioNotebook?: notebookUpdateManyWithoutUsuarioNestedInput
    modificadorNotebook?: notebookUpdateManyWithoutModificadorNestedInput
    usuarioProcessador?: processadorUpdateManyWithoutUsuarioNestedInput
    modificadorProcessador?: processadorUpdateManyWithoutModificadorNestedInput
  }

  export type alunoUncheckedUpdateWithoutModificadorMonitorInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUncheckedUpdateManyWithoutUsuarioNestedInput
    doacao?: doacaoUncheckedUpdateManyWithoutDonatarioNestedInput
    doacaoUsuario?: doacaoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitacao?: solicitacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorTeclado?: tecladoUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioTeclado?: tecladoUncheckedUpdateManyWithoutUsuarioNestedInput
    hd?: hdUncheckedUpdateManyWithoutAlunoNestedInput
    modificadorHd?: hdUncheckedUpdateManyWithoutModificadorNestedInput
    fonteDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutModificadorNestedInput
    gabinete?: gabineteUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorGabinete?: gabineteUncheckedUpdateManyWithoutModificadorNestedInput
    monitor?: monitorUncheckedUpdateManyWithoutUsuarioNestedInput
    usuarioMouse?: mouseUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorMouse?: mouseUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioEstabilizador?: estabilizadorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorEstabilizador?: estabilizadorUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioImpressora?: impressoraUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorImpressora?: impressoraUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioPlacamae?: placamaeUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorPlacamae?: placamaeUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioNotebook?: notebookUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorNotebook?: notebookUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioProcessador?: processadorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorProcessador?: processadorUncheckedUpdateManyWithoutModificadorNestedInput
  }

  export type doacaoCreateWithoutMousesInput = {
    name: string
    codigoDeReferencias: string
    descricao: string
    justificativa: string
    nomeOuEmpresa: string
    contato: string
    data: Date | string
    status: string
    createdAt?: Date | string
    donatario?: alunoCreateNestedOneWithoutDoacaoInput
    usuariofisico?: pessoafisicaCreateNestedOneWithoutDoacaoInput
    usuariojuridico?: pessoajuridicaCreateNestedOneWithoutDoacaoInput
    teclados?: tecladoCreateNestedManyWithoutDoacaoInput
    hds?: hdCreateNestedManyWithoutDoacaoInput
    fontesDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutDoacaoInput
    gabinetes?: gabineteCreateNestedManyWithoutDoacaoInput
    monitores?: monitorCreateNestedManyWithoutDoacaoInput
    estabilizadores?: estabilizadorCreateNestedManyWithoutDoacaoInput
    impressoras?: impressoraCreateNestedManyWithoutDoacaoInput
    placasmae?: placamaeCreateNestedManyWithoutDoacaoInput
    notebooks?: notebookCreateNestedManyWithoutDoacaoInput
    processadores?: processadorCreateNestedManyWithoutDoacaoInput
  }

  export type doacaoUncheckedCreateWithoutMousesInput = {
    id?: number
    name: string
    codigoDeReferencias: string
    descricao: string
    justificativa: string
    nomeOuEmpresa: string
    contato: string
    data: Date | string
    status: string
    donatarioId?: number | null
    usuariofisicoId?: number | null
    usuariojuridicoId?: number | null
    createdAt?: Date | string
    teclados?: tecladoUncheckedCreateNestedManyWithoutDoacaoInput
    hds?: hdUncheckedCreateNestedManyWithoutDoacaoInput
    fontesDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutDoacaoInput
    gabinetes?: gabineteUncheckedCreateNestedManyWithoutDoacaoInput
    monitores?: monitorUncheckedCreateNestedManyWithoutDoacaoInput
    estabilizadores?: estabilizadorUncheckedCreateNestedManyWithoutDoacaoInput
    impressoras?: impressoraUncheckedCreateNestedManyWithoutDoacaoInput
    placasmae?: placamaeUncheckedCreateNestedManyWithoutDoacaoInput
    notebooks?: notebookUncheckedCreateNestedManyWithoutDoacaoInput
    processadores?: processadorUncheckedCreateNestedManyWithoutDoacaoInput
  }

  export type doacaoCreateOrConnectWithoutMousesInput = {
    where: doacaoWhereUniqueInput
    create: XOR<doacaoCreateWithoutMousesInput, doacaoUncheckedCreateWithoutMousesInput>
  }

  export type descarteCreateWithoutMousesInput = {
    name: string
    descricao: string
    data: Date | string
    codigoDeReferencias: string
    createdAt?: Date | string
    usuario?: alunoCreateNestedOneWithoutDescarteInput
    teclados?: tecladoCreateNestedManyWithoutDescarteInput
    hds?: hdCreateNestedManyWithoutDescarteInput
    fontesDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutDescarteInput
    gabinetes?: gabineteCreateNestedManyWithoutDescarteInput
    monitores?: monitorCreateNestedManyWithoutDescarteInput
    estabilizadores?: estabilizadorCreateNestedManyWithoutDescarteInput
    impressoras?: impressoraCreateNestedManyWithoutDescarteInput
    placasmae?: placamaeCreateNestedManyWithoutDescarteInput
    notebooks?: notebookCreateNestedManyWithoutDescarteInput
    processadores?: processadorCreateNestedManyWithoutDescarteInput
  }

  export type descarteUncheckedCreateWithoutMousesInput = {
    id?: number
    name: string
    descricao: string
    data: Date | string
    codigoDeReferencias: string
    usuarioId?: number | null
    createdAt?: Date | string
    teclados?: tecladoUncheckedCreateNestedManyWithoutDescarteInput
    hds?: hdUncheckedCreateNestedManyWithoutDescarteInput
    fontesDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutDescarteInput
    gabinetes?: gabineteUncheckedCreateNestedManyWithoutDescarteInput
    monitores?: monitorUncheckedCreateNestedManyWithoutDescarteInput
    estabilizadores?: estabilizadorUncheckedCreateNestedManyWithoutDescarteInput
    impressoras?: impressoraUncheckedCreateNestedManyWithoutDescarteInput
    placasmae?: placamaeUncheckedCreateNestedManyWithoutDescarteInput
    notebooks?: notebookUncheckedCreateNestedManyWithoutDescarteInput
    processadores?: processadorUncheckedCreateNestedManyWithoutDescarteInput
  }

  export type descarteCreateOrConnectWithoutMousesInput = {
    where: descarteWhereUniqueInput
    create: XOR<descarteCreateWithoutMousesInput, descarteUncheckedCreateWithoutMousesInput>
  }

  export type alunoCreateWithoutUsuarioMouseInput = {
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    descarte?: descarteCreateNestedManyWithoutUsuarioInput
    doacao?: doacaoCreateNestedManyWithoutDonatarioInput
    doacaoUsuario?: doacaoUsuarioCreateNestedManyWithoutUsuarioInput
    solicitacao?: solicitacaoCreateNestedManyWithoutUsuarioInput
    modificadorTeclado?: tecladoCreateNestedManyWithoutModificadorInput
    usuarioTeclado?: tecladoCreateNestedManyWithoutUsuarioInput
    hd?: hdCreateNestedManyWithoutAlunoInput
    modificadorHd?: hdCreateNestedManyWithoutModificadorInput
    fonteDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutUsuarioInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutModificadorInput
    gabinete?: gabineteCreateNestedManyWithoutUsuarioInput
    modificadorGabinete?: gabineteCreateNestedManyWithoutModificadorInput
    monitor?: monitorCreateNestedManyWithoutUsuarioInput
    modificadorMonitor?: monitorCreateNestedManyWithoutModificadorInput
    modificadorMouse?: mouseCreateNestedManyWithoutModificadorInput
    usuarioEstabilizador?: estabilizadorCreateNestedManyWithoutUsuarioInput
    modificadorEstabilizador?: estabilizadorCreateNestedManyWithoutModificadorInput
    usuarioImpressora?: impressoraCreateNestedManyWithoutUsuarioInput
    modificadorImpressora?: impressoraCreateNestedManyWithoutModificadorInput
    usuarioPlacamae?: placamaeCreateNestedManyWithoutUsuarioInput
    modificadorPlacamae?: placamaeCreateNestedManyWithoutModificadorInput
    usuarioNotebook?: notebookCreateNestedManyWithoutUsuarioInput
    modificadorNotebook?: notebookCreateNestedManyWithoutModificadorInput
    usuarioProcessador?: processadorCreateNestedManyWithoutUsuarioInput
    modificadorProcessador?: processadorCreateNestedManyWithoutModificadorInput
  }

  export type alunoUncheckedCreateWithoutUsuarioMouseInput = {
    id?: number
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    descarte?: descarteUncheckedCreateNestedManyWithoutUsuarioInput
    doacao?: doacaoUncheckedCreateNestedManyWithoutDonatarioInput
    doacaoUsuario?: doacaoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    solicitacao?: solicitacaoUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorTeclado?: tecladoUncheckedCreateNestedManyWithoutModificadorInput
    usuarioTeclado?: tecladoUncheckedCreateNestedManyWithoutUsuarioInput
    hd?: hdUncheckedCreateNestedManyWithoutAlunoInput
    modificadorHd?: hdUncheckedCreateNestedManyWithoutModificadorInput
    fonteDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutModificadorInput
    gabinete?: gabineteUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorGabinete?: gabineteUncheckedCreateNestedManyWithoutModificadorInput
    monitor?: monitorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorMonitor?: monitorUncheckedCreateNestedManyWithoutModificadorInput
    modificadorMouse?: mouseUncheckedCreateNestedManyWithoutModificadorInput
    usuarioEstabilizador?: estabilizadorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorEstabilizador?: estabilizadorUncheckedCreateNestedManyWithoutModificadorInput
    usuarioImpressora?: impressoraUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorImpressora?: impressoraUncheckedCreateNestedManyWithoutModificadorInput
    usuarioPlacamae?: placamaeUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorPlacamae?: placamaeUncheckedCreateNestedManyWithoutModificadorInput
    usuarioNotebook?: notebookUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorNotebook?: notebookUncheckedCreateNestedManyWithoutModificadorInput
    usuarioProcessador?: processadorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorProcessador?: processadorUncheckedCreateNestedManyWithoutModificadorInput
  }

  export type alunoCreateOrConnectWithoutUsuarioMouseInput = {
    where: alunoWhereUniqueInput
    create: XOR<alunoCreateWithoutUsuarioMouseInput, alunoUncheckedCreateWithoutUsuarioMouseInput>
  }

  export type alunoCreateWithoutModificadorMouseInput = {
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    descarte?: descarteCreateNestedManyWithoutUsuarioInput
    doacao?: doacaoCreateNestedManyWithoutDonatarioInput
    doacaoUsuario?: doacaoUsuarioCreateNestedManyWithoutUsuarioInput
    solicitacao?: solicitacaoCreateNestedManyWithoutUsuarioInput
    modificadorTeclado?: tecladoCreateNestedManyWithoutModificadorInput
    usuarioTeclado?: tecladoCreateNestedManyWithoutUsuarioInput
    hd?: hdCreateNestedManyWithoutAlunoInput
    modificadorHd?: hdCreateNestedManyWithoutModificadorInput
    fonteDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutUsuarioInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutModificadorInput
    gabinete?: gabineteCreateNestedManyWithoutUsuarioInput
    modificadorGabinete?: gabineteCreateNestedManyWithoutModificadorInput
    monitor?: monitorCreateNestedManyWithoutUsuarioInput
    modificadorMonitor?: monitorCreateNestedManyWithoutModificadorInput
    usuarioMouse?: mouseCreateNestedManyWithoutUsuarioInput
    usuarioEstabilizador?: estabilizadorCreateNestedManyWithoutUsuarioInput
    modificadorEstabilizador?: estabilizadorCreateNestedManyWithoutModificadorInput
    usuarioImpressora?: impressoraCreateNestedManyWithoutUsuarioInput
    modificadorImpressora?: impressoraCreateNestedManyWithoutModificadorInput
    usuarioPlacamae?: placamaeCreateNestedManyWithoutUsuarioInput
    modificadorPlacamae?: placamaeCreateNestedManyWithoutModificadorInput
    usuarioNotebook?: notebookCreateNestedManyWithoutUsuarioInput
    modificadorNotebook?: notebookCreateNestedManyWithoutModificadorInput
    usuarioProcessador?: processadorCreateNestedManyWithoutUsuarioInput
    modificadorProcessador?: processadorCreateNestedManyWithoutModificadorInput
  }

  export type alunoUncheckedCreateWithoutModificadorMouseInput = {
    id?: number
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    descarte?: descarteUncheckedCreateNestedManyWithoutUsuarioInput
    doacao?: doacaoUncheckedCreateNestedManyWithoutDonatarioInput
    doacaoUsuario?: doacaoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    solicitacao?: solicitacaoUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorTeclado?: tecladoUncheckedCreateNestedManyWithoutModificadorInput
    usuarioTeclado?: tecladoUncheckedCreateNestedManyWithoutUsuarioInput
    hd?: hdUncheckedCreateNestedManyWithoutAlunoInput
    modificadorHd?: hdUncheckedCreateNestedManyWithoutModificadorInput
    fonteDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutModificadorInput
    gabinete?: gabineteUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorGabinete?: gabineteUncheckedCreateNestedManyWithoutModificadorInput
    monitor?: monitorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorMonitor?: monitorUncheckedCreateNestedManyWithoutModificadorInput
    usuarioMouse?: mouseUncheckedCreateNestedManyWithoutUsuarioInput
    usuarioEstabilizador?: estabilizadorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorEstabilizador?: estabilizadorUncheckedCreateNestedManyWithoutModificadorInput
    usuarioImpressora?: impressoraUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorImpressora?: impressoraUncheckedCreateNestedManyWithoutModificadorInput
    usuarioPlacamae?: placamaeUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorPlacamae?: placamaeUncheckedCreateNestedManyWithoutModificadorInput
    usuarioNotebook?: notebookUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorNotebook?: notebookUncheckedCreateNestedManyWithoutModificadorInput
    usuarioProcessador?: processadorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorProcessador?: processadorUncheckedCreateNestedManyWithoutModificadorInput
  }

  export type alunoCreateOrConnectWithoutModificadorMouseInput = {
    where: alunoWhereUniqueInput
    create: XOR<alunoCreateWithoutModificadorMouseInput, alunoUncheckedCreateWithoutModificadorMouseInput>
  }

  export type doacaoUpsertWithoutMousesInput = {
    update: XOR<doacaoUpdateWithoutMousesInput, doacaoUncheckedUpdateWithoutMousesInput>
    create: XOR<doacaoCreateWithoutMousesInput, doacaoUncheckedCreateWithoutMousesInput>
    where?: doacaoWhereInput
  }

  export type doacaoUpdateToOneWithWhereWithoutMousesInput = {
    where?: doacaoWhereInput
    data: XOR<doacaoUpdateWithoutMousesInput, doacaoUncheckedUpdateWithoutMousesInput>
  }

  export type doacaoUpdateWithoutMousesInput = {
    name?: StringFieldUpdateOperationsInput | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    justificativa?: StringFieldUpdateOperationsInput | string
    nomeOuEmpresa?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    donatario?: alunoUpdateOneWithoutDoacaoNestedInput
    usuariofisico?: pessoafisicaUpdateOneWithoutDoacaoNestedInput
    usuariojuridico?: pessoajuridicaUpdateOneWithoutDoacaoNestedInput
    teclados?: tecladoUpdateManyWithoutDoacaoNestedInput
    hds?: hdUpdateManyWithoutDoacaoNestedInput
    fontesDeAlimentacao?: fontedealimentacaoUpdateManyWithoutDoacaoNestedInput
    gabinetes?: gabineteUpdateManyWithoutDoacaoNestedInput
    monitores?: monitorUpdateManyWithoutDoacaoNestedInput
    estabilizadores?: estabilizadorUpdateManyWithoutDoacaoNestedInput
    impressoras?: impressoraUpdateManyWithoutDoacaoNestedInput
    placasmae?: placamaeUpdateManyWithoutDoacaoNestedInput
    notebooks?: notebookUpdateManyWithoutDoacaoNestedInput
    processadores?: processadorUpdateManyWithoutDoacaoNestedInput
  }

  export type doacaoUncheckedUpdateWithoutMousesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    justificativa?: StringFieldUpdateOperationsInput | string
    nomeOuEmpresa?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    donatarioId?: NullableIntFieldUpdateOperationsInput | number | null
    usuariofisicoId?: NullableIntFieldUpdateOperationsInput | number | null
    usuariojuridicoId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    teclados?: tecladoUncheckedUpdateManyWithoutDoacaoNestedInput
    hds?: hdUncheckedUpdateManyWithoutDoacaoNestedInput
    fontesDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutDoacaoNestedInput
    gabinetes?: gabineteUncheckedUpdateManyWithoutDoacaoNestedInput
    monitores?: monitorUncheckedUpdateManyWithoutDoacaoNestedInput
    estabilizadores?: estabilizadorUncheckedUpdateManyWithoutDoacaoNestedInput
    impressoras?: impressoraUncheckedUpdateManyWithoutDoacaoNestedInput
    placasmae?: placamaeUncheckedUpdateManyWithoutDoacaoNestedInput
    notebooks?: notebookUncheckedUpdateManyWithoutDoacaoNestedInput
    processadores?: processadorUncheckedUpdateManyWithoutDoacaoNestedInput
  }

  export type descarteUpsertWithoutMousesInput = {
    update: XOR<descarteUpdateWithoutMousesInput, descarteUncheckedUpdateWithoutMousesInput>
    create: XOR<descarteCreateWithoutMousesInput, descarteUncheckedCreateWithoutMousesInput>
    where?: descarteWhereInput
  }

  export type descarteUpdateToOneWithWhereWithoutMousesInput = {
    where?: descarteWhereInput
    data: XOR<descarteUpdateWithoutMousesInput, descarteUncheckedUpdateWithoutMousesInput>
  }

  export type descarteUpdateWithoutMousesInput = {
    name?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: alunoUpdateOneWithoutDescarteNestedInput
    teclados?: tecladoUpdateManyWithoutDescarteNestedInput
    hds?: hdUpdateManyWithoutDescarteNestedInput
    fontesDeAlimentacao?: fontedealimentacaoUpdateManyWithoutDescarteNestedInput
    gabinetes?: gabineteUpdateManyWithoutDescarteNestedInput
    monitores?: monitorUpdateManyWithoutDescarteNestedInput
    estabilizadores?: estabilizadorUpdateManyWithoutDescarteNestedInput
    impressoras?: impressoraUpdateManyWithoutDescarteNestedInput
    placasmae?: placamaeUpdateManyWithoutDescarteNestedInput
    notebooks?: notebookUpdateManyWithoutDescarteNestedInput
    processadores?: processadorUpdateManyWithoutDescarteNestedInput
  }

  export type descarteUncheckedUpdateWithoutMousesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    teclados?: tecladoUncheckedUpdateManyWithoutDescarteNestedInput
    hds?: hdUncheckedUpdateManyWithoutDescarteNestedInput
    fontesDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutDescarteNestedInput
    gabinetes?: gabineteUncheckedUpdateManyWithoutDescarteNestedInput
    monitores?: monitorUncheckedUpdateManyWithoutDescarteNestedInput
    estabilizadores?: estabilizadorUncheckedUpdateManyWithoutDescarteNestedInput
    impressoras?: impressoraUncheckedUpdateManyWithoutDescarteNestedInput
    placasmae?: placamaeUncheckedUpdateManyWithoutDescarteNestedInput
    notebooks?: notebookUncheckedUpdateManyWithoutDescarteNestedInput
    processadores?: processadorUncheckedUpdateManyWithoutDescarteNestedInput
  }

  export type alunoUpsertWithoutUsuarioMouseInput = {
    update: XOR<alunoUpdateWithoutUsuarioMouseInput, alunoUncheckedUpdateWithoutUsuarioMouseInput>
    create: XOR<alunoCreateWithoutUsuarioMouseInput, alunoUncheckedCreateWithoutUsuarioMouseInput>
    where?: alunoWhereInput
  }

  export type alunoUpdateToOneWithWhereWithoutUsuarioMouseInput = {
    where?: alunoWhereInput
    data: XOR<alunoUpdateWithoutUsuarioMouseInput, alunoUncheckedUpdateWithoutUsuarioMouseInput>
  }

  export type alunoUpdateWithoutUsuarioMouseInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUpdateManyWithoutUsuarioNestedInput
    doacao?: doacaoUpdateManyWithoutDonatarioNestedInput
    doacaoUsuario?: doacaoUsuarioUpdateManyWithoutUsuarioNestedInput
    solicitacao?: solicitacaoUpdateManyWithoutUsuarioNestedInput
    modificadorTeclado?: tecladoUpdateManyWithoutModificadorNestedInput
    usuarioTeclado?: tecladoUpdateManyWithoutUsuarioNestedInput
    hd?: hdUpdateManyWithoutAlunoNestedInput
    modificadorHd?: hdUpdateManyWithoutModificadorNestedInput
    fonteDeAlimentacao?: fontedealimentacaoUpdateManyWithoutUsuarioNestedInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUpdateManyWithoutModificadorNestedInput
    gabinete?: gabineteUpdateManyWithoutUsuarioNestedInput
    modificadorGabinete?: gabineteUpdateManyWithoutModificadorNestedInput
    monitor?: monitorUpdateManyWithoutUsuarioNestedInput
    modificadorMonitor?: monitorUpdateManyWithoutModificadorNestedInput
    modificadorMouse?: mouseUpdateManyWithoutModificadorNestedInput
    usuarioEstabilizador?: estabilizadorUpdateManyWithoutUsuarioNestedInput
    modificadorEstabilizador?: estabilizadorUpdateManyWithoutModificadorNestedInput
    usuarioImpressora?: impressoraUpdateManyWithoutUsuarioNestedInput
    modificadorImpressora?: impressoraUpdateManyWithoutModificadorNestedInput
    usuarioPlacamae?: placamaeUpdateManyWithoutUsuarioNestedInput
    modificadorPlacamae?: placamaeUpdateManyWithoutModificadorNestedInput
    usuarioNotebook?: notebookUpdateManyWithoutUsuarioNestedInput
    modificadorNotebook?: notebookUpdateManyWithoutModificadorNestedInput
    usuarioProcessador?: processadorUpdateManyWithoutUsuarioNestedInput
    modificadorProcessador?: processadorUpdateManyWithoutModificadorNestedInput
  }

  export type alunoUncheckedUpdateWithoutUsuarioMouseInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUncheckedUpdateManyWithoutUsuarioNestedInput
    doacao?: doacaoUncheckedUpdateManyWithoutDonatarioNestedInput
    doacaoUsuario?: doacaoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitacao?: solicitacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorTeclado?: tecladoUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioTeclado?: tecladoUncheckedUpdateManyWithoutUsuarioNestedInput
    hd?: hdUncheckedUpdateManyWithoutAlunoNestedInput
    modificadorHd?: hdUncheckedUpdateManyWithoutModificadorNestedInput
    fonteDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutModificadorNestedInput
    gabinete?: gabineteUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorGabinete?: gabineteUncheckedUpdateManyWithoutModificadorNestedInput
    monitor?: monitorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorMonitor?: monitorUncheckedUpdateManyWithoutModificadorNestedInput
    modificadorMouse?: mouseUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioEstabilizador?: estabilizadorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorEstabilizador?: estabilizadorUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioImpressora?: impressoraUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorImpressora?: impressoraUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioPlacamae?: placamaeUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorPlacamae?: placamaeUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioNotebook?: notebookUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorNotebook?: notebookUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioProcessador?: processadorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorProcessador?: processadorUncheckedUpdateManyWithoutModificadorNestedInput
  }

  export type alunoUpsertWithoutModificadorMouseInput = {
    update: XOR<alunoUpdateWithoutModificadorMouseInput, alunoUncheckedUpdateWithoutModificadorMouseInput>
    create: XOR<alunoCreateWithoutModificadorMouseInput, alunoUncheckedCreateWithoutModificadorMouseInput>
    where?: alunoWhereInput
  }

  export type alunoUpdateToOneWithWhereWithoutModificadorMouseInput = {
    where?: alunoWhereInput
    data: XOR<alunoUpdateWithoutModificadorMouseInput, alunoUncheckedUpdateWithoutModificadorMouseInput>
  }

  export type alunoUpdateWithoutModificadorMouseInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUpdateManyWithoutUsuarioNestedInput
    doacao?: doacaoUpdateManyWithoutDonatarioNestedInput
    doacaoUsuario?: doacaoUsuarioUpdateManyWithoutUsuarioNestedInput
    solicitacao?: solicitacaoUpdateManyWithoutUsuarioNestedInput
    modificadorTeclado?: tecladoUpdateManyWithoutModificadorNestedInput
    usuarioTeclado?: tecladoUpdateManyWithoutUsuarioNestedInput
    hd?: hdUpdateManyWithoutAlunoNestedInput
    modificadorHd?: hdUpdateManyWithoutModificadorNestedInput
    fonteDeAlimentacao?: fontedealimentacaoUpdateManyWithoutUsuarioNestedInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUpdateManyWithoutModificadorNestedInput
    gabinete?: gabineteUpdateManyWithoutUsuarioNestedInput
    modificadorGabinete?: gabineteUpdateManyWithoutModificadorNestedInput
    monitor?: monitorUpdateManyWithoutUsuarioNestedInput
    modificadorMonitor?: monitorUpdateManyWithoutModificadorNestedInput
    usuarioMouse?: mouseUpdateManyWithoutUsuarioNestedInput
    usuarioEstabilizador?: estabilizadorUpdateManyWithoutUsuarioNestedInput
    modificadorEstabilizador?: estabilizadorUpdateManyWithoutModificadorNestedInput
    usuarioImpressora?: impressoraUpdateManyWithoutUsuarioNestedInput
    modificadorImpressora?: impressoraUpdateManyWithoutModificadorNestedInput
    usuarioPlacamae?: placamaeUpdateManyWithoutUsuarioNestedInput
    modificadorPlacamae?: placamaeUpdateManyWithoutModificadorNestedInput
    usuarioNotebook?: notebookUpdateManyWithoutUsuarioNestedInput
    modificadorNotebook?: notebookUpdateManyWithoutModificadorNestedInput
    usuarioProcessador?: processadorUpdateManyWithoutUsuarioNestedInput
    modificadorProcessador?: processadorUpdateManyWithoutModificadorNestedInput
  }

  export type alunoUncheckedUpdateWithoutModificadorMouseInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUncheckedUpdateManyWithoutUsuarioNestedInput
    doacao?: doacaoUncheckedUpdateManyWithoutDonatarioNestedInput
    doacaoUsuario?: doacaoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitacao?: solicitacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorTeclado?: tecladoUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioTeclado?: tecladoUncheckedUpdateManyWithoutUsuarioNestedInput
    hd?: hdUncheckedUpdateManyWithoutAlunoNestedInput
    modificadorHd?: hdUncheckedUpdateManyWithoutModificadorNestedInput
    fonteDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutModificadorNestedInput
    gabinete?: gabineteUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorGabinete?: gabineteUncheckedUpdateManyWithoutModificadorNestedInput
    monitor?: monitorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorMonitor?: monitorUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioMouse?: mouseUncheckedUpdateManyWithoutUsuarioNestedInput
    usuarioEstabilizador?: estabilizadorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorEstabilizador?: estabilizadorUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioImpressora?: impressoraUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorImpressora?: impressoraUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioPlacamae?: placamaeUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorPlacamae?: placamaeUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioNotebook?: notebookUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorNotebook?: notebookUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioProcessador?: processadorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorProcessador?: processadorUncheckedUpdateManyWithoutModificadorNestedInput
  }

  export type doacaoCreateWithoutEstabilizadoresInput = {
    name: string
    codigoDeReferencias: string
    descricao: string
    justificativa: string
    nomeOuEmpresa: string
    contato: string
    data: Date | string
    status: string
    createdAt?: Date | string
    donatario?: alunoCreateNestedOneWithoutDoacaoInput
    usuariofisico?: pessoafisicaCreateNestedOneWithoutDoacaoInput
    usuariojuridico?: pessoajuridicaCreateNestedOneWithoutDoacaoInput
    teclados?: tecladoCreateNestedManyWithoutDoacaoInput
    hds?: hdCreateNestedManyWithoutDoacaoInput
    fontesDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutDoacaoInput
    gabinetes?: gabineteCreateNestedManyWithoutDoacaoInput
    monitores?: monitorCreateNestedManyWithoutDoacaoInput
    mouses?: mouseCreateNestedManyWithoutDoacaoInput
    impressoras?: impressoraCreateNestedManyWithoutDoacaoInput
    placasmae?: placamaeCreateNestedManyWithoutDoacaoInput
    notebooks?: notebookCreateNestedManyWithoutDoacaoInput
    processadores?: processadorCreateNestedManyWithoutDoacaoInput
  }

  export type doacaoUncheckedCreateWithoutEstabilizadoresInput = {
    id?: number
    name: string
    codigoDeReferencias: string
    descricao: string
    justificativa: string
    nomeOuEmpresa: string
    contato: string
    data: Date | string
    status: string
    donatarioId?: number | null
    usuariofisicoId?: number | null
    usuariojuridicoId?: number | null
    createdAt?: Date | string
    teclados?: tecladoUncheckedCreateNestedManyWithoutDoacaoInput
    hds?: hdUncheckedCreateNestedManyWithoutDoacaoInput
    fontesDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutDoacaoInput
    gabinetes?: gabineteUncheckedCreateNestedManyWithoutDoacaoInput
    monitores?: monitorUncheckedCreateNestedManyWithoutDoacaoInput
    mouses?: mouseUncheckedCreateNestedManyWithoutDoacaoInput
    impressoras?: impressoraUncheckedCreateNestedManyWithoutDoacaoInput
    placasmae?: placamaeUncheckedCreateNestedManyWithoutDoacaoInput
    notebooks?: notebookUncheckedCreateNestedManyWithoutDoacaoInput
    processadores?: processadorUncheckedCreateNestedManyWithoutDoacaoInput
  }

  export type doacaoCreateOrConnectWithoutEstabilizadoresInput = {
    where: doacaoWhereUniqueInput
    create: XOR<doacaoCreateWithoutEstabilizadoresInput, doacaoUncheckedCreateWithoutEstabilizadoresInput>
  }

  export type descarteCreateWithoutEstabilizadoresInput = {
    name: string
    descricao: string
    data: Date | string
    codigoDeReferencias: string
    createdAt?: Date | string
    usuario?: alunoCreateNestedOneWithoutDescarteInput
    teclados?: tecladoCreateNestedManyWithoutDescarteInput
    hds?: hdCreateNestedManyWithoutDescarteInput
    fontesDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutDescarteInput
    gabinetes?: gabineteCreateNestedManyWithoutDescarteInput
    monitores?: monitorCreateNestedManyWithoutDescarteInput
    mouses?: mouseCreateNestedManyWithoutDescarteInput
    impressoras?: impressoraCreateNestedManyWithoutDescarteInput
    placasmae?: placamaeCreateNestedManyWithoutDescarteInput
    notebooks?: notebookCreateNestedManyWithoutDescarteInput
    processadores?: processadorCreateNestedManyWithoutDescarteInput
  }

  export type descarteUncheckedCreateWithoutEstabilizadoresInput = {
    id?: number
    name: string
    descricao: string
    data: Date | string
    codigoDeReferencias: string
    usuarioId?: number | null
    createdAt?: Date | string
    teclados?: tecladoUncheckedCreateNestedManyWithoutDescarteInput
    hds?: hdUncheckedCreateNestedManyWithoutDescarteInput
    fontesDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutDescarteInput
    gabinetes?: gabineteUncheckedCreateNestedManyWithoutDescarteInput
    monitores?: monitorUncheckedCreateNestedManyWithoutDescarteInput
    mouses?: mouseUncheckedCreateNestedManyWithoutDescarteInput
    impressoras?: impressoraUncheckedCreateNestedManyWithoutDescarteInput
    placasmae?: placamaeUncheckedCreateNestedManyWithoutDescarteInput
    notebooks?: notebookUncheckedCreateNestedManyWithoutDescarteInput
    processadores?: processadorUncheckedCreateNestedManyWithoutDescarteInput
  }

  export type descarteCreateOrConnectWithoutEstabilizadoresInput = {
    where: descarteWhereUniqueInput
    create: XOR<descarteCreateWithoutEstabilizadoresInput, descarteUncheckedCreateWithoutEstabilizadoresInput>
  }

  export type alunoCreateWithoutUsuarioEstabilizadorInput = {
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    descarte?: descarteCreateNestedManyWithoutUsuarioInput
    doacao?: doacaoCreateNestedManyWithoutDonatarioInput
    doacaoUsuario?: doacaoUsuarioCreateNestedManyWithoutUsuarioInput
    solicitacao?: solicitacaoCreateNestedManyWithoutUsuarioInput
    modificadorTeclado?: tecladoCreateNestedManyWithoutModificadorInput
    usuarioTeclado?: tecladoCreateNestedManyWithoutUsuarioInput
    hd?: hdCreateNestedManyWithoutAlunoInput
    modificadorHd?: hdCreateNestedManyWithoutModificadorInput
    fonteDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutUsuarioInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutModificadorInput
    gabinete?: gabineteCreateNestedManyWithoutUsuarioInput
    modificadorGabinete?: gabineteCreateNestedManyWithoutModificadorInput
    monitor?: monitorCreateNestedManyWithoutUsuarioInput
    modificadorMonitor?: monitorCreateNestedManyWithoutModificadorInput
    usuarioMouse?: mouseCreateNestedManyWithoutUsuarioInput
    modificadorMouse?: mouseCreateNestedManyWithoutModificadorInput
    modificadorEstabilizador?: estabilizadorCreateNestedManyWithoutModificadorInput
    usuarioImpressora?: impressoraCreateNestedManyWithoutUsuarioInput
    modificadorImpressora?: impressoraCreateNestedManyWithoutModificadorInput
    usuarioPlacamae?: placamaeCreateNestedManyWithoutUsuarioInput
    modificadorPlacamae?: placamaeCreateNestedManyWithoutModificadorInput
    usuarioNotebook?: notebookCreateNestedManyWithoutUsuarioInput
    modificadorNotebook?: notebookCreateNestedManyWithoutModificadorInput
    usuarioProcessador?: processadorCreateNestedManyWithoutUsuarioInput
    modificadorProcessador?: processadorCreateNestedManyWithoutModificadorInput
  }

  export type alunoUncheckedCreateWithoutUsuarioEstabilizadorInput = {
    id?: number
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    descarte?: descarteUncheckedCreateNestedManyWithoutUsuarioInput
    doacao?: doacaoUncheckedCreateNestedManyWithoutDonatarioInput
    doacaoUsuario?: doacaoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    solicitacao?: solicitacaoUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorTeclado?: tecladoUncheckedCreateNestedManyWithoutModificadorInput
    usuarioTeclado?: tecladoUncheckedCreateNestedManyWithoutUsuarioInput
    hd?: hdUncheckedCreateNestedManyWithoutAlunoInput
    modificadorHd?: hdUncheckedCreateNestedManyWithoutModificadorInput
    fonteDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutModificadorInput
    gabinete?: gabineteUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorGabinete?: gabineteUncheckedCreateNestedManyWithoutModificadorInput
    monitor?: monitorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorMonitor?: monitorUncheckedCreateNestedManyWithoutModificadorInput
    usuarioMouse?: mouseUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorMouse?: mouseUncheckedCreateNestedManyWithoutModificadorInput
    modificadorEstabilizador?: estabilizadorUncheckedCreateNestedManyWithoutModificadorInput
    usuarioImpressora?: impressoraUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorImpressora?: impressoraUncheckedCreateNestedManyWithoutModificadorInput
    usuarioPlacamae?: placamaeUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorPlacamae?: placamaeUncheckedCreateNestedManyWithoutModificadorInput
    usuarioNotebook?: notebookUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorNotebook?: notebookUncheckedCreateNestedManyWithoutModificadorInput
    usuarioProcessador?: processadorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorProcessador?: processadorUncheckedCreateNestedManyWithoutModificadorInput
  }

  export type alunoCreateOrConnectWithoutUsuarioEstabilizadorInput = {
    where: alunoWhereUniqueInput
    create: XOR<alunoCreateWithoutUsuarioEstabilizadorInput, alunoUncheckedCreateWithoutUsuarioEstabilizadorInput>
  }

  export type alunoCreateWithoutModificadorEstabilizadorInput = {
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    descarte?: descarteCreateNestedManyWithoutUsuarioInput
    doacao?: doacaoCreateNestedManyWithoutDonatarioInput
    doacaoUsuario?: doacaoUsuarioCreateNestedManyWithoutUsuarioInput
    solicitacao?: solicitacaoCreateNestedManyWithoutUsuarioInput
    modificadorTeclado?: tecladoCreateNestedManyWithoutModificadorInput
    usuarioTeclado?: tecladoCreateNestedManyWithoutUsuarioInput
    hd?: hdCreateNestedManyWithoutAlunoInput
    modificadorHd?: hdCreateNestedManyWithoutModificadorInput
    fonteDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutUsuarioInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutModificadorInput
    gabinete?: gabineteCreateNestedManyWithoutUsuarioInput
    modificadorGabinete?: gabineteCreateNestedManyWithoutModificadorInput
    monitor?: monitorCreateNestedManyWithoutUsuarioInput
    modificadorMonitor?: monitorCreateNestedManyWithoutModificadorInput
    usuarioMouse?: mouseCreateNestedManyWithoutUsuarioInput
    modificadorMouse?: mouseCreateNestedManyWithoutModificadorInput
    usuarioEstabilizador?: estabilizadorCreateNestedManyWithoutUsuarioInput
    usuarioImpressora?: impressoraCreateNestedManyWithoutUsuarioInput
    modificadorImpressora?: impressoraCreateNestedManyWithoutModificadorInput
    usuarioPlacamae?: placamaeCreateNestedManyWithoutUsuarioInput
    modificadorPlacamae?: placamaeCreateNestedManyWithoutModificadorInput
    usuarioNotebook?: notebookCreateNestedManyWithoutUsuarioInput
    modificadorNotebook?: notebookCreateNestedManyWithoutModificadorInput
    usuarioProcessador?: processadorCreateNestedManyWithoutUsuarioInput
    modificadorProcessador?: processadorCreateNestedManyWithoutModificadorInput
  }

  export type alunoUncheckedCreateWithoutModificadorEstabilizadorInput = {
    id?: number
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    descarte?: descarteUncheckedCreateNestedManyWithoutUsuarioInput
    doacao?: doacaoUncheckedCreateNestedManyWithoutDonatarioInput
    doacaoUsuario?: doacaoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    solicitacao?: solicitacaoUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorTeclado?: tecladoUncheckedCreateNestedManyWithoutModificadorInput
    usuarioTeclado?: tecladoUncheckedCreateNestedManyWithoutUsuarioInput
    hd?: hdUncheckedCreateNestedManyWithoutAlunoInput
    modificadorHd?: hdUncheckedCreateNestedManyWithoutModificadorInput
    fonteDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutModificadorInput
    gabinete?: gabineteUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorGabinete?: gabineteUncheckedCreateNestedManyWithoutModificadorInput
    monitor?: monitorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorMonitor?: monitorUncheckedCreateNestedManyWithoutModificadorInput
    usuarioMouse?: mouseUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorMouse?: mouseUncheckedCreateNestedManyWithoutModificadorInput
    usuarioEstabilizador?: estabilizadorUncheckedCreateNestedManyWithoutUsuarioInput
    usuarioImpressora?: impressoraUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorImpressora?: impressoraUncheckedCreateNestedManyWithoutModificadorInput
    usuarioPlacamae?: placamaeUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorPlacamae?: placamaeUncheckedCreateNestedManyWithoutModificadorInput
    usuarioNotebook?: notebookUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorNotebook?: notebookUncheckedCreateNestedManyWithoutModificadorInput
    usuarioProcessador?: processadorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorProcessador?: processadorUncheckedCreateNestedManyWithoutModificadorInput
  }

  export type alunoCreateOrConnectWithoutModificadorEstabilizadorInput = {
    where: alunoWhereUniqueInput
    create: XOR<alunoCreateWithoutModificadorEstabilizadorInput, alunoUncheckedCreateWithoutModificadorEstabilizadorInput>
  }

  export type doacaoUpsertWithoutEstabilizadoresInput = {
    update: XOR<doacaoUpdateWithoutEstabilizadoresInput, doacaoUncheckedUpdateWithoutEstabilizadoresInput>
    create: XOR<doacaoCreateWithoutEstabilizadoresInput, doacaoUncheckedCreateWithoutEstabilizadoresInput>
    where?: doacaoWhereInput
  }

  export type doacaoUpdateToOneWithWhereWithoutEstabilizadoresInput = {
    where?: doacaoWhereInput
    data: XOR<doacaoUpdateWithoutEstabilizadoresInput, doacaoUncheckedUpdateWithoutEstabilizadoresInput>
  }

  export type doacaoUpdateWithoutEstabilizadoresInput = {
    name?: StringFieldUpdateOperationsInput | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    justificativa?: StringFieldUpdateOperationsInput | string
    nomeOuEmpresa?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    donatario?: alunoUpdateOneWithoutDoacaoNestedInput
    usuariofisico?: pessoafisicaUpdateOneWithoutDoacaoNestedInput
    usuariojuridico?: pessoajuridicaUpdateOneWithoutDoacaoNestedInput
    teclados?: tecladoUpdateManyWithoutDoacaoNestedInput
    hds?: hdUpdateManyWithoutDoacaoNestedInput
    fontesDeAlimentacao?: fontedealimentacaoUpdateManyWithoutDoacaoNestedInput
    gabinetes?: gabineteUpdateManyWithoutDoacaoNestedInput
    monitores?: monitorUpdateManyWithoutDoacaoNestedInput
    mouses?: mouseUpdateManyWithoutDoacaoNestedInput
    impressoras?: impressoraUpdateManyWithoutDoacaoNestedInput
    placasmae?: placamaeUpdateManyWithoutDoacaoNestedInput
    notebooks?: notebookUpdateManyWithoutDoacaoNestedInput
    processadores?: processadorUpdateManyWithoutDoacaoNestedInput
  }

  export type doacaoUncheckedUpdateWithoutEstabilizadoresInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    justificativa?: StringFieldUpdateOperationsInput | string
    nomeOuEmpresa?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    donatarioId?: NullableIntFieldUpdateOperationsInput | number | null
    usuariofisicoId?: NullableIntFieldUpdateOperationsInput | number | null
    usuariojuridicoId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    teclados?: tecladoUncheckedUpdateManyWithoutDoacaoNestedInput
    hds?: hdUncheckedUpdateManyWithoutDoacaoNestedInput
    fontesDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutDoacaoNestedInput
    gabinetes?: gabineteUncheckedUpdateManyWithoutDoacaoNestedInput
    monitores?: monitorUncheckedUpdateManyWithoutDoacaoNestedInput
    mouses?: mouseUncheckedUpdateManyWithoutDoacaoNestedInput
    impressoras?: impressoraUncheckedUpdateManyWithoutDoacaoNestedInput
    placasmae?: placamaeUncheckedUpdateManyWithoutDoacaoNestedInput
    notebooks?: notebookUncheckedUpdateManyWithoutDoacaoNestedInput
    processadores?: processadorUncheckedUpdateManyWithoutDoacaoNestedInput
  }

  export type descarteUpsertWithoutEstabilizadoresInput = {
    update: XOR<descarteUpdateWithoutEstabilizadoresInput, descarteUncheckedUpdateWithoutEstabilizadoresInput>
    create: XOR<descarteCreateWithoutEstabilizadoresInput, descarteUncheckedCreateWithoutEstabilizadoresInput>
    where?: descarteWhereInput
  }

  export type descarteUpdateToOneWithWhereWithoutEstabilizadoresInput = {
    where?: descarteWhereInput
    data: XOR<descarteUpdateWithoutEstabilizadoresInput, descarteUncheckedUpdateWithoutEstabilizadoresInput>
  }

  export type descarteUpdateWithoutEstabilizadoresInput = {
    name?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: alunoUpdateOneWithoutDescarteNestedInput
    teclados?: tecladoUpdateManyWithoutDescarteNestedInput
    hds?: hdUpdateManyWithoutDescarteNestedInput
    fontesDeAlimentacao?: fontedealimentacaoUpdateManyWithoutDescarteNestedInput
    gabinetes?: gabineteUpdateManyWithoutDescarteNestedInput
    monitores?: monitorUpdateManyWithoutDescarteNestedInput
    mouses?: mouseUpdateManyWithoutDescarteNestedInput
    impressoras?: impressoraUpdateManyWithoutDescarteNestedInput
    placasmae?: placamaeUpdateManyWithoutDescarteNestedInput
    notebooks?: notebookUpdateManyWithoutDescarteNestedInput
    processadores?: processadorUpdateManyWithoutDescarteNestedInput
  }

  export type descarteUncheckedUpdateWithoutEstabilizadoresInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    teclados?: tecladoUncheckedUpdateManyWithoutDescarteNestedInput
    hds?: hdUncheckedUpdateManyWithoutDescarteNestedInput
    fontesDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutDescarteNestedInput
    gabinetes?: gabineteUncheckedUpdateManyWithoutDescarteNestedInput
    monitores?: monitorUncheckedUpdateManyWithoutDescarteNestedInput
    mouses?: mouseUncheckedUpdateManyWithoutDescarteNestedInput
    impressoras?: impressoraUncheckedUpdateManyWithoutDescarteNestedInput
    placasmae?: placamaeUncheckedUpdateManyWithoutDescarteNestedInput
    notebooks?: notebookUncheckedUpdateManyWithoutDescarteNestedInput
    processadores?: processadorUncheckedUpdateManyWithoutDescarteNestedInput
  }

  export type alunoUpsertWithoutUsuarioEstabilizadorInput = {
    update: XOR<alunoUpdateWithoutUsuarioEstabilizadorInput, alunoUncheckedUpdateWithoutUsuarioEstabilizadorInput>
    create: XOR<alunoCreateWithoutUsuarioEstabilizadorInput, alunoUncheckedCreateWithoutUsuarioEstabilizadorInput>
    where?: alunoWhereInput
  }

  export type alunoUpdateToOneWithWhereWithoutUsuarioEstabilizadorInput = {
    where?: alunoWhereInput
    data: XOR<alunoUpdateWithoutUsuarioEstabilizadorInput, alunoUncheckedUpdateWithoutUsuarioEstabilizadorInput>
  }

  export type alunoUpdateWithoutUsuarioEstabilizadorInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUpdateManyWithoutUsuarioNestedInput
    doacao?: doacaoUpdateManyWithoutDonatarioNestedInput
    doacaoUsuario?: doacaoUsuarioUpdateManyWithoutUsuarioNestedInput
    solicitacao?: solicitacaoUpdateManyWithoutUsuarioNestedInput
    modificadorTeclado?: tecladoUpdateManyWithoutModificadorNestedInput
    usuarioTeclado?: tecladoUpdateManyWithoutUsuarioNestedInput
    hd?: hdUpdateManyWithoutAlunoNestedInput
    modificadorHd?: hdUpdateManyWithoutModificadorNestedInput
    fonteDeAlimentacao?: fontedealimentacaoUpdateManyWithoutUsuarioNestedInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUpdateManyWithoutModificadorNestedInput
    gabinete?: gabineteUpdateManyWithoutUsuarioNestedInput
    modificadorGabinete?: gabineteUpdateManyWithoutModificadorNestedInput
    monitor?: monitorUpdateManyWithoutUsuarioNestedInput
    modificadorMonitor?: monitorUpdateManyWithoutModificadorNestedInput
    usuarioMouse?: mouseUpdateManyWithoutUsuarioNestedInput
    modificadorMouse?: mouseUpdateManyWithoutModificadorNestedInput
    modificadorEstabilizador?: estabilizadorUpdateManyWithoutModificadorNestedInput
    usuarioImpressora?: impressoraUpdateManyWithoutUsuarioNestedInput
    modificadorImpressora?: impressoraUpdateManyWithoutModificadorNestedInput
    usuarioPlacamae?: placamaeUpdateManyWithoutUsuarioNestedInput
    modificadorPlacamae?: placamaeUpdateManyWithoutModificadorNestedInput
    usuarioNotebook?: notebookUpdateManyWithoutUsuarioNestedInput
    modificadorNotebook?: notebookUpdateManyWithoutModificadorNestedInput
    usuarioProcessador?: processadorUpdateManyWithoutUsuarioNestedInput
    modificadorProcessador?: processadorUpdateManyWithoutModificadorNestedInput
  }

  export type alunoUncheckedUpdateWithoutUsuarioEstabilizadorInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUncheckedUpdateManyWithoutUsuarioNestedInput
    doacao?: doacaoUncheckedUpdateManyWithoutDonatarioNestedInput
    doacaoUsuario?: doacaoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitacao?: solicitacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorTeclado?: tecladoUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioTeclado?: tecladoUncheckedUpdateManyWithoutUsuarioNestedInput
    hd?: hdUncheckedUpdateManyWithoutAlunoNestedInput
    modificadorHd?: hdUncheckedUpdateManyWithoutModificadorNestedInput
    fonteDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutModificadorNestedInput
    gabinete?: gabineteUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorGabinete?: gabineteUncheckedUpdateManyWithoutModificadorNestedInput
    monitor?: monitorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorMonitor?: monitorUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioMouse?: mouseUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorMouse?: mouseUncheckedUpdateManyWithoutModificadorNestedInput
    modificadorEstabilizador?: estabilizadorUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioImpressora?: impressoraUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorImpressora?: impressoraUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioPlacamae?: placamaeUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorPlacamae?: placamaeUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioNotebook?: notebookUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorNotebook?: notebookUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioProcessador?: processadorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorProcessador?: processadorUncheckedUpdateManyWithoutModificadorNestedInput
  }

  export type alunoUpsertWithoutModificadorEstabilizadorInput = {
    update: XOR<alunoUpdateWithoutModificadorEstabilizadorInput, alunoUncheckedUpdateWithoutModificadorEstabilizadorInput>
    create: XOR<alunoCreateWithoutModificadorEstabilizadorInput, alunoUncheckedCreateWithoutModificadorEstabilizadorInput>
    where?: alunoWhereInput
  }

  export type alunoUpdateToOneWithWhereWithoutModificadorEstabilizadorInput = {
    where?: alunoWhereInput
    data: XOR<alunoUpdateWithoutModificadorEstabilizadorInput, alunoUncheckedUpdateWithoutModificadorEstabilizadorInput>
  }

  export type alunoUpdateWithoutModificadorEstabilizadorInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUpdateManyWithoutUsuarioNestedInput
    doacao?: doacaoUpdateManyWithoutDonatarioNestedInput
    doacaoUsuario?: doacaoUsuarioUpdateManyWithoutUsuarioNestedInput
    solicitacao?: solicitacaoUpdateManyWithoutUsuarioNestedInput
    modificadorTeclado?: tecladoUpdateManyWithoutModificadorNestedInput
    usuarioTeclado?: tecladoUpdateManyWithoutUsuarioNestedInput
    hd?: hdUpdateManyWithoutAlunoNestedInput
    modificadorHd?: hdUpdateManyWithoutModificadorNestedInput
    fonteDeAlimentacao?: fontedealimentacaoUpdateManyWithoutUsuarioNestedInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUpdateManyWithoutModificadorNestedInput
    gabinete?: gabineteUpdateManyWithoutUsuarioNestedInput
    modificadorGabinete?: gabineteUpdateManyWithoutModificadorNestedInput
    monitor?: monitorUpdateManyWithoutUsuarioNestedInput
    modificadorMonitor?: monitorUpdateManyWithoutModificadorNestedInput
    usuarioMouse?: mouseUpdateManyWithoutUsuarioNestedInput
    modificadorMouse?: mouseUpdateManyWithoutModificadorNestedInput
    usuarioEstabilizador?: estabilizadorUpdateManyWithoutUsuarioNestedInput
    usuarioImpressora?: impressoraUpdateManyWithoutUsuarioNestedInput
    modificadorImpressora?: impressoraUpdateManyWithoutModificadorNestedInput
    usuarioPlacamae?: placamaeUpdateManyWithoutUsuarioNestedInput
    modificadorPlacamae?: placamaeUpdateManyWithoutModificadorNestedInput
    usuarioNotebook?: notebookUpdateManyWithoutUsuarioNestedInput
    modificadorNotebook?: notebookUpdateManyWithoutModificadorNestedInput
    usuarioProcessador?: processadorUpdateManyWithoutUsuarioNestedInput
    modificadorProcessador?: processadorUpdateManyWithoutModificadorNestedInput
  }

  export type alunoUncheckedUpdateWithoutModificadorEstabilizadorInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUncheckedUpdateManyWithoutUsuarioNestedInput
    doacao?: doacaoUncheckedUpdateManyWithoutDonatarioNestedInput
    doacaoUsuario?: doacaoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitacao?: solicitacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorTeclado?: tecladoUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioTeclado?: tecladoUncheckedUpdateManyWithoutUsuarioNestedInput
    hd?: hdUncheckedUpdateManyWithoutAlunoNestedInput
    modificadorHd?: hdUncheckedUpdateManyWithoutModificadorNestedInput
    fonteDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutModificadorNestedInput
    gabinete?: gabineteUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorGabinete?: gabineteUncheckedUpdateManyWithoutModificadorNestedInput
    monitor?: monitorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorMonitor?: monitorUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioMouse?: mouseUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorMouse?: mouseUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioEstabilizador?: estabilizadorUncheckedUpdateManyWithoutUsuarioNestedInput
    usuarioImpressora?: impressoraUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorImpressora?: impressoraUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioPlacamae?: placamaeUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorPlacamae?: placamaeUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioNotebook?: notebookUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorNotebook?: notebookUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioProcessador?: processadorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorProcessador?: processadorUncheckedUpdateManyWithoutModificadorNestedInput
  }

  export type doacaoCreateWithoutImpressorasInput = {
    name: string
    codigoDeReferencias: string
    descricao: string
    justificativa: string
    nomeOuEmpresa: string
    contato: string
    data: Date | string
    status: string
    createdAt?: Date | string
    donatario?: alunoCreateNestedOneWithoutDoacaoInput
    usuariofisico?: pessoafisicaCreateNestedOneWithoutDoacaoInput
    usuariojuridico?: pessoajuridicaCreateNestedOneWithoutDoacaoInput
    teclados?: tecladoCreateNestedManyWithoutDoacaoInput
    hds?: hdCreateNestedManyWithoutDoacaoInput
    fontesDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutDoacaoInput
    gabinetes?: gabineteCreateNestedManyWithoutDoacaoInput
    monitores?: monitorCreateNestedManyWithoutDoacaoInput
    mouses?: mouseCreateNestedManyWithoutDoacaoInput
    estabilizadores?: estabilizadorCreateNestedManyWithoutDoacaoInput
    placasmae?: placamaeCreateNestedManyWithoutDoacaoInput
    notebooks?: notebookCreateNestedManyWithoutDoacaoInput
    processadores?: processadorCreateNestedManyWithoutDoacaoInput
  }

  export type doacaoUncheckedCreateWithoutImpressorasInput = {
    id?: number
    name: string
    codigoDeReferencias: string
    descricao: string
    justificativa: string
    nomeOuEmpresa: string
    contato: string
    data: Date | string
    status: string
    donatarioId?: number | null
    usuariofisicoId?: number | null
    usuariojuridicoId?: number | null
    createdAt?: Date | string
    teclados?: tecladoUncheckedCreateNestedManyWithoutDoacaoInput
    hds?: hdUncheckedCreateNestedManyWithoutDoacaoInput
    fontesDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutDoacaoInput
    gabinetes?: gabineteUncheckedCreateNestedManyWithoutDoacaoInput
    monitores?: monitorUncheckedCreateNestedManyWithoutDoacaoInput
    mouses?: mouseUncheckedCreateNestedManyWithoutDoacaoInput
    estabilizadores?: estabilizadorUncheckedCreateNestedManyWithoutDoacaoInput
    placasmae?: placamaeUncheckedCreateNestedManyWithoutDoacaoInput
    notebooks?: notebookUncheckedCreateNestedManyWithoutDoacaoInput
    processadores?: processadorUncheckedCreateNestedManyWithoutDoacaoInput
  }

  export type doacaoCreateOrConnectWithoutImpressorasInput = {
    where: doacaoWhereUniqueInput
    create: XOR<doacaoCreateWithoutImpressorasInput, doacaoUncheckedCreateWithoutImpressorasInput>
  }

  export type descarteCreateWithoutImpressorasInput = {
    name: string
    descricao: string
    data: Date | string
    codigoDeReferencias: string
    createdAt?: Date | string
    usuario?: alunoCreateNestedOneWithoutDescarteInput
    teclados?: tecladoCreateNestedManyWithoutDescarteInput
    hds?: hdCreateNestedManyWithoutDescarteInput
    fontesDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutDescarteInput
    gabinetes?: gabineteCreateNestedManyWithoutDescarteInput
    monitores?: monitorCreateNestedManyWithoutDescarteInput
    mouses?: mouseCreateNestedManyWithoutDescarteInput
    estabilizadores?: estabilizadorCreateNestedManyWithoutDescarteInput
    placasmae?: placamaeCreateNestedManyWithoutDescarteInput
    notebooks?: notebookCreateNestedManyWithoutDescarteInput
    processadores?: processadorCreateNestedManyWithoutDescarteInput
  }

  export type descarteUncheckedCreateWithoutImpressorasInput = {
    id?: number
    name: string
    descricao: string
    data: Date | string
    codigoDeReferencias: string
    usuarioId?: number | null
    createdAt?: Date | string
    teclados?: tecladoUncheckedCreateNestedManyWithoutDescarteInput
    hds?: hdUncheckedCreateNestedManyWithoutDescarteInput
    fontesDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutDescarteInput
    gabinetes?: gabineteUncheckedCreateNestedManyWithoutDescarteInput
    monitores?: monitorUncheckedCreateNestedManyWithoutDescarteInput
    mouses?: mouseUncheckedCreateNestedManyWithoutDescarteInput
    estabilizadores?: estabilizadorUncheckedCreateNestedManyWithoutDescarteInput
    placasmae?: placamaeUncheckedCreateNestedManyWithoutDescarteInput
    notebooks?: notebookUncheckedCreateNestedManyWithoutDescarteInput
    processadores?: processadorUncheckedCreateNestedManyWithoutDescarteInput
  }

  export type descarteCreateOrConnectWithoutImpressorasInput = {
    where: descarteWhereUniqueInput
    create: XOR<descarteCreateWithoutImpressorasInput, descarteUncheckedCreateWithoutImpressorasInput>
  }

  export type alunoCreateWithoutUsuarioImpressoraInput = {
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    descarte?: descarteCreateNestedManyWithoutUsuarioInput
    doacao?: doacaoCreateNestedManyWithoutDonatarioInput
    doacaoUsuario?: doacaoUsuarioCreateNestedManyWithoutUsuarioInput
    solicitacao?: solicitacaoCreateNestedManyWithoutUsuarioInput
    modificadorTeclado?: tecladoCreateNestedManyWithoutModificadorInput
    usuarioTeclado?: tecladoCreateNestedManyWithoutUsuarioInput
    hd?: hdCreateNestedManyWithoutAlunoInput
    modificadorHd?: hdCreateNestedManyWithoutModificadorInput
    fonteDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutUsuarioInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutModificadorInput
    gabinete?: gabineteCreateNestedManyWithoutUsuarioInput
    modificadorGabinete?: gabineteCreateNestedManyWithoutModificadorInput
    monitor?: monitorCreateNestedManyWithoutUsuarioInput
    modificadorMonitor?: monitorCreateNestedManyWithoutModificadorInput
    usuarioMouse?: mouseCreateNestedManyWithoutUsuarioInput
    modificadorMouse?: mouseCreateNestedManyWithoutModificadorInput
    usuarioEstabilizador?: estabilizadorCreateNestedManyWithoutUsuarioInput
    modificadorEstabilizador?: estabilizadorCreateNestedManyWithoutModificadorInput
    modificadorImpressora?: impressoraCreateNestedManyWithoutModificadorInput
    usuarioPlacamae?: placamaeCreateNestedManyWithoutUsuarioInput
    modificadorPlacamae?: placamaeCreateNestedManyWithoutModificadorInput
    usuarioNotebook?: notebookCreateNestedManyWithoutUsuarioInput
    modificadorNotebook?: notebookCreateNestedManyWithoutModificadorInput
    usuarioProcessador?: processadorCreateNestedManyWithoutUsuarioInput
    modificadorProcessador?: processadorCreateNestedManyWithoutModificadorInput
  }

  export type alunoUncheckedCreateWithoutUsuarioImpressoraInput = {
    id?: number
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    descarte?: descarteUncheckedCreateNestedManyWithoutUsuarioInput
    doacao?: doacaoUncheckedCreateNestedManyWithoutDonatarioInput
    doacaoUsuario?: doacaoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    solicitacao?: solicitacaoUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorTeclado?: tecladoUncheckedCreateNestedManyWithoutModificadorInput
    usuarioTeclado?: tecladoUncheckedCreateNestedManyWithoutUsuarioInput
    hd?: hdUncheckedCreateNestedManyWithoutAlunoInput
    modificadorHd?: hdUncheckedCreateNestedManyWithoutModificadorInput
    fonteDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutModificadorInput
    gabinete?: gabineteUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorGabinete?: gabineteUncheckedCreateNestedManyWithoutModificadorInput
    monitor?: monitorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorMonitor?: monitorUncheckedCreateNestedManyWithoutModificadorInput
    usuarioMouse?: mouseUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorMouse?: mouseUncheckedCreateNestedManyWithoutModificadorInput
    usuarioEstabilizador?: estabilizadorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorEstabilizador?: estabilizadorUncheckedCreateNestedManyWithoutModificadorInput
    modificadorImpressora?: impressoraUncheckedCreateNestedManyWithoutModificadorInput
    usuarioPlacamae?: placamaeUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorPlacamae?: placamaeUncheckedCreateNestedManyWithoutModificadorInput
    usuarioNotebook?: notebookUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorNotebook?: notebookUncheckedCreateNestedManyWithoutModificadorInput
    usuarioProcessador?: processadorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorProcessador?: processadorUncheckedCreateNestedManyWithoutModificadorInput
  }

  export type alunoCreateOrConnectWithoutUsuarioImpressoraInput = {
    where: alunoWhereUniqueInput
    create: XOR<alunoCreateWithoutUsuarioImpressoraInput, alunoUncheckedCreateWithoutUsuarioImpressoraInput>
  }

  export type alunoCreateWithoutModificadorImpressoraInput = {
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    descarte?: descarteCreateNestedManyWithoutUsuarioInput
    doacao?: doacaoCreateNestedManyWithoutDonatarioInput
    doacaoUsuario?: doacaoUsuarioCreateNestedManyWithoutUsuarioInput
    solicitacao?: solicitacaoCreateNestedManyWithoutUsuarioInput
    modificadorTeclado?: tecladoCreateNestedManyWithoutModificadorInput
    usuarioTeclado?: tecladoCreateNestedManyWithoutUsuarioInput
    hd?: hdCreateNestedManyWithoutAlunoInput
    modificadorHd?: hdCreateNestedManyWithoutModificadorInput
    fonteDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutUsuarioInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutModificadorInput
    gabinete?: gabineteCreateNestedManyWithoutUsuarioInput
    modificadorGabinete?: gabineteCreateNestedManyWithoutModificadorInput
    monitor?: monitorCreateNestedManyWithoutUsuarioInput
    modificadorMonitor?: monitorCreateNestedManyWithoutModificadorInput
    usuarioMouse?: mouseCreateNestedManyWithoutUsuarioInput
    modificadorMouse?: mouseCreateNestedManyWithoutModificadorInput
    usuarioEstabilizador?: estabilizadorCreateNestedManyWithoutUsuarioInput
    modificadorEstabilizador?: estabilizadorCreateNestedManyWithoutModificadorInput
    usuarioImpressora?: impressoraCreateNestedManyWithoutUsuarioInput
    usuarioPlacamae?: placamaeCreateNestedManyWithoutUsuarioInput
    modificadorPlacamae?: placamaeCreateNestedManyWithoutModificadorInput
    usuarioNotebook?: notebookCreateNestedManyWithoutUsuarioInput
    modificadorNotebook?: notebookCreateNestedManyWithoutModificadorInput
    usuarioProcessador?: processadorCreateNestedManyWithoutUsuarioInput
    modificadorProcessador?: processadorCreateNestedManyWithoutModificadorInput
  }

  export type alunoUncheckedCreateWithoutModificadorImpressoraInput = {
    id?: number
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    descarte?: descarteUncheckedCreateNestedManyWithoutUsuarioInput
    doacao?: doacaoUncheckedCreateNestedManyWithoutDonatarioInput
    doacaoUsuario?: doacaoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    solicitacao?: solicitacaoUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorTeclado?: tecladoUncheckedCreateNestedManyWithoutModificadorInput
    usuarioTeclado?: tecladoUncheckedCreateNestedManyWithoutUsuarioInput
    hd?: hdUncheckedCreateNestedManyWithoutAlunoInput
    modificadorHd?: hdUncheckedCreateNestedManyWithoutModificadorInput
    fonteDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutModificadorInput
    gabinete?: gabineteUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorGabinete?: gabineteUncheckedCreateNestedManyWithoutModificadorInput
    monitor?: monitorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorMonitor?: monitorUncheckedCreateNestedManyWithoutModificadorInput
    usuarioMouse?: mouseUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorMouse?: mouseUncheckedCreateNestedManyWithoutModificadorInput
    usuarioEstabilizador?: estabilizadorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorEstabilizador?: estabilizadorUncheckedCreateNestedManyWithoutModificadorInput
    usuarioImpressora?: impressoraUncheckedCreateNestedManyWithoutUsuarioInput
    usuarioPlacamae?: placamaeUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorPlacamae?: placamaeUncheckedCreateNestedManyWithoutModificadorInput
    usuarioNotebook?: notebookUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorNotebook?: notebookUncheckedCreateNestedManyWithoutModificadorInput
    usuarioProcessador?: processadorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorProcessador?: processadorUncheckedCreateNestedManyWithoutModificadorInput
  }

  export type alunoCreateOrConnectWithoutModificadorImpressoraInput = {
    where: alunoWhereUniqueInput
    create: XOR<alunoCreateWithoutModificadorImpressoraInput, alunoUncheckedCreateWithoutModificadorImpressoraInput>
  }

  export type doacaoUpsertWithoutImpressorasInput = {
    update: XOR<doacaoUpdateWithoutImpressorasInput, doacaoUncheckedUpdateWithoutImpressorasInput>
    create: XOR<doacaoCreateWithoutImpressorasInput, doacaoUncheckedCreateWithoutImpressorasInput>
    where?: doacaoWhereInput
  }

  export type doacaoUpdateToOneWithWhereWithoutImpressorasInput = {
    where?: doacaoWhereInput
    data: XOR<doacaoUpdateWithoutImpressorasInput, doacaoUncheckedUpdateWithoutImpressorasInput>
  }

  export type doacaoUpdateWithoutImpressorasInput = {
    name?: StringFieldUpdateOperationsInput | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    justificativa?: StringFieldUpdateOperationsInput | string
    nomeOuEmpresa?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    donatario?: alunoUpdateOneWithoutDoacaoNestedInput
    usuariofisico?: pessoafisicaUpdateOneWithoutDoacaoNestedInput
    usuariojuridico?: pessoajuridicaUpdateOneWithoutDoacaoNestedInput
    teclados?: tecladoUpdateManyWithoutDoacaoNestedInput
    hds?: hdUpdateManyWithoutDoacaoNestedInput
    fontesDeAlimentacao?: fontedealimentacaoUpdateManyWithoutDoacaoNestedInput
    gabinetes?: gabineteUpdateManyWithoutDoacaoNestedInput
    monitores?: monitorUpdateManyWithoutDoacaoNestedInput
    mouses?: mouseUpdateManyWithoutDoacaoNestedInput
    estabilizadores?: estabilizadorUpdateManyWithoutDoacaoNestedInput
    placasmae?: placamaeUpdateManyWithoutDoacaoNestedInput
    notebooks?: notebookUpdateManyWithoutDoacaoNestedInput
    processadores?: processadorUpdateManyWithoutDoacaoNestedInput
  }

  export type doacaoUncheckedUpdateWithoutImpressorasInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    justificativa?: StringFieldUpdateOperationsInput | string
    nomeOuEmpresa?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    donatarioId?: NullableIntFieldUpdateOperationsInput | number | null
    usuariofisicoId?: NullableIntFieldUpdateOperationsInput | number | null
    usuariojuridicoId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    teclados?: tecladoUncheckedUpdateManyWithoutDoacaoNestedInput
    hds?: hdUncheckedUpdateManyWithoutDoacaoNestedInput
    fontesDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutDoacaoNestedInput
    gabinetes?: gabineteUncheckedUpdateManyWithoutDoacaoNestedInput
    monitores?: monitorUncheckedUpdateManyWithoutDoacaoNestedInput
    mouses?: mouseUncheckedUpdateManyWithoutDoacaoNestedInput
    estabilizadores?: estabilizadorUncheckedUpdateManyWithoutDoacaoNestedInput
    placasmae?: placamaeUncheckedUpdateManyWithoutDoacaoNestedInput
    notebooks?: notebookUncheckedUpdateManyWithoutDoacaoNestedInput
    processadores?: processadorUncheckedUpdateManyWithoutDoacaoNestedInput
  }

  export type descarteUpsertWithoutImpressorasInput = {
    update: XOR<descarteUpdateWithoutImpressorasInput, descarteUncheckedUpdateWithoutImpressorasInput>
    create: XOR<descarteCreateWithoutImpressorasInput, descarteUncheckedCreateWithoutImpressorasInput>
    where?: descarteWhereInput
  }

  export type descarteUpdateToOneWithWhereWithoutImpressorasInput = {
    where?: descarteWhereInput
    data: XOR<descarteUpdateWithoutImpressorasInput, descarteUncheckedUpdateWithoutImpressorasInput>
  }

  export type descarteUpdateWithoutImpressorasInput = {
    name?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: alunoUpdateOneWithoutDescarteNestedInput
    teclados?: tecladoUpdateManyWithoutDescarteNestedInput
    hds?: hdUpdateManyWithoutDescarteNestedInput
    fontesDeAlimentacao?: fontedealimentacaoUpdateManyWithoutDescarteNestedInput
    gabinetes?: gabineteUpdateManyWithoutDescarteNestedInput
    monitores?: monitorUpdateManyWithoutDescarteNestedInput
    mouses?: mouseUpdateManyWithoutDescarteNestedInput
    estabilizadores?: estabilizadorUpdateManyWithoutDescarteNestedInput
    placasmae?: placamaeUpdateManyWithoutDescarteNestedInput
    notebooks?: notebookUpdateManyWithoutDescarteNestedInput
    processadores?: processadorUpdateManyWithoutDescarteNestedInput
  }

  export type descarteUncheckedUpdateWithoutImpressorasInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    teclados?: tecladoUncheckedUpdateManyWithoutDescarteNestedInput
    hds?: hdUncheckedUpdateManyWithoutDescarteNestedInput
    fontesDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutDescarteNestedInput
    gabinetes?: gabineteUncheckedUpdateManyWithoutDescarteNestedInput
    monitores?: monitorUncheckedUpdateManyWithoutDescarteNestedInput
    mouses?: mouseUncheckedUpdateManyWithoutDescarteNestedInput
    estabilizadores?: estabilizadorUncheckedUpdateManyWithoutDescarteNestedInput
    placasmae?: placamaeUncheckedUpdateManyWithoutDescarteNestedInput
    notebooks?: notebookUncheckedUpdateManyWithoutDescarteNestedInput
    processadores?: processadorUncheckedUpdateManyWithoutDescarteNestedInput
  }

  export type alunoUpsertWithoutUsuarioImpressoraInput = {
    update: XOR<alunoUpdateWithoutUsuarioImpressoraInput, alunoUncheckedUpdateWithoutUsuarioImpressoraInput>
    create: XOR<alunoCreateWithoutUsuarioImpressoraInput, alunoUncheckedCreateWithoutUsuarioImpressoraInput>
    where?: alunoWhereInput
  }

  export type alunoUpdateToOneWithWhereWithoutUsuarioImpressoraInput = {
    where?: alunoWhereInput
    data: XOR<alunoUpdateWithoutUsuarioImpressoraInput, alunoUncheckedUpdateWithoutUsuarioImpressoraInput>
  }

  export type alunoUpdateWithoutUsuarioImpressoraInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUpdateManyWithoutUsuarioNestedInput
    doacao?: doacaoUpdateManyWithoutDonatarioNestedInput
    doacaoUsuario?: doacaoUsuarioUpdateManyWithoutUsuarioNestedInput
    solicitacao?: solicitacaoUpdateManyWithoutUsuarioNestedInput
    modificadorTeclado?: tecladoUpdateManyWithoutModificadorNestedInput
    usuarioTeclado?: tecladoUpdateManyWithoutUsuarioNestedInput
    hd?: hdUpdateManyWithoutAlunoNestedInput
    modificadorHd?: hdUpdateManyWithoutModificadorNestedInput
    fonteDeAlimentacao?: fontedealimentacaoUpdateManyWithoutUsuarioNestedInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUpdateManyWithoutModificadorNestedInput
    gabinete?: gabineteUpdateManyWithoutUsuarioNestedInput
    modificadorGabinete?: gabineteUpdateManyWithoutModificadorNestedInput
    monitor?: monitorUpdateManyWithoutUsuarioNestedInput
    modificadorMonitor?: monitorUpdateManyWithoutModificadorNestedInput
    usuarioMouse?: mouseUpdateManyWithoutUsuarioNestedInput
    modificadorMouse?: mouseUpdateManyWithoutModificadorNestedInput
    usuarioEstabilizador?: estabilizadorUpdateManyWithoutUsuarioNestedInput
    modificadorEstabilizador?: estabilizadorUpdateManyWithoutModificadorNestedInput
    modificadorImpressora?: impressoraUpdateManyWithoutModificadorNestedInput
    usuarioPlacamae?: placamaeUpdateManyWithoutUsuarioNestedInput
    modificadorPlacamae?: placamaeUpdateManyWithoutModificadorNestedInput
    usuarioNotebook?: notebookUpdateManyWithoutUsuarioNestedInput
    modificadorNotebook?: notebookUpdateManyWithoutModificadorNestedInput
    usuarioProcessador?: processadorUpdateManyWithoutUsuarioNestedInput
    modificadorProcessador?: processadorUpdateManyWithoutModificadorNestedInput
  }

  export type alunoUncheckedUpdateWithoutUsuarioImpressoraInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUncheckedUpdateManyWithoutUsuarioNestedInput
    doacao?: doacaoUncheckedUpdateManyWithoutDonatarioNestedInput
    doacaoUsuario?: doacaoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitacao?: solicitacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorTeclado?: tecladoUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioTeclado?: tecladoUncheckedUpdateManyWithoutUsuarioNestedInput
    hd?: hdUncheckedUpdateManyWithoutAlunoNestedInput
    modificadorHd?: hdUncheckedUpdateManyWithoutModificadorNestedInput
    fonteDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutModificadorNestedInput
    gabinete?: gabineteUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorGabinete?: gabineteUncheckedUpdateManyWithoutModificadorNestedInput
    monitor?: monitorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorMonitor?: monitorUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioMouse?: mouseUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorMouse?: mouseUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioEstabilizador?: estabilizadorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorEstabilizador?: estabilizadorUncheckedUpdateManyWithoutModificadorNestedInput
    modificadorImpressora?: impressoraUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioPlacamae?: placamaeUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorPlacamae?: placamaeUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioNotebook?: notebookUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorNotebook?: notebookUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioProcessador?: processadorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorProcessador?: processadorUncheckedUpdateManyWithoutModificadorNestedInput
  }

  export type alunoUpsertWithoutModificadorImpressoraInput = {
    update: XOR<alunoUpdateWithoutModificadorImpressoraInput, alunoUncheckedUpdateWithoutModificadorImpressoraInput>
    create: XOR<alunoCreateWithoutModificadorImpressoraInput, alunoUncheckedCreateWithoutModificadorImpressoraInput>
    where?: alunoWhereInput
  }

  export type alunoUpdateToOneWithWhereWithoutModificadorImpressoraInput = {
    where?: alunoWhereInput
    data: XOR<alunoUpdateWithoutModificadorImpressoraInput, alunoUncheckedUpdateWithoutModificadorImpressoraInput>
  }

  export type alunoUpdateWithoutModificadorImpressoraInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUpdateManyWithoutUsuarioNestedInput
    doacao?: doacaoUpdateManyWithoutDonatarioNestedInput
    doacaoUsuario?: doacaoUsuarioUpdateManyWithoutUsuarioNestedInput
    solicitacao?: solicitacaoUpdateManyWithoutUsuarioNestedInput
    modificadorTeclado?: tecladoUpdateManyWithoutModificadorNestedInput
    usuarioTeclado?: tecladoUpdateManyWithoutUsuarioNestedInput
    hd?: hdUpdateManyWithoutAlunoNestedInput
    modificadorHd?: hdUpdateManyWithoutModificadorNestedInput
    fonteDeAlimentacao?: fontedealimentacaoUpdateManyWithoutUsuarioNestedInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUpdateManyWithoutModificadorNestedInput
    gabinete?: gabineteUpdateManyWithoutUsuarioNestedInput
    modificadorGabinete?: gabineteUpdateManyWithoutModificadorNestedInput
    monitor?: monitorUpdateManyWithoutUsuarioNestedInput
    modificadorMonitor?: monitorUpdateManyWithoutModificadorNestedInput
    usuarioMouse?: mouseUpdateManyWithoutUsuarioNestedInput
    modificadorMouse?: mouseUpdateManyWithoutModificadorNestedInput
    usuarioEstabilizador?: estabilizadorUpdateManyWithoutUsuarioNestedInput
    modificadorEstabilizador?: estabilizadorUpdateManyWithoutModificadorNestedInput
    usuarioImpressora?: impressoraUpdateManyWithoutUsuarioNestedInput
    usuarioPlacamae?: placamaeUpdateManyWithoutUsuarioNestedInput
    modificadorPlacamae?: placamaeUpdateManyWithoutModificadorNestedInput
    usuarioNotebook?: notebookUpdateManyWithoutUsuarioNestedInput
    modificadorNotebook?: notebookUpdateManyWithoutModificadorNestedInput
    usuarioProcessador?: processadorUpdateManyWithoutUsuarioNestedInput
    modificadorProcessador?: processadorUpdateManyWithoutModificadorNestedInput
  }

  export type alunoUncheckedUpdateWithoutModificadorImpressoraInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUncheckedUpdateManyWithoutUsuarioNestedInput
    doacao?: doacaoUncheckedUpdateManyWithoutDonatarioNestedInput
    doacaoUsuario?: doacaoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitacao?: solicitacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorTeclado?: tecladoUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioTeclado?: tecladoUncheckedUpdateManyWithoutUsuarioNestedInput
    hd?: hdUncheckedUpdateManyWithoutAlunoNestedInput
    modificadorHd?: hdUncheckedUpdateManyWithoutModificadorNestedInput
    fonteDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutModificadorNestedInput
    gabinete?: gabineteUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorGabinete?: gabineteUncheckedUpdateManyWithoutModificadorNestedInput
    monitor?: monitorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorMonitor?: monitorUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioMouse?: mouseUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorMouse?: mouseUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioEstabilizador?: estabilizadorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorEstabilizador?: estabilizadorUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioImpressora?: impressoraUncheckedUpdateManyWithoutUsuarioNestedInput
    usuarioPlacamae?: placamaeUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorPlacamae?: placamaeUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioNotebook?: notebookUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorNotebook?: notebookUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioProcessador?: processadorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorProcessador?: processadorUncheckedUpdateManyWithoutModificadorNestedInput
  }

  export type doacaoCreateWithoutPlacasmaeInput = {
    name: string
    codigoDeReferencias: string
    descricao: string
    justificativa: string
    nomeOuEmpresa: string
    contato: string
    data: Date | string
    status: string
    createdAt?: Date | string
    donatario?: alunoCreateNestedOneWithoutDoacaoInput
    usuariofisico?: pessoafisicaCreateNestedOneWithoutDoacaoInput
    usuariojuridico?: pessoajuridicaCreateNestedOneWithoutDoacaoInput
    teclados?: tecladoCreateNestedManyWithoutDoacaoInput
    hds?: hdCreateNestedManyWithoutDoacaoInput
    fontesDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutDoacaoInput
    gabinetes?: gabineteCreateNestedManyWithoutDoacaoInput
    monitores?: monitorCreateNestedManyWithoutDoacaoInput
    mouses?: mouseCreateNestedManyWithoutDoacaoInput
    estabilizadores?: estabilizadorCreateNestedManyWithoutDoacaoInput
    impressoras?: impressoraCreateNestedManyWithoutDoacaoInput
    notebooks?: notebookCreateNestedManyWithoutDoacaoInput
    processadores?: processadorCreateNestedManyWithoutDoacaoInput
  }

  export type doacaoUncheckedCreateWithoutPlacasmaeInput = {
    id?: number
    name: string
    codigoDeReferencias: string
    descricao: string
    justificativa: string
    nomeOuEmpresa: string
    contato: string
    data: Date | string
    status: string
    donatarioId?: number | null
    usuariofisicoId?: number | null
    usuariojuridicoId?: number | null
    createdAt?: Date | string
    teclados?: tecladoUncheckedCreateNestedManyWithoutDoacaoInput
    hds?: hdUncheckedCreateNestedManyWithoutDoacaoInput
    fontesDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutDoacaoInput
    gabinetes?: gabineteUncheckedCreateNestedManyWithoutDoacaoInput
    monitores?: monitorUncheckedCreateNestedManyWithoutDoacaoInput
    mouses?: mouseUncheckedCreateNestedManyWithoutDoacaoInput
    estabilizadores?: estabilizadorUncheckedCreateNestedManyWithoutDoacaoInput
    impressoras?: impressoraUncheckedCreateNestedManyWithoutDoacaoInput
    notebooks?: notebookUncheckedCreateNestedManyWithoutDoacaoInput
    processadores?: processadorUncheckedCreateNestedManyWithoutDoacaoInput
  }

  export type doacaoCreateOrConnectWithoutPlacasmaeInput = {
    where: doacaoWhereUniqueInput
    create: XOR<doacaoCreateWithoutPlacasmaeInput, doacaoUncheckedCreateWithoutPlacasmaeInput>
  }

  export type descarteCreateWithoutPlacasmaeInput = {
    name: string
    descricao: string
    data: Date | string
    codigoDeReferencias: string
    createdAt?: Date | string
    usuario?: alunoCreateNestedOneWithoutDescarteInput
    teclados?: tecladoCreateNestedManyWithoutDescarteInput
    hds?: hdCreateNestedManyWithoutDescarteInput
    fontesDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutDescarteInput
    gabinetes?: gabineteCreateNestedManyWithoutDescarteInput
    monitores?: monitorCreateNestedManyWithoutDescarteInput
    mouses?: mouseCreateNestedManyWithoutDescarteInput
    estabilizadores?: estabilizadorCreateNestedManyWithoutDescarteInput
    impressoras?: impressoraCreateNestedManyWithoutDescarteInput
    notebooks?: notebookCreateNestedManyWithoutDescarteInput
    processadores?: processadorCreateNestedManyWithoutDescarteInput
  }

  export type descarteUncheckedCreateWithoutPlacasmaeInput = {
    id?: number
    name: string
    descricao: string
    data: Date | string
    codigoDeReferencias: string
    usuarioId?: number | null
    createdAt?: Date | string
    teclados?: tecladoUncheckedCreateNestedManyWithoutDescarteInput
    hds?: hdUncheckedCreateNestedManyWithoutDescarteInput
    fontesDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutDescarteInput
    gabinetes?: gabineteUncheckedCreateNestedManyWithoutDescarteInput
    monitores?: monitorUncheckedCreateNestedManyWithoutDescarteInput
    mouses?: mouseUncheckedCreateNestedManyWithoutDescarteInput
    estabilizadores?: estabilizadorUncheckedCreateNestedManyWithoutDescarteInput
    impressoras?: impressoraUncheckedCreateNestedManyWithoutDescarteInput
    notebooks?: notebookUncheckedCreateNestedManyWithoutDescarteInput
    processadores?: processadorUncheckedCreateNestedManyWithoutDescarteInput
  }

  export type descarteCreateOrConnectWithoutPlacasmaeInput = {
    where: descarteWhereUniqueInput
    create: XOR<descarteCreateWithoutPlacasmaeInput, descarteUncheckedCreateWithoutPlacasmaeInput>
  }

  export type alunoCreateWithoutUsuarioPlacamaeInput = {
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    descarte?: descarteCreateNestedManyWithoutUsuarioInput
    doacao?: doacaoCreateNestedManyWithoutDonatarioInput
    doacaoUsuario?: doacaoUsuarioCreateNestedManyWithoutUsuarioInput
    solicitacao?: solicitacaoCreateNestedManyWithoutUsuarioInput
    modificadorTeclado?: tecladoCreateNestedManyWithoutModificadorInput
    usuarioTeclado?: tecladoCreateNestedManyWithoutUsuarioInput
    hd?: hdCreateNestedManyWithoutAlunoInput
    modificadorHd?: hdCreateNestedManyWithoutModificadorInput
    fonteDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutUsuarioInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutModificadorInput
    gabinete?: gabineteCreateNestedManyWithoutUsuarioInput
    modificadorGabinete?: gabineteCreateNestedManyWithoutModificadorInput
    monitor?: monitorCreateNestedManyWithoutUsuarioInput
    modificadorMonitor?: monitorCreateNestedManyWithoutModificadorInput
    usuarioMouse?: mouseCreateNestedManyWithoutUsuarioInput
    modificadorMouse?: mouseCreateNestedManyWithoutModificadorInput
    usuarioEstabilizador?: estabilizadorCreateNestedManyWithoutUsuarioInput
    modificadorEstabilizador?: estabilizadorCreateNestedManyWithoutModificadorInput
    usuarioImpressora?: impressoraCreateNestedManyWithoutUsuarioInput
    modificadorImpressora?: impressoraCreateNestedManyWithoutModificadorInput
    modificadorPlacamae?: placamaeCreateNestedManyWithoutModificadorInput
    usuarioNotebook?: notebookCreateNestedManyWithoutUsuarioInput
    modificadorNotebook?: notebookCreateNestedManyWithoutModificadorInput
    usuarioProcessador?: processadorCreateNestedManyWithoutUsuarioInput
    modificadorProcessador?: processadorCreateNestedManyWithoutModificadorInput
  }

  export type alunoUncheckedCreateWithoutUsuarioPlacamaeInput = {
    id?: number
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    descarte?: descarteUncheckedCreateNestedManyWithoutUsuarioInput
    doacao?: doacaoUncheckedCreateNestedManyWithoutDonatarioInput
    doacaoUsuario?: doacaoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    solicitacao?: solicitacaoUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorTeclado?: tecladoUncheckedCreateNestedManyWithoutModificadorInput
    usuarioTeclado?: tecladoUncheckedCreateNestedManyWithoutUsuarioInput
    hd?: hdUncheckedCreateNestedManyWithoutAlunoInput
    modificadorHd?: hdUncheckedCreateNestedManyWithoutModificadorInput
    fonteDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutModificadorInput
    gabinete?: gabineteUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorGabinete?: gabineteUncheckedCreateNestedManyWithoutModificadorInput
    monitor?: monitorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorMonitor?: monitorUncheckedCreateNestedManyWithoutModificadorInput
    usuarioMouse?: mouseUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorMouse?: mouseUncheckedCreateNestedManyWithoutModificadorInput
    usuarioEstabilizador?: estabilizadorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorEstabilizador?: estabilizadorUncheckedCreateNestedManyWithoutModificadorInput
    usuarioImpressora?: impressoraUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorImpressora?: impressoraUncheckedCreateNestedManyWithoutModificadorInput
    modificadorPlacamae?: placamaeUncheckedCreateNestedManyWithoutModificadorInput
    usuarioNotebook?: notebookUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorNotebook?: notebookUncheckedCreateNestedManyWithoutModificadorInput
    usuarioProcessador?: processadorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorProcessador?: processadorUncheckedCreateNestedManyWithoutModificadorInput
  }

  export type alunoCreateOrConnectWithoutUsuarioPlacamaeInput = {
    where: alunoWhereUniqueInput
    create: XOR<alunoCreateWithoutUsuarioPlacamaeInput, alunoUncheckedCreateWithoutUsuarioPlacamaeInput>
  }

  export type alunoCreateWithoutModificadorPlacamaeInput = {
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    descarte?: descarteCreateNestedManyWithoutUsuarioInput
    doacao?: doacaoCreateNestedManyWithoutDonatarioInput
    doacaoUsuario?: doacaoUsuarioCreateNestedManyWithoutUsuarioInput
    solicitacao?: solicitacaoCreateNestedManyWithoutUsuarioInput
    modificadorTeclado?: tecladoCreateNestedManyWithoutModificadorInput
    usuarioTeclado?: tecladoCreateNestedManyWithoutUsuarioInput
    hd?: hdCreateNestedManyWithoutAlunoInput
    modificadorHd?: hdCreateNestedManyWithoutModificadorInput
    fonteDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutUsuarioInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutModificadorInput
    gabinete?: gabineteCreateNestedManyWithoutUsuarioInput
    modificadorGabinete?: gabineteCreateNestedManyWithoutModificadorInput
    monitor?: monitorCreateNestedManyWithoutUsuarioInput
    modificadorMonitor?: monitorCreateNestedManyWithoutModificadorInput
    usuarioMouse?: mouseCreateNestedManyWithoutUsuarioInput
    modificadorMouse?: mouseCreateNestedManyWithoutModificadorInput
    usuarioEstabilizador?: estabilizadorCreateNestedManyWithoutUsuarioInput
    modificadorEstabilizador?: estabilizadorCreateNestedManyWithoutModificadorInput
    usuarioImpressora?: impressoraCreateNestedManyWithoutUsuarioInput
    modificadorImpressora?: impressoraCreateNestedManyWithoutModificadorInput
    usuarioPlacamae?: placamaeCreateNestedManyWithoutUsuarioInput
    usuarioNotebook?: notebookCreateNestedManyWithoutUsuarioInput
    modificadorNotebook?: notebookCreateNestedManyWithoutModificadorInput
    usuarioProcessador?: processadorCreateNestedManyWithoutUsuarioInput
    modificadorProcessador?: processadorCreateNestedManyWithoutModificadorInput
  }

  export type alunoUncheckedCreateWithoutModificadorPlacamaeInput = {
    id?: number
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    descarte?: descarteUncheckedCreateNestedManyWithoutUsuarioInput
    doacao?: doacaoUncheckedCreateNestedManyWithoutDonatarioInput
    doacaoUsuario?: doacaoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    solicitacao?: solicitacaoUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorTeclado?: tecladoUncheckedCreateNestedManyWithoutModificadorInput
    usuarioTeclado?: tecladoUncheckedCreateNestedManyWithoutUsuarioInput
    hd?: hdUncheckedCreateNestedManyWithoutAlunoInput
    modificadorHd?: hdUncheckedCreateNestedManyWithoutModificadorInput
    fonteDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutModificadorInput
    gabinete?: gabineteUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorGabinete?: gabineteUncheckedCreateNestedManyWithoutModificadorInput
    monitor?: monitorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorMonitor?: monitorUncheckedCreateNestedManyWithoutModificadorInput
    usuarioMouse?: mouseUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorMouse?: mouseUncheckedCreateNestedManyWithoutModificadorInput
    usuarioEstabilizador?: estabilizadorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorEstabilizador?: estabilizadorUncheckedCreateNestedManyWithoutModificadorInput
    usuarioImpressora?: impressoraUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorImpressora?: impressoraUncheckedCreateNestedManyWithoutModificadorInput
    usuarioPlacamae?: placamaeUncheckedCreateNestedManyWithoutUsuarioInput
    usuarioNotebook?: notebookUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorNotebook?: notebookUncheckedCreateNestedManyWithoutModificadorInput
    usuarioProcessador?: processadorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorProcessador?: processadorUncheckedCreateNestedManyWithoutModificadorInput
  }

  export type alunoCreateOrConnectWithoutModificadorPlacamaeInput = {
    where: alunoWhereUniqueInput
    create: XOR<alunoCreateWithoutModificadorPlacamaeInput, alunoUncheckedCreateWithoutModificadorPlacamaeInput>
  }

  export type doacaoUpsertWithoutPlacasmaeInput = {
    update: XOR<doacaoUpdateWithoutPlacasmaeInput, doacaoUncheckedUpdateWithoutPlacasmaeInput>
    create: XOR<doacaoCreateWithoutPlacasmaeInput, doacaoUncheckedCreateWithoutPlacasmaeInput>
    where?: doacaoWhereInput
  }

  export type doacaoUpdateToOneWithWhereWithoutPlacasmaeInput = {
    where?: doacaoWhereInput
    data: XOR<doacaoUpdateWithoutPlacasmaeInput, doacaoUncheckedUpdateWithoutPlacasmaeInput>
  }

  export type doacaoUpdateWithoutPlacasmaeInput = {
    name?: StringFieldUpdateOperationsInput | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    justificativa?: StringFieldUpdateOperationsInput | string
    nomeOuEmpresa?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    donatario?: alunoUpdateOneWithoutDoacaoNestedInput
    usuariofisico?: pessoafisicaUpdateOneWithoutDoacaoNestedInput
    usuariojuridico?: pessoajuridicaUpdateOneWithoutDoacaoNestedInput
    teclados?: tecladoUpdateManyWithoutDoacaoNestedInput
    hds?: hdUpdateManyWithoutDoacaoNestedInput
    fontesDeAlimentacao?: fontedealimentacaoUpdateManyWithoutDoacaoNestedInput
    gabinetes?: gabineteUpdateManyWithoutDoacaoNestedInput
    monitores?: monitorUpdateManyWithoutDoacaoNestedInput
    mouses?: mouseUpdateManyWithoutDoacaoNestedInput
    estabilizadores?: estabilizadorUpdateManyWithoutDoacaoNestedInput
    impressoras?: impressoraUpdateManyWithoutDoacaoNestedInput
    notebooks?: notebookUpdateManyWithoutDoacaoNestedInput
    processadores?: processadorUpdateManyWithoutDoacaoNestedInput
  }

  export type doacaoUncheckedUpdateWithoutPlacasmaeInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    justificativa?: StringFieldUpdateOperationsInput | string
    nomeOuEmpresa?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    donatarioId?: NullableIntFieldUpdateOperationsInput | number | null
    usuariofisicoId?: NullableIntFieldUpdateOperationsInput | number | null
    usuariojuridicoId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    teclados?: tecladoUncheckedUpdateManyWithoutDoacaoNestedInput
    hds?: hdUncheckedUpdateManyWithoutDoacaoNestedInput
    fontesDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutDoacaoNestedInput
    gabinetes?: gabineteUncheckedUpdateManyWithoutDoacaoNestedInput
    monitores?: monitorUncheckedUpdateManyWithoutDoacaoNestedInput
    mouses?: mouseUncheckedUpdateManyWithoutDoacaoNestedInput
    estabilizadores?: estabilizadorUncheckedUpdateManyWithoutDoacaoNestedInput
    impressoras?: impressoraUncheckedUpdateManyWithoutDoacaoNestedInput
    notebooks?: notebookUncheckedUpdateManyWithoutDoacaoNestedInput
    processadores?: processadorUncheckedUpdateManyWithoutDoacaoNestedInput
  }

  export type descarteUpsertWithoutPlacasmaeInput = {
    update: XOR<descarteUpdateWithoutPlacasmaeInput, descarteUncheckedUpdateWithoutPlacasmaeInput>
    create: XOR<descarteCreateWithoutPlacasmaeInput, descarteUncheckedCreateWithoutPlacasmaeInput>
    where?: descarteWhereInput
  }

  export type descarteUpdateToOneWithWhereWithoutPlacasmaeInput = {
    where?: descarteWhereInput
    data: XOR<descarteUpdateWithoutPlacasmaeInput, descarteUncheckedUpdateWithoutPlacasmaeInput>
  }

  export type descarteUpdateWithoutPlacasmaeInput = {
    name?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: alunoUpdateOneWithoutDescarteNestedInput
    teclados?: tecladoUpdateManyWithoutDescarteNestedInput
    hds?: hdUpdateManyWithoutDescarteNestedInput
    fontesDeAlimentacao?: fontedealimentacaoUpdateManyWithoutDescarteNestedInput
    gabinetes?: gabineteUpdateManyWithoutDescarteNestedInput
    monitores?: monitorUpdateManyWithoutDescarteNestedInput
    mouses?: mouseUpdateManyWithoutDescarteNestedInput
    estabilizadores?: estabilizadorUpdateManyWithoutDescarteNestedInput
    impressoras?: impressoraUpdateManyWithoutDescarteNestedInput
    notebooks?: notebookUpdateManyWithoutDescarteNestedInput
    processadores?: processadorUpdateManyWithoutDescarteNestedInput
  }

  export type descarteUncheckedUpdateWithoutPlacasmaeInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    teclados?: tecladoUncheckedUpdateManyWithoutDescarteNestedInput
    hds?: hdUncheckedUpdateManyWithoutDescarteNestedInput
    fontesDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutDescarteNestedInput
    gabinetes?: gabineteUncheckedUpdateManyWithoutDescarteNestedInput
    monitores?: monitorUncheckedUpdateManyWithoutDescarteNestedInput
    mouses?: mouseUncheckedUpdateManyWithoutDescarteNestedInput
    estabilizadores?: estabilizadorUncheckedUpdateManyWithoutDescarteNestedInput
    impressoras?: impressoraUncheckedUpdateManyWithoutDescarteNestedInput
    notebooks?: notebookUncheckedUpdateManyWithoutDescarteNestedInput
    processadores?: processadorUncheckedUpdateManyWithoutDescarteNestedInput
  }

  export type alunoUpsertWithoutUsuarioPlacamaeInput = {
    update: XOR<alunoUpdateWithoutUsuarioPlacamaeInput, alunoUncheckedUpdateWithoutUsuarioPlacamaeInput>
    create: XOR<alunoCreateWithoutUsuarioPlacamaeInput, alunoUncheckedCreateWithoutUsuarioPlacamaeInput>
    where?: alunoWhereInput
  }

  export type alunoUpdateToOneWithWhereWithoutUsuarioPlacamaeInput = {
    where?: alunoWhereInput
    data: XOR<alunoUpdateWithoutUsuarioPlacamaeInput, alunoUncheckedUpdateWithoutUsuarioPlacamaeInput>
  }

  export type alunoUpdateWithoutUsuarioPlacamaeInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUpdateManyWithoutUsuarioNestedInput
    doacao?: doacaoUpdateManyWithoutDonatarioNestedInput
    doacaoUsuario?: doacaoUsuarioUpdateManyWithoutUsuarioNestedInput
    solicitacao?: solicitacaoUpdateManyWithoutUsuarioNestedInput
    modificadorTeclado?: tecladoUpdateManyWithoutModificadorNestedInput
    usuarioTeclado?: tecladoUpdateManyWithoutUsuarioNestedInput
    hd?: hdUpdateManyWithoutAlunoNestedInput
    modificadorHd?: hdUpdateManyWithoutModificadorNestedInput
    fonteDeAlimentacao?: fontedealimentacaoUpdateManyWithoutUsuarioNestedInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUpdateManyWithoutModificadorNestedInput
    gabinete?: gabineteUpdateManyWithoutUsuarioNestedInput
    modificadorGabinete?: gabineteUpdateManyWithoutModificadorNestedInput
    monitor?: monitorUpdateManyWithoutUsuarioNestedInput
    modificadorMonitor?: monitorUpdateManyWithoutModificadorNestedInput
    usuarioMouse?: mouseUpdateManyWithoutUsuarioNestedInput
    modificadorMouse?: mouseUpdateManyWithoutModificadorNestedInput
    usuarioEstabilizador?: estabilizadorUpdateManyWithoutUsuarioNestedInput
    modificadorEstabilizador?: estabilizadorUpdateManyWithoutModificadorNestedInput
    usuarioImpressora?: impressoraUpdateManyWithoutUsuarioNestedInput
    modificadorImpressora?: impressoraUpdateManyWithoutModificadorNestedInput
    modificadorPlacamae?: placamaeUpdateManyWithoutModificadorNestedInput
    usuarioNotebook?: notebookUpdateManyWithoutUsuarioNestedInput
    modificadorNotebook?: notebookUpdateManyWithoutModificadorNestedInput
    usuarioProcessador?: processadorUpdateManyWithoutUsuarioNestedInput
    modificadorProcessador?: processadorUpdateManyWithoutModificadorNestedInput
  }

  export type alunoUncheckedUpdateWithoutUsuarioPlacamaeInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUncheckedUpdateManyWithoutUsuarioNestedInput
    doacao?: doacaoUncheckedUpdateManyWithoutDonatarioNestedInput
    doacaoUsuario?: doacaoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitacao?: solicitacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorTeclado?: tecladoUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioTeclado?: tecladoUncheckedUpdateManyWithoutUsuarioNestedInput
    hd?: hdUncheckedUpdateManyWithoutAlunoNestedInput
    modificadorHd?: hdUncheckedUpdateManyWithoutModificadorNestedInput
    fonteDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutModificadorNestedInput
    gabinete?: gabineteUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorGabinete?: gabineteUncheckedUpdateManyWithoutModificadorNestedInput
    monitor?: monitorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorMonitor?: monitorUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioMouse?: mouseUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorMouse?: mouseUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioEstabilizador?: estabilizadorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorEstabilizador?: estabilizadorUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioImpressora?: impressoraUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorImpressora?: impressoraUncheckedUpdateManyWithoutModificadorNestedInput
    modificadorPlacamae?: placamaeUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioNotebook?: notebookUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorNotebook?: notebookUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioProcessador?: processadorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorProcessador?: processadorUncheckedUpdateManyWithoutModificadorNestedInput
  }

  export type alunoUpsertWithoutModificadorPlacamaeInput = {
    update: XOR<alunoUpdateWithoutModificadorPlacamaeInput, alunoUncheckedUpdateWithoutModificadorPlacamaeInput>
    create: XOR<alunoCreateWithoutModificadorPlacamaeInput, alunoUncheckedCreateWithoutModificadorPlacamaeInput>
    where?: alunoWhereInput
  }

  export type alunoUpdateToOneWithWhereWithoutModificadorPlacamaeInput = {
    where?: alunoWhereInput
    data: XOR<alunoUpdateWithoutModificadorPlacamaeInput, alunoUncheckedUpdateWithoutModificadorPlacamaeInput>
  }

  export type alunoUpdateWithoutModificadorPlacamaeInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUpdateManyWithoutUsuarioNestedInput
    doacao?: doacaoUpdateManyWithoutDonatarioNestedInput
    doacaoUsuario?: doacaoUsuarioUpdateManyWithoutUsuarioNestedInput
    solicitacao?: solicitacaoUpdateManyWithoutUsuarioNestedInput
    modificadorTeclado?: tecladoUpdateManyWithoutModificadorNestedInput
    usuarioTeclado?: tecladoUpdateManyWithoutUsuarioNestedInput
    hd?: hdUpdateManyWithoutAlunoNestedInput
    modificadorHd?: hdUpdateManyWithoutModificadorNestedInput
    fonteDeAlimentacao?: fontedealimentacaoUpdateManyWithoutUsuarioNestedInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUpdateManyWithoutModificadorNestedInput
    gabinete?: gabineteUpdateManyWithoutUsuarioNestedInput
    modificadorGabinete?: gabineteUpdateManyWithoutModificadorNestedInput
    monitor?: monitorUpdateManyWithoutUsuarioNestedInput
    modificadorMonitor?: monitorUpdateManyWithoutModificadorNestedInput
    usuarioMouse?: mouseUpdateManyWithoutUsuarioNestedInput
    modificadorMouse?: mouseUpdateManyWithoutModificadorNestedInput
    usuarioEstabilizador?: estabilizadorUpdateManyWithoutUsuarioNestedInput
    modificadorEstabilizador?: estabilizadorUpdateManyWithoutModificadorNestedInput
    usuarioImpressora?: impressoraUpdateManyWithoutUsuarioNestedInput
    modificadorImpressora?: impressoraUpdateManyWithoutModificadorNestedInput
    usuarioPlacamae?: placamaeUpdateManyWithoutUsuarioNestedInput
    usuarioNotebook?: notebookUpdateManyWithoutUsuarioNestedInput
    modificadorNotebook?: notebookUpdateManyWithoutModificadorNestedInput
    usuarioProcessador?: processadorUpdateManyWithoutUsuarioNestedInput
    modificadorProcessador?: processadorUpdateManyWithoutModificadorNestedInput
  }

  export type alunoUncheckedUpdateWithoutModificadorPlacamaeInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUncheckedUpdateManyWithoutUsuarioNestedInput
    doacao?: doacaoUncheckedUpdateManyWithoutDonatarioNestedInput
    doacaoUsuario?: doacaoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitacao?: solicitacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorTeclado?: tecladoUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioTeclado?: tecladoUncheckedUpdateManyWithoutUsuarioNestedInput
    hd?: hdUncheckedUpdateManyWithoutAlunoNestedInput
    modificadorHd?: hdUncheckedUpdateManyWithoutModificadorNestedInput
    fonteDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutModificadorNestedInput
    gabinete?: gabineteUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorGabinete?: gabineteUncheckedUpdateManyWithoutModificadorNestedInput
    monitor?: monitorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorMonitor?: monitorUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioMouse?: mouseUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorMouse?: mouseUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioEstabilizador?: estabilizadorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorEstabilizador?: estabilizadorUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioImpressora?: impressoraUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorImpressora?: impressoraUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioPlacamae?: placamaeUncheckedUpdateManyWithoutUsuarioNestedInput
    usuarioNotebook?: notebookUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorNotebook?: notebookUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioProcessador?: processadorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorProcessador?: processadorUncheckedUpdateManyWithoutModificadorNestedInput
  }

  export type doacaoCreateWithoutNotebooksInput = {
    name: string
    codigoDeReferencias: string
    descricao: string
    justificativa: string
    nomeOuEmpresa: string
    contato: string
    data: Date | string
    status: string
    createdAt?: Date | string
    donatario?: alunoCreateNestedOneWithoutDoacaoInput
    usuariofisico?: pessoafisicaCreateNestedOneWithoutDoacaoInput
    usuariojuridico?: pessoajuridicaCreateNestedOneWithoutDoacaoInput
    teclados?: tecladoCreateNestedManyWithoutDoacaoInput
    hds?: hdCreateNestedManyWithoutDoacaoInput
    fontesDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutDoacaoInput
    gabinetes?: gabineteCreateNestedManyWithoutDoacaoInput
    monitores?: monitorCreateNestedManyWithoutDoacaoInput
    mouses?: mouseCreateNestedManyWithoutDoacaoInput
    estabilizadores?: estabilizadorCreateNestedManyWithoutDoacaoInput
    impressoras?: impressoraCreateNestedManyWithoutDoacaoInput
    placasmae?: placamaeCreateNestedManyWithoutDoacaoInput
    processadores?: processadorCreateNestedManyWithoutDoacaoInput
  }

  export type doacaoUncheckedCreateWithoutNotebooksInput = {
    id?: number
    name: string
    codigoDeReferencias: string
    descricao: string
    justificativa: string
    nomeOuEmpresa: string
    contato: string
    data: Date | string
    status: string
    donatarioId?: number | null
    usuariofisicoId?: number | null
    usuariojuridicoId?: number | null
    createdAt?: Date | string
    teclados?: tecladoUncheckedCreateNestedManyWithoutDoacaoInput
    hds?: hdUncheckedCreateNestedManyWithoutDoacaoInput
    fontesDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutDoacaoInput
    gabinetes?: gabineteUncheckedCreateNestedManyWithoutDoacaoInput
    monitores?: monitorUncheckedCreateNestedManyWithoutDoacaoInput
    mouses?: mouseUncheckedCreateNestedManyWithoutDoacaoInput
    estabilizadores?: estabilizadorUncheckedCreateNestedManyWithoutDoacaoInput
    impressoras?: impressoraUncheckedCreateNestedManyWithoutDoacaoInput
    placasmae?: placamaeUncheckedCreateNestedManyWithoutDoacaoInput
    processadores?: processadorUncheckedCreateNestedManyWithoutDoacaoInput
  }

  export type doacaoCreateOrConnectWithoutNotebooksInput = {
    where: doacaoWhereUniqueInput
    create: XOR<doacaoCreateWithoutNotebooksInput, doacaoUncheckedCreateWithoutNotebooksInput>
  }

  export type descarteCreateWithoutNotebooksInput = {
    name: string
    descricao: string
    data: Date | string
    codigoDeReferencias: string
    createdAt?: Date | string
    usuario?: alunoCreateNestedOneWithoutDescarteInput
    teclados?: tecladoCreateNestedManyWithoutDescarteInput
    hds?: hdCreateNestedManyWithoutDescarteInput
    fontesDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutDescarteInput
    gabinetes?: gabineteCreateNestedManyWithoutDescarteInput
    monitores?: monitorCreateNestedManyWithoutDescarteInput
    mouses?: mouseCreateNestedManyWithoutDescarteInput
    estabilizadores?: estabilizadorCreateNestedManyWithoutDescarteInput
    impressoras?: impressoraCreateNestedManyWithoutDescarteInput
    placasmae?: placamaeCreateNestedManyWithoutDescarteInput
    processadores?: processadorCreateNestedManyWithoutDescarteInput
  }

  export type descarteUncheckedCreateWithoutNotebooksInput = {
    id?: number
    name: string
    descricao: string
    data: Date | string
    codigoDeReferencias: string
    usuarioId?: number | null
    createdAt?: Date | string
    teclados?: tecladoUncheckedCreateNestedManyWithoutDescarteInput
    hds?: hdUncheckedCreateNestedManyWithoutDescarteInput
    fontesDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutDescarteInput
    gabinetes?: gabineteUncheckedCreateNestedManyWithoutDescarteInput
    monitores?: monitorUncheckedCreateNestedManyWithoutDescarteInput
    mouses?: mouseUncheckedCreateNestedManyWithoutDescarteInput
    estabilizadores?: estabilizadorUncheckedCreateNestedManyWithoutDescarteInput
    impressoras?: impressoraUncheckedCreateNestedManyWithoutDescarteInput
    placasmae?: placamaeUncheckedCreateNestedManyWithoutDescarteInput
    processadores?: processadorUncheckedCreateNestedManyWithoutDescarteInput
  }

  export type descarteCreateOrConnectWithoutNotebooksInput = {
    where: descarteWhereUniqueInput
    create: XOR<descarteCreateWithoutNotebooksInput, descarteUncheckedCreateWithoutNotebooksInput>
  }

  export type alunoCreateWithoutUsuarioNotebookInput = {
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    descarte?: descarteCreateNestedManyWithoutUsuarioInput
    doacao?: doacaoCreateNestedManyWithoutDonatarioInput
    doacaoUsuario?: doacaoUsuarioCreateNestedManyWithoutUsuarioInput
    solicitacao?: solicitacaoCreateNestedManyWithoutUsuarioInput
    modificadorTeclado?: tecladoCreateNestedManyWithoutModificadorInput
    usuarioTeclado?: tecladoCreateNestedManyWithoutUsuarioInput
    hd?: hdCreateNestedManyWithoutAlunoInput
    modificadorHd?: hdCreateNestedManyWithoutModificadorInput
    fonteDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutUsuarioInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutModificadorInput
    gabinete?: gabineteCreateNestedManyWithoutUsuarioInput
    modificadorGabinete?: gabineteCreateNestedManyWithoutModificadorInput
    monitor?: monitorCreateNestedManyWithoutUsuarioInput
    modificadorMonitor?: monitorCreateNestedManyWithoutModificadorInput
    usuarioMouse?: mouseCreateNestedManyWithoutUsuarioInput
    modificadorMouse?: mouseCreateNestedManyWithoutModificadorInput
    usuarioEstabilizador?: estabilizadorCreateNestedManyWithoutUsuarioInput
    modificadorEstabilizador?: estabilizadorCreateNestedManyWithoutModificadorInput
    usuarioImpressora?: impressoraCreateNestedManyWithoutUsuarioInput
    modificadorImpressora?: impressoraCreateNestedManyWithoutModificadorInput
    usuarioPlacamae?: placamaeCreateNestedManyWithoutUsuarioInput
    modificadorPlacamae?: placamaeCreateNestedManyWithoutModificadorInput
    modificadorNotebook?: notebookCreateNestedManyWithoutModificadorInput
    usuarioProcessador?: processadorCreateNestedManyWithoutUsuarioInput
    modificadorProcessador?: processadorCreateNestedManyWithoutModificadorInput
  }

  export type alunoUncheckedCreateWithoutUsuarioNotebookInput = {
    id?: number
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    descarte?: descarteUncheckedCreateNestedManyWithoutUsuarioInput
    doacao?: doacaoUncheckedCreateNestedManyWithoutDonatarioInput
    doacaoUsuario?: doacaoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    solicitacao?: solicitacaoUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorTeclado?: tecladoUncheckedCreateNestedManyWithoutModificadorInput
    usuarioTeclado?: tecladoUncheckedCreateNestedManyWithoutUsuarioInput
    hd?: hdUncheckedCreateNestedManyWithoutAlunoInput
    modificadorHd?: hdUncheckedCreateNestedManyWithoutModificadorInput
    fonteDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutModificadorInput
    gabinete?: gabineteUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorGabinete?: gabineteUncheckedCreateNestedManyWithoutModificadorInput
    monitor?: monitorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorMonitor?: monitorUncheckedCreateNestedManyWithoutModificadorInput
    usuarioMouse?: mouseUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorMouse?: mouseUncheckedCreateNestedManyWithoutModificadorInput
    usuarioEstabilizador?: estabilizadorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorEstabilizador?: estabilizadorUncheckedCreateNestedManyWithoutModificadorInput
    usuarioImpressora?: impressoraUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorImpressora?: impressoraUncheckedCreateNestedManyWithoutModificadorInput
    usuarioPlacamae?: placamaeUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorPlacamae?: placamaeUncheckedCreateNestedManyWithoutModificadorInput
    modificadorNotebook?: notebookUncheckedCreateNestedManyWithoutModificadorInput
    usuarioProcessador?: processadorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorProcessador?: processadorUncheckedCreateNestedManyWithoutModificadorInput
  }

  export type alunoCreateOrConnectWithoutUsuarioNotebookInput = {
    where: alunoWhereUniqueInput
    create: XOR<alunoCreateWithoutUsuarioNotebookInput, alunoUncheckedCreateWithoutUsuarioNotebookInput>
  }

  export type alunoCreateWithoutModificadorNotebookInput = {
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    descarte?: descarteCreateNestedManyWithoutUsuarioInput
    doacao?: doacaoCreateNestedManyWithoutDonatarioInput
    doacaoUsuario?: doacaoUsuarioCreateNestedManyWithoutUsuarioInput
    solicitacao?: solicitacaoCreateNestedManyWithoutUsuarioInput
    modificadorTeclado?: tecladoCreateNestedManyWithoutModificadorInput
    usuarioTeclado?: tecladoCreateNestedManyWithoutUsuarioInput
    hd?: hdCreateNestedManyWithoutAlunoInput
    modificadorHd?: hdCreateNestedManyWithoutModificadorInput
    fonteDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutUsuarioInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutModificadorInput
    gabinete?: gabineteCreateNestedManyWithoutUsuarioInput
    modificadorGabinete?: gabineteCreateNestedManyWithoutModificadorInput
    monitor?: monitorCreateNestedManyWithoutUsuarioInput
    modificadorMonitor?: monitorCreateNestedManyWithoutModificadorInput
    usuarioMouse?: mouseCreateNestedManyWithoutUsuarioInput
    modificadorMouse?: mouseCreateNestedManyWithoutModificadorInput
    usuarioEstabilizador?: estabilizadorCreateNestedManyWithoutUsuarioInput
    modificadorEstabilizador?: estabilizadorCreateNestedManyWithoutModificadorInput
    usuarioImpressora?: impressoraCreateNestedManyWithoutUsuarioInput
    modificadorImpressora?: impressoraCreateNestedManyWithoutModificadorInput
    usuarioPlacamae?: placamaeCreateNestedManyWithoutUsuarioInput
    modificadorPlacamae?: placamaeCreateNestedManyWithoutModificadorInput
    usuarioNotebook?: notebookCreateNestedManyWithoutUsuarioInput
    usuarioProcessador?: processadorCreateNestedManyWithoutUsuarioInput
    modificadorProcessador?: processadorCreateNestedManyWithoutModificadorInput
  }

  export type alunoUncheckedCreateWithoutModificadorNotebookInput = {
    id?: number
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    descarte?: descarteUncheckedCreateNestedManyWithoutUsuarioInput
    doacao?: doacaoUncheckedCreateNestedManyWithoutDonatarioInput
    doacaoUsuario?: doacaoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    solicitacao?: solicitacaoUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorTeclado?: tecladoUncheckedCreateNestedManyWithoutModificadorInput
    usuarioTeclado?: tecladoUncheckedCreateNestedManyWithoutUsuarioInput
    hd?: hdUncheckedCreateNestedManyWithoutAlunoInput
    modificadorHd?: hdUncheckedCreateNestedManyWithoutModificadorInput
    fonteDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutModificadorInput
    gabinete?: gabineteUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorGabinete?: gabineteUncheckedCreateNestedManyWithoutModificadorInput
    monitor?: monitorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorMonitor?: monitorUncheckedCreateNestedManyWithoutModificadorInput
    usuarioMouse?: mouseUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorMouse?: mouseUncheckedCreateNestedManyWithoutModificadorInput
    usuarioEstabilizador?: estabilizadorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorEstabilizador?: estabilizadorUncheckedCreateNestedManyWithoutModificadorInput
    usuarioImpressora?: impressoraUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorImpressora?: impressoraUncheckedCreateNestedManyWithoutModificadorInput
    usuarioPlacamae?: placamaeUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorPlacamae?: placamaeUncheckedCreateNestedManyWithoutModificadorInput
    usuarioNotebook?: notebookUncheckedCreateNestedManyWithoutUsuarioInput
    usuarioProcessador?: processadorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorProcessador?: processadorUncheckedCreateNestedManyWithoutModificadorInput
  }

  export type alunoCreateOrConnectWithoutModificadorNotebookInput = {
    where: alunoWhereUniqueInput
    create: XOR<alunoCreateWithoutModificadorNotebookInput, alunoUncheckedCreateWithoutModificadorNotebookInput>
  }

  export type doacaoUpsertWithoutNotebooksInput = {
    update: XOR<doacaoUpdateWithoutNotebooksInput, doacaoUncheckedUpdateWithoutNotebooksInput>
    create: XOR<doacaoCreateWithoutNotebooksInput, doacaoUncheckedCreateWithoutNotebooksInput>
    where?: doacaoWhereInput
  }

  export type doacaoUpdateToOneWithWhereWithoutNotebooksInput = {
    where?: doacaoWhereInput
    data: XOR<doacaoUpdateWithoutNotebooksInput, doacaoUncheckedUpdateWithoutNotebooksInput>
  }

  export type doacaoUpdateWithoutNotebooksInput = {
    name?: StringFieldUpdateOperationsInput | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    justificativa?: StringFieldUpdateOperationsInput | string
    nomeOuEmpresa?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    donatario?: alunoUpdateOneWithoutDoacaoNestedInput
    usuariofisico?: pessoafisicaUpdateOneWithoutDoacaoNestedInput
    usuariojuridico?: pessoajuridicaUpdateOneWithoutDoacaoNestedInput
    teclados?: tecladoUpdateManyWithoutDoacaoNestedInput
    hds?: hdUpdateManyWithoutDoacaoNestedInput
    fontesDeAlimentacao?: fontedealimentacaoUpdateManyWithoutDoacaoNestedInput
    gabinetes?: gabineteUpdateManyWithoutDoacaoNestedInput
    monitores?: monitorUpdateManyWithoutDoacaoNestedInput
    mouses?: mouseUpdateManyWithoutDoacaoNestedInput
    estabilizadores?: estabilizadorUpdateManyWithoutDoacaoNestedInput
    impressoras?: impressoraUpdateManyWithoutDoacaoNestedInput
    placasmae?: placamaeUpdateManyWithoutDoacaoNestedInput
    processadores?: processadorUpdateManyWithoutDoacaoNestedInput
  }

  export type doacaoUncheckedUpdateWithoutNotebooksInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    justificativa?: StringFieldUpdateOperationsInput | string
    nomeOuEmpresa?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    donatarioId?: NullableIntFieldUpdateOperationsInput | number | null
    usuariofisicoId?: NullableIntFieldUpdateOperationsInput | number | null
    usuariojuridicoId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    teclados?: tecladoUncheckedUpdateManyWithoutDoacaoNestedInput
    hds?: hdUncheckedUpdateManyWithoutDoacaoNestedInput
    fontesDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutDoacaoNestedInput
    gabinetes?: gabineteUncheckedUpdateManyWithoutDoacaoNestedInput
    monitores?: monitorUncheckedUpdateManyWithoutDoacaoNestedInput
    mouses?: mouseUncheckedUpdateManyWithoutDoacaoNestedInput
    estabilizadores?: estabilizadorUncheckedUpdateManyWithoutDoacaoNestedInput
    impressoras?: impressoraUncheckedUpdateManyWithoutDoacaoNestedInput
    placasmae?: placamaeUncheckedUpdateManyWithoutDoacaoNestedInput
    processadores?: processadorUncheckedUpdateManyWithoutDoacaoNestedInput
  }

  export type descarteUpsertWithoutNotebooksInput = {
    update: XOR<descarteUpdateWithoutNotebooksInput, descarteUncheckedUpdateWithoutNotebooksInput>
    create: XOR<descarteCreateWithoutNotebooksInput, descarteUncheckedCreateWithoutNotebooksInput>
    where?: descarteWhereInput
  }

  export type descarteUpdateToOneWithWhereWithoutNotebooksInput = {
    where?: descarteWhereInput
    data: XOR<descarteUpdateWithoutNotebooksInput, descarteUncheckedUpdateWithoutNotebooksInput>
  }

  export type descarteUpdateWithoutNotebooksInput = {
    name?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: alunoUpdateOneWithoutDescarteNestedInput
    teclados?: tecladoUpdateManyWithoutDescarteNestedInput
    hds?: hdUpdateManyWithoutDescarteNestedInput
    fontesDeAlimentacao?: fontedealimentacaoUpdateManyWithoutDescarteNestedInput
    gabinetes?: gabineteUpdateManyWithoutDescarteNestedInput
    monitores?: monitorUpdateManyWithoutDescarteNestedInput
    mouses?: mouseUpdateManyWithoutDescarteNestedInput
    estabilizadores?: estabilizadorUpdateManyWithoutDescarteNestedInput
    impressoras?: impressoraUpdateManyWithoutDescarteNestedInput
    placasmae?: placamaeUpdateManyWithoutDescarteNestedInput
    processadores?: processadorUpdateManyWithoutDescarteNestedInput
  }

  export type descarteUncheckedUpdateWithoutNotebooksInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    teclados?: tecladoUncheckedUpdateManyWithoutDescarteNestedInput
    hds?: hdUncheckedUpdateManyWithoutDescarteNestedInput
    fontesDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutDescarteNestedInput
    gabinetes?: gabineteUncheckedUpdateManyWithoutDescarteNestedInput
    monitores?: monitorUncheckedUpdateManyWithoutDescarteNestedInput
    mouses?: mouseUncheckedUpdateManyWithoutDescarteNestedInput
    estabilizadores?: estabilizadorUncheckedUpdateManyWithoutDescarteNestedInput
    impressoras?: impressoraUncheckedUpdateManyWithoutDescarteNestedInput
    placasmae?: placamaeUncheckedUpdateManyWithoutDescarteNestedInput
    processadores?: processadorUncheckedUpdateManyWithoutDescarteNestedInput
  }

  export type alunoUpsertWithoutUsuarioNotebookInput = {
    update: XOR<alunoUpdateWithoutUsuarioNotebookInput, alunoUncheckedUpdateWithoutUsuarioNotebookInput>
    create: XOR<alunoCreateWithoutUsuarioNotebookInput, alunoUncheckedCreateWithoutUsuarioNotebookInput>
    where?: alunoWhereInput
  }

  export type alunoUpdateToOneWithWhereWithoutUsuarioNotebookInput = {
    where?: alunoWhereInput
    data: XOR<alunoUpdateWithoutUsuarioNotebookInput, alunoUncheckedUpdateWithoutUsuarioNotebookInput>
  }

  export type alunoUpdateWithoutUsuarioNotebookInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUpdateManyWithoutUsuarioNestedInput
    doacao?: doacaoUpdateManyWithoutDonatarioNestedInput
    doacaoUsuario?: doacaoUsuarioUpdateManyWithoutUsuarioNestedInput
    solicitacao?: solicitacaoUpdateManyWithoutUsuarioNestedInput
    modificadorTeclado?: tecladoUpdateManyWithoutModificadorNestedInput
    usuarioTeclado?: tecladoUpdateManyWithoutUsuarioNestedInput
    hd?: hdUpdateManyWithoutAlunoNestedInput
    modificadorHd?: hdUpdateManyWithoutModificadorNestedInput
    fonteDeAlimentacao?: fontedealimentacaoUpdateManyWithoutUsuarioNestedInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUpdateManyWithoutModificadorNestedInput
    gabinete?: gabineteUpdateManyWithoutUsuarioNestedInput
    modificadorGabinete?: gabineteUpdateManyWithoutModificadorNestedInput
    monitor?: monitorUpdateManyWithoutUsuarioNestedInput
    modificadorMonitor?: monitorUpdateManyWithoutModificadorNestedInput
    usuarioMouse?: mouseUpdateManyWithoutUsuarioNestedInput
    modificadorMouse?: mouseUpdateManyWithoutModificadorNestedInput
    usuarioEstabilizador?: estabilizadorUpdateManyWithoutUsuarioNestedInput
    modificadorEstabilizador?: estabilizadorUpdateManyWithoutModificadorNestedInput
    usuarioImpressora?: impressoraUpdateManyWithoutUsuarioNestedInput
    modificadorImpressora?: impressoraUpdateManyWithoutModificadorNestedInput
    usuarioPlacamae?: placamaeUpdateManyWithoutUsuarioNestedInput
    modificadorPlacamae?: placamaeUpdateManyWithoutModificadorNestedInput
    modificadorNotebook?: notebookUpdateManyWithoutModificadorNestedInput
    usuarioProcessador?: processadorUpdateManyWithoutUsuarioNestedInput
    modificadorProcessador?: processadorUpdateManyWithoutModificadorNestedInput
  }

  export type alunoUncheckedUpdateWithoutUsuarioNotebookInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUncheckedUpdateManyWithoutUsuarioNestedInput
    doacao?: doacaoUncheckedUpdateManyWithoutDonatarioNestedInput
    doacaoUsuario?: doacaoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitacao?: solicitacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorTeclado?: tecladoUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioTeclado?: tecladoUncheckedUpdateManyWithoutUsuarioNestedInput
    hd?: hdUncheckedUpdateManyWithoutAlunoNestedInput
    modificadorHd?: hdUncheckedUpdateManyWithoutModificadorNestedInput
    fonteDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutModificadorNestedInput
    gabinete?: gabineteUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorGabinete?: gabineteUncheckedUpdateManyWithoutModificadorNestedInput
    monitor?: monitorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorMonitor?: monitorUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioMouse?: mouseUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorMouse?: mouseUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioEstabilizador?: estabilizadorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorEstabilizador?: estabilizadorUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioImpressora?: impressoraUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorImpressora?: impressoraUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioPlacamae?: placamaeUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorPlacamae?: placamaeUncheckedUpdateManyWithoutModificadorNestedInput
    modificadorNotebook?: notebookUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioProcessador?: processadorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorProcessador?: processadorUncheckedUpdateManyWithoutModificadorNestedInput
  }

  export type alunoUpsertWithoutModificadorNotebookInput = {
    update: XOR<alunoUpdateWithoutModificadorNotebookInput, alunoUncheckedUpdateWithoutModificadorNotebookInput>
    create: XOR<alunoCreateWithoutModificadorNotebookInput, alunoUncheckedCreateWithoutModificadorNotebookInput>
    where?: alunoWhereInput
  }

  export type alunoUpdateToOneWithWhereWithoutModificadorNotebookInput = {
    where?: alunoWhereInput
    data: XOR<alunoUpdateWithoutModificadorNotebookInput, alunoUncheckedUpdateWithoutModificadorNotebookInput>
  }

  export type alunoUpdateWithoutModificadorNotebookInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUpdateManyWithoutUsuarioNestedInput
    doacao?: doacaoUpdateManyWithoutDonatarioNestedInput
    doacaoUsuario?: doacaoUsuarioUpdateManyWithoutUsuarioNestedInput
    solicitacao?: solicitacaoUpdateManyWithoutUsuarioNestedInput
    modificadorTeclado?: tecladoUpdateManyWithoutModificadorNestedInput
    usuarioTeclado?: tecladoUpdateManyWithoutUsuarioNestedInput
    hd?: hdUpdateManyWithoutAlunoNestedInput
    modificadorHd?: hdUpdateManyWithoutModificadorNestedInput
    fonteDeAlimentacao?: fontedealimentacaoUpdateManyWithoutUsuarioNestedInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUpdateManyWithoutModificadorNestedInput
    gabinete?: gabineteUpdateManyWithoutUsuarioNestedInput
    modificadorGabinete?: gabineteUpdateManyWithoutModificadorNestedInput
    monitor?: monitorUpdateManyWithoutUsuarioNestedInput
    modificadorMonitor?: monitorUpdateManyWithoutModificadorNestedInput
    usuarioMouse?: mouseUpdateManyWithoutUsuarioNestedInput
    modificadorMouse?: mouseUpdateManyWithoutModificadorNestedInput
    usuarioEstabilizador?: estabilizadorUpdateManyWithoutUsuarioNestedInput
    modificadorEstabilizador?: estabilizadorUpdateManyWithoutModificadorNestedInput
    usuarioImpressora?: impressoraUpdateManyWithoutUsuarioNestedInput
    modificadorImpressora?: impressoraUpdateManyWithoutModificadorNestedInput
    usuarioPlacamae?: placamaeUpdateManyWithoutUsuarioNestedInput
    modificadorPlacamae?: placamaeUpdateManyWithoutModificadorNestedInput
    usuarioNotebook?: notebookUpdateManyWithoutUsuarioNestedInput
    usuarioProcessador?: processadorUpdateManyWithoutUsuarioNestedInput
    modificadorProcessador?: processadorUpdateManyWithoutModificadorNestedInput
  }

  export type alunoUncheckedUpdateWithoutModificadorNotebookInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUncheckedUpdateManyWithoutUsuarioNestedInput
    doacao?: doacaoUncheckedUpdateManyWithoutDonatarioNestedInput
    doacaoUsuario?: doacaoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitacao?: solicitacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorTeclado?: tecladoUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioTeclado?: tecladoUncheckedUpdateManyWithoutUsuarioNestedInput
    hd?: hdUncheckedUpdateManyWithoutAlunoNestedInput
    modificadorHd?: hdUncheckedUpdateManyWithoutModificadorNestedInput
    fonteDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutModificadorNestedInput
    gabinete?: gabineteUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorGabinete?: gabineteUncheckedUpdateManyWithoutModificadorNestedInput
    monitor?: monitorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorMonitor?: monitorUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioMouse?: mouseUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorMouse?: mouseUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioEstabilizador?: estabilizadorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorEstabilizador?: estabilizadorUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioImpressora?: impressoraUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorImpressora?: impressoraUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioPlacamae?: placamaeUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorPlacamae?: placamaeUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioNotebook?: notebookUncheckedUpdateManyWithoutUsuarioNestedInput
    usuarioProcessador?: processadorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorProcessador?: processadorUncheckedUpdateManyWithoutModificadorNestedInput
  }

  export type doacaoCreateWithoutProcessadoresInput = {
    name: string
    codigoDeReferencias: string
    descricao: string
    justificativa: string
    nomeOuEmpresa: string
    contato: string
    data: Date | string
    status: string
    createdAt?: Date | string
    donatario?: alunoCreateNestedOneWithoutDoacaoInput
    usuariofisico?: pessoafisicaCreateNestedOneWithoutDoacaoInput
    usuariojuridico?: pessoajuridicaCreateNestedOneWithoutDoacaoInput
    teclados?: tecladoCreateNestedManyWithoutDoacaoInput
    hds?: hdCreateNestedManyWithoutDoacaoInput
    fontesDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutDoacaoInput
    gabinetes?: gabineteCreateNestedManyWithoutDoacaoInput
    monitores?: monitorCreateNestedManyWithoutDoacaoInput
    mouses?: mouseCreateNestedManyWithoutDoacaoInput
    estabilizadores?: estabilizadorCreateNestedManyWithoutDoacaoInput
    impressoras?: impressoraCreateNestedManyWithoutDoacaoInput
    placasmae?: placamaeCreateNestedManyWithoutDoacaoInput
    notebooks?: notebookCreateNestedManyWithoutDoacaoInput
  }

  export type doacaoUncheckedCreateWithoutProcessadoresInput = {
    id?: number
    name: string
    codigoDeReferencias: string
    descricao: string
    justificativa: string
    nomeOuEmpresa: string
    contato: string
    data: Date | string
    status: string
    donatarioId?: number | null
    usuariofisicoId?: number | null
    usuariojuridicoId?: number | null
    createdAt?: Date | string
    teclados?: tecladoUncheckedCreateNestedManyWithoutDoacaoInput
    hds?: hdUncheckedCreateNestedManyWithoutDoacaoInput
    fontesDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutDoacaoInput
    gabinetes?: gabineteUncheckedCreateNestedManyWithoutDoacaoInput
    monitores?: monitorUncheckedCreateNestedManyWithoutDoacaoInput
    mouses?: mouseUncheckedCreateNestedManyWithoutDoacaoInput
    estabilizadores?: estabilizadorUncheckedCreateNestedManyWithoutDoacaoInput
    impressoras?: impressoraUncheckedCreateNestedManyWithoutDoacaoInput
    placasmae?: placamaeUncheckedCreateNestedManyWithoutDoacaoInput
    notebooks?: notebookUncheckedCreateNestedManyWithoutDoacaoInput
  }

  export type doacaoCreateOrConnectWithoutProcessadoresInput = {
    where: doacaoWhereUniqueInput
    create: XOR<doacaoCreateWithoutProcessadoresInput, doacaoUncheckedCreateWithoutProcessadoresInput>
  }

  export type descarteCreateWithoutProcessadoresInput = {
    name: string
    descricao: string
    data: Date | string
    codigoDeReferencias: string
    createdAt?: Date | string
    usuario?: alunoCreateNestedOneWithoutDescarteInput
    teclados?: tecladoCreateNestedManyWithoutDescarteInput
    hds?: hdCreateNestedManyWithoutDescarteInput
    fontesDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutDescarteInput
    gabinetes?: gabineteCreateNestedManyWithoutDescarteInput
    monitores?: monitorCreateNestedManyWithoutDescarteInput
    mouses?: mouseCreateNestedManyWithoutDescarteInput
    estabilizadores?: estabilizadorCreateNestedManyWithoutDescarteInput
    impressoras?: impressoraCreateNestedManyWithoutDescarteInput
    placasmae?: placamaeCreateNestedManyWithoutDescarteInput
    notebooks?: notebookCreateNestedManyWithoutDescarteInput
  }

  export type descarteUncheckedCreateWithoutProcessadoresInput = {
    id?: number
    name: string
    descricao: string
    data: Date | string
    codigoDeReferencias: string
    usuarioId?: number | null
    createdAt?: Date | string
    teclados?: tecladoUncheckedCreateNestedManyWithoutDescarteInput
    hds?: hdUncheckedCreateNestedManyWithoutDescarteInput
    fontesDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutDescarteInput
    gabinetes?: gabineteUncheckedCreateNestedManyWithoutDescarteInput
    monitores?: monitorUncheckedCreateNestedManyWithoutDescarteInput
    mouses?: mouseUncheckedCreateNestedManyWithoutDescarteInput
    estabilizadores?: estabilizadorUncheckedCreateNestedManyWithoutDescarteInput
    impressoras?: impressoraUncheckedCreateNestedManyWithoutDescarteInput
    placasmae?: placamaeUncheckedCreateNestedManyWithoutDescarteInput
    notebooks?: notebookUncheckedCreateNestedManyWithoutDescarteInput
  }

  export type descarteCreateOrConnectWithoutProcessadoresInput = {
    where: descarteWhereUniqueInput
    create: XOR<descarteCreateWithoutProcessadoresInput, descarteUncheckedCreateWithoutProcessadoresInput>
  }

  export type alunoCreateWithoutUsuarioProcessadorInput = {
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    descarte?: descarteCreateNestedManyWithoutUsuarioInput
    doacao?: doacaoCreateNestedManyWithoutDonatarioInput
    doacaoUsuario?: doacaoUsuarioCreateNestedManyWithoutUsuarioInput
    solicitacao?: solicitacaoCreateNestedManyWithoutUsuarioInput
    modificadorTeclado?: tecladoCreateNestedManyWithoutModificadorInput
    usuarioTeclado?: tecladoCreateNestedManyWithoutUsuarioInput
    hd?: hdCreateNestedManyWithoutAlunoInput
    modificadorHd?: hdCreateNestedManyWithoutModificadorInput
    fonteDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutUsuarioInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutModificadorInput
    gabinete?: gabineteCreateNestedManyWithoutUsuarioInput
    modificadorGabinete?: gabineteCreateNestedManyWithoutModificadorInput
    monitor?: monitorCreateNestedManyWithoutUsuarioInput
    modificadorMonitor?: monitorCreateNestedManyWithoutModificadorInput
    usuarioMouse?: mouseCreateNestedManyWithoutUsuarioInput
    modificadorMouse?: mouseCreateNestedManyWithoutModificadorInput
    usuarioEstabilizador?: estabilizadorCreateNestedManyWithoutUsuarioInput
    modificadorEstabilizador?: estabilizadorCreateNestedManyWithoutModificadorInput
    usuarioImpressora?: impressoraCreateNestedManyWithoutUsuarioInput
    modificadorImpressora?: impressoraCreateNestedManyWithoutModificadorInput
    usuarioPlacamae?: placamaeCreateNestedManyWithoutUsuarioInput
    modificadorPlacamae?: placamaeCreateNestedManyWithoutModificadorInput
    usuarioNotebook?: notebookCreateNestedManyWithoutUsuarioInput
    modificadorNotebook?: notebookCreateNestedManyWithoutModificadorInput
    modificadorProcessador?: processadorCreateNestedManyWithoutModificadorInput
  }

  export type alunoUncheckedCreateWithoutUsuarioProcessadorInput = {
    id?: number
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    descarte?: descarteUncheckedCreateNestedManyWithoutUsuarioInput
    doacao?: doacaoUncheckedCreateNestedManyWithoutDonatarioInput
    doacaoUsuario?: doacaoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    solicitacao?: solicitacaoUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorTeclado?: tecladoUncheckedCreateNestedManyWithoutModificadorInput
    usuarioTeclado?: tecladoUncheckedCreateNestedManyWithoutUsuarioInput
    hd?: hdUncheckedCreateNestedManyWithoutAlunoInput
    modificadorHd?: hdUncheckedCreateNestedManyWithoutModificadorInput
    fonteDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutModificadorInput
    gabinete?: gabineteUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorGabinete?: gabineteUncheckedCreateNestedManyWithoutModificadorInput
    monitor?: monitorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorMonitor?: monitorUncheckedCreateNestedManyWithoutModificadorInput
    usuarioMouse?: mouseUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorMouse?: mouseUncheckedCreateNestedManyWithoutModificadorInput
    usuarioEstabilizador?: estabilizadorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorEstabilizador?: estabilizadorUncheckedCreateNestedManyWithoutModificadorInput
    usuarioImpressora?: impressoraUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorImpressora?: impressoraUncheckedCreateNestedManyWithoutModificadorInput
    usuarioPlacamae?: placamaeUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorPlacamae?: placamaeUncheckedCreateNestedManyWithoutModificadorInput
    usuarioNotebook?: notebookUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorNotebook?: notebookUncheckedCreateNestedManyWithoutModificadorInput
    modificadorProcessador?: processadorUncheckedCreateNestedManyWithoutModificadorInput
  }

  export type alunoCreateOrConnectWithoutUsuarioProcessadorInput = {
    where: alunoWhereUniqueInput
    create: XOR<alunoCreateWithoutUsuarioProcessadorInput, alunoUncheckedCreateWithoutUsuarioProcessadorInput>
  }

  export type alunoCreateWithoutModificadorProcessadorInput = {
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    descarte?: descarteCreateNestedManyWithoutUsuarioInput
    doacao?: doacaoCreateNestedManyWithoutDonatarioInput
    doacaoUsuario?: doacaoUsuarioCreateNestedManyWithoutUsuarioInput
    solicitacao?: solicitacaoCreateNestedManyWithoutUsuarioInput
    modificadorTeclado?: tecladoCreateNestedManyWithoutModificadorInput
    usuarioTeclado?: tecladoCreateNestedManyWithoutUsuarioInput
    hd?: hdCreateNestedManyWithoutAlunoInput
    modificadorHd?: hdCreateNestedManyWithoutModificadorInput
    fonteDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutUsuarioInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutModificadorInput
    gabinete?: gabineteCreateNestedManyWithoutUsuarioInput
    modificadorGabinete?: gabineteCreateNestedManyWithoutModificadorInput
    monitor?: monitorCreateNestedManyWithoutUsuarioInput
    modificadorMonitor?: monitorCreateNestedManyWithoutModificadorInput
    usuarioMouse?: mouseCreateNestedManyWithoutUsuarioInput
    modificadorMouse?: mouseCreateNestedManyWithoutModificadorInput
    usuarioEstabilizador?: estabilizadorCreateNestedManyWithoutUsuarioInput
    modificadorEstabilizador?: estabilizadorCreateNestedManyWithoutModificadorInput
    usuarioImpressora?: impressoraCreateNestedManyWithoutUsuarioInput
    modificadorImpressora?: impressoraCreateNestedManyWithoutModificadorInput
    usuarioPlacamae?: placamaeCreateNestedManyWithoutUsuarioInput
    modificadorPlacamae?: placamaeCreateNestedManyWithoutModificadorInput
    usuarioNotebook?: notebookCreateNestedManyWithoutUsuarioInput
    modificadorNotebook?: notebookCreateNestedManyWithoutModificadorInput
    usuarioProcessador?: processadorCreateNestedManyWithoutUsuarioInput
  }

  export type alunoUncheckedCreateWithoutModificadorProcessadorInput = {
    id?: number
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    descarte?: descarteUncheckedCreateNestedManyWithoutUsuarioInput
    doacao?: doacaoUncheckedCreateNestedManyWithoutDonatarioInput
    doacaoUsuario?: doacaoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    solicitacao?: solicitacaoUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorTeclado?: tecladoUncheckedCreateNestedManyWithoutModificadorInput
    usuarioTeclado?: tecladoUncheckedCreateNestedManyWithoutUsuarioInput
    hd?: hdUncheckedCreateNestedManyWithoutAlunoInput
    modificadorHd?: hdUncheckedCreateNestedManyWithoutModificadorInput
    fonteDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutModificadorInput
    gabinete?: gabineteUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorGabinete?: gabineteUncheckedCreateNestedManyWithoutModificadorInput
    monitor?: monitorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorMonitor?: monitorUncheckedCreateNestedManyWithoutModificadorInput
    usuarioMouse?: mouseUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorMouse?: mouseUncheckedCreateNestedManyWithoutModificadorInput
    usuarioEstabilizador?: estabilizadorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorEstabilizador?: estabilizadorUncheckedCreateNestedManyWithoutModificadorInput
    usuarioImpressora?: impressoraUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorImpressora?: impressoraUncheckedCreateNestedManyWithoutModificadorInput
    usuarioPlacamae?: placamaeUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorPlacamae?: placamaeUncheckedCreateNestedManyWithoutModificadorInput
    usuarioNotebook?: notebookUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorNotebook?: notebookUncheckedCreateNestedManyWithoutModificadorInput
    usuarioProcessador?: processadorUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type alunoCreateOrConnectWithoutModificadorProcessadorInput = {
    where: alunoWhereUniqueInput
    create: XOR<alunoCreateWithoutModificadorProcessadorInput, alunoUncheckedCreateWithoutModificadorProcessadorInput>
  }

  export type doacaoUpsertWithoutProcessadoresInput = {
    update: XOR<doacaoUpdateWithoutProcessadoresInput, doacaoUncheckedUpdateWithoutProcessadoresInput>
    create: XOR<doacaoCreateWithoutProcessadoresInput, doacaoUncheckedCreateWithoutProcessadoresInput>
    where?: doacaoWhereInput
  }

  export type doacaoUpdateToOneWithWhereWithoutProcessadoresInput = {
    where?: doacaoWhereInput
    data: XOR<doacaoUpdateWithoutProcessadoresInput, doacaoUncheckedUpdateWithoutProcessadoresInput>
  }

  export type doacaoUpdateWithoutProcessadoresInput = {
    name?: StringFieldUpdateOperationsInput | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    justificativa?: StringFieldUpdateOperationsInput | string
    nomeOuEmpresa?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    donatario?: alunoUpdateOneWithoutDoacaoNestedInput
    usuariofisico?: pessoafisicaUpdateOneWithoutDoacaoNestedInput
    usuariojuridico?: pessoajuridicaUpdateOneWithoutDoacaoNestedInput
    teclados?: tecladoUpdateManyWithoutDoacaoNestedInput
    hds?: hdUpdateManyWithoutDoacaoNestedInput
    fontesDeAlimentacao?: fontedealimentacaoUpdateManyWithoutDoacaoNestedInput
    gabinetes?: gabineteUpdateManyWithoutDoacaoNestedInput
    monitores?: monitorUpdateManyWithoutDoacaoNestedInput
    mouses?: mouseUpdateManyWithoutDoacaoNestedInput
    estabilizadores?: estabilizadorUpdateManyWithoutDoacaoNestedInput
    impressoras?: impressoraUpdateManyWithoutDoacaoNestedInput
    placasmae?: placamaeUpdateManyWithoutDoacaoNestedInput
    notebooks?: notebookUpdateManyWithoutDoacaoNestedInput
  }

  export type doacaoUncheckedUpdateWithoutProcessadoresInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    justificativa?: StringFieldUpdateOperationsInput | string
    nomeOuEmpresa?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    donatarioId?: NullableIntFieldUpdateOperationsInput | number | null
    usuariofisicoId?: NullableIntFieldUpdateOperationsInput | number | null
    usuariojuridicoId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    teclados?: tecladoUncheckedUpdateManyWithoutDoacaoNestedInput
    hds?: hdUncheckedUpdateManyWithoutDoacaoNestedInput
    fontesDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutDoacaoNestedInput
    gabinetes?: gabineteUncheckedUpdateManyWithoutDoacaoNestedInput
    monitores?: monitorUncheckedUpdateManyWithoutDoacaoNestedInput
    mouses?: mouseUncheckedUpdateManyWithoutDoacaoNestedInput
    estabilizadores?: estabilizadorUncheckedUpdateManyWithoutDoacaoNestedInput
    impressoras?: impressoraUncheckedUpdateManyWithoutDoacaoNestedInput
    placasmae?: placamaeUncheckedUpdateManyWithoutDoacaoNestedInput
    notebooks?: notebookUncheckedUpdateManyWithoutDoacaoNestedInput
  }

  export type descarteUpsertWithoutProcessadoresInput = {
    update: XOR<descarteUpdateWithoutProcessadoresInput, descarteUncheckedUpdateWithoutProcessadoresInput>
    create: XOR<descarteCreateWithoutProcessadoresInput, descarteUncheckedCreateWithoutProcessadoresInput>
    where?: descarteWhereInput
  }

  export type descarteUpdateToOneWithWhereWithoutProcessadoresInput = {
    where?: descarteWhereInput
    data: XOR<descarteUpdateWithoutProcessadoresInput, descarteUncheckedUpdateWithoutProcessadoresInput>
  }

  export type descarteUpdateWithoutProcessadoresInput = {
    name?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: alunoUpdateOneWithoutDescarteNestedInput
    teclados?: tecladoUpdateManyWithoutDescarteNestedInput
    hds?: hdUpdateManyWithoutDescarteNestedInput
    fontesDeAlimentacao?: fontedealimentacaoUpdateManyWithoutDescarteNestedInput
    gabinetes?: gabineteUpdateManyWithoutDescarteNestedInput
    monitores?: monitorUpdateManyWithoutDescarteNestedInput
    mouses?: mouseUpdateManyWithoutDescarteNestedInput
    estabilizadores?: estabilizadorUpdateManyWithoutDescarteNestedInput
    impressoras?: impressoraUpdateManyWithoutDescarteNestedInput
    placasmae?: placamaeUpdateManyWithoutDescarteNestedInput
    notebooks?: notebookUpdateManyWithoutDescarteNestedInput
  }

  export type descarteUncheckedUpdateWithoutProcessadoresInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    teclados?: tecladoUncheckedUpdateManyWithoutDescarteNestedInput
    hds?: hdUncheckedUpdateManyWithoutDescarteNestedInput
    fontesDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutDescarteNestedInput
    gabinetes?: gabineteUncheckedUpdateManyWithoutDescarteNestedInput
    monitores?: monitorUncheckedUpdateManyWithoutDescarteNestedInput
    mouses?: mouseUncheckedUpdateManyWithoutDescarteNestedInput
    estabilizadores?: estabilizadorUncheckedUpdateManyWithoutDescarteNestedInput
    impressoras?: impressoraUncheckedUpdateManyWithoutDescarteNestedInput
    placasmae?: placamaeUncheckedUpdateManyWithoutDescarteNestedInput
    notebooks?: notebookUncheckedUpdateManyWithoutDescarteNestedInput
  }

  export type alunoUpsertWithoutUsuarioProcessadorInput = {
    update: XOR<alunoUpdateWithoutUsuarioProcessadorInput, alunoUncheckedUpdateWithoutUsuarioProcessadorInput>
    create: XOR<alunoCreateWithoutUsuarioProcessadorInput, alunoUncheckedCreateWithoutUsuarioProcessadorInput>
    where?: alunoWhereInput
  }

  export type alunoUpdateToOneWithWhereWithoutUsuarioProcessadorInput = {
    where?: alunoWhereInput
    data: XOR<alunoUpdateWithoutUsuarioProcessadorInput, alunoUncheckedUpdateWithoutUsuarioProcessadorInput>
  }

  export type alunoUpdateWithoutUsuarioProcessadorInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUpdateManyWithoutUsuarioNestedInput
    doacao?: doacaoUpdateManyWithoutDonatarioNestedInput
    doacaoUsuario?: doacaoUsuarioUpdateManyWithoutUsuarioNestedInput
    solicitacao?: solicitacaoUpdateManyWithoutUsuarioNestedInput
    modificadorTeclado?: tecladoUpdateManyWithoutModificadorNestedInput
    usuarioTeclado?: tecladoUpdateManyWithoutUsuarioNestedInput
    hd?: hdUpdateManyWithoutAlunoNestedInput
    modificadorHd?: hdUpdateManyWithoutModificadorNestedInput
    fonteDeAlimentacao?: fontedealimentacaoUpdateManyWithoutUsuarioNestedInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUpdateManyWithoutModificadorNestedInput
    gabinete?: gabineteUpdateManyWithoutUsuarioNestedInput
    modificadorGabinete?: gabineteUpdateManyWithoutModificadorNestedInput
    monitor?: monitorUpdateManyWithoutUsuarioNestedInput
    modificadorMonitor?: monitorUpdateManyWithoutModificadorNestedInput
    usuarioMouse?: mouseUpdateManyWithoutUsuarioNestedInput
    modificadorMouse?: mouseUpdateManyWithoutModificadorNestedInput
    usuarioEstabilizador?: estabilizadorUpdateManyWithoutUsuarioNestedInput
    modificadorEstabilizador?: estabilizadorUpdateManyWithoutModificadorNestedInput
    usuarioImpressora?: impressoraUpdateManyWithoutUsuarioNestedInput
    modificadorImpressora?: impressoraUpdateManyWithoutModificadorNestedInput
    usuarioPlacamae?: placamaeUpdateManyWithoutUsuarioNestedInput
    modificadorPlacamae?: placamaeUpdateManyWithoutModificadorNestedInput
    usuarioNotebook?: notebookUpdateManyWithoutUsuarioNestedInput
    modificadorNotebook?: notebookUpdateManyWithoutModificadorNestedInput
    modificadorProcessador?: processadorUpdateManyWithoutModificadorNestedInput
  }

  export type alunoUncheckedUpdateWithoutUsuarioProcessadorInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUncheckedUpdateManyWithoutUsuarioNestedInput
    doacao?: doacaoUncheckedUpdateManyWithoutDonatarioNestedInput
    doacaoUsuario?: doacaoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitacao?: solicitacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorTeclado?: tecladoUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioTeclado?: tecladoUncheckedUpdateManyWithoutUsuarioNestedInput
    hd?: hdUncheckedUpdateManyWithoutAlunoNestedInput
    modificadorHd?: hdUncheckedUpdateManyWithoutModificadorNestedInput
    fonteDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutModificadorNestedInput
    gabinete?: gabineteUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorGabinete?: gabineteUncheckedUpdateManyWithoutModificadorNestedInput
    monitor?: monitorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorMonitor?: monitorUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioMouse?: mouseUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorMouse?: mouseUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioEstabilizador?: estabilizadorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorEstabilizador?: estabilizadorUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioImpressora?: impressoraUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorImpressora?: impressoraUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioPlacamae?: placamaeUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorPlacamae?: placamaeUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioNotebook?: notebookUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorNotebook?: notebookUncheckedUpdateManyWithoutModificadorNestedInput
    modificadorProcessador?: processadorUncheckedUpdateManyWithoutModificadorNestedInput
  }

  export type alunoUpsertWithoutModificadorProcessadorInput = {
    update: XOR<alunoUpdateWithoutModificadorProcessadorInput, alunoUncheckedUpdateWithoutModificadorProcessadorInput>
    create: XOR<alunoCreateWithoutModificadorProcessadorInput, alunoUncheckedCreateWithoutModificadorProcessadorInput>
    where?: alunoWhereInput
  }

  export type alunoUpdateToOneWithWhereWithoutModificadorProcessadorInput = {
    where?: alunoWhereInput
    data: XOR<alunoUpdateWithoutModificadorProcessadorInput, alunoUncheckedUpdateWithoutModificadorProcessadorInput>
  }

  export type alunoUpdateWithoutModificadorProcessadorInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUpdateManyWithoutUsuarioNestedInput
    doacao?: doacaoUpdateManyWithoutDonatarioNestedInput
    doacaoUsuario?: doacaoUsuarioUpdateManyWithoutUsuarioNestedInput
    solicitacao?: solicitacaoUpdateManyWithoutUsuarioNestedInput
    modificadorTeclado?: tecladoUpdateManyWithoutModificadorNestedInput
    usuarioTeclado?: tecladoUpdateManyWithoutUsuarioNestedInput
    hd?: hdUpdateManyWithoutAlunoNestedInput
    modificadorHd?: hdUpdateManyWithoutModificadorNestedInput
    fonteDeAlimentacao?: fontedealimentacaoUpdateManyWithoutUsuarioNestedInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUpdateManyWithoutModificadorNestedInput
    gabinete?: gabineteUpdateManyWithoutUsuarioNestedInput
    modificadorGabinete?: gabineteUpdateManyWithoutModificadorNestedInput
    monitor?: monitorUpdateManyWithoutUsuarioNestedInput
    modificadorMonitor?: monitorUpdateManyWithoutModificadorNestedInput
    usuarioMouse?: mouseUpdateManyWithoutUsuarioNestedInput
    modificadorMouse?: mouseUpdateManyWithoutModificadorNestedInput
    usuarioEstabilizador?: estabilizadorUpdateManyWithoutUsuarioNestedInput
    modificadorEstabilizador?: estabilizadorUpdateManyWithoutModificadorNestedInput
    usuarioImpressora?: impressoraUpdateManyWithoutUsuarioNestedInput
    modificadorImpressora?: impressoraUpdateManyWithoutModificadorNestedInput
    usuarioPlacamae?: placamaeUpdateManyWithoutUsuarioNestedInput
    modificadorPlacamae?: placamaeUpdateManyWithoutModificadorNestedInput
    usuarioNotebook?: notebookUpdateManyWithoutUsuarioNestedInput
    modificadorNotebook?: notebookUpdateManyWithoutModificadorNestedInput
    usuarioProcessador?: processadorUpdateManyWithoutUsuarioNestedInput
  }

  export type alunoUncheckedUpdateWithoutModificadorProcessadorInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUncheckedUpdateManyWithoutUsuarioNestedInput
    doacao?: doacaoUncheckedUpdateManyWithoutDonatarioNestedInput
    doacaoUsuario?: doacaoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitacao?: solicitacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorTeclado?: tecladoUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioTeclado?: tecladoUncheckedUpdateManyWithoutUsuarioNestedInput
    hd?: hdUncheckedUpdateManyWithoutAlunoNestedInput
    modificadorHd?: hdUncheckedUpdateManyWithoutModificadorNestedInput
    fonteDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutModificadorNestedInput
    gabinete?: gabineteUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorGabinete?: gabineteUncheckedUpdateManyWithoutModificadorNestedInput
    monitor?: monitorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorMonitor?: monitorUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioMouse?: mouseUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorMouse?: mouseUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioEstabilizador?: estabilizadorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorEstabilizador?: estabilizadorUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioImpressora?: impressoraUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorImpressora?: impressoraUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioPlacamae?: placamaeUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorPlacamae?: placamaeUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioNotebook?: notebookUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorNotebook?: notebookUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioProcessador?: processadorUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type alunoCreateWithoutDescarteInput = {
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    doacao?: doacaoCreateNestedManyWithoutDonatarioInput
    doacaoUsuario?: doacaoUsuarioCreateNestedManyWithoutUsuarioInput
    solicitacao?: solicitacaoCreateNestedManyWithoutUsuarioInput
    modificadorTeclado?: tecladoCreateNestedManyWithoutModificadorInput
    usuarioTeclado?: tecladoCreateNestedManyWithoutUsuarioInput
    hd?: hdCreateNestedManyWithoutAlunoInput
    modificadorHd?: hdCreateNestedManyWithoutModificadorInput
    fonteDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutUsuarioInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutModificadorInput
    gabinete?: gabineteCreateNestedManyWithoutUsuarioInput
    modificadorGabinete?: gabineteCreateNestedManyWithoutModificadorInput
    monitor?: monitorCreateNestedManyWithoutUsuarioInput
    modificadorMonitor?: monitorCreateNestedManyWithoutModificadorInput
    usuarioMouse?: mouseCreateNestedManyWithoutUsuarioInput
    modificadorMouse?: mouseCreateNestedManyWithoutModificadorInput
    usuarioEstabilizador?: estabilizadorCreateNestedManyWithoutUsuarioInput
    modificadorEstabilizador?: estabilizadorCreateNestedManyWithoutModificadorInput
    usuarioImpressora?: impressoraCreateNestedManyWithoutUsuarioInput
    modificadorImpressora?: impressoraCreateNestedManyWithoutModificadorInput
    usuarioPlacamae?: placamaeCreateNestedManyWithoutUsuarioInput
    modificadorPlacamae?: placamaeCreateNestedManyWithoutModificadorInput
    usuarioNotebook?: notebookCreateNestedManyWithoutUsuarioInput
    modificadorNotebook?: notebookCreateNestedManyWithoutModificadorInput
    usuarioProcessador?: processadorCreateNestedManyWithoutUsuarioInput
    modificadorProcessador?: processadorCreateNestedManyWithoutModificadorInput
  }

  export type alunoUncheckedCreateWithoutDescarteInput = {
    id?: number
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    doacao?: doacaoUncheckedCreateNestedManyWithoutDonatarioInput
    doacaoUsuario?: doacaoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    solicitacao?: solicitacaoUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorTeclado?: tecladoUncheckedCreateNestedManyWithoutModificadorInput
    usuarioTeclado?: tecladoUncheckedCreateNestedManyWithoutUsuarioInput
    hd?: hdUncheckedCreateNestedManyWithoutAlunoInput
    modificadorHd?: hdUncheckedCreateNestedManyWithoutModificadorInput
    fonteDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutModificadorInput
    gabinete?: gabineteUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorGabinete?: gabineteUncheckedCreateNestedManyWithoutModificadorInput
    monitor?: monitorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorMonitor?: monitorUncheckedCreateNestedManyWithoutModificadorInput
    usuarioMouse?: mouseUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorMouse?: mouseUncheckedCreateNestedManyWithoutModificadorInput
    usuarioEstabilizador?: estabilizadorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorEstabilizador?: estabilizadorUncheckedCreateNestedManyWithoutModificadorInput
    usuarioImpressora?: impressoraUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorImpressora?: impressoraUncheckedCreateNestedManyWithoutModificadorInput
    usuarioPlacamae?: placamaeUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorPlacamae?: placamaeUncheckedCreateNestedManyWithoutModificadorInput
    usuarioNotebook?: notebookUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorNotebook?: notebookUncheckedCreateNestedManyWithoutModificadorInput
    usuarioProcessador?: processadorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorProcessador?: processadorUncheckedCreateNestedManyWithoutModificadorInput
  }

  export type alunoCreateOrConnectWithoutDescarteInput = {
    where: alunoWhereUniqueInput
    create: XOR<alunoCreateWithoutDescarteInput, alunoUncheckedCreateWithoutDescarteInput>
  }

  export type tecladoCreateWithoutDescarteInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    createdAt?: Date | string
    updatedAt?: Date | string
    nome: string
    imagem: string
    situacao: string
    tipoDeConexao: string
    doacao?: doacaoCreateNestedOneWithoutTecladosInput
    usuario?: alunoCreateNestedOneWithoutUsuarioTecladoInput
    modificador?: alunoCreateNestedOneWithoutModificadorTecladoInput
  }

  export type tecladoUncheckedCreateWithoutDescarteInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    createdAt?: Date | string
    updatedAt?: Date | string
    nome: string
    imagem: string
    situacao: string
    tipoDeConexao: string
    usuarioId?: number | null
    modificadorid?: number | null
    doacaoId?: number | null
  }

  export type tecladoCreateOrConnectWithoutDescarteInput = {
    where: tecladoWhereUniqueInput
    create: XOR<tecladoCreateWithoutDescarteInput, tecladoUncheckedCreateWithoutDescarteInput>
  }

  export type tecladoCreateManyDescarteInputEnvelope = {
    data: tecladoCreateManyDescarteInput | tecladoCreateManyDescarteInput[]
    skipDuplicates?: boolean
  }

  export type hdCreateWithoutDescarteInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    createdAt?: Date | string
    updatedAt?: Date | string
    nome: string
    imagem: string
    situacao: string
    tipoDeCapacidade: string
    capacidade: number
    doacao?: doacaoCreateNestedOneWithoutHdsInput
    aluno?: alunoCreateNestedOneWithoutHdInput
    modificador?: alunoCreateNestedOneWithoutModificadorHdInput
  }

  export type hdUncheckedCreateWithoutDescarteInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    createdAt?: Date | string
    updatedAt?: Date | string
    nome: string
    imagem: string
    situacao: string
    tipoDeCapacidade: string
    capacidade: number
    usuarioId?: number | null
    modificadorid?: number | null
    doacaoId?: number | null
  }

  export type hdCreateOrConnectWithoutDescarteInput = {
    where: hdWhereUniqueInput
    create: XOR<hdCreateWithoutDescarteInput, hdUncheckedCreateWithoutDescarteInput>
  }

  export type hdCreateManyDescarteInputEnvelope = {
    data: hdCreateManyDescarteInput | hdCreateManyDescarteInput[]
    skipDuplicates?: boolean
  }

  export type fontedealimentacaoCreateWithoutDescarteInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    potencia: number
    updatedAt?: Date | string
    doacao?: doacaoCreateNestedOneWithoutFontesDeAlimentacaoInput
    usuario?: alunoCreateNestedOneWithoutFonteDeAlimentacaoInput
    modificador?: alunoCreateNestedOneWithoutModificadorFonteDeAlimentacaoInput
  }

  export type fontedealimentacaoUncheckedCreateWithoutDescarteInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    potencia: number
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    doacaoId?: number | null
  }

  export type fontedealimentacaoCreateOrConnectWithoutDescarteInput = {
    where: fontedealimentacaoWhereUniqueInput
    create: XOR<fontedealimentacaoCreateWithoutDescarteInput, fontedealimentacaoUncheckedCreateWithoutDescarteInput>
  }

  export type fontedealimentacaoCreateManyDescarteInputEnvelope = {
    data: fontedealimentacaoCreateManyDescarteInput | fontedealimentacaoCreateManyDescarteInput[]
    skipDuplicates?: boolean
  }

  export type gabineteCreateWithoutDescarteInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    doacao?: doacaoCreateNestedOneWithoutGabinetesInput
    usuario?: alunoCreateNestedOneWithoutGabineteInput
    modificador?: alunoCreateNestedOneWithoutModificadorGabineteInput
  }

  export type gabineteUncheckedCreateWithoutDescarteInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    doacaoId?: number | null
  }

  export type gabineteCreateOrConnectWithoutDescarteInput = {
    where: gabineteWhereUniqueInput
    create: XOR<gabineteCreateWithoutDescarteInput, gabineteUncheckedCreateWithoutDescarteInput>
  }

  export type gabineteCreateManyDescarteInputEnvelope = {
    data: gabineteCreateManyDescarteInput | gabineteCreateManyDescarteInput[]
    skipDuplicates?: boolean
  }

  export type monitorCreateWithoutDescarteInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    polegadas: number
    updatedAt?: Date | string
    doacao?: doacaoCreateNestedOneWithoutMonitoresInput
    usuario?: alunoCreateNestedOneWithoutMonitorInput
    modificador?: alunoCreateNestedOneWithoutModificadorMonitorInput
  }

  export type monitorUncheckedCreateWithoutDescarteInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    polegadas: number
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    doacaoId?: number | null
  }

  export type monitorCreateOrConnectWithoutDescarteInput = {
    where: monitorWhereUniqueInput
    create: XOR<monitorCreateWithoutDescarteInput, monitorUncheckedCreateWithoutDescarteInput>
  }

  export type monitorCreateManyDescarteInputEnvelope = {
    data: monitorCreateManyDescarteInput | monitorCreateManyDescarteInput[]
    skipDuplicates?: boolean
  }

  export type mouseCreateWithoutDescarteInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    tipoDeConexao: string
    updatedAt?: Date | string
    doacao?: doacaoCreateNestedOneWithoutMousesInput
    usuario?: alunoCreateNestedOneWithoutUsuarioMouseInput
    modificador?: alunoCreateNestedOneWithoutModificadorMouseInput
  }

  export type mouseUncheckedCreateWithoutDescarteInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    tipoDeConexao: string
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    doacaoId?: number | null
  }

  export type mouseCreateOrConnectWithoutDescarteInput = {
    where: mouseWhereUniqueInput
    create: XOR<mouseCreateWithoutDescarteInput, mouseUncheckedCreateWithoutDescarteInput>
  }

  export type mouseCreateManyDescarteInputEnvelope = {
    data: mouseCreateManyDescarteInput | mouseCreateManyDescarteInput[]
    skipDuplicates?: boolean
  }

  export type estabilizadorCreateWithoutDescarteInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    potencia: number
    updatedAt?: Date | string
    doacao?: doacaoCreateNestedOneWithoutEstabilizadoresInput
    usuario?: alunoCreateNestedOneWithoutUsuarioEstabilizadorInput
    modificador?: alunoCreateNestedOneWithoutModificadorEstabilizadorInput
  }

  export type estabilizadorUncheckedCreateWithoutDescarteInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    potencia: number
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    doacaoId?: number | null
  }

  export type estabilizadorCreateOrConnectWithoutDescarteInput = {
    where: estabilizadorWhereUniqueInput
    create: XOR<estabilizadorCreateWithoutDescarteInput, estabilizadorUncheckedCreateWithoutDescarteInput>
  }

  export type estabilizadorCreateManyDescarteInputEnvelope = {
    data: estabilizadorCreateManyDescarteInput | estabilizadorCreateManyDescarteInput[]
    skipDuplicates?: boolean
  }

  export type impressoraCreateWithoutDescarteInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    tipoDeTinta: string
    updatedAt?: Date | string
    doacao?: doacaoCreateNestedOneWithoutImpressorasInput
    usuario?: alunoCreateNestedOneWithoutUsuarioImpressoraInput
    modificador?: alunoCreateNestedOneWithoutModificadorImpressoraInput
  }

  export type impressoraUncheckedCreateWithoutDescarteInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    tipoDeTinta: string
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    doacaoId?: number | null
  }

  export type impressoraCreateOrConnectWithoutDescarteInput = {
    where: impressoraWhereUniqueInput
    create: XOR<impressoraCreateWithoutDescarteInput, impressoraUncheckedCreateWithoutDescarteInput>
  }

  export type impressoraCreateManyDescarteInputEnvelope = {
    data: impressoraCreateManyDescarteInput | impressoraCreateManyDescarteInput[]
    skipDuplicates?: boolean
  }

  export type placamaeCreateWithoutDescarteInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    doacao?: doacaoCreateNestedOneWithoutPlacasmaeInput
    usuario?: alunoCreateNestedOneWithoutUsuarioPlacamaeInput
    modificador?: alunoCreateNestedOneWithoutModificadorPlacamaeInput
  }

  export type placamaeUncheckedCreateWithoutDescarteInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    doacaoId?: number | null
  }

  export type placamaeCreateOrConnectWithoutDescarteInput = {
    where: placamaeWhereUniqueInput
    create: XOR<placamaeCreateWithoutDescarteInput, placamaeUncheckedCreateWithoutDescarteInput>
  }

  export type placamaeCreateManyDescarteInputEnvelope = {
    data: placamaeCreateManyDescarteInput | placamaeCreateManyDescarteInput[]
    skipDuplicates?: boolean
  }

  export type notebookCreateWithoutDescarteInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    doacao?: doacaoCreateNestedOneWithoutNotebooksInput
    usuario?: alunoCreateNestedOneWithoutUsuarioNotebookInput
    modificador?: alunoCreateNestedOneWithoutModificadorNotebookInput
  }

  export type notebookUncheckedCreateWithoutDescarteInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    doacaoId?: number | null
  }

  export type notebookCreateOrConnectWithoutDescarteInput = {
    where: notebookWhereUniqueInput
    create: XOR<notebookCreateWithoutDescarteInput, notebookUncheckedCreateWithoutDescarteInput>
  }

  export type notebookCreateManyDescarteInputEnvelope = {
    data: notebookCreateManyDescarteInput | notebookCreateManyDescarteInput[]
    skipDuplicates?: boolean
  }

  export type processadorCreateWithoutDescarteInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    doacao?: doacaoCreateNestedOneWithoutProcessadoresInput
    usuario?: alunoCreateNestedOneWithoutUsuarioProcessadorInput
    modificador?: alunoCreateNestedOneWithoutModificadorProcessadorInput
  }

  export type processadorUncheckedCreateWithoutDescarteInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    doacaoId?: number | null
  }

  export type processadorCreateOrConnectWithoutDescarteInput = {
    where: processadorWhereUniqueInput
    create: XOR<processadorCreateWithoutDescarteInput, processadorUncheckedCreateWithoutDescarteInput>
  }

  export type processadorCreateManyDescarteInputEnvelope = {
    data: processadorCreateManyDescarteInput | processadorCreateManyDescarteInput[]
    skipDuplicates?: boolean
  }

  export type alunoUpsertWithoutDescarteInput = {
    update: XOR<alunoUpdateWithoutDescarteInput, alunoUncheckedUpdateWithoutDescarteInput>
    create: XOR<alunoCreateWithoutDescarteInput, alunoUncheckedCreateWithoutDescarteInput>
    where?: alunoWhereInput
  }

  export type alunoUpdateToOneWithWhereWithoutDescarteInput = {
    where?: alunoWhereInput
    data: XOR<alunoUpdateWithoutDescarteInput, alunoUncheckedUpdateWithoutDescarteInput>
  }

  export type alunoUpdateWithoutDescarteInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacao?: doacaoUpdateManyWithoutDonatarioNestedInput
    doacaoUsuario?: doacaoUsuarioUpdateManyWithoutUsuarioNestedInput
    solicitacao?: solicitacaoUpdateManyWithoutUsuarioNestedInput
    modificadorTeclado?: tecladoUpdateManyWithoutModificadorNestedInput
    usuarioTeclado?: tecladoUpdateManyWithoutUsuarioNestedInput
    hd?: hdUpdateManyWithoutAlunoNestedInput
    modificadorHd?: hdUpdateManyWithoutModificadorNestedInput
    fonteDeAlimentacao?: fontedealimentacaoUpdateManyWithoutUsuarioNestedInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUpdateManyWithoutModificadorNestedInput
    gabinete?: gabineteUpdateManyWithoutUsuarioNestedInput
    modificadorGabinete?: gabineteUpdateManyWithoutModificadorNestedInput
    monitor?: monitorUpdateManyWithoutUsuarioNestedInput
    modificadorMonitor?: monitorUpdateManyWithoutModificadorNestedInput
    usuarioMouse?: mouseUpdateManyWithoutUsuarioNestedInput
    modificadorMouse?: mouseUpdateManyWithoutModificadorNestedInput
    usuarioEstabilizador?: estabilizadorUpdateManyWithoutUsuarioNestedInput
    modificadorEstabilizador?: estabilizadorUpdateManyWithoutModificadorNestedInput
    usuarioImpressora?: impressoraUpdateManyWithoutUsuarioNestedInput
    modificadorImpressora?: impressoraUpdateManyWithoutModificadorNestedInput
    usuarioPlacamae?: placamaeUpdateManyWithoutUsuarioNestedInput
    modificadorPlacamae?: placamaeUpdateManyWithoutModificadorNestedInput
    usuarioNotebook?: notebookUpdateManyWithoutUsuarioNestedInput
    modificadorNotebook?: notebookUpdateManyWithoutModificadorNestedInput
    usuarioProcessador?: processadorUpdateManyWithoutUsuarioNestedInput
    modificadorProcessador?: processadorUpdateManyWithoutModificadorNestedInput
  }

  export type alunoUncheckedUpdateWithoutDescarteInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacao?: doacaoUncheckedUpdateManyWithoutDonatarioNestedInput
    doacaoUsuario?: doacaoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitacao?: solicitacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorTeclado?: tecladoUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioTeclado?: tecladoUncheckedUpdateManyWithoutUsuarioNestedInput
    hd?: hdUncheckedUpdateManyWithoutAlunoNestedInput
    modificadorHd?: hdUncheckedUpdateManyWithoutModificadorNestedInput
    fonteDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutModificadorNestedInput
    gabinete?: gabineteUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorGabinete?: gabineteUncheckedUpdateManyWithoutModificadorNestedInput
    monitor?: monitorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorMonitor?: monitorUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioMouse?: mouseUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorMouse?: mouseUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioEstabilizador?: estabilizadorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorEstabilizador?: estabilizadorUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioImpressora?: impressoraUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorImpressora?: impressoraUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioPlacamae?: placamaeUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorPlacamae?: placamaeUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioNotebook?: notebookUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorNotebook?: notebookUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioProcessador?: processadorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorProcessador?: processadorUncheckedUpdateManyWithoutModificadorNestedInput
  }

  export type tecladoUpsertWithWhereUniqueWithoutDescarteInput = {
    where: tecladoWhereUniqueInput
    update: XOR<tecladoUpdateWithoutDescarteInput, tecladoUncheckedUpdateWithoutDescarteInput>
    create: XOR<tecladoCreateWithoutDescarteInput, tecladoUncheckedCreateWithoutDescarteInput>
  }

  export type tecladoUpdateWithWhereUniqueWithoutDescarteInput = {
    where: tecladoWhereUniqueInput
    data: XOR<tecladoUpdateWithoutDescarteInput, tecladoUncheckedUpdateWithoutDescarteInput>
  }

  export type tecladoUpdateManyWithWhereWithoutDescarteInput = {
    where: tecladoScalarWhereInput
    data: XOR<tecladoUpdateManyMutationInput, tecladoUncheckedUpdateManyWithoutDescarteInput>
  }

  export type hdUpsertWithWhereUniqueWithoutDescarteInput = {
    where: hdWhereUniqueInput
    update: XOR<hdUpdateWithoutDescarteInput, hdUncheckedUpdateWithoutDescarteInput>
    create: XOR<hdCreateWithoutDescarteInput, hdUncheckedCreateWithoutDescarteInput>
  }

  export type hdUpdateWithWhereUniqueWithoutDescarteInput = {
    where: hdWhereUniqueInput
    data: XOR<hdUpdateWithoutDescarteInput, hdUncheckedUpdateWithoutDescarteInput>
  }

  export type hdUpdateManyWithWhereWithoutDescarteInput = {
    where: hdScalarWhereInput
    data: XOR<hdUpdateManyMutationInput, hdUncheckedUpdateManyWithoutDescarteInput>
  }

  export type fontedealimentacaoUpsertWithWhereUniqueWithoutDescarteInput = {
    where: fontedealimentacaoWhereUniqueInput
    update: XOR<fontedealimentacaoUpdateWithoutDescarteInput, fontedealimentacaoUncheckedUpdateWithoutDescarteInput>
    create: XOR<fontedealimentacaoCreateWithoutDescarteInput, fontedealimentacaoUncheckedCreateWithoutDescarteInput>
  }

  export type fontedealimentacaoUpdateWithWhereUniqueWithoutDescarteInput = {
    where: fontedealimentacaoWhereUniqueInput
    data: XOR<fontedealimentacaoUpdateWithoutDescarteInput, fontedealimentacaoUncheckedUpdateWithoutDescarteInput>
  }

  export type fontedealimentacaoUpdateManyWithWhereWithoutDescarteInput = {
    where: fontedealimentacaoScalarWhereInput
    data: XOR<fontedealimentacaoUpdateManyMutationInput, fontedealimentacaoUncheckedUpdateManyWithoutDescarteInput>
  }

  export type gabineteUpsertWithWhereUniqueWithoutDescarteInput = {
    where: gabineteWhereUniqueInput
    update: XOR<gabineteUpdateWithoutDescarteInput, gabineteUncheckedUpdateWithoutDescarteInput>
    create: XOR<gabineteCreateWithoutDescarteInput, gabineteUncheckedCreateWithoutDescarteInput>
  }

  export type gabineteUpdateWithWhereUniqueWithoutDescarteInput = {
    where: gabineteWhereUniqueInput
    data: XOR<gabineteUpdateWithoutDescarteInput, gabineteUncheckedUpdateWithoutDescarteInput>
  }

  export type gabineteUpdateManyWithWhereWithoutDescarteInput = {
    where: gabineteScalarWhereInput
    data: XOR<gabineteUpdateManyMutationInput, gabineteUncheckedUpdateManyWithoutDescarteInput>
  }

  export type monitorUpsertWithWhereUniqueWithoutDescarteInput = {
    where: monitorWhereUniqueInput
    update: XOR<monitorUpdateWithoutDescarteInput, monitorUncheckedUpdateWithoutDescarteInput>
    create: XOR<monitorCreateWithoutDescarteInput, monitorUncheckedCreateWithoutDescarteInput>
  }

  export type monitorUpdateWithWhereUniqueWithoutDescarteInput = {
    where: monitorWhereUniqueInput
    data: XOR<monitorUpdateWithoutDescarteInput, monitorUncheckedUpdateWithoutDescarteInput>
  }

  export type monitorUpdateManyWithWhereWithoutDescarteInput = {
    where: monitorScalarWhereInput
    data: XOR<monitorUpdateManyMutationInput, monitorUncheckedUpdateManyWithoutDescarteInput>
  }

  export type mouseUpsertWithWhereUniqueWithoutDescarteInput = {
    where: mouseWhereUniqueInput
    update: XOR<mouseUpdateWithoutDescarteInput, mouseUncheckedUpdateWithoutDescarteInput>
    create: XOR<mouseCreateWithoutDescarteInput, mouseUncheckedCreateWithoutDescarteInput>
  }

  export type mouseUpdateWithWhereUniqueWithoutDescarteInput = {
    where: mouseWhereUniqueInput
    data: XOR<mouseUpdateWithoutDescarteInput, mouseUncheckedUpdateWithoutDescarteInput>
  }

  export type mouseUpdateManyWithWhereWithoutDescarteInput = {
    where: mouseScalarWhereInput
    data: XOR<mouseUpdateManyMutationInput, mouseUncheckedUpdateManyWithoutDescarteInput>
  }

  export type estabilizadorUpsertWithWhereUniqueWithoutDescarteInput = {
    where: estabilizadorWhereUniqueInput
    update: XOR<estabilizadorUpdateWithoutDescarteInput, estabilizadorUncheckedUpdateWithoutDescarteInput>
    create: XOR<estabilizadorCreateWithoutDescarteInput, estabilizadorUncheckedCreateWithoutDescarteInput>
  }

  export type estabilizadorUpdateWithWhereUniqueWithoutDescarteInput = {
    where: estabilizadorWhereUniqueInput
    data: XOR<estabilizadorUpdateWithoutDescarteInput, estabilizadorUncheckedUpdateWithoutDescarteInput>
  }

  export type estabilizadorUpdateManyWithWhereWithoutDescarteInput = {
    where: estabilizadorScalarWhereInput
    data: XOR<estabilizadorUpdateManyMutationInput, estabilizadorUncheckedUpdateManyWithoutDescarteInput>
  }

  export type impressoraUpsertWithWhereUniqueWithoutDescarteInput = {
    where: impressoraWhereUniqueInput
    update: XOR<impressoraUpdateWithoutDescarteInput, impressoraUncheckedUpdateWithoutDescarteInput>
    create: XOR<impressoraCreateWithoutDescarteInput, impressoraUncheckedCreateWithoutDescarteInput>
  }

  export type impressoraUpdateWithWhereUniqueWithoutDescarteInput = {
    where: impressoraWhereUniqueInput
    data: XOR<impressoraUpdateWithoutDescarteInput, impressoraUncheckedUpdateWithoutDescarteInput>
  }

  export type impressoraUpdateManyWithWhereWithoutDescarteInput = {
    where: impressoraScalarWhereInput
    data: XOR<impressoraUpdateManyMutationInput, impressoraUncheckedUpdateManyWithoutDescarteInput>
  }

  export type placamaeUpsertWithWhereUniqueWithoutDescarteInput = {
    where: placamaeWhereUniqueInput
    update: XOR<placamaeUpdateWithoutDescarteInput, placamaeUncheckedUpdateWithoutDescarteInput>
    create: XOR<placamaeCreateWithoutDescarteInput, placamaeUncheckedCreateWithoutDescarteInput>
  }

  export type placamaeUpdateWithWhereUniqueWithoutDescarteInput = {
    where: placamaeWhereUniqueInput
    data: XOR<placamaeUpdateWithoutDescarteInput, placamaeUncheckedUpdateWithoutDescarteInput>
  }

  export type placamaeUpdateManyWithWhereWithoutDescarteInput = {
    where: placamaeScalarWhereInput
    data: XOR<placamaeUpdateManyMutationInput, placamaeUncheckedUpdateManyWithoutDescarteInput>
  }

  export type notebookUpsertWithWhereUniqueWithoutDescarteInput = {
    where: notebookWhereUniqueInput
    update: XOR<notebookUpdateWithoutDescarteInput, notebookUncheckedUpdateWithoutDescarteInput>
    create: XOR<notebookCreateWithoutDescarteInput, notebookUncheckedCreateWithoutDescarteInput>
  }

  export type notebookUpdateWithWhereUniqueWithoutDescarteInput = {
    where: notebookWhereUniqueInput
    data: XOR<notebookUpdateWithoutDescarteInput, notebookUncheckedUpdateWithoutDescarteInput>
  }

  export type notebookUpdateManyWithWhereWithoutDescarteInput = {
    where: notebookScalarWhereInput
    data: XOR<notebookUpdateManyMutationInput, notebookUncheckedUpdateManyWithoutDescarteInput>
  }

  export type processadorUpsertWithWhereUniqueWithoutDescarteInput = {
    where: processadorWhereUniqueInput
    update: XOR<processadorUpdateWithoutDescarteInput, processadorUncheckedUpdateWithoutDescarteInput>
    create: XOR<processadorCreateWithoutDescarteInput, processadorUncheckedCreateWithoutDescarteInput>
  }

  export type processadorUpdateWithWhereUniqueWithoutDescarteInput = {
    where: processadorWhereUniqueInput
    data: XOR<processadorUpdateWithoutDescarteInput, processadorUncheckedUpdateWithoutDescarteInput>
  }

  export type processadorUpdateManyWithWhereWithoutDescarteInput = {
    where: processadorScalarWhereInput
    data: XOR<processadorUpdateManyMutationInput, processadorUncheckedUpdateManyWithoutDescarteInput>
  }

  export type alunoCreateWithoutDoacaoInput = {
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    descarte?: descarteCreateNestedManyWithoutUsuarioInput
    doacaoUsuario?: doacaoUsuarioCreateNestedManyWithoutUsuarioInput
    solicitacao?: solicitacaoCreateNestedManyWithoutUsuarioInput
    modificadorTeclado?: tecladoCreateNestedManyWithoutModificadorInput
    usuarioTeclado?: tecladoCreateNestedManyWithoutUsuarioInput
    hd?: hdCreateNestedManyWithoutAlunoInput
    modificadorHd?: hdCreateNestedManyWithoutModificadorInput
    fonteDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutUsuarioInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutModificadorInput
    gabinete?: gabineteCreateNestedManyWithoutUsuarioInput
    modificadorGabinete?: gabineteCreateNestedManyWithoutModificadorInput
    monitor?: monitorCreateNestedManyWithoutUsuarioInput
    modificadorMonitor?: monitorCreateNestedManyWithoutModificadorInput
    usuarioMouse?: mouseCreateNestedManyWithoutUsuarioInput
    modificadorMouse?: mouseCreateNestedManyWithoutModificadorInput
    usuarioEstabilizador?: estabilizadorCreateNestedManyWithoutUsuarioInput
    modificadorEstabilizador?: estabilizadorCreateNestedManyWithoutModificadorInput
    usuarioImpressora?: impressoraCreateNestedManyWithoutUsuarioInput
    modificadorImpressora?: impressoraCreateNestedManyWithoutModificadorInput
    usuarioPlacamae?: placamaeCreateNestedManyWithoutUsuarioInput
    modificadorPlacamae?: placamaeCreateNestedManyWithoutModificadorInput
    usuarioNotebook?: notebookCreateNestedManyWithoutUsuarioInput
    modificadorNotebook?: notebookCreateNestedManyWithoutModificadorInput
    usuarioProcessador?: processadorCreateNestedManyWithoutUsuarioInput
    modificadorProcessador?: processadorCreateNestedManyWithoutModificadorInput
  }

  export type alunoUncheckedCreateWithoutDoacaoInput = {
    id?: number
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    descarte?: descarteUncheckedCreateNestedManyWithoutUsuarioInput
    doacaoUsuario?: doacaoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    solicitacao?: solicitacaoUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorTeclado?: tecladoUncheckedCreateNestedManyWithoutModificadorInput
    usuarioTeclado?: tecladoUncheckedCreateNestedManyWithoutUsuarioInput
    hd?: hdUncheckedCreateNestedManyWithoutAlunoInput
    modificadorHd?: hdUncheckedCreateNestedManyWithoutModificadorInput
    fonteDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutModificadorInput
    gabinete?: gabineteUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorGabinete?: gabineteUncheckedCreateNestedManyWithoutModificadorInput
    monitor?: monitorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorMonitor?: monitorUncheckedCreateNestedManyWithoutModificadorInput
    usuarioMouse?: mouseUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorMouse?: mouseUncheckedCreateNestedManyWithoutModificadorInput
    usuarioEstabilizador?: estabilizadorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorEstabilizador?: estabilizadorUncheckedCreateNestedManyWithoutModificadorInput
    usuarioImpressora?: impressoraUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorImpressora?: impressoraUncheckedCreateNestedManyWithoutModificadorInput
    usuarioPlacamae?: placamaeUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorPlacamae?: placamaeUncheckedCreateNestedManyWithoutModificadorInput
    usuarioNotebook?: notebookUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorNotebook?: notebookUncheckedCreateNestedManyWithoutModificadorInput
    usuarioProcessador?: processadorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorProcessador?: processadorUncheckedCreateNestedManyWithoutModificadorInput
  }

  export type alunoCreateOrConnectWithoutDoacaoInput = {
    where: alunoWhereUniqueInput
    create: XOR<alunoCreateWithoutDoacaoInput, alunoUncheckedCreateWithoutDoacaoInput>
  }

  export type pessoafisicaCreateWithoutDoacaoInput = {
    name: string
    email: string
    password: string
    cpf: string
    comprovanteDeBaixaRenda: string
    telefone: string
    createdAt?: Date | string
    updatedAt?: Date | string
    doacaoUsuario?: doacaoUsuarioCreateNestedManyWithoutDonatariofisicoInput
    solicitacao?: solicitacaoCreateNestedManyWithoutUsuariosolicitacaofisicoInput
  }

  export type pessoafisicaUncheckedCreateWithoutDoacaoInput = {
    id?: number
    name: string
    email: string
    password: string
    cpf: string
    comprovanteDeBaixaRenda: string
    telefone: string
    createdAt?: Date | string
    updatedAt?: Date | string
    doacaoUsuario?: doacaoUsuarioUncheckedCreateNestedManyWithoutDonatariofisicoInput
    solicitacao?: solicitacaoUncheckedCreateNestedManyWithoutUsuariosolicitacaofisicoInput
  }

  export type pessoafisicaCreateOrConnectWithoutDoacaoInput = {
    where: pessoafisicaWhereUniqueInput
    create: XOR<pessoafisicaCreateWithoutDoacaoInput, pessoafisicaUncheckedCreateWithoutDoacaoInput>
  }

  export type pessoajuridicaCreateWithoutDoacaoInput = {
    name: string
    email: string
    password: string
    cnpj: string
    comprovanteDeProjeto: string
    endereco: string
    telefone: string
    createdAt?: Date | string
    updatedAt?: Date | string
    doacaoUsuario?: doacaoUsuarioCreateNestedManyWithoutDonatariojuridicoInput
    solicitacao?: solicitacaoCreateNestedManyWithoutDonatariojuridicoInput
  }

  export type pessoajuridicaUncheckedCreateWithoutDoacaoInput = {
    id?: number
    name: string
    email: string
    password: string
    cnpj: string
    comprovanteDeProjeto: string
    endereco: string
    telefone: string
    createdAt?: Date | string
    updatedAt?: Date | string
    doacaoUsuario?: doacaoUsuarioUncheckedCreateNestedManyWithoutDonatariojuridicoInput
    solicitacao?: solicitacaoUncheckedCreateNestedManyWithoutDonatariojuridicoInput
  }

  export type pessoajuridicaCreateOrConnectWithoutDoacaoInput = {
    where: pessoajuridicaWhereUniqueInput
    create: XOR<pessoajuridicaCreateWithoutDoacaoInput, pessoajuridicaUncheckedCreateWithoutDoacaoInput>
  }

  export type tecladoCreateWithoutDoacaoInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    createdAt?: Date | string
    updatedAt?: Date | string
    nome: string
    imagem: string
    situacao: string
    tipoDeConexao: string
    descarte?: descarteCreateNestedOneWithoutTecladosInput
    usuario?: alunoCreateNestedOneWithoutUsuarioTecladoInput
    modificador?: alunoCreateNestedOneWithoutModificadorTecladoInput
  }

  export type tecladoUncheckedCreateWithoutDoacaoInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    createdAt?: Date | string
    updatedAt?: Date | string
    nome: string
    imagem: string
    situacao: string
    tipoDeConexao: string
    usuarioId?: number | null
    modificadorid?: number | null
    descarteId?: number | null
  }

  export type tecladoCreateOrConnectWithoutDoacaoInput = {
    where: tecladoWhereUniqueInput
    create: XOR<tecladoCreateWithoutDoacaoInput, tecladoUncheckedCreateWithoutDoacaoInput>
  }

  export type tecladoCreateManyDoacaoInputEnvelope = {
    data: tecladoCreateManyDoacaoInput | tecladoCreateManyDoacaoInput[]
    skipDuplicates?: boolean
  }

  export type hdCreateWithoutDoacaoInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    createdAt?: Date | string
    updatedAt?: Date | string
    nome: string
    imagem: string
    situacao: string
    tipoDeCapacidade: string
    capacidade: number
    descarte?: descarteCreateNestedOneWithoutHdsInput
    aluno?: alunoCreateNestedOneWithoutHdInput
    modificador?: alunoCreateNestedOneWithoutModificadorHdInput
  }

  export type hdUncheckedCreateWithoutDoacaoInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    createdAt?: Date | string
    updatedAt?: Date | string
    nome: string
    imagem: string
    situacao: string
    tipoDeCapacidade: string
    capacidade: number
    usuarioId?: number | null
    modificadorid?: number | null
    descarteId?: number | null
  }

  export type hdCreateOrConnectWithoutDoacaoInput = {
    where: hdWhereUniqueInput
    create: XOR<hdCreateWithoutDoacaoInput, hdUncheckedCreateWithoutDoacaoInput>
  }

  export type hdCreateManyDoacaoInputEnvelope = {
    data: hdCreateManyDoacaoInput | hdCreateManyDoacaoInput[]
    skipDuplicates?: boolean
  }

  export type fontedealimentacaoCreateWithoutDoacaoInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    potencia: number
    updatedAt?: Date | string
    descarte?: descarteCreateNestedOneWithoutFontesDeAlimentacaoInput
    usuario?: alunoCreateNestedOneWithoutFonteDeAlimentacaoInput
    modificador?: alunoCreateNestedOneWithoutModificadorFonteDeAlimentacaoInput
  }

  export type fontedealimentacaoUncheckedCreateWithoutDoacaoInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    potencia: number
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    descarteId?: number | null
  }

  export type fontedealimentacaoCreateOrConnectWithoutDoacaoInput = {
    where: fontedealimentacaoWhereUniqueInput
    create: XOR<fontedealimentacaoCreateWithoutDoacaoInput, fontedealimentacaoUncheckedCreateWithoutDoacaoInput>
  }

  export type fontedealimentacaoCreateManyDoacaoInputEnvelope = {
    data: fontedealimentacaoCreateManyDoacaoInput | fontedealimentacaoCreateManyDoacaoInput[]
    skipDuplicates?: boolean
  }

  export type gabineteCreateWithoutDoacaoInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    descarte?: descarteCreateNestedOneWithoutGabinetesInput
    usuario?: alunoCreateNestedOneWithoutGabineteInput
    modificador?: alunoCreateNestedOneWithoutModificadorGabineteInput
  }

  export type gabineteUncheckedCreateWithoutDoacaoInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    descarteId?: number | null
  }

  export type gabineteCreateOrConnectWithoutDoacaoInput = {
    where: gabineteWhereUniqueInput
    create: XOR<gabineteCreateWithoutDoacaoInput, gabineteUncheckedCreateWithoutDoacaoInput>
  }

  export type gabineteCreateManyDoacaoInputEnvelope = {
    data: gabineteCreateManyDoacaoInput | gabineteCreateManyDoacaoInput[]
    skipDuplicates?: boolean
  }

  export type monitorCreateWithoutDoacaoInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    polegadas: number
    updatedAt?: Date | string
    descarte?: descarteCreateNestedOneWithoutMonitoresInput
    usuario?: alunoCreateNestedOneWithoutMonitorInput
    modificador?: alunoCreateNestedOneWithoutModificadorMonitorInput
  }

  export type monitorUncheckedCreateWithoutDoacaoInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    polegadas: number
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    descarteId?: number | null
  }

  export type monitorCreateOrConnectWithoutDoacaoInput = {
    where: monitorWhereUniqueInput
    create: XOR<monitorCreateWithoutDoacaoInput, monitorUncheckedCreateWithoutDoacaoInput>
  }

  export type monitorCreateManyDoacaoInputEnvelope = {
    data: monitorCreateManyDoacaoInput | monitorCreateManyDoacaoInput[]
    skipDuplicates?: boolean
  }

  export type mouseCreateWithoutDoacaoInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    tipoDeConexao: string
    updatedAt?: Date | string
    descarte?: descarteCreateNestedOneWithoutMousesInput
    usuario?: alunoCreateNestedOneWithoutUsuarioMouseInput
    modificador?: alunoCreateNestedOneWithoutModificadorMouseInput
  }

  export type mouseUncheckedCreateWithoutDoacaoInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    tipoDeConexao: string
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    descarteId?: number | null
  }

  export type mouseCreateOrConnectWithoutDoacaoInput = {
    where: mouseWhereUniqueInput
    create: XOR<mouseCreateWithoutDoacaoInput, mouseUncheckedCreateWithoutDoacaoInput>
  }

  export type mouseCreateManyDoacaoInputEnvelope = {
    data: mouseCreateManyDoacaoInput | mouseCreateManyDoacaoInput[]
    skipDuplicates?: boolean
  }

  export type estabilizadorCreateWithoutDoacaoInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    potencia: number
    updatedAt?: Date | string
    descarte?: descarteCreateNestedOneWithoutEstabilizadoresInput
    usuario?: alunoCreateNestedOneWithoutUsuarioEstabilizadorInput
    modificador?: alunoCreateNestedOneWithoutModificadorEstabilizadorInput
  }

  export type estabilizadorUncheckedCreateWithoutDoacaoInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    potencia: number
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    descarteId?: number | null
  }

  export type estabilizadorCreateOrConnectWithoutDoacaoInput = {
    where: estabilizadorWhereUniqueInput
    create: XOR<estabilizadorCreateWithoutDoacaoInput, estabilizadorUncheckedCreateWithoutDoacaoInput>
  }

  export type estabilizadorCreateManyDoacaoInputEnvelope = {
    data: estabilizadorCreateManyDoacaoInput | estabilizadorCreateManyDoacaoInput[]
    skipDuplicates?: boolean
  }

  export type impressoraCreateWithoutDoacaoInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    tipoDeTinta: string
    updatedAt?: Date | string
    descarte?: descarteCreateNestedOneWithoutImpressorasInput
    usuario?: alunoCreateNestedOneWithoutUsuarioImpressoraInput
    modificador?: alunoCreateNestedOneWithoutModificadorImpressoraInput
  }

  export type impressoraUncheckedCreateWithoutDoacaoInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    tipoDeTinta: string
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    descarteId?: number | null
  }

  export type impressoraCreateOrConnectWithoutDoacaoInput = {
    where: impressoraWhereUniqueInput
    create: XOR<impressoraCreateWithoutDoacaoInput, impressoraUncheckedCreateWithoutDoacaoInput>
  }

  export type impressoraCreateManyDoacaoInputEnvelope = {
    data: impressoraCreateManyDoacaoInput | impressoraCreateManyDoacaoInput[]
    skipDuplicates?: boolean
  }

  export type placamaeCreateWithoutDoacaoInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    descarte?: descarteCreateNestedOneWithoutPlacasmaeInput
    usuario?: alunoCreateNestedOneWithoutUsuarioPlacamaeInput
    modificador?: alunoCreateNestedOneWithoutModificadorPlacamaeInput
  }

  export type placamaeUncheckedCreateWithoutDoacaoInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    descarteId?: number | null
  }

  export type placamaeCreateOrConnectWithoutDoacaoInput = {
    where: placamaeWhereUniqueInput
    create: XOR<placamaeCreateWithoutDoacaoInput, placamaeUncheckedCreateWithoutDoacaoInput>
  }

  export type placamaeCreateManyDoacaoInputEnvelope = {
    data: placamaeCreateManyDoacaoInput | placamaeCreateManyDoacaoInput[]
    skipDuplicates?: boolean
  }

  export type notebookCreateWithoutDoacaoInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    descarte?: descarteCreateNestedOneWithoutNotebooksInput
    usuario?: alunoCreateNestedOneWithoutUsuarioNotebookInput
    modificador?: alunoCreateNestedOneWithoutModificadorNotebookInput
  }

  export type notebookUncheckedCreateWithoutDoacaoInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    descarteId?: number | null
  }

  export type notebookCreateOrConnectWithoutDoacaoInput = {
    where: notebookWhereUniqueInput
    create: XOR<notebookCreateWithoutDoacaoInput, notebookUncheckedCreateWithoutDoacaoInput>
  }

  export type notebookCreateManyDoacaoInputEnvelope = {
    data: notebookCreateManyDoacaoInput | notebookCreateManyDoacaoInput[]
    skipDuplicates?: boolean
  }

  export type processadorCreateWithoutDoacaoInput = {
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    descarte?: descarteCreateNestedOneWithoutProcessadoresInput
    usuario?: alunoCreateNestedOneWithoutUsuarioProcessadorInput
    modificador?: alunoCreateNestedOneWithoutModificadorProcessadorInput
  }

  export type processadorUncheckedCreateWithoutDoacaoInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    descarteId?: number | null
  }

  export type processadorCreateOrConnectWithoutDoacaoInput = {
    where: processadorWhereUniqueInput
    create: XOR<processadorCreateWithoutDoacaoInput, processadorUncheckedCreateWithoutDoacaoInput>
  }

  export type processadorCreateManyDoacaoInputEnvelope = {
    data: processadorCreateManyDoacaoInput | processadorCreateManyDoacaoInput[]
    skipDuplicates?: boolean
  }

  export type alunoUpsertWithoutDoacaoInput = {
    update: XOR<alunoUpdateWithoutDoacaoInput, alunoUncheckedUpdateWithoutDoacaoInput>
    create: XOR<alunoCreateWithoutDoacaoInput, alunoUncheckedCreateWithoutDoacaoInput>
    where?: alunoWhereInput
  }

  export type alunoUpdateToOneWithWhereWithoutDoacaoInput = {
    where?: alunoWhereInput
    data: XOR<alunoUpdateWithoutDoacaoInput, alunoUncheckedUpdateWithoutDoacaoInput>
  }

  export type alunoUpdateWithoutDoacaoInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUpdateManyWithoutUsuarioNestedInput
    doacaoUsuario?: doacaoUsuarioUpdateManyWithoutUsuarioNestedInput
    solicitacao?: solicitacaoUpdateManyWithoutUsuarioNestedInput
    modificadorTeclado?: tecladoUpdateManyWithoutModificadorNestedInput
    usuarioTeclado?: tecladoUpdateManyWithoutUsuarioNestedInput
    hd?: hdUpdateManyWithoutAlunoNestedInput
    modificadorHd?: hdUpdateManyWithoutModificadorNestedInput
    fonteDeAlimentacao?: fontedealimentacaoUpdateManyWithoutUsuarioNestedInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUpdateManyWithoutModificadorNestedInput
    gabinete?: gabineteUpdateManyWithoutUsuarioNestedInput
    modificadorGabinete?: gabineteUpdateManyWithoutModificadorNestedInput
    monitor?: monitorUpdateManyWithoutUsuarioNestedInput
    modificadorMonitor?: monitorUpdateManyWithoutModificadorNestedInput
    usuarioMouse?: mouseUpdateManyWithoutUsuarioNestedInput
    modificadorMouse?: mouseUpdateManyWithoutModificadorNestedInput
    usuarioEstabilizador?: estabilizadorUpdateManyWithoutUsuarioNestedInput
    modificadorEstabilizador?: estabilizadorUpdateManyWithoutModificadorNestedInput
    usuarioImpressora?: impressoraUpdateManyWithoutUsuarioNestedInput
    modificadorImpressora?: impressoraUpdateManyWithoutModificadorNestedInput
    usuarioPlacamae?: placamaeUpdateManyWithoutUsuarioNestedInput
    modificadorPlacamae?: placamaeUpdateManyWithoutModificadorNestedInput
    usuarioNotebook?: notebookUpdateManyWithoutUsuarioNestedInput
    modificadorNotebook?: notebookUpdateManyWithoutModificadorNestedInput
    usuarioProcessador?: processadorUpdateManyWithoutUsuarioNestedInput
    modificadorProcessador?: processadorUpdateManyWithoutModificadorNestedInput
  }

  export type alunoUncheckedUpdateWithoutDoacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUncheckedUpdateManyWithoutUsuarioNestedInput
    doacaoUsuario?: doacaoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitacao?: solicitacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorTeclado?: tecladoUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioTeclado?: tecladoUncheckedUpdateManyWithoutUsuarioNestedInput
    hd?: hdUncheckedUpdateManyWithoutAlunoNestedInput
    modificadorHd?: hdUncheckedUpdateManyWithoutModificadorNestedInput
    fonteDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutModificadorNestedInput
    gabinete?: gabineteUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorGabinete?: gabineteUncheckedUpdateManyWithoutModificadorNestedInput
    monitor?: monitorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorMonitor?: monitorUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioMouse?: mouseUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorMouse?: mouseUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioEstabilizador?: estabilizadorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorEstabilizador?: estabilizadorUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioImpressora?: impressoraUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorImpressora?: impressoraUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioPlacamae?: placamaeUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorPlacamae?: placamaeUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioNotebook?: notebookUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorNotebook?: notebookUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioProcessador?: processadorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorProcessador?: processadorUncheckedUpdateManyWithoutModificadorNestedInput
  }

  export type pessoafisicaUpsertWithoutDoacaoInput = {
    update: XOR<pessoafisicaUpdateWithoutDoacaoInput, pessoafisicaUncheckedUpdateWithoutDoacaoInput>
    create: XOR<pessoafisicaCreateWithoutDoacaoInput, pessoafisicaUncheckedCreateWithoutDoacaoInput>
    where?: pessoafisicaWhereInput
  }

  export type pessoafisicaUpdateToOneWithWhereWithoutDoacaoInput = {
    where?: pessoafisicaWhereInput
    data: XOR<pessoafisicaUpdateWithoutDoacaoInput, pessoafisicaUncheckedUpdateWithoutDoacaoInput>
  }

  export type pessoafisicaUpdateWithoutDoacaoInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    comprovanteDeBaixaRenda?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacaoUsuario?: doacaoUsuarioUpdateManyWithoutDonatariofisicoNestedInput
    solicitacao?: solicitacaoUpdateManyWithoutUsuariosolicitacaofisicoNestedInput
  }

  export type pessoafisicaUncheckedUpdateWithoutDoacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    comprovanteDeBaixaRenda?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacaoUsuario?: doacaoUsuarioUncheckedUpdateManyWithoutDonatariofisicoNestedInput
    solicitacao?: solicitacaoUncheckedUpdateManyWithoutUsuariosolicitacaofisicoNestedInput
  }

  export type pessoajuridicaUpsertWithoutDoacaoInput = {
    update: XOR<pessoajuridicaUpdateWithoutDoacaoInput, pessoajuridicaUncheckedUpdateWithoutDoacaoInput>
    create: XOR<pessoajuridicaCreateWithoutDoacaoInput, pessoajuridicaUncheckedCreateWithoutDoacaoInput>
    where?: pessoajuridicaWhereInput
  }

  export type pessoajuridicaUpdateToOneWithWhereWithoutDoacaoInput = {
    where?: pessoajuridicaWhereInput
    data: XOR<pessoajuridicaUpdateWithoutDoacaoInput, pessoajuridicaUncheckedUpdateWithoutDoacaoInput>
  }

  export type pessoajuridicaUpdateWithoutDoacaoInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    comprovanteDeProjeto?: StringFieldUpdateOperationsInput | string
    endereco?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacaoUsuario?: doacaoUsuarioUpdateManyWithoutDonatariojuridicoNestedInput
    solicitacao?: solicitacaoUpdateManyWithoutDonatariojuridicoNestedInput
  }

  export type pessoajuridicaUncheckedUpdateWithoutDoacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    comprovanteDeProjeto?: StringFieldUpdateOperationsInput | string
    endereco?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacaoUsuario?: doacaoUsuarioUncheckedUpdateManyWithoutDonatariojuridicoNestedInput
    solicitacao?: solicitacaoUncheckedUpdateManyWithoutDonatariojuridicoNestedInput
  }

  export type tecladoUpsertWithWhereUniqueWithoutDoacaoInput = {
    where: tecladoWhereUniqueInput
    update: XOR<tecladoUpdateWithoutDoacaoInput, tecladoUncheckedUpdateWithoutDoacaoInput>
    create: XOR<tecladoCreateWithoutDoacaoInput, tecladoUncheckedCreateWithoutDoacaoInput>
  }

  export type tecladoUpdateWithWhereUniqueWithoutDoacaoInput = {
    where: tecladoWhereUniqueInput
    data: XOR<tecladoUpdateWithoutDoacaoInput, tecladoUncheckedUpdateWithoutDoacaoInput>
  }

  export type tecladoUpdateManyWithWhereWithoutDoacaoInput = {
    where: tecladoScalarWhereInput
    data: XOR<tecladoUpdateManyMutationInput, tecladoUncheckedUpdateManyWithoutDoacaoInput>
  }

  export type hdUpsertWithWhereUniqueWithoutDoacaoInput = {
    where: hdWhereUniqueInput
    update: XOR<hdUpdateWithoutDoacaoInput, hdUncheckedUpdateWithoutDoacaoInput>
    create: XOR<hdCreateWithoutDoacaoInput, hdUncheckedCreateWithoutDoacaoInput>
  }

  export type hdUpdateWithWhereUniqueWithoutDoacaoInput = {
    where: hdWhereUniqueInput
    data: XOR<hdUpdateWithoutDoacaoInput, hdUncheckedUpdateWithoutDoacaoInput>
  }

  export type hdUpdateManyWithWhereWithoutDoacaoInput = {
    where: hdScalarWhereInput
    data: XOR<hdUpdateManyMutationInput, hdUncheckedUpdateManyWithoutDoacaoInput>
  }

  export type fontedealimentacaoUpsertWithWhereUniqueWithoutDoacaoInput = {
    where: fontedealimentacaoWhereUniqueInput
    update: XOR<fontedealimentacaoUpdateWithoutDoacaoInput, fontedealimentacaoUncheckedUpdateWithoutDoacaoInput>
    create: XOR<fontedealimentacaoCreateWithoutDoacaoInput, fontedealimentacaoUncheckedCreateWithoutDoacaoInput>
  }

  export type fontedealimentacaoUpdateWithWhereUniqueWithoutDoacaoInput = {
    where: fontedealimentacaoWhereUniqueInput
    data: XOR<fontedealimentacaoUpdateWithoutDoacaoInput, fontedealimentacaoUncheckedUpdateWithoutDoacaoInput>
  }

  export type fontedealimentacaoUpdateManyWithWhereWithoutDoacaoInput = {
    where: fontedealimentacaoScalarWhereInput
    data: XOR<fontedealimentacaoUpdateManyMutationInput, fontedealimentacaoUncheckedUpdateManyWithoutDoacaoInput>
  }

  export type gabineteUpsertWithWhereUniqueWithoutDoacaoInput = {
    where: gabineteWhereUniqueInput
    update: XOR<gabineteUpdateWithoutDoacaoInput, gabineteUncheckedUpdateWithoutDoacaoInput>
    create: XOR<gabineteCreateWithoutDoacaoInput, gabineteUncheckedCreateWithoutDoacaoInput>
  }

  export type gabineteUpdateWithWhereUniqueWithoutDoacaoInput = {
    where: gabineteWhereUniqueInput
    data: XOR<gabineteUpdateWithoutDoacaoInput, gabineteUncheckedUpdateWithoutDoacaoInput>
  }

  export type gabineteUpdateManyWithWhereWithoutDoacaoInput = {
    where: gabineteScalarWhereInput
    data: XOR<gabineteUpdateManyMutationInput, gabineteUncheckedUpdateManyWithoutDoacaoInput>
  }

  export type monitorUpsertWithWhereUniqueWithoutDoacaoInput = {
    where: monitorWhereUniqueInput
    update: XOR<monitorUpdateWithoutDoacaoInput, monitorUncheckedUpdateWithoutDoacaoInput>
    create: XOR<monitorCreateWithoutDoacaoInput, monitorUncheckedCreateWithoutDoacaoInput>
  }

  export type monitorUpdateWithWhereUniqueWithoutDoacaoInput = {
    where: monitorWhereUniqueInput
    data: XOR<monitorUpdateWithoutDoacaoInput, monitorUncheckedUpdateWithoutDoacaoInput>
  }

  export type monitorUpdateManyWithWhereWithoutDoacaoInput = {
    where: monitorScalarWhereInput
    data: XOR<monitorUpdateManyMutationInput, monitorUncheckedUpdateManyWithoutDoacaoInput>
  }

  export type mouseUpsertWithWhereUniqueWithoutDoacaoInput = {
    where: mouseWhereUniqueInput
    update: XOR<mouseUpdateWithoutDoacaoInput, mouseUncheckedUpdateWithoutDoacaoInput>
    create: XOR<mouseCreateWithoutDoacaoInput, mouseUncheckedCreateWithoutDoacaoInput>
  }

  export type mouseUpdateWithWhereUniqueWithoutDoacaoInput = {
    where: mouseWhereUniqueInput
    data: XOR<mouseUpdateWithoutDoacaoInput, mouseUncheckedUpdateWithoutDoacaoInput>
  }

  export type mouseUpdateManyWithWhereWithoutDoacaoInput = {
    where: mouseScalarWhereInput
    data: XOR<mouseUpdateManyMutationInput, mouseUncheckedUpdateManyWithoutDoacaoInput>
  }

  export type estabilizadorUpsertWithWhereUniqueWithoutDoacaoInput = {
    where: estabilizadorWhereUniqueInput
    update: XOR<estabilizadorUpdateWithoutDoacaoInput, estabilizadorUncheckedUpdateWithoutDoacaoInput>
    create: XOR<estabilizadorCreateWithoutDoacaoInput, estabilizadorUncheckedCreateWithoutDoacaoInput>
  }

  export type estabilizadorUpdateWithWhereUniqueWithoutDoacaoInput = {
    where: estabilizadorWhereUniqueInput
    data: XOR<estabilizadorUpdateWithoutDoacaoInput, estabilizadorUncheckedUpdateWithoutDoacaoInput>
  }

  export type estabilizadorUpdateManyWithWhereWithoutDoacaoInput = {
    where: estabilizadorScalarWhereInput
    data: XOR<estabilizadorUpdateManyMutationInput, estabilizadorUncheckedUpdateManyWithoutDoacaoInput>
  }

  export type impressoraUpsertWithWhereUniqueWithoutDoacaoInput = {
    where: impressoraWhereUniqueInput
    update: XOR<impressoraUpdateWithoutDoacaoInput, impressoraUncheckedUpdateWithoutDoacaoInput>
    create: XOR<impressoraCreateWithoutDoacaoInput, impressoraUncheckedCreateWithoutDoacaoInput>
  }

  export type impressoraUpdateWithWhereUniqueWithoutDoacaoInput = {
    where: impressoraWhereUniqueInput
    data: XOR<impressoraUpdateWithoutDoacaoInput, impressoraUncheckedUpdateWithoutDoacaoInput>
  }

  export type impressoraUpdateManyWithWhereWithoutDoacaoInput = {
    where: impressoraScalarWhereInput
    data: XOR<impressoraUpdateManyMutationInput, impressoraUncheckedUpdateManyWithoutDoacaoInput>
  }

  export type placamaeUpsertWithWhereUniqueWithoutDoacaoInput = {
    where: placamaeWhereUniqueInput
    update: XOR<placamaeUpdateWithoutDoacaoInput, placamaeUncheckedUpdateWithoutDoacaoInput>
    create: XOR<placamaeCreateWithoutDoacaoInput, placamaeUncheckedCreateWithoutDoacaoInput>
  }

  export type placamaeUpdateWithWhereUniqueWithoutDoacaoInput = {
    where: placamaeWhereUniqueInput
    data: XOR<placamaeUpdateWithoutDoacaoInput, placamaeUncheckedUpdateWithoutDoacaoInput>
  }

  export type placamaeUpdateManyWithWhereWithoutDoacaoInput = {
    where: placamaeScalarWhereInput
    data: XOR<placamaeUpdateManyMutationInput, placamaeUncheckedUpdateManyWithoutDoacaoInput>
  }

  export type notebookUpsertWithWhereUniqueWithoutDoacaoInput = {
    where: notebookWhereUniqueInput
    update: XOR<notebookUpdateWithoutDoacaoInput, notebookUncheckedUpdateWithoutDoacaoInput>
    create: XOR<notebookCreateWithoutDoacaoInput, notebookUncheckedCreateWithoutDoacaoInput>
  }

  export type notebookUpdateWithWhereUniqueWithoutDoacaoInput = {
    where: notebookWhereUniqueInput
    data: XOR<notebookUpdateWithoutDoacaoInput, notebookUncheckedUpdateWithoutDoacaoInput>
  }

  export type notebookUpdateManyWithWhereWithoutDoacaoInput = {
    where: notebookScalarWhereInput
    data: XOR<notebookUpdateManyMutationInput, notebookUncheckedUpdateManyWithoutDoacaoInput>
  }

  export type processadorUpsertWithWhereUniqueWithoutDoacaoInput = {
    where: processadorWhereUniqueInput
    update: XOR<processadorUpdateWithoutDoacaoInput, processadorUncheckedUpdateWithoutDoacaoInput>
    create: XOR<processadorCreateWithoutDoacaoInput, processadorUncheckedCreateWithoutDoacaoInput>
  }

  export type processadorUpdateWithWhereUniqueWithoutDoacaoInput = {
    where: processadorWhereUniqueInput
    data: XOR<processadorUpdateWithoutDoacaoInput, processadorUncheckedUpdateWithoutDoacaoInput>
  }

  export type processadorUpdateManyWithWhereWithoutDoacaoInput = {
    where: processadorScalarWhereInput
    data: XOR<processadorUpdateManyMutationInput, processadorUncheckedUpdateManyWithoutDoacaoInput>
  }

  export type pessoafisicaCreateWithoutDoacaoUsuarioInput = {
    name: string
    email: string
    password: string
    cpf: string
    comprovanteDeBaixaRenda: string
    telefone: string
    createdAt?: Date | string
    updatedAt?: Date | string
    doacao?: doacaoCreateNestedManyWithoutUsuariofisicoInput
    solicitacao?: solicitacaoCreateNestedManyWithoutUsuariosolicitacaofisicoInput
  }

  export type pessoafisicaUncheckedCreateWithoutDoacaoUsuarioInput = {
    id?: number
    name: string
    email: string
    password: string
    cpf: string
    comprovanteDeBaixaRenda: string
    telefone: string
    createdAt?: Date | string
    updatedAt?: Date | string
    doacao?: doacaoUncheckedCreateNestedManyWithoutUsuariofisicoInput
    solicitacao?: solicitacaoUncheckedCreateNestedManyWithoutUsuariosolicitacaofisicoInput
  }

  export type pessoafisicaCreateOrConnectWithoutDoacaoUsuarioInput = {
    where: pessoafisicaWhereUniqueInput
    create: XOR<pessoafisicaCreateWithoutDoacaoUsuarioInput, pessoafisicaUncheckedCreateWithoutDoacaoUsuarioInput>
  }

  export type pessoajuridicaCreateWithoutDoacaoUsuarioInput = {
    name: string
    email: string
    password: string
    cnpj: string
    comprovanteDeProjeto: string
    endereco: string
    telefone: string
    createdAt?: Date | string
    updatedAt?: Date | string
    doacao?: doacaoCreateNestedManyWithoutUsuariojuridicoInput
    solicitacao?: solicitacaoCreateNestedManyWithoutDonatariojuridicoInput
  }

  export type pessoajuridicaUncheckedCreateWithoutDoacaoUsuarioInput = {
    id?: number
    name: string
    email: string
    password: string
    cnpj: string
    comprovanteDeProjeto: string
    endereco: string
    telefone: string
    createdAt?: Date | string
    updatedAt?: Date | string
    doacao?: doacaoUncheckedCreateNestedManyWithoutUsuariojuridicoInput
    solicitacao?: solicitacaoUncheckedCreateNestedManyWithoutDonatariojuridicoInput
  }

  export type pessoajuridicaCreateOrConnectWithoutDoacaoUsuarioInput = {
    where: pessoajuridicaWhereUniqueInput
    create: XOR<pessoajuridicaCreateWithoutDoacaoUsuarioInput, pessoajuridicaUncheckedCreateWithoutDoacaoUsuarioInput>
  }

  export type alunoCreateWithoutDoacaoUsuarioInput = {
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    descarte?: descarteCreateNestedManyWithoutUsuarioInput
    doacao?: doacaoCreateNestedManyWithoutDonatarioInput
    solicitacao?: solicitacaoCreateNestedManyWithoutUsuarioInput
    modificadorTeclado?: tecladoCreateNestedManyWithoutModificadorInput
    usuarioTeclado?: tecladoCreateNestedManyWithoutUsuarioInput
    hd?: hdCreateNestedManyWithoutAlunoInput
    modificadorHd?: hdCreateNestedManyWithoutModificadorInput
    fonteDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutUsuarioInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutModificadorInput
    gabinete?: gabineteCreateNestedManyWithoutUsuarioInput
    modificadorGabinete?: gabineteCreateNestedManyWithoutModificadorInput
    monitor?: monitorCreateNestedManyWithoutUsuarioInput
    modificadorMonitor?: monitorCreateNestedManyWithoutModificadorInput
    usuarioMouse?: mouseCreateNestedManyWithoutUsuarioInput
    modificadorMouse?: mouseCreateNestedManyWithoutModificadorInput
    usuarioEstabilizador?: estabilizadorCreateNestedManyWithoutUsuarioInput
    modificadorEstabilizador?: estabilizadorCreateNestedManyWithoutModificadorInput
    usuarioImpressora?: impressoraCreateNestedManyWithoutUsuarioInput
    modificadorImpressora?: impressoraCreateNestedManyWithoutModificadorInput
    usuarioPlacamae?: placamaeCreateNestedManyWithoutUsuarioInput
    modificadorPlacamae?: placamaeCreateNestedManyWithoutModificadorInput
    usuarioNotebook?: notebookCreateNestedManyWithoutUsuarioInput
    modificadorNotebook?: notebookCreateNestedManyWithoutModificadorInput
    usuarioProcessador?: processadorCreateNestedManyWithoutUsuarioInput
    modificadorProcessador?: processadorCreateNestedManyWithoutModificadorInput
  }

  export type alunoUncheckedCreateWithoutDoacaoUsuarioInput = {
    id?: number
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    descarte?: descarteUncheckedCreateNestedManyWithoutUsuarioInput
    doacao?: doacaoUncheckedCreateNestedManyWithoutDonatarioInput
    solicitacao?: solicitacaoUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorTeclado?: tecladoUncheckedCreateNestedManyWithoutModificadorInput
    usuarioTeclado?: tecladoUncheckedCreateNestedManyWithoutUsuarioInput
    hd?: hdUncheckedCreateNestedManyWithoutAlunoInput
    modificadorHd?: hdUncheckedCreateNestedManyWithoutModificadorInput
    fonteDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutModificadorInput
    gabinete?: gabineteUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorGabinete?: gabineteUncheckedCreateNestedManyWithoutModificadorInput
    monitor?: monitorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorMonitor?: monitorUncheckedCreateNestedManyWithoutModificadorInput
    usuarioMouse?: mouseUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorMouse?: mouseUncheckedCreateNestedManyWithoutModificadorInput
    usuarioEstabilizador?: estabilizadorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorEstabilizador?: estabilizadorUncheckedCreateNestedManyWithoutModificadorInput
    usuarioImpressora?: impressoraUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorImpressora?: impressoraUncheckedCreateNestedManyWithoutModificadorInput
    usuarioPlacamae?: placamaeUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorPlacamae?: placamaeUncheckedCreateNestedManyWithoutModificadorInput
    usuarioNotebook?: notebookUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorNotebook?: notebookUncheckedCreateNestedManyWithoutModificadorInput
    usuarioProcessador?: processadorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorProcessador?: processadorUncheckedCreateNestedManyWithoutModificadorInput
  }

  export type alunoCreateOrConnectWithoutDoacaoUsuarioInput = {
    where: alunoWhereUniqueInput
    create: XOR<alunoCreateWithoutDoacaoUsuarioInput, alunoUncheckedCreateWithoutDoacaoUsuarioInput>
  }

  export type pessoafisicaUpsertWithoutDoacaoUsuarioInput = {
    update: XOR<pessoafisicaUpdateWithoutDoacaoUsuarioInput, pessoafisicaUncheckedUpdateWithoutDoacaoUsuarioInput>
    create: XOR<pessoafisicaCreateWithoutDoacaoUsuarioInput, pessoafisicaUncheckedCreateWithoutDoacaoUsuarioInput>
    where?: pessoafisicaWhereInput
  }

  export type pessoafisicaUpdateToOneWithWhereWithoutDoacaoUsuarioInput = {
    where?: pessoafisicaWhereInput
    data: XOR<pessoafisicaUpdateWithoutDoacaoUsuarioInput, pessoafisicaUncheckedUpdateWithoutDoacaoUsuarioInput>
  }

  export type pessoafisicaUpdateWithoutDoacaoUsuarioInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    comprovanteDeBaixaRenda?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacao?: doacaoUpdateManyWithoutUsuariofisicoNestedInput
    solicitacao?: solicitacaoUpdateManyWithoutUsuariosolicitacaofisicoNestedInput
  }

  export type pessoafisicaUncheckedUpdateWithoutDoacaoUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    comprovanteDeBaixaRenda?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacao?: doacaoUncheckedUpdateManyWithoutUsuariofisicoNestedInput
    solicitacao?: solicitacaoUncheckedUpdateManyWithoutUsuariosolicitacaofisicoNestedInput
  }

  export type pessoajuridicaUpsertWithoutDoacaoUsuarioInput = {
    update: XOR<pessoajuridicaUpdateWithoutDoacaoUsuarioInput, pessoajuridicaUncheckedUpdateWithoutDoacaoUsuarioInput>
    create: XOR<pessoajuridicaCreateWithoutDoacaoUsuarioInput, pessoajuridicaUncheckedCreateWithoutDoacaoUsuarioInput>
    where?: pessoajuridicaWhereInput
  }

  export type pessoajuridicaUpdateToOneWithWhereWithoutDoacaoUsuarioInput = {
    where?: pessoajuridicaWhereInput
    data: XOR<pessoajuridicaUpdateWithoutDoacaoUsuarioInput, pessoajuridicaUncheckedUpdateWithoutDoacaoUsuarioInput>
  }

  export type pessoajuridicaUpdateWithoutDoacaoUsuarioInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    comprovanteDeProjeto?: StringFieldUpdateOperationsInput | string
    endereco?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacao?: doacaoUpdateManyWithoutUsuariojuridicoNestedInput
    solicitacao?: solicitacaoUpdateManyWithoutDonatariojuridicoNestedInput
  }

  export type pessoajuridicaUncheckedUpdateWithoutDoacaoUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    comprovanteDeProjeto?: StringFieldUpdateOperationsInput | string
    endereco?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacao?: doacaoUncheckedUpdateManyWithoutUsuariojuridicoNestedInput
    solicitacao?: solicitacaoUncheckedUpdateManyWithoutDonatariojuridicoNestedInput
  }

  export type alunoUpsertWithoutDoacaoUsuarioInput = {
    update: XOR<alunoUpdateWithoutDoacaoUsuarioInput, alunoUncheckedUpdateWithoutDoacaoUsuarioInput>
    create: XOR<alunoCreateWithoutDoacaoUsuarioInput, alunoUncheckedCreateWithoutDoacaoUsuarioInput>
    where?: alunoWhereInput
  }

  export type alunoUpdateToOneWithWhereWithoutDoacaoUsuarioInput = {
    where?: alunoWhereInput
    data: XOR<alunoUpdateWithoutDoacaoUsuarioInput, alunoUncheckedUpdateWithoutDoacaoUsuarioInput>
  }

  export type alunoUpdateWithoutDoacaoUsuarioInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUpdateManyWithoutUsuarioNestedInput
    doacao?: doacaoUpdateManyWithoutDonatarioNestedInput
    solicitacao?: solicitacaoUpdateManyWithoutUsuarioNestedInput
    modificadorTeclado?: tecladoUpdateManyWithoutModificadorNestedInput
    usuarioTeclado?: tecladoUpdateManyWithoutUsuarioNestedInput
    hd?: hdUpdateManyWithoutAlunoNestedInput
    modificadorHd?: hdUpdateManyWithoutModificadorNestedInput
    fonteDeAlimentacao?: fontedealimentacaoUpdateManyWithoutUsuarioNestedInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUpdateManyWithoutModificadorNestedInput
    gabinete?: gabineteUpdateManyWithoutUsuarioNestedInput
    modificadorGabinete?: gabineteUpdateManyWithoutModificadorNestedInput
    monitor?: monitorUpdateManyWithoutUsuarioNestedInput
    modificadorMonitor?: monitorUpdateManyWithoutModificadorNestedInput
    usuarioMouse?: mouseUpdateManyWithoutUsuarioNestedInput
    modificadorMouse?: mouseUpdateManyWithoutModificadorNestedInput
    usuarioEstabilizador?: estabilizadorUpdateManyWithoutUsuarioNestedInput
    modificadorEstabilizador?: estabilizadorUpdateManyWithoutModificadorNestedInput
    usuarioImpressora?: impressoraUpdateManyWithoutUsuarioNestedInput
    modificadorImpressora?: impressoraUpdateManyWithoutModificadorNestedInput
    usuarioPlacamae?: placamaeUpdateManyWithoutUsuarioNestedInput
    modificadorPlacamae?: placamaeUpdateManyWithoutModificadorNestedInput
    usuarioNotebook?: notebookUpdateManyWithoutUsuarioNestedInput
    modificadorNotebook?: notebookUpdateManyWithoutModificadorNestedInput
    usuarioProcessador?: processadorUpdateManyWithoutUsuarioNestedInput
    modificadorProcessador?: processadorUpdateManyWithoutModificadorNestedInput
  }

  export type alunoUncheckedUpdateWithoutDoacaoUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUncheckedUpdateManyWithoutUsuarioNestedInput
    doacao?: doacaoUncheckedUpdateManyWithoutDonatarioNestedInput
    solicitacao?: solicitacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorTeclado?: tecladoUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioTeclado?: tecladoUncheckedUpdateManyWithoutUsuarioNestedInput
    hd?: hdUncheckedUpdateManyWithoutAlunoNestedInput
    modificadorHd?: hdUncheckedUpdateManyWithoutModificadorNestedInput
    fonteDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutModificadorNestedInput
    gabinete?: gabineteUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorGabinete?: gabineteUncheckedUpdateManyWithoutModificadorNestedInput
    monitor?: monitorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorMonitor?: monitorUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioMouse?: mouseUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorMouse?: mouseUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioEstabilizador?: estabilizadorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorEstabilizador?: estabilizadorUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioImpressora?: impressoraUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorImpressora?: impressoraUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioPlacamae?: placamaeUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorPlacamae?: placamaeUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioNotebook?: notebookUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorNotebook?: notebookUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioProcessador?: processadorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorProcessador?: processadorUncheckedUpdateManyWithoutModificadorNestedInput
  }

  export type pessoafisicaCreateWithoutSolicitacaoInput = {
    name: string
    email: string
    password: string
    cpf: string
    comprovanteDeBaixaRenda: string
    telefone: string
    createdAt?: Date | string
    updatedAt?: Date | string
    doacao?: doacaoCreateNestedManyWithoutUsuariofisicoInput
    doacaoUsuario?: doacaoUsuarioCreateNestedManyWithoutDonatariofisicoInput
  }

  export type pessoafisicaUncheckedCreateWithoutSolicitacaoInput = {
    id?: number
    name: string
    email: string
    password: string
    cpf: string
    comprovanteDeBaixaRenda: string
    telefone: string
    createdAt?: Date | string
    updatedAt?: Date | string
    doacao?: doacaoUncheckedCreateNestedManyWithoutUsuariofisicoInput
    doacaoUsuario?: doacaoUsuarioUncheckedCreateNestedManyWithoutDonatariofisicoInput
  }

  export type pessoafisicaCreateOrConnectWithoutSolicitacaoInput = {
    where: pessoafisicaWhereUniqueInput
    create: XOR<pessoafisicaCreateWithoutSolicitacaoInput, pessoafisicaUncheckedCreateWithoutSolicitacaoInput>
  }

  export type pessoajuridicaCreateWithoutSolicitacaoInput = {
    name: string
    email: string
    password: string
    cnpj: string
    comprovanteDeProjeto: string
    endereco: string
    telefone: string
    createdAt?: Date | string
    updatedAt?: Date | string
    doacao?: doacaoCreateNestedManyWithoutUsuariojuridicoInput
    doacaoUsuario?: doacaoUsuarioCreateNestedManyWithoutDonatariojuridicoInput
  }

  export type pessoajuridicaUncheckedCreateWithoutSolicitacaoInput = {
    id?: number
    name: string
    email: string
    password: string
    cnpj: string
    comprovanteDeProjeto: string
    endereco: string
    telefone: string
    createdAt?: Date | string
    updatedAt?: Date | string
    doacao?: doacaoUncheckedCreateNestedManyWithoutUsuariojuridicoInput
    doacaoUsuario?: doacaoUsuarioUncheckedCreateNestedManyWithoutDonatariojuridicoInput
  }

  export type pessoajuridicaCreateOrConnectWithoutSolicitacaoInput = {
    where: pessoajuridicaWhereUniqueInput
    create: XOR<pessoajuridicaCreateWithoutSolicitacaoInput, pessoajuridicaUncheckedCreateWithoutSolicitacaoInput>
  }

  export type alunoCreateWithoutSolicitacaoInput = {
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    descarte?: descarteCreateNestedManyWithoutUsuarioInput
    doacao?: doacaoCreateNestedManyWithoutDonatarioInput
    doacaoUsuario?: doacaoUsuarioCreateNestedManyWithoutUsuarioInput
    modificadorTeclado?: tecladoCreateNestedManyWithoutModificadorInput
    usuarioTeclado?: tecladoCreateNestedManyWithoutUsuarioInput
    hd?: hdCreateNestedManyWithoutAlunoInput
    modificadorHd?: hdCreateNestedManyWithoutModificadorInput
    fonteDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutUsuarioInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoCreateNestedManyWithoutModificadorInput
    gabinete?: gabineteCreateNestedManyWithoutUsuarioInput
    modificadorGabinete?: gabineteCreateNestedManyWithoutModificadorInput
    monitor?: monitorCreateNestedManyWithoutUsuarioInput
    modificadorMonitor?: monitorCreateNestedManyWithoutModificadorInput
    usuarioMouse?: mouseCreateNestedManyWithoutUsuarioInput
    modificadorMouse?: mouseCreateNestedManyWithoutModificadorInput
    usuarioEstabilizador?: estabilizadorCreateNestedManyWithoutUsuarioInput
    modificadorEstabilizador?: estabilizadorCreateNestedManyWithoutModificadorInput
    usuarioImpressora?: impressoraCreateNestedManyWithoutUsuarioInput
    modificadorImpressora?: impressoraCreateNestedManyWithoutModificadorInput
    usuarioPlacamae?: placamaeCreateNestedManyWithoutUsuarioInput
    modificadorPlacamae?: placamaeCreateNestedManyWithoutModificadorInput
    usuarioNotebook?: notebookCreateNestedManyWithoutUsuarioInput
    modificadorNotebook?: notebookCreateNestedManyWithoutModificadorInput
    usuarioProcessador?: processadorCreateNestedManyWithoutUsuarioInput
    modificadorProcessador?: processadorCreateNestedManyWithoutModificadorInput
  }

  export type alunoUncheckedCreateWithoutSolicitacaoInput = {
    id?: number
    name: string
    email: string
    password: string
    matricula: string
    curso: string
    dias: string
    createdAt?: Date | string
    updatedAt?: Date | string
    descarte?: descarteUncheckedCreateNestedManyWithoutUsuarioInput
    doacao?: doacaoUncheckedCreateNestedManyWithoutDonatarioInput
    doacaoUsuario?: doacaoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorTeclado?: tecladoUncheckedCreateNestedManyWithoutModificadorInput
    usuarioTeclado?: tecladoUncheckedCreateNestedManyWithoutUsuarioInput
    hd?: hdUncheckedCreateNestedManyWithoutAlunoInput
    modificadorHd?: hdUncheckedCreateNestedManyWithoutModificadorInput
    fonteDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUncheckedCreateNestedManyWithoutModificadorInput
    gabinete?: gabineteUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorGabinete?: gabineteUncheckedCreateNestedManyWithoutModificadorInput
    monitor?: monitorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorMonitor?: monitorUncheckedCreateNestedManyWithoutModificadorInput
    usuarioMouse?: mouseUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorMouse?: mouseUncheckedCreateNestedManyWithoutModificadorInput
    usuarioEstabilizador?: estabilizadorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorEstabilizador?: estabilizadorUncheckedCreateNestedManyWithoutModificadorInput
    usuarioImpressora?: impressoraUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorImpressora?: impressoraUncheckedCreateNestedManyWithoutModificadorInput
    usuarioPlacamae?: placamaeUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorPlacamae?: placamaeUncheckedCreateNestedManyWithoutModificadorInput
    usuarioNotebook?: notebookUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorNotebook?: notebookUncheckedCreateNestedManyWithoutModificadorInput
    usuarioProcessador?: processadorUncheckedCreateNestedManyWithoutUsuarioInput
    modificadorProcessador?: processadorUncheckedCreateNestedManyWithoutModificadorInput
  }

  export type alunoCreateOrConnectWithoutSolicitacaoInput = {
    where: alunoWhereUniqueInput
    create: XOR<alunoCreateWithoutSolicitacaoInput, alunoUncheckedCreateWithoutSolicitacaoInput>
  }

  export type pessoafisicaUpsertWithoutSolicitacaoInput = {
    update: XOR<pessoafisicaUpdateWithoutSolicitacaoInput, pessoafisicaUncheckedUpdateWithoutSolicitacaoInput>
    create: XOR<pessoafisicaCreateWithoutSolicitacaoInput, pessoafisicaUncheckedCreateWithoutSolicitacaoInput>
    where?: pessoafisicaWhereInput
  }

  export type pessoafisicaUpdateToOneWithWhereWithoutSolicitacaoInput = {
    where?: pessoafisicaWhereInput
    data: XOR<pessoafisicaUpdateWithoutSolicitacaoInput, pessoafisicaUncheckedUpdateWithoutSolicitacaoInput>
  }

  export type pessoafisicaUpdateWithoutSolicitacaoInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    comprovanteDeBaixaRenda?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacao?: doacaoUpdateManyWithoutUsuariofisicoNestedInput
    doacaoUsuario?: doacaoUsuarioUpdateManyWithoutDonatariofisicoNestedInput
  }

  export type pessoafisicaUncheckedUpdateWithoutSolicitacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    comprovanteDeBaixaRenda?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacao?: doacaoUncheckedUpdateManyWithoutUsuariofisicoNestedInput
    doacaoUsuario?: doacaoUsuarioUncheckedUpdateManyWithoutDonatariofisicoNestedInput
  }

  export type pessoajuridicaUpsertWithoutSolicitacaoInput = {
    update: XOR<pessoajuridicaUpdateWithoutSolicitacaoInput, pessoajuridicaUncheckedUpdateWithoutSolicitacaoInput>
    create: XOR<pessoajuridicaCreateWithoutSolicitacaoInput, pessoajuridicaUncheckedCreateWithoutSolicitacaoInput>
    where?: pessoajuridicaWhereInput
  }

  export type pessoajuridicaUpdateToOneWithWhereWithoutSolicitacaoInput = {
    where?: pessoajuridicaWhereInput
    data: XOR<pessoajuridicaUpdateWithoutSolicitacaoInput, pessoajuridicaUncheckedUpdateWithoutSolicitacaoInput>
  }

  export type pessoajuridicaUpdateWithoutSolicitacaoInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    comprovanteDeProjeto?: StringFieldUpdateOperationsInput | string
    endereco?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacao?: doacaoUpdateManyWithoutUsuariojuridicoNestedInput
    doacaoUsuario?: doacaoUsuarioUpdateManyWithoutDonatariojuridicoNestedInput
  }

  export type pessoajuridicaUncheckedUpdateWithoutSolicitacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    comprovanteDeProjeto?: StringFieldUpdateOperationsInput | string
    endereco?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacao?: doacaoUncheckedUpdateManyWithoutUsuariojuridicoNestedInput
    doacaoUsuario?: doacaoUsuarioUncheckedUpdateManyWithoutDonatariojuridicoNestedInput
  }

  export type alunoUpsertWithoutSolicitacaoInput = {
    update: XOR<alunoUpdateWithoutSolicitacaoInput, alunoUncheckedUpdateWithoutSolicitacaoInput>
    create: XOR<alunoCreateWithoutSolicitacaoInput, alunoUncheckedCreateWithoutSolicitacaoInput>
    where?: alunoWhereInput
  }

  export type alunoUpdateToOneWithWhereWithoutSolicitacaoInput = {
    where?: alunoWhereInput
    data: XOR<alunoUpdateWithoutSolicitacaoInput, alunoUncheckedUpdateWithoutSolicitacaoInput>
  }

  export type alunoUpdateWithoutSolicitacaoInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUpdateManyWithoutUsuarioNestedInput
    doacao?: doacaoUpdateManyWithoutDonatarioNestedInput
    doacaoUsuario?: doacaoUsuarioUpdateManyWithoutUsuarioNestedInput
    modificadorTeclado?: tecladoUpdateManyWithoutModificadorNestedInput
    usuarioTeclado?: tecladoUpdateManyWithoutUsuarioNestedInput
    hd?: hdUpdateManyWithoutAlunoNestedInput
    modificadorHd?: hdUpdateManyWithoutModificadorNestedInput
    fonteDeAlimentacao?: fontedealimentacaoUpdateManyWithoutUsuarioNestedInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUpdateManyWithoutModificadorNestedInput
    gabinete?: gabineteUpdateManyWithoutUsuarioNestedInput
    modificadorGabinete?: gabineteUpdateManyWithoutModificadorNestedInput
    monitor?: monitorUpdateManyWithoutUsuarioNestedInput
    modificadorMonitor?: monitorUpdateManyWithoutModificadorNestedInput
    usuarioMouse?: mouseUpdateManyWithoutUsuarioNestedInput
    modificadorMouse?: mouseUpdateManyWithoutModificadorNestedInput
    usuarioEstabilizador?: estabilizadorUpdateManyWithoutUsuarioNestedInput
    modificadorEstabilizador?: estabilizadorUpdateManyWithoutModificadorNestedInput
    usuarioImpressora?: impressoraUpdateManyWithoutUsuarioNestedInput
    modificadorImpressora?: impressoraUpdateManyWithoutModificadorNestedInput
    usuarioPlacamae?: placamaeUpdateManyWithoutUsuarioNestedInput
    modificadorPlacamae?: placamaeUpdateManyWithoutModificadorNestedInput
    usuarioNotebook?: notebookUpdateManyWithoutUsuarioNestedInput
    modificadorNotebook?: notebookUpdateManyWithoutModificadorNestedInput
    usuarioProcessador?: processadorUpdateManyWithoutUsuarioNestedInput
    modificadorProcessador?: processadorUpdateManyWithoutModificadorNestedInput
  }

  export type alunoUncheckedUpdateWithoutSolicitacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    matricula?: StringFieldUpdateOperationsInput | string
    curso?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUncheckedUpdateManyWithoutUsuarioNestedInput
    doacao?: doacaoUncheckedUpdateManyWithoutDonatarioNestedInput
    doacaoUsuario?: doacaoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorTeclado?: tecladoUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioTeclado?: tecladoUncheckedUpdateManyWithoutUsuarioNestedInput
    hd?: hdUncheckedUpdateManyWithoutAlunoNestedInput
    modificadorHd?: hdUncheckedUpdateManyWithoutModificadorNestedInput
    fonteDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorFonteDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutModificadorNestedInput
    gabinete?: gabineteUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorGabinete?: gabineteUncheckedUpdateManyWithoutModificadorNestedInput
    monitor?: monitorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorMonitor?: monitorUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioMouse?: mouseUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorMouse?: mouseUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioEstabilizador?: estabilizadorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorEstabilizador?: estabilizadorUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioImpressora?: impressoraUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorImpressora?: impressoraUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioPlacamae?: placamaeUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorPlacamae?: placamaeUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioNotebook?: notebookUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorNotebook?: notebookUncheckedUpdateManyWithoutModificadorNestedInput
    usuarioProcessador?: processadorUncheckedUpdateManyWithoutUsuarioNestedInput
    modificadorProcessador?: processadorUncheckedUpdateManyWithoutModificadorNestedInput
  }

  export type descarteCreateManyUsuarioInput = {
    id?: number
    name: string
    descricao: string
    data: Date | string
    codigoDeReferencias: string
    createdAt?: Date | string
  }

  export type doacaoCreateManyDonatarioInput = {
    id?: number
    name: string
    codigoDeReferencias: string
    descricao: string
    justificativa: string
    nomeOuEmpresa: string
    contato: string
    data: Date | string
    status: string
    usuariofisicoId?: number | null
    usuariojuridicoId?: number | null
    createdAt?: Date | string
  }

  export type doacaoUsuarioCreateManyUsuarioInput = {
    id?: number
    name: string
    eletronicos: string
    descricao: string
    informacoesAdicionais: string
    horarioDeEntrega: string
    contato: string
    data: Date | string
    status: string
    donatariofisicoId?: number | null
    donatariojuridicoId?: number | null
    createdAt?: Date | string
  }

  export type solicitacaoCreateManyUsuarioInput = {
    id?: number
    name: string
    eletronicos: string
    descricao: string
    informacoes: string
    horarioparapegar: string
    contato: string
    data: Date | string
    dataparapegar: Date | string
    status: string
    solicitacaofisicoId?: number | null
    solicitacaojuridicoId?: number | null
    createdAt?: Date | string
  }

  export type tecladoCreateManyModificadorInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    createdAt?: Date | string
    updatedAt?: Date | string
    nome: string
    imagem: string
    situacao: string
    tipoDeConexao: string
    usuarioId?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type tecladoCreateManyUsuarioInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    createdAt?: Date | string
    updatedAt?: Date | string
    nome: string
    imagem: string
    situacao: string
    tipoDeConexao: string
    modificadorid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type hdCreateManyAlunoInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    createdAt?: Date | string
    updatedAt?: Date | string
    nome: string
    imagem: string
    situacao: string
    tipoDeCapacidade: string
    capacidade: number
    modificadorid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type hdCreateManyModificadorInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    createdAt?: Date | string
    updatedAt?: Date | string
    nome: string
    imagem: string
    situacao: string
    tipoDeCapacidade: string
    capacidade: number
    usuarioId?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type fontedealimentacaoCreateManyUsuarioInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    potencia: number
    updatedAt?: Date | string
    modificadorid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type fontedealimentacaoCreateManyModificadorInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    potencia: number
    updatedAt?: Date | string
    alunoid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type gabineteCreateManyUsuarioInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    modificadorid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type gabineteCreateManyModificadorInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    alunoid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type monitorCreateManyUsuarioInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    polegadas: number
    updatedAt?: Date | string
    modificadorid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type monitorCreateManyModificadorInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    polegadas: number
    updatedAt?: Date | string
    alunoid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type mouseCreateManyUsuarioInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    tipoDeConexao: string
    updatedAt?: Date | string
    modificadorid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type mouseCreateManyModificadorInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    tipoDeConexao: string
    updatedAt?: Date | string
    alunoid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type estabilizadorCreateManyUsuarioInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    potencia: number
    updatedAt?: Date | string
    modificadorid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type estabilizadorCreateManyModificadorInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    potencia: number
    updatedAt?: Date | string
    alunoid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type impressoraCreateManyUsuarioInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    tipoDeTinta: string
    updatedAt?: Date | string
    modificadorid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type impressoraCreateManyModificadorInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    tipoDeTinta: string
    updatedAt?: Date | string
    alunoid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type placamaeCreateManyUsuarioInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    modificadorid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type placamaeCreateManyModificadorInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    alunoid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type notebookCreateManyUsuarioInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    modificadorid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type notebookCreateManyModificadorInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    alunoid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type processadorCreateManyUsuarioInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    modificadorid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type processadorCreateManyModificadorInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    alunoid?: number | null
    descarteId?: number | null
    doacaoId?: number | null
  }

  export type descarteUpdateWithoutUsuarioInput = {
    name?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    teclados?: tecladoUpdateManyWithoutDescarteNestedInput
    hds?: hdUpdateManyWithoutDescarteNestedInput
    fontesDeAlimentacao?: fontedealimentacaoUpdateManyWithoutDescarteNestedInput
    gabinetes?: gabineteUpdateManyWithoutDescarteNestedInput
    monitores?: monitorUpdateManyWithoutDescarteNestedInput
    mouses?: mouseUpdateManyWithoutDescarteNestedInput
    estabilizadores?: estabilizadorUpdateManyWithoutDescarteNestedInput
    impressoras?: impressoraUpdateManyWithoutDescarteNestedInput
    placasmae?: placamaeUpdateManyWithoutDescarteNestedInput
    notebooks?: notebookUpdateManyWithoutDescarteNestedInput
    processadores?: processadorUpdateManyWithoutDescarteNestedInput
  }

  export type descarteUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    teclados?: tecladoUncheckedUpdateManyWithoutDescarteNestedInput
    hds?: hdUncheckedUpdateManyWithoutDescarteNestedInput
    fontesDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutDescarteNestedInput
    gabinetes?: gabineteUncheckedUpdateManyWithoutDescarteNestedInput
    monitores?: monitorUncheckedUpdateManyWithoutDescarteNestedInput
    mouses?: mouseUncheckedUpdateManyWithoutDescarteNestedInput
    estabilizadores?: estabilizadorUncheckedUpdateManyWithoutDescarteNestedInput
    impressoras?: impressoraUncheckedUpdateManyWithoutDescarteNestedInput
    placasmae?: placamaeUncheckedUpdateManyWithoutDescarteNestedInput
    notebooks?: notebookUncheckedUpdateManyWithoutDescarteNestedInput
    processadores?: processadorUncheckedUpdateManyWithoutDescarteNestedInput
  }

  export type descarteUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type doacaoUpdateWithoutDonatarioInput = {
    name?: StringFieldUpdateOperationsInput | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    justificativa?: StringFieldUpdateOperationsInput | string
    nomeOuEmpresa?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuariofisico?: pessoafisicaUpdateOneWithoutDoacaoNestedInput
    usuariojuridico?: pessoajuridicaUpdateOneWithoutDoacaoNestedInput
    teclados?: tecladoUpdateManyWithoutDoacaoNestedInput
    hds?: hdUpdateManyWithoutDoacaoNestedInput
    fontesDeAlimentacao?: fontedealimentacaoUpdateManyWithoutDoacaoNestedInput
    gabinetes?: gabineteUpdateManyWithoutDoacaoNestedInput
    monitores?: monitorUpdateManyWithoutDoacaoNestedInput
    mouses?: mouseUpdateManyWithoutDoacaoNestedInput
    estabilizadores?: estabilizadorUpdateManyWithoutDoacaoNestedInput
    impressoras?: impressoraUpdateManyWithoutDoacaoNestedInput
    placasmae?: placamaeUpdateManyWithoutDoacaoNestedInput
    notebooks?: notebookUpdateManyWithoutDoacaoNestedInput
    processadores?: processadorUpdateManyWithoutDoacaoNestedInput
  }

  export type doacaoUncheckedUpdateWithoutDonatarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    justificativa?: StringFieldUpdateOperationsInput | string
    nomeOuEmpresa?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    usuariofisicoId?: NullableIntFieldUpdateOperationsInput | number | null
    usuariojuridicoId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    teclados?: tecladoUncheckedUpdateManyWithoutDoacaoNestedInput
    hds?: hdUncheckedUpdateManyWithoutDoacaoNestedInput
    fontesDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutDoacaoNestedInput
    gabinetes?: gabineteUncheckedUpdateManyWithoutDoacaoNestedInput
    monitores?: monitorUncheckedUpdateManyWithoutDoacaoNestedInput
    mouses?: mouseUncheckedUpdateManyWithoutDoacaoNestedInput
    estabilizadores?: estabilizadorUncheckedUpdateManyWithoutDoacaoNestedInput
    impressoras?: impressoraUncheckedUpdateManyWithoutDoacaoNestedInput
    placasmae?: placamaeUncheckedUpdateManyWithoutDoacaoNestedInput
    notebooks?: notebookUncheckedUpdateManyWithoutDoacaoNestedInput
    processadores?: processadorUncheckedUpdateManyWithoutDoacaoNestedInput
  }

  export type doacaoUncheckedUpdateManyWithoutDonatarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    justificativa?: StringFieldUpdateOperationsInput | string
    nomeOuEmpresa?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    usuariofisicoId?: NullableIntFieldUpdateOperationsInput | number | null
    usuariojuridicoId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type doacaoUsuarioUpdateWithoutUsuarioInput = {
    name?: StringFieldUpdateOperationsInput | string
    eletronicos?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    informacoesAdicionais?: StringFieldUpdateOperationsInput | string
    horarioDeEntrega?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    donatariofisico?: pessoafisicaUpdateOneWithoutDoacaoUsuarioNestedInput
    donatariojuridico?: pessoajuridicaUpdateOneWithoutDoacaoUsuarioNestedInput
  }

  export type doacaoUsuarioUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    eletronicos?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    informacoesAdicionais?: StringFieldUpdateOperationsInput | string
    horarioDeEntrega?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    donatariofisicoId?: NullableIntFieldUpdateOperationsInput | number | null
    donatariojuridicoId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type doacaoUsuarioUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    eletronicos?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    informacoesAdicionais?: StringFieldUpdateOperationsInput | string
    horarioDeEntrega?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    donatariofisicoId?: NullableIntFieldUpdateOperationsInput | number | null
    donatariojuridicoId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type solicitacaoUpdateWithoutUsuarioInput = {
    name?: StringFieldUpdateOperationsInput | string
    eletronicos?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    informacoes?: StringFieldUpdateOperationsInput | string
    horarioparapegar?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    dataparapegar?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuariosolicitacaofisico?: pessoafisicaUpdateOneWithoutSolicitacaoNestedInput
    donatariojuridico?: pessoajuridicaUpdateOneWithoutSolicitacaoNestedInput
  }

  export type solicitacaoUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    eletronicos?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    informacoes?: StringFieldUpdateOperationsInput | string
    horarioparapegar?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    dataparapegar?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    solicitacaofisicoId?: NullableIntFieldUpdateOperationsInput | number | null
    solicitacaojuridicoId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type solicitacaoUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    eletronicos?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    informacoes?: StringFieldUpdateOperationsInput | string
    horarioparapegar?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    dataparapegar?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    solicitacaofisicoId?: NullableIntFieldUpdateOperationsInput | number | null
    solicitacaojuridicoId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type tecladoUpdateWithoutModificadorInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeConexao?: StringFieldUpdateOperationsInput | string
    descarte?: descarteUpdateOneWithoutTecladosNestedInput
    doacao?: doacaoUpdateOneWithoutTecladosNestedInput
    usuario?: alunoUpdateOneWithoutUsuarioTecladoNestedInput
  }

  export type tecladoUncheckedUpdateWithoutModificadorInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeConexao?: StringFieldUpdateOperationsInput | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tecladoUncheckedUpdateManyWithoutModificadorInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeConexao?: StringFieldUpdateOperationsInput | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tecladoUpdateWithoutUsuarioInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeConexao?: StringFieldUpdateOperationsInput | string
    descarte?: descarteUpdateOneWithoutTecladosNestedInput
    doacao?: doacaoUpdateOneWithoutTecladosNestedInput
    modificador?: alunoUpdateOneWithoutModificadorTecladoNestedInput
  }

  export type tecladoUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeConexao?: StringFieldUpdateOperationsInput | string
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tecladoUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeConexao?: StringFieldUpdateOperationsInput | string
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type hdUpdateWithoutAlunoInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeCapacidade?: StringFieldUpdateOperationsInput | string
    capacidade?: IntFieldUpdateOperationsInput | number
    doacao?: doacaoUpdateOneWithoutHdsNestedInput
    descarte?: descarteUpdateOneWithoutHdsNestedInput
    modificador?: alunoUpdateOneWithoutModificadorHdNestedInput
  }

  export type hdUncheckedUpdateWithoutAlunoInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeCapacidade?: StringFieldUpdateOperationsInput | string
    capacidade?: IntFieldUpdateOperationsInput | number
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type hdUncheckedUpdateManyWithoutAlunoInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeCapacidade?: StringFieldUpdateOperationsInput | string
    capacidade?: IntFieldUpdateOperationsInput | number
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type hdUpdateWithoutModificadorInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeCapacidade?: StringFieldUpdateOperationsInput | string
    capacidade?: IntFieldUpdateOperationsInput | number
    doacao?: doacaoUpdateOneWithoutHdsNestedInput
    descarte?: descarteUpdateOneWithoutHdsNestedInput
    aluno?: alunoUpdateOneWithoutHdNestedInput
  }

  export type hdUncheckedUpdateWithoutModificadorInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeCapacidade?: StringFieldUpdateOperationsInput | string
    capacidade?: IntFieldUpdateOperationsInput | number
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type hdUncheckedUpdateManyWithoutModificadorInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeCapacidade?: StringFieldUpdateOperationsInput | string
    capacidade?: IntFieldUpdateOperationsInput | number
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type fontedealimentacaoUpdateWithoutUsuarioInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    potencia?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacao?: doacaoUpdateOneWithoutFontesDeAlimentacaoNestedInput
    descarte?: descarteUpdateOneWithoutFontesDeAlimentacaoNestedInput
    modificador?: alunoUpdateOneWithoutModificadorFonteDeAlimentacaoNestedInput
  }

  export type fontedealimentacaoUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    potencia?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type fontedealimentacaoUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    potencia?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type fontedealimentacaoUpdateWithoutModificadorInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    potencia?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacao?: doacaoUpdateOneWithoutFontesDeAlimentacaoNestedInput
    descarte?: descarteUpdateOneWithoutFontesDeAlimentacaoNestedInput
    usuario?: alunoUpdateOneWithoutFonteDeAlimentacaoNestedInput
  }

  export type fontedealimentacaoUncheckedUpdateWithoutModificadorInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    potencia?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type fontedealimentacaoUncheckedUpdateManyWithoutModificadorInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    potencia?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type gabineteUpdateWithoutUsuarioInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacao?: doacaoUpdateOneWithoutGabinetesNestedInput
    descarte?: descarteUpdateOneWithoutGabinetesNestedInput
    modificador?: alunoUpdateOneWithoutModificadorGabineteNestedInput
  }

  export type gabineteUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type gabineteUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type gabineteUpdateWithoutModificadorInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacao?: doacaoUpdateOneWithoutGabinetesNestedInput
    descarte?: descarteUpdateOneWithoutGabinetesNestedInput
    usuario?: alunoUpdateOneWithoutGabineteNestedInput
  }

  export type gabineteUncheckedUpdateWithoutModificadorInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type gabineteUncheckedUpdateManyWithoutModificadorInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type monitorUpdateWithoutUsuarioInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    polegadas?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacao?: doacaoUpdateOneWithoutMonitoresNestedInput
    descarte?: descarteUpdateOneWithoutMonitoresNestedInput
    modificador?: alunoUpdateOneWithoutModificadorMonitorNestedInput
  }

  export type monitorUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    polegadas?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type monitorUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    polegadas?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type monitorUpdateWithoutModificadorInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    polegadas?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacao?: doacaoUpdateOneWithoutMonitoresNestedInput
    descarte?: descarteUpdateOneWithoutMonitoresNestedInput
    usuario?: alunoUpdateOneWithoutMonitorNestedInput
  }

  export type monitorUncheckedUpdateWithoutModificadorInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    polegadas?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type monitorUncheckedUpdateManyWithoutModificadorInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    polegadas?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type mouseUpdateWithoutUsuarioInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeConexao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacao?: doacaoUpdateOneWithoutMousesNestedInput
    descarte?: descarteUpdateOneWithoutMousesNestedInput
    modificador?: alunoUpdateOneWithoutModificadorMouseNestedInput
  }

  export type mouseUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeConexao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type mouseUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeConexao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type mouseUpdateWithoutModificadorInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeConexao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacao?: doacaoUpdateOneWithoutMousesNestedInput
    descarte?: descarteUpdateOneWithoutMousesNestedInput
    usuario?: alunoUpdateOneWithoutUsuarioMouseNestedInput
  }

  export type mouseUncheckedUpdateWithoutModificadorInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeConexao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type mouseUncheckedUpdateManyWithoutModificadorInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeConexao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type estabilizadorUpdateWithoutUsuarioInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    potencia?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacao?: doacaoUpdateOneWithoutEstabilizadoresNestedInput
    descarte?: descarteUpdateOneWithoutEstabilizadoresNestedInput
    modificador?: alunoUpdateOneWithoutModificadorEstabilizadorNestedInput
  }

  export type estabilizadorUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    potencia?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type estabilizadorUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    potencia?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type estabilizadorUpdateWithoutModificadorInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    potencia?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacao?: doacaoUpdateOneWithoutEstabilizadoresNestedInput
    descarte?: descarteUpdateOneWithoutEstabilizadoresNestedInput
    usuario?: alunoUpdateOneWithoutUsuarioEstabilizadorNestedInput
  }

  export type estabilizadorUncheckedUpdateWithoutModificadorInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    potencia?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type estabilizadorUncheckedUpdateManyWithoutModificadorInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    potencia?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type impressoraUpdateWithoutUsuarioInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeTinta?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacao?: doacaoUpdateOneWithoutImpressorasNestedInput
    descarte?: descarteUpdateOneWithoutImpressorasNestedInput
    modificador?: alunoUpdateOneWithoutModificadorImpressoraNestedInput
  }

  export type impressoraUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeTinta?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type impressoraUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeTinta?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type impressoraUpdateWithoutModificadorInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeTinta?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacao?: doacaoUpdateOneWithoutImpressorasNestedInput
    descarte?: descarteUpdateOneWithoutImpressorasNestedInput
    usuario?: alunoUpdateOneWithoutUsuarioImpressoraNestedInput
  }

  export type impressoraUncheckedUpdateWithoutModificadorInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeTinta?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type impressoraUncheckedUpdateManyWithoutModificadorInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeTinta?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type placamaeUpdateWithoutUsuarioInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacao?: doacaoUpdateOneWithoutPlacasmaeNestedInput
    descarte?: descarteUpdateOneWithoutPlacasmaeNestedInput
    modificador?: alunoUpdateOneWithoutModificadorPlacamaeNestedInput
  }

  export type placamaeUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type placamaeUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type placamaeUpdateWithoutModificadorInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacao?: doacaoUpdateOneWithoutPlacasmaeNestedInput
    descarte?: descarteUpdateOneWithoutPlacasmaeNestedInput
    usuario?: alunoUpdateOneWithoutUsuarioPlacamaeNestedInput
  }

  export type placamaeUncheckedUpdateWithoutModificadorInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type placamaeUncheckedUpdateManyWithoutModificadorInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type notebookUpdateWithoutUsuarioInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacao?: doacaoUpdateOneWithoutNotebooksNestedInput
    descarte?: descarteUpdateOneWithoutNotebooksNestedInput
    modificador?: alunoUpdateOneWithoutModificadorNotebookNestedInput
  }

  export type notebookUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type notebookUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type notebookUpdateWithoutModificadorInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacao?: doacaoUpdateOneWithoutNotebooksNestedInput
    descarte?: descarteUpdateOneWithoutNotebooksNestedInput
    usuario?: alunoUpdateOneWithoutUsuarioNotebookNestedInput
  }

  export type notebookUncheckedUpdateWithoutModificadorInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type notebookUncheckedUpdateManyWithoutModificadorInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type processadorUpdateWithoutUsuarioInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacao?: doacaoUpdateOneWithoutProcessadoresNestedInput
    descarte?: descarteUpdateOneWithoutProcessadoresNestedInput
    modificador?: alunoUpdateOneWithoutModificadorProcessadorNestedInput
  }

  export type processadorUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type processadorUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type processadorUpdateWithoutModificadorInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacao?: doacaoUpdateOneWithoutProcessadoresNestedInput
    descarte?: descarteUpdateOneWithoutProcessadoresNestedInput
    usuario?: alunoUpdateOneWithoutUsuarioProcessadorNestedInput
  }

  export type processadorUncheckedUpdateWithoutModificadorInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type processadorUncheckedUpdateManyWithoutModificadorInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type doacaoCreateManyUsuariofisicoInput = {
    id?: number
    name: string
    codigoDeReferencias: string
    descricao: string
    justificativa: string
    nomeOuEmpresa: string
    contato: string
    data: Date | string
    status: string
    donatarioId?: number | null
    usuariojuridicoId?: number | null
    createdAt?: Date | string
  }

  export type doacaoUsuarioCreateManyDonatariofisicoInput = {
    id?: number
    name: string
    eletronicos: string
    descricao: string
    informacoesAdicionais: string
    horarioDeEntrega: string
    contato: string
    data: Date | string
    status: string
    donatariojuridicoId?: number | null
    usuarioid?: number | null
    createdAt?: Date | string
  }

  export type solicitacaoCreateManyUsuariosolicitacaofisicoInput = {
    id?: number
    name: string
    eletronicos: string
    descricao: string
    informacoes: string
    horarioparapegar: string
    contato: string
    data: Date | string
    dataparapegar: Date | string
    status: string
    solicitacaojuridicoId?: number | null
    usuarioid?: number | null
    createdAt?: Date | string
  }

  export type doacaoUpdateWithoutUsuariofisicoInput = {
    name?: StringFieldUpdateOperationsInput | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    justificativa?: StringFieldUpdateOperationsInput | string
    nomeOuEmpresa?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    donatario?: alunoUpdateOneWithoutDoacaoNestedInput
    usuariojuridico?: pessoajuridicaUpdateOneWithoutDoacaoNestedInput
    teclados?: tecladoUpdateManyWithoutDoacaoNestedInput
    hds?: hdUpdateManyWithoutDoacaoNestedInput
    fontesDeAlimentacao?: fontedealimentacaoUpdateManyWithoutDoacaoNestedInput
    gabinetes?: gabineteUpdateManyWithoutDoacaoNestedInput
    monitores?: monitorUpdateManyWithoutDoacaoNestedInput
    mouses?: mouseUpdateManyWithoutDoacaoNestedInput
    estabilizadores?: estabilizadorUpdateManyWithoutDoacaoNestedInput
    impressoras?: impressoraUpdateManyWithoutDoacaoNestedInput
    placasmae?: placamaeUpdateManyWithoutDoacaoNestedInput
    notebooks?: notebookUpdateManyWithoutDoacaoNestedInput
    processadores?: processadorUpdateManyWithoutDoacaoNestedInput
  }

  export type doacaoUncheckedUpdateWithoutUsuariofisicoInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    justificativa?: StringFieldUpdateOperationsInput | string
    nomeOuEmpresa?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    donatarioId?: NullableIntFieldUpdateOperationsInput | number | null
    usuariojuridicoId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    teclados?: tecladoUncheckedUpdateManyWithoutDoacaoNestedInput
    hds?: hdUncheckedUpdateManyWithoutDoacaoNestedInput
    fontesDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutDoacaoNestedInput
    gabinetes?: gabineteUncheckedUpdateManyWithoutDoacaoNestedInput
    monitores?: monitorUncheckedUpdateManyWithoutDoacaoNestedInput
    mouses?: mouseUncheckedUpdateManyWithoutDoacaoNestedInput
    estabilizadores?: estabilizadorUncheckedUpdateManyWithoutDoacaoNestedInput
    impressoras?: impressoraUncheckedUpdateManyWithoutDoacaoNestedInput
    placasmae?: placamaeUncheckedUpdateManyWithoutDoacaoNestedInput
    notebooks?: notebookUncheckedUpdateManyWithoutDoacaoNestedInput
    processadores?: processadorUncheckedUpdateManyWithoutDoacaoNestedInput
  }

  export type doacaoUncheckedUpdateManyWithoutUsuariofisicoInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    justificativa?: StringFieldUpdateOperationsInput | string
    nomeOuEmpresa?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    donatarioId?: NullableIntFieldUpdateOperationsInput | number | null
    usuariojuridicoId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type doacaoUsuarioUpdateWithoutDonatariofisicoInput = {
    name?: StringFieldUpdateOperationsInput | string
    eletronicos?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    informacoesAdicionais?: StringFieldUpdateOperationsInput | string
    horarioDeEntrega?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    donatariojuridico?: pessoajuridicaUpdateOneWithoutDoacaoUsuarioNestedInput
    usuario?: alunoUpdateOneWithoutDoacaoUsuarioNestedInput
  }

  export type doacaoUsuarioUncheckedUpdateWithoutDonatariofisicoInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    eletronicos?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    informacoesAdicionais?: StringFieldUpdateOperationsInput | string
    horarioDeEntrega?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    donatariojuridicoId?: NullableIntFieldUpdateOperationsInput | number | null
    usuarioid?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type doacaoUsuarioUncheckedUpdateManyWithoutDonatariofisicoInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    eletronicos?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    informacoesAdicionais?: StringFieldUpdateOperationsInput | string
    horarioDeEntrega?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    donatariojuridicoId?: NullableIntFieldUpdateOperationsInput | number | null
    usuarioid?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type solicitacaoUpdateWithoutUsuariosolicitacaofisicoInput = {
    name?: StringFieldUpdateOperationsInput | string
    eletronicos?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    informacoes?: StringFieldUpdateOperationsInput | string
    horarioparapegar?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    dataparapegar?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    donatariojuridico?: pessoajuridicaUpdateOneWithoutSolicitacaoNestedInput
    usuario?: alunoUpdateOneWithoutSolicitacaoNestedInput
  }

  export type solicitacaoUncheckedUpdateWithoutUsuariosolicitacaofisicoInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    eletronicos?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    informacoes?: StringFieldUpdateOperationsInput | string
    horarioparapegar?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    dataparapegar?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    solicitacaojuridicoId?: NullableIntFieldUpdateOperationsInput | number | null
    usuarioid?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type solicitacaoUncheckedUpdateManyWithoutUsuariosolicitacaofisicoInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    eletronicos?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    informacoes?: StringFieldUpdateOperationsInput | string
    horarioparapegar?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    dataparapegar?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    solicitacaojuridicoId?: NullableIntFieldUpdateOperationsInput | number | null
    usuarioid?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type doacaoCreateManyUsuariojuridicoInput = {
    id?: number
    name: string
    codigoDeReferencias: string
    descricao: string
    justificativa: string
    nomeOuEmpresa: string
    contato: string
    data: Date | string
    status: string
    donatarioId?: number | null
    usuariofisicoId?: number | null
    createdAt?: Date | string
  }

  export type doacaoUsuarioCreateManyDonatariojuridicoInput = {
    id?: number
    name: string
    eletronicos: string
    descricao: string
    informacoesAdicionais: string
    horarioDeEntrega: string
    contato: string
    data: Date | string
    status: string
    donatariofisicoId?: number | null
    usuarioid?: number | null
    createdAt?: Date | string
  }

  export type solicitacaoCreateManyDonatariojuridicoInput = {
    id?: number
    name: string
    eletronicos: string
    descricao: string
    informacoes: string
    horarioparapegar: string
    contato: string
    data: Date | string
    dataparapegar: Date | string
    status: string
    solicitacaofisicoId?: number | null
    usuarioid?: number | null
    createdAt?: Date | string
  }

  export type doacaoUpdateWithoutUsuariojuridicoInput = {
    name?: StringFieldUpdateOperationsInput | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    justificativa?: StringFieldUpdateOperationsInput | string
    nomeOuEmpresa?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    donatario?: alunoUpdateOneWithoutDoacaoNestedInput
    usuariofisico?: pessoafisicaUpdateOneWithoutDoacaoNestedInput
    teclados?: tecladoUpdateManyWithoutDoacaoNestedInput
    hds?: hdUpdateManyWithoutDoacaoNestedInput
    fontesDeAlimentacao?: fontedealimentacaoUpdateManyWithoutDoacaoNestedInput
    gabinetes?: gabineteUpdateManyWithoutDoacaoNestedInput
    monitores?: monitorUpdateManyWithoutDoacaoNestedInput
    mouses?: mouseUpdateManyWithoutDoacaoNestedInput
    estabilizadores?: estabilizadorUpdateManyWithoutDoacaoNestedInput
    impressoras?: impressoraUpdateManyWithoutDoacaoNestedInput
    placasmae?: placamaeUpdateManyWithoutDoacaoNestedInput
    notebooks?: notebookUpdateManyWithoutDoacaoNestedInput
    processadores?: processadorUpdateManyWithoutDoacaoNestedInput
  }

  export type doacaoUncheckedUpdateWithoutUsuariojuridicoInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    justificativa?: StringFieldUpdateOperationsInput | string
    nomeOuEmpresa?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    donatarioId?: NullableIntFieldUpdateOperationsInput | number | null
    usuariofisicoId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    teclados?: tecladoUncheckedUpdateManyWithoutDoacaoNestedInput
    hds?: hdUncheckedUpdateManyWithoutDoacaoNestedInput
    fontesDeAlimentacao?: fontedealimentacaoUncheckedUpdateManyWithoutDoacaoNestedInput
    gabinetes?: gabineteUncheckedUpdateManyWithoutDoacaoNestedInput
    monitores?: monitorUncheckedUpdateManyWithoutDoacaoNestedInput
    mouses?: mouseUncheckedUpdateManyWithoutDoacaoNestedInput
    estabilizadores?: estabilizadorUncheckedUpdateManyWithoutDoacaoNestedInput
    impressoras?: impressoraUncheckedUpdateManyWithoutDoacaoNestedInput
    placasmae?: placamaeUncheckedUpdateManyWithoutDoacaoNestedInput
    notebooks?: notebookUncheckedUpdateManyWithoutDoacaoNestedInput
    processadores?: processadorUncheckedUpdateManyWithoutDoacaoNestedInput
  }

  export type doacaoUncheckedUpdateManyWithoutUsuariojuridicoInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    codigoDeReferencias?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    justificativa?: StringFieldUpdateOperationsInput | string
    nomeOuEmpresa?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    donatarioId?: NullableIntFieldUpdateOperationsInput | number | null
    usuariofisicoId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type doacaoUsuarioUpdateWithoutDonatariojuridicoInput = {
    name?: StringFieldUpdateOperationsInput | string
    eletronicos?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    informacoesAdicionais?: StringFieldUpdateOperationsInput | string
    horarioDeEntrega?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    donatariofisico?: pessoafisicaUpdateOneWithoutDoacaoUsuarioNestedInput
    usuario?: alunoUpdateOneWithoutDoacaoUsuarioNestedInput
  }

  export type doacaoUsuarioUncheckedUpdateWithoutDonatariojuridicoInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    eletronicos?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    informacoesAdicionais?: StringFieldUpdateOperationsInput | string
    horarioDeEntrega?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    donatariofisicoId?: NullableIntFieldUpdateOperationsInput | number | null
    usuarioid?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type doacaoUsuarioUncheckedUpdateManyWithoutDonatariojuridicoInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    eletronicos?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    informacoesAdicionais?: StringFieldUpdateOperationsInput | string
    horarioDeEntrega?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    donatariofisicoId?: NullableIntFieldUpdateOperationsInput | number | null
    usuarioid?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type solicitacaoUpdateWithoutDonatariojuridicoInput = {
    name?: StringFieldUpdateOperationsInput | string
    eletronicos?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    informacoes?: StringFieldUpdateOperationsInput | string
    horarioparapegar?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    dataparapegar?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuariosolicitacaofisico?: pessoafisicaUpdateOneWithoutSolicitacaoNestedInput
    usuario?: alunoUpdateOneWithoutSolicitacaoNestedInput
  }

  export type solicitacaoUncheckedUpdateWithoutDonatariojuridicoInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    eletronicos?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    informacoes?: StringFieldUpdateOperationsInput | string
    horarioparapegar?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    dataparapegar?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    solicitacaofisicoId?: NullableIntFieldUpdateOperationsInput | number | null
    usuarioid?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type solicitacaoUncheckedUpdateManyWithoutDonatariojuridicoInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    eletronicos?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    informacoes?: StringFieldUpdateOperationsInput | string
    horarioparapegar?: StringFieldUpdateOperationsInput | string
    contato?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    dataparapegar?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    solicitacaofisicoId?: NullableIntFieldUpdateOperationsInput | number | null
    usuarioid?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type tecladoCreateManyDescarteInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    createdAt?: Date | string
    updatedAt?: Date | string
    nome: string
    imagem: string
    situacao: string
    tipoDeConexao: string
    usuarioId?: number | null
    modificadorid?: number | null
    doacaoId?: number | null
  }

  export type hdCreateManyDescarteInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    createdAt?: Date | string
    updatedAt?: Date | string
    nome: string
    imagem: string
    situacao: string
    tipoDeCapacidade: string
    capacidade: number
    usuarioId?: number | null
    modificadorid?: number | null
    doacaoId?: number | null
  }

  export type fontedealimentacaoCreateManyDescarteInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    potencia: number
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    doacaoId?: number | null
  }

  export type gabineteCreateManyDescarteInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    doacaoId?: number | null
  }

  export type monitorCreateManyDescarteInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    polegadas: number
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    doacaoId?: number | null
  }

  export type mouseCreateManyDescarteInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    tipoDeConexao: string
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    doacaoId?: number | null
  }

  export type estabilizadorCreateManyDescarteInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    potencia: number
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    doacaoId?: number | null
  }

  export type impressoraCreateManyDescarteInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    tipoDeTinta: string
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    doacaoId?: number | null
  }

  export type placamaeCreateManyDescarteInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    doacaoId?: number | null
  }

  export type notebookCreateManyDescarteInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    doacaoId?: number | null
  }

  export type processadorCreateManyDescarteInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    doacaoId?: number | null
  }

  export type tecladoUpdateWithoutDescarteInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeConexao?: StringFieldUpdateOperationsInput | string
    doacao?: doacaoUpdateOneWithoutTecladosNestedInput
    usuario?: alunoUpdateOneWithoutUsuarioTecladoNestedInput
    modificador?: alunoUpdateOneWithoutModificadorTecladoNestedInput
  }

  export type tecladoUncheckedUpdateWithoutDescarteInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeConexao?: StringFieldUpdateOperationsInput | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tecladoUncheckedUpdateManyWithoutDescarteInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeConexao?: StringFieldUpdateOperationsInput | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type hdUpdateWithoutDescarteInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeCapacidade?: StringFieldUpdateOperationsInput | string
    capacidade?: IntFieldUpdateOperationsInput | number
    doacao?: doacaoUpdateOneWithoutHdsNestedInput
    aluno?: alunoUpdateOneWithoutHdNestedInput
    modificador?: alunoUpdateOneWithoutModificadorHdNestedInput
  }

  export type hdUncheckedUpdateWithoutDescarteInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeCapacidade?: StringFieldUpdateOperationsInput | string
    capacidade?: IntFieldUpdateOperationsInput | number
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type hdUncheckedUpdateManyWithoutDescarteInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeCapacidade?: StringFieldUpdateOperationsInput | string
    capacidade?: IntFieldUpdateOperationsInput | number
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type fontedealimentacaoUpdateWithoutDescarteInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    potencia?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacao?: doacaoUpdateOneWithoutFontesDeAlimentacaoNestedInput
    usuario?: alunoUpdateOneWithoutFonteDeAlimentacaoNestedInput
    modificador?: alunoUpdateOneWithoutModificadorFonteDeAlimentacaoNestedInput
  }

  export type fontedealimentacaoUncheckedUpdateWithoutDescarteInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    potencia?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type fontedealimentacaoUncheckedUpdateManyWithoutDescarteInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    potencia?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type gabineteUpdateWithoutDescarteInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacao?: doacaoUpdateOneWithoutGabinetesNestedInput
    usuario?: alunoUpdateOneWithoutGabineteNestedInput
    modificador?: alunoUpdateOneWithoutModificadorGabineteNestedInput
  }

  export type gabineteUncheckedUpdateWithoutDescarteInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type gabineteUncheckedUpdateManyWithoutDescarteInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type monitorUpdateWithoutDescarteInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    polegadas?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacao?: doacaoUpdateOneWithoutMonitoresNestedInput
    usuario?: alunoUpdateOneWithoutMonitorNestedInput
    modificador?: alunoUpdateOneWithoutModificadorMonitorNestedInput
  }

  export type monitorUncheckedUpdateWithoutDescarteInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    polegadas?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type monitorUncheckedUpdateManyWithoutDescarteInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    polegadas?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type mouseUpdateWithoutDescarteInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeConexao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacao?: doacaoUpdateOneWithoutMousesNestedInput
    usuario?: alunoUpdateOneWithoutUsuarioMouseNestedInput
    modificador?: alunoUpdateOneWithoutModificadorMouseNestedInput
  }

  export type mouseUncheckedUpdateWithoutDescarteInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeConexao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type mouseUncheckedUpdateManyWithoutDescarteInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeConexao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type estabilizadorUpdateWithoutDescarteInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    potencia?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacao?: doacaoUpdateOneWithoutEstabilizadoresNestedInput
    usuario?: alunoUpdateOneWithoutUsuarioEstabilizadorNestedInput
    modificador?: alunoUpdateOneWithoutModificadorEstabilizadorNestedInput
  }

  export type estabilizadorUncheckedUpdateWithoutDescarteInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    potencia?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type estabilizadorUncheckedUpdateManyWithoutDescarteInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    potencia?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type impressoraUpdateWithoutDescarteInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeTinta?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacao?: doacaoUpdateOneWithoutImpressorasNestedInput
    usuario?: alunoUpdateOneWithoutUsuarioImpressoraNestedInput
    modificador?: alunoUpdateOneWithoutModificadorImpressoraNestedInput
  }

  export type impressoraUncheckedUpdateWithoutDescarteInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeTinta?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type impressoraUncheckedUpdateManyWithoutDescarteInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeTinta?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type placamaeUpdateWithoutDescarteInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacao?: doacaoUpdateOneWithoutPlacasmaeNestedInput
    usuario?: alunoUpdateOneWithoutUsuarioPlacamaeNestedInput
    modificador?: alunoUpdateOneWithoutModificadorPlacamaeNestedInput
  }

  export type placamaeUncheckedUpdateWithoutDescarteInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type placamaeUncheckedUpdateManyWithoutDescarteInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type notebookUpdateWithoutDescarteInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacao?: doacaoUpdateOneWithoutNotebooksNestedInput
    usuario?: alunoUpdateOneWithoutUsuarioNotebookNestedInput
    modificador?: alunoUpdateOneWithoutModificadorNotebookNestedInput
  }

  export type notebookUncheckedUpdateWithoutDescarteInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type notebookUncheckedUpdateManyWithoutDescarteInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type processadorUpdateWithoutDescarteInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doacao?: doacaoUpdateOneWithoutProcessadoresNestedInput
    usuario?: alunoUpdateOneWithoutUsuarioProcessadorNestedInput
    modificador?: alunoUpdateOneWithoutModificadorProcessadorNestedInput
  }

  export type processadorUncheckedUpdateWithoutDescarteInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type processadorUncheckedUpdateManyWithoutDescarteInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    doacaoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tecladoCreateManyDoacaoInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    createdAt?: Date | string
    updatedAt?: Date | string
    nome: string
    imagem: string
    situacao: string
    tipoDeConexao: string
    usuarioId?: number | null
    modificadorid?: number | null
    descarteId?: number | null
  }

  export type hdCreateManyDoacaoInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    createdAt?: Date | string
    updatedAt?: Date | string
    nome: string
    imagem: string
    situacao: string
    tipoDeCapacidade: string
    capacidade: number
    usuarioId?: number | null
    modificadorid?: number | null
    descarteId?: number | null
  }

  export type fontedealimentacaoCreateManyDoacaoInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    potencia: number
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    descarteId?: number | null
  }

  export type gabineteCreateManyDoacaoInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    descarteId?: number | null
  }

  export type monitorCreateManyDoacaoInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    polegadas: number
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    descarteId?: number | null
  }

  export type mouseCreateManyDoacaoInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    tipoDeConexao: string
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    descarteId?: number | null
  }

  export type estabilizadorCreateManyDoacaoInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    potencia: number
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    descarteId?: number | null
  }

  export type impressoraCreateManyDoacaoInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    tipoDeTinta: string
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    descarteId?: number | null
  }

  export type placamaeCreateManyDoacaoInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    descarteId?: number | null
  }

  export type notebookCreateManyDoacaoInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    descarteId?: number | null
  }

  export type processadorCreateManyDoacaoInput = {
    id?: number
    codigoDereferencia: string
    descricao: string
    status: string
    dataDeChegada: Date | string
    dataDeSaida?: Date | string | null
    marca: string
    modelo: string
    nome: string
    imagem: string
    situacao: string
    updatedAt?: Date | string
    alunoid?: number | null
    modificadorid?: number | null
    descarteId?: number | null
  }

  export type tecladoUpdateWithoutDoacaoInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeConexao?: StringFieldUpdateOperationsInput | string
    descarte?: descarteUpdateOneWithoutTecladosNestedInput
    usuario?: alunoUpdateOneWithoutUsuarioTecladoNestedInput
    modificador?: alunoUpdateOneWithoutModificadorTecladoNestedInput
  }

  export type tecladoUncheckedUpdateWithoutDoacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeConexao?: StringFieldUpdateOperationsInput | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tecladoUncheckedUpdateManyWithoutDoacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeConexao?: StringFieldUpdateOperationsInput | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type hdUpdateWithoutDoacaoInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeCapacidade?: StringFieldUpdateOperationsInput | string
    capacidade?: IntFieldUpdateOperationsInput | number
    descarte?: descarteUpdateOneWithoutHdsNestedInput
    aluno?: alunoUpdateOneWithoutHdNestedInput
    modificador?: alunoUpdateOneWithoutModificadorHdNestedInput
  }

  export type hdUncheckedUpdateWithoutDoacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeCapacidade?: StringFieldUpdateOperationsInput | string
    capacidade?: IntFieldUpdateOperationsInput | number
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type hdUncheckedUpdateManyWithoutDoacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeCapacidade?: StringFieldUpdateOperationsInput | string
    capacidade?: IntFieldUpdateOperationsInput | number
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type fontedealimentacaoUpdateWithoutDoacaoInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    potencia?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUpdateOneWithoutFontesDeAlimentacaoNestedInput
    usuario?: alunoUpdateOneWithoutFonteDeAlimentacaoNestedInput
    modificador?: alunoUpdateOneWithoutModificadorFonteDeAlimentacaoNestedInput
  }

  export type fontedealimentacaoUncheckedUpdateWithoutDoacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    potencia?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type fontedealimentacaoUncheckedUpdateManyWithoutDoacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    potencia?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type gabineteUpdateWithoutDoacaoInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUpdateOneWithoutGabinetesNestedInput
    usuario?: alunoUpdateOneWithoutGabineteNestedInput
    modificador?: alunoUpdateOneWithoutModificadorGabineteNestedInput
  }

  export type gabineteUncheckedUpdateWithoutDoacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type gabineteUncheckedUpdateManyWithoutDoacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type monitorUpdateWithoutDoacaoInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    polegadas?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUpdateOneWithoutMonitoresNestedInput
    usuario?: alunoUpdateOneWithoutMonitorNestedInput
    modificador?: alunoUpdateOneWithoutModificadorMonitorNestedInput
  }

  export type monitorUncheckedUpdateWithoutDoacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    polegadas?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type monitorUncheckedUpdateManyWithoutDoacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    polegadas?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type mouseUpdateWithoutDoacaoInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeConexao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUpdateOneWithoutMousesNestedInput
    usuario?: alunoUpdateOneWithoutUsuarioMouseNestedInput
    modificador?: alunoUpdateOneWithoutModificadorMouseNestedInput
  }

  export type mouseUncheckedUpdateWithoutDoacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeConexao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type mouseUncheckedUpdateManyWithoutDoacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeConexao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type estabilizadorUpdateWithoutDoacaoInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    potencia?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUpdateOneWithoutEstabilizadoresNestedInput
    usuario?: alunoUpdateOneWithoutUsuarioEstabilizadorNestedInput
    modificador?: alunoUpdateOneWithoutModificadorEstabilizadorNestedInput
  }

  export type estabilizadorUncheckedUpdateWithoutDoacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    potencia?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type estabilizadorUncheckedUpdateManyWithoutDoacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    potencia?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type impressoraUpdateWithoutDoacaoInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeTinta?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUpdateOneWithoutImpressorasNestedInput
    usuario?: alunoUpdateOneWithoutUsuarioImpressoraNestedInput
    modificador?: alunoUpdateOneWithoutModificadorImpressoraNestedInput
  }

  export type impressoraUncheckedUpdateWithoutDoacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeTinta?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type impressoraUncheckedUpdateManyWithoutDoacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    tipoDeTinta?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type placamaeUpdateWithoutDoacaoInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUpdateOneWithoutPlacasmaeNestedInput
    usuario?: alunoUpdateOneWithoutUsuarioPlacamaeNestedInput
    modificador?: alunoUpdateOneWithoutModificadorPlacamaeNestedInput
  }

  export type placamaeUncheckedUpdateWithoutDoacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type placamaeUncheckedUpdateManyWithoutDoacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type notebookUpdateWithoutDoacaoInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUpdateOneWithoutNotebooksNestedInput
    usuario?: alunoUpdateOneWithoutUsuarioNotebookNestedInput
    modificador?: alunoUpdateOneWithoutModificadorNotebookNestedInput
  }

  export type notebookUncheckedUpdateWithoutDoacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type notebookUncheckedUpdateManyWithoutDoacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type processadorUpdateWithoutDoacaoInput = {
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descarte?: descarteUpdateOneWithoutProcessadoresNestedInput
    usuario?: alunoUpdateOneWithoutUsuarioProcessadorNestedInput
    modificador?: alunoUpdateOneWithoutModificadorProcessadorNestedInput
  }

  export type processadorUncheckedUpdateWithoutDoacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type processadorUncheckedUpdateManyWithoutDoacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigoDereferencia?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dataDeChegada?: DateTimeFieldUpdateOperationsInput | Date | string
    dataDeSaida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    imagem?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    alunoid?: NullableIntFieldUpdateOperationsInput | number | null
    modificadorid?: NullableIntFieldUpdateOperationsInput | number | null
    descarteId?: NullableIntFieldUpdateOperationsInput | number | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}